{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { t, styled, useTheme } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport { Icons } from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport { detectOS } from 'src/utils/common';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';\nimport { LOG_ACTIONS_SQLLAB_RUN_QUERY, LOG_ACTIONS_SQLLAB_STOP_QUERY } from 'src/logger/LogUtils';\nimport useLogAction from 'src/logger/useLogAction';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst buildText = (shouldShowStopButton, selectedText, theme) => {\n  if (shouldShowStopButton) {\n    return _jsxs(_Fragment, { children: [\n      _jsx(Icons.Square, { iconSize: \"xs\", iconColor: theme.colors.primary.light5 }),\n      t('Stop')] }\n    );\n  }\n  if (selectedText) {\n    return t('Run selection');\n  }\n  return t('Run');\n};\nconst onClick = (shouldShowStopButton, allowAsync, runQuery = () => undefined, stopQuery = () => {}, logAction) => {\n  const eventName = shouldShowStopButton ?\n  LOG_ACTIONS_SQLLAB_STOP_QUERY :\n  LOG_ACTIONS_SQLLAB_RUN_QUERY;\n  logAction(eventName, { shortcut: false });\n  if (shouldShowStopButton)\n  return stopQuery();\n  if (allowAsync) {\n    return runQuery(true);\n  }\n  return runQuery(false);\n};\nconst StyledButton = styled.span`\n  button {\n    line-height: 13px;\n    // this is to over ride a previous transition built into the component\n    transition: background-color 0ms;\n    &:last-of-type {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n    span[name='caret-down'] {\n      display: flex;\n      margin-left: ${({ theme }) => theme.gridUnit * 1}px;\n    }\n  }\n`;\nconst RunQueryActionButton = ({ allowAsync = false, queryEditorId, queryState, overlayCreateAsMenu, runQuery, stopQuery }) => {\n  const theme = useTheme();\n  const logAction = useLogAction({ queryEditorId });\n  const userOS = detectOS();\n  const { selectedText, sql } = useQueryEditor(queryEditorId, [\n  'selectedText',\n  'sql']\n  );\n  const shouldShowStopBtn = !!queryState && ['running', 'pending'].indexOf(queryState) > -1;\n  const ButtonComponent = overlayCreateAsMenu ?\n  DropdownButton :\n  Button;\n  const sqlContent = selectedText || sql || '';\n  const isDisabled = !(sqlContent != null && sqlContent.\n  replace(/(\\/\\*[^*]*\\*\\/)|(\\/\\/[^*]*)|(--[^.].*)/gm, '').\n  trim());\n  const stopButtonTooltipText = useMemo(() => userOS === 'MacOS' ?\n  t('Stop running (Ctrl + x)') :\n  t('Stop running (Ctrl + e)'), [userOS]);\n  return _jsx(StyledButton, { children:\n    _jsx(ButtonComponent, { \"data-test\": \"run-query-action\", onClick: () => onClick(shouldShowStopBtn, allowAsync, runQuery, stopQuery, logAction), disabled: isDisabled, tooltip: !isDisabled && (\n      shouldShowStopBtn ?\n      stopButtonTooltipText :\n      t('Run query (Ctrl + Return)')), cta: true, ...(overlayCreateAsMenu ?\n      {\n        overlay: overlayCreateAsMenu,\n        icon: _jsx(Icons.DownOutlined, { iconColor: isDisabled ?\n          theme.colors.grayscale.base :\n          theme.colors.grayscale.light5 }),\n        trigger: 'click'\n      } :\n      {\n        buttonStyle: shouldShowStopBtn ? 'warning' : 'primary'\n      }), children:\n      buildText(shouldShowStopBtn, selectedText, theme) }\n    ) }\n  );\n};__signature__(RunQueryActionButton, \"useTheme{theme}\\nuseLogAction{logAction}\\nuseQueryEditor{{ selectedText, sql }}\\nuseMemo{stopButtonTooltipText}\", () => [useTheme, useLogAction, useQueryEditor]);const _default =\nRunQueryActionButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildText, \"buildText\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx\");reactHotLoader.register(onClick, \"onClick\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx\");reactHotLoader.register(StyledButton, \"StyledButton\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx\");reactHotLoader.register(RunQueryActionButton, \"RunQueryActionButton\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","t","styled","useTheme","Button","Icons","DropdownButton","detectOS","useQueryEditor","LOG_ACTIONS_SQLLAB_RUN_QUERY","LOG_ACTIONS_SQLLAB_STOP_QUERY","useLogAction","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","buildText","shouldShowStopButton","selectedText","theme","children","Square","iconSize","iconColor","colors","primary","light5","onClick","allowAsync","runQuery","undefined","stopQuery","logAction","eventName","shortcut","StyledButton","span","gridUnit","RunQueryActionButton","queryEditorId","queryState","overlayCreateAsMenu","userOS","sql","shouldShowStopBtn","indexOf","ButtonComponent","sqlContent","isDisabled","replace","trim","stopButtonTooltipText","disabled","tooltip","cta","overlay","icon","DownOutlined","grayscale","base","trigger","buttonStyle","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, FC, ReactElement } from 'react';\n\nimport { t, styled, useTheme, SupersetTheme } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport { Icons } from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport { detectOS } from 'src/utils/common';\nimport { QueryButtonProps } from 'src/SqlLab/types';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';\nimport {\n  LOG_ACTIONS_SQLLAB_RUN_QUERY,\n  LOG_ACTIONS_SQLLAB_STOP_QUERY,\n} from 'src/logger/LogUtils';\nimport useLogAction from 'src/logger/useLogAction';\n\nexport interface RunQueryActionButtonProps {\n  queryEditorId: string;\n  allowAsync: boolean;\n  queryState?: string;\n  runQuery: (c?: boolean) => void;\n  stopQuery: () => void;\n  overlayCreateAsMenu: ReactElement | null;\n}\n\nconst buildText = (\n  shouldShowStopButton: boolean,\n  selectedText: string | undefined,\n  theme: SupersetTheme,\n): string | JSX.Element => {\n  if (shouldShowStopButton) {\n    return (\n      <>\n        <Icons.Square iconSize=\"xs\" iconColor={theme.colors.primary.light5} />\n        {t('Stop')}\n      </>\n    );\n  }\n  if (selectedText) {\n    return t('Run selection');\n  }\n  return t('Run');\n};\n\nconst onClick = (\n  shouldShowStopButton: boolean,\n  allowAsync: boolean,\n  runQuery: (c?: boolean) => void = () => undefined,\n  stopQuery = () => {},\n  logAction: (name: string, payload: Record<string, any>) => void,\n): void => {\n  const eventName = shouldShowStopButton\n    ? LOG_ACTIONS_SQLLAB_STOP_QUERY\n    : LOG_ACTIONS_SQLLAB_RUN_QUERY;\n\n  logAction(eventName, { shortcut: false });\n  if (shouldShowStopButton) return stopQuery();\n  if (allowAsync) {\n    return runQuery(true);\n  }\n  return runQuery(false);\n};\n\nconst StyledButton = styled.span`\n  button {\n    line-height: 13px;\n    // this is to over ride a previous transition built into the component\n    transition: background-color 0ms;\n    &:last-of-type {\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n    span[name='caret-down'] {\n      display: flex;\n      margin-left: ${({ theme }) => theme.gridUnit * 1}px;\n    }\n  }\n`;\n\nconst RunQueryActionButton = ({\n  allowAsync = false,\n  queryEditorId,\n  queryState,\n  overlayCreateAsMenu,\n  runQuery,\n  stopQuery,\n}: RunQueryActionButtonProps) => {\n  const theme = useTheme();\n  const logAction = useLogAction({ queryEditorId });\n  const userOS = detectOS();\n\n  const { selectedText, sql } = useQueryEditor(queryEditorId, [\n    'selectedText',\n    'sql',\n  ]);\n\n  const shouldShowStopBtn =\n    !!queryState && ['running', 'pending'].indexOf(queryState) > -1;\n\n  const ButtonComponent: FC<QueryButtonProps> = overlayCreateAsMenu\n    ? (DropdownButton as FC)\n    : Button;\n\n  const sqlContent = selectedText || sql || '';\n  const isDisabled = !sqlContent\n    ?.replace(/(\\/\\*[^*]*\\*\\/)|(\\/\\/[^*]*)|(--[^.].*)/gm, '')\n    .trim();\n\n  const stopButtonTooltipText = useMemo(\n    () =>\n      userOS === 'MacOS'\n        ? t('Stop running (Ctrl + x)')\n        : t('Stop running (Ctrl + e)'),\n    [userOS],\n  );\n\n  return (\n    <StyledButton>\n      <ButtonComponent\n        data-test=\"run-query-action\"\n        onClick={() =>\n          onClick(shouldShowStopBtn, allowAsync, runQuery, stopQuery, logAction)\n        }\n        disabled={isDisabled}\n        tooltip={\n          (!isDisabled &&\n            (shouldShowStopBtn\n              ? stopButtonTooltipText\n              : t('Run query (Ctrl + Return)'))) as string\n        }\n        cta\n        {...(overlayCreateAsMenu\n          ? {\n              overlay: overlayCreateAsMenu,\n              icon: (\n                <Icons.DownOutlined\n                  iconColor={\n                    isDisabled\n                      ? theme.colors.grayscale.base\n                      : theme.colors.grayscale.light5\n                  }\n                />\n              ),\n              trigger: 'click',\n            }\n          : {\n              buttonStyle: shouldShowStopBtn ? 'warning' : 'primary',\n            })}\n      >\n        {buildText(shouldShowStopBtn, selectedText, theme)}\n      </ButtonComponent>\n    </StyledButton>\n  );\n};\n\nexport default RunQueryActionButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}