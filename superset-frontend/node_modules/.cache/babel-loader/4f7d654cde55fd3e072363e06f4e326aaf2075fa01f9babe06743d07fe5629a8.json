{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { extendedDayjs } from 'src/utils/dates';\nimport { DAYJS_FORMAT } from './constants';\n/**\n * RegExp to test a string for a full ISO 8601 Date\n * Does not do any sort of date validation, only checks if the string is according to the ISO 8601 spec.\n *  YYYY-MM-DDThh:mm:ss\n *  YYYY-MM-DDThh:mm:ssTZD\n *  YYYY-MM-DDThh:mm:ss.sTZD\n * @see: https://www.w3.org/TR/NOTE-datetime\n */\nconst iso8601 = String.raw`\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.\\d+)?(?:(?:[+-]\\d\\d:\\d\\d)|Z)?`;\nconst datetimeConstant = String.raw`(?:TODAY|NOW)`;\nexport const ISO8601_AND_CONSTANT = RegExp(String.raw`^${iso8601}$|^${datetimeConstant}$`, 'i');\nconst SPECIFIC_MODE = ['specific', 'today', 'now'];\nexport const dttmToDayjs = (dttm) => {\n  if (dttm === 'now') {\n    return extendedDayjs().utc().startOf('second');\n  }\n  if (dttm === 'today') {\n    return extendedDayjs().utc().startOf('day');\n  }\n  return extendedDayjs(dttm);\n};\nexport const dttmToString = (dttm) => dttmToDayjs(dttm).format(DAYJS_FORMAT);\nexport const customTimeRangeEncode = (customRange) => {\n  const { sinceDatetime, sinceMode, sinceGrain, sinceGrainValue, untilDatetime, untilMode, untilGrain, untilGrainValue, anchorValue } = { ...customRange };\n  // specific : specific\n  if (SPECIFIC_MODE.includes(sinceMode) && SPECIFIC_MODE.includes(untilMode)) {\n    const since = sinceMode === 'specific' ? dttmToString(sinceDatetime) : sinceMode;\n    const until = untilMode === 'specific' ? dttmToString(untilDatetime) : untilMode;\n    return `${since} : ${until}`;\n  }\n  // specific : relative\n  if (SPECIFIC_MODE.includes(sinceMode) && untilMode === 'relative') {\n    const since = sinceMode === 'specific' ? dttmToString(sinceDatetime) : sinceMode;\n    const until = `DATEADD(DATETIME(\"${since}\"), ${untilGrainValue}, ${untilGrain})`;\n    return `${since} : ${until}`;\n  }\n  // relative : specific\n  if (sinceMode === 'relative' && SPECIFIC_MODE.includes(untilMode)) {\n    const until = untilMode === 'specific' ? dttmToString(untilDatetime) : untilMode;\n    const since = `DATEADD(DATETIME(\"${until}\"), ${-Math.abs(sinceGrainValue)}, ${sinceGrain})`;\n    return `${since} : ${until}`;\n  }\n  // relative : relative\n  const since = `DATEADD(DATETIME(\"${anchorValue}\"), ${-Math.abs(sinceGrainValue)}, ${sinceGrain})`;\n  const until = `DATEADD(DATETIME(\"${anchorValue}\"), ${untilGrainValue}, ${untilGrain})`;\n  return `${since} : ${until}`;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(iso8601, \"iso8601\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts\");reactHotLoader.register(datetimeConstant, \"datetimeConstant\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts\");reactHotLoader.register(ISO8601_AND_CONSTANT, \"ISO8601_AND_CONSTANT\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts\");reactHotLoader.register(SPECIFIC_MODE, \"SPECIFIC_MODE\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts\");reactHotLoader.register(dttmToDayjs, \"dttmToDayjs\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts\");reactHotLoader.register(dttmToString, \"dttmToString\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts\");reactHotLoader.register(customTimeRangeEncode, \"customTimeRangeEncode\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["extendedDayjs","DAYJS_FORMAT","iso8601","String","raw","datetimeConstant","ISO8601_AND_CONSTANT","RegExp","SPECIFIC_MODE","dttmToDayjs","dttm","utc","startOf","dttmToString","format","customTimeRangeEncode","customRange","sinceDatetime","sinceMode","sinceGrain","sinceGrainValue","untilDatetime","untilMode","untilGrain","untilGrainValue","anchorValue","includes","since","until","Math","abs","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/DateFilterControl/utils/dateParser.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { extendedDayjs } from 'src/utils/dates';\nimport { Dayjs } from 'dayjs';\nimport { CustomRangeType } from 'src/explore/components/controls/DateFilterControl/types';\nimport { DAYJS_FORMAT } from './constants';\n\n/**\n * RegExp to test a string for a full ISO 8601 Date\n * Does not do any sort of date validation, only checks if the string is according to the ISO 8601 spec.\n *  YYYY-MM-DDThh:mm:ss\n *  YYYY-MM-DDThh:mm:ssTZD\n *  YYYY-MM-DDThh:mm:ss.sTZD\n * @see: https://www.w3.org/TR/NOTE-datetime\n */\nconst iso8601 = String.raw`\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.\\d+)?(?:(?:[+-]\\d\\d:\\d\\d)|Z)?`;\nconst datetimeConstant = String.raw`(?:TODAY|NOW)`;\n\nexport const ISO8601_AND_CONSTANT = RegExp(\n  String.raw`^${iso8601}$|^${datetimeConstant}$`,\n  'i',\n);\n\nconst SPECIFIC_MODE = ['specific', 'today', 'now'];\n\nexport const dttmToDayjs = (dttm: string): Dayjs => {\n  if (dttm === 'now') {\n    return extendedDayjs().utc().startOf('second');\n  }\n  if (dttm === 'today') {\n    return extendedDayjs().utc().startOf('day');\n  }\n  return extendedDayjs(dttm);\n};\n\nexport const dttmToString = (dttm: string): string =>\n  dttmToDayjs(dttm).format(DAYJS_FORMAT);\n\nexport const customTimeRangeEncode = (customRange: CustomRangeType): string => {\n  const {\n    sinceDatetime,\n    sinceMode,\n    sinceGrain,\n    sinceGrainValue,\n    untilDatetime,\n    untilMode,\n    untilGrain,\n    untilGrainValue,\n    anchorValue,\n  } = { ...customRange };\n  // specific : specific\n  if (SPECIFIC_MODE.includes(sinceMode) && SPECIFIC_MODE.includes(untilMode)) {\n    const since =\n      sinceMode === 'specific' ? dttmToString(sinceDatetime) : sinceMode;\n    const until =\n      untilMode === 'specific' ? dttmToString(untilDatetime) : untilMode;\n    return `${since} : ${until}`;\n  }\n\n  // specific : relative\n  if (SPECIFIC_MODE.includes(sinceMode) && untilMode === 'relative') {\n    const since =\n      sinceMode === 'specific' ? dttmToString(sinceDatetime) : sinceMode;\n    const until = `DATEADD(DATETIME(\"${since}\"), ${untilGrainValue}, ${untilGrain})`;\n    return `${since} : ${until}`;\n  }\n\n  // relative : specific\n  if (sinceMode === 'relative' && SPECIFIC_MODE.includes(untilMode)) {\n    const until =\n      untilMode === 'specific' ? dttmToString(untilDatetime) : untilMode;\n    const since = `DATEADD(DATETIME(\"${until}\"), ${-Math.abs(\n      sinceGrainValue,\n    )}, ${sinceGrain})`;\n    return `${since} : ${until}`;\n  }\n\n  // relative : relative\n  const since = `DATEADD(DATETIME(\"${anchorValue}\"), ${-Math.abs(\n    sinceGrainValue,\n  )}, ${sinceGrain})`;\n  const until = `DATEADD(DATETIME(\"${anchorValue}\"), ${untilGrainValue}, ${untilGrain})`;\n  return `${since} : ${until}`;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}