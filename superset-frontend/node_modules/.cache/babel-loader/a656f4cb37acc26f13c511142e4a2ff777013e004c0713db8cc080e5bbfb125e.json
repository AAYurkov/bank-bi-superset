{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t, usePrevious, css } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { Icons } from 'src/components/Icons';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport Modal from 'src/components/Modal';\nimport { DROP_LEFT, DROP_RIGHT } from 'src/dashboard/util/getDropPosition';\nimport { Draggable } from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  activeTabs: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTab: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired\n};\n\nconst defaultProps = {\n  setActiveTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {}\n};\n\nconst StyledTabsContainer = styled.div`\n  ${({ theme }) => css`\n    width: 100%;\n    background-color: ${theme.colors.grayscale.light5};\n\n    .dashboard-component-tabs-content {\n      min-height: ${theme.gridUnit * 12}px;\n      margin-top: ${theme.gridUnit / 4}px;\n      position: relative;\n    }\n\n    .ant-tabs {\n      overflow: visible;\n\n      .ant-tabs-nav-wrap {\n        min-height: ${theme.gridUnit * 12.5}px;\n      }\n\n      .ant-tabs-content-holder {\n        overflow: visible;\n      }\n    }\n\n    div .ant-tabs-tab-btn {\n      text-transform: none;\n    }\n  `}\n`;\nconst DropIndicator = styled.div`\n  border: 2px solid ${({ theme }) => theme.colors.primary.base};\n  width: 5px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  ${({ pos }) => pos === 'left' ? 'left: -4px' : 'right: -4px'};\n  border-radius: 2px;\n`;\n\nconst CloseIconWithDropIndicator = (props) =>\n_jsxs(_Fragment, { children: [\n  _jsx(Icons.CloseOutlined, { iconSize: \"s\" }),\n  props.showDropIndicators.right &&\n  _jsx(DropIndicator, { className: \"drop-indicator-right\", pos: \"right\" })] }\n\n);\n\n\nconst Tabs = (props) => {\n  const nativeFilters = useSelector((state) => state.nativeFilters);\n  const activeTabs = useSelector((state) => state.dashboardState.activeTabs);\n  const directPathToChild = useSelector(\n    (state) => state.dashboardState.directPathToChild\n  );\n\n  const { tabIndex: initTabIndex, activeKey: initActiveKey } = useMemo(() => {\n    let tabIndex = Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: props.component,\n        directPathToChild\n      })\n    );\n    if (tabIndex === 0 && activeTabs != null && activeTabs.length) {\n      props.component.children.forEach((tabId, index) => {\n        if (tabIndex === 0 && activeTabs != null && activeTabs.includes(tabId)) {\n          tabIndex = index;\n        }\n      });\n    }\n    const { children: tabIds } = props.component;\n    const activeKey = tabIds[tabIndex];\n\n    return {\n      tabIndex,\n      activeKey\n    };\n  }, [activeTabs, props.component, directPathToChild]);\n\n  const [activeKey, setActiveKey] = useState(initActiveKey);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(initTabIndex);\n  const [dropPosition, setDropPosition] = useState(null);\n  const [dragOverTabIndex, setDragOverTabIndex] = useState(null);\n  const [draggingTabId, setDraggingTabId] = useState(null);\n  const prevActiveKey = usePrevious(activeKey);\n  const prevDashboardId = usePrevious(props.dashboardId);\n  const prevDirectPathToChild = usePrevious(directPathToChild);\n  const prevTabIds = usePrevious(props.component.children);\n\n  useEffect(() => {\n    if (prevActiveKey) {\n      props.setActiveTab(activeKey, prevActiveKey);\n    } else {\n      props.setActiveTab(activeKey);\n    }\n  }, [props.setActiveTab, prevActiveKey, activeKey]);\n\n  useEffect(() => {\n    if (prevDashboardId && props.dashboardId !== prevDashboardId) {\n      setSelectedTabIndex(initTabIndex);\n      setActiveKey(initActiveKey);\n    }\n  }, [props.dashboardId, prevDashboardId, initTabIndex, initActiveKey]);\n\n  useEffect(() => {\n    const maxIndex = Math.max(0, props.component.children.length - 1);\n    if (selectedTabIndex > maxIndex) {\n      setSelectedTabIndex(maxIndex);\n    }\n  }, [selectedTabIndex, props.component.children.length, setSelectedTabIndex]);\n\n  useEffect(() => {\n    const currTabsIds = props.component.children;\n\n    if (props.isComponentVisible) {\n      const nextFocusComponent = getLeafComponentIdFromPath(directPathToChild);\n      const currentFocusComponent = getLeafComponentIdFromPath(\n        prevDirectPathToChild\n      );\n\n      // If the currently selected component is different than the new one,\n      // or the tab length/order changed, calculate the new tab index and\n      // replace it if it's different than the current one\n      if (\n      nextFocusComponent !== currentFocusComponent ||\n      nextFocusComponent === currentFocusComponent &&\n      currTabsIds !== prevTabIds)\n      {\n        const nextTabIndex = findTabIndexByComponentId({\n          currentComponent: props.component,\n          directPathToChild\n        });\n\n        // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== selectedTabIndex) {\n          setSelectedTabIndex(nextTabIndex);\n          setActiveKey(currTabsIds[nextTabIndex]);\n        }\n      }\n    }\n  }, [\n  props.component,\n  directPathToChild,\n  props.isComponentVisible,\n  selectedTabIndex,\n  prevDirectPathToChild,\n  prevTabIds]\n  );\n\n  const handleClickTab = useCallback(\n    (tabIndex) => {\n      const { component } = props;\n      const { children: tabIds } = component;\n\n      if (tabIndex !== selectedTabIndex) {\n        const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n        const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n        props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n          target_id: targetTabId,\n          index: tabIndex\n        });\n\n        props.onChangeTab({ pathToTabIndex });\n      }\n      setActiveKey(tabIds[tabIndex]);\n    },\n    [\n    props.component,\n    props.logEvent,\n    props.onChangeTab,\n    selectedTabIndex,\n    setActiveKey]\n\n  );\n\n  const handleDropOnTab = useCallback(\n    (dropResult) => {\n      const { component } = props;\n\n      // Ensure dropped tab is visible\n      const { destination } = dropResult;\n      if (destination) {\n        const dropTabIndex =\n        destination.id === component.id ?\n        destination.index // dropped ON tabs\n        : component.children.indexOf(destination.id); // dropped IN tab\n\n        if (dropTabIndex > -1) {\n          setTimeout(() => {\n            handleClickTab(dropTabIndex);\n          }, 30);\n        }\n      }\n    },\n    [props.component, handleClickTab]\n  );\n\n  const handleDrop = useCallback(\n    (dropResult) => {\n      if (dropResult.dragging.type !== TABS_TYPE) {\n        props.handleComponentDrop(dropResult);\n      }\n    },\n    [props.handleComponentDrop]\n  );\n\n  const handleDeleteTab = useCallback(\n    (tabIndex) => {\n      // If we're removing the currently selected tab,\n      // select the previous one (if any)\n      if (selectedTabIndex === tabIndex) {\n        handleClickTab(Math.max(0, tabIndex - 1));\n      }\n    },\n    [selectedTabIndex, handleClickTab]\n  );\n\n  const showDeleteConfirmModal = useCallback(\n    (key) => {\n      const { component, deleteComponent } = props;\n      Modal.confirm({\n        title: t('Delete dashboard tab?'),\n        content:\n        _jsxs(\"span\", { children: [\n          t(\n            'Deleting a tab will remove all content within it and will deactivate any related alerts or reports. You may still ' +\n            'reverse this action with the'\n          ), ' ',\n          _jsx(\"b\", { children: t('undo') }), ' ',\n          t('button (cmd + z) until you save your changes.')] }\n        ),\n\n        onOk: () => {\n          deleteComponent(key, component.id);\n          const tabIndex = component.children.indexOf(key);\n          handleDeleteTab(tabIndex);\n        },\n        okType: 'danger',\n        okText: t('DELETE'),\n        cancelText: t('CANCEL'),\n        icon: null\n      });\n    },\n    [props.component, props.deleteComponent, handleDeleteTab]\n  );\n\n  const handleEdit = useCallback(\n    (event, action) => {\n      const { component, createComponent } = props;\n      if (action === 'add') {\n        // Prevent the tab container to be selected\n        event == null ? void 0 : event.stopPropagation == null ? void 0 : event.stopPropagation();\n\n        createComponent({\n          destination: {\n            id: component.id,\n            type: component.type,\n            index: component.children.length\n          },\n          dragging: {\n            id: NEW_TAB_ID,\n            type: TAB_TYPE\n          }\n        });\n      } else if (action === 'remove') {\n        showDeleteConfirmModal(event);\n      }\n    },\n    [props.component, props.createComponent, showDeleteConfirmModal]\n  );\n\n  const handleDeleteComponent = useCallback(() => {\n    const { deleteComponent, id, parentId } = props;\n    deleteComponent(id, parentId);\n  }, [props.deleteComponent, props.id, props.parentId]);\n\n  const handleGetDropPosition = useCallback((dragObject) => {\n    const { dropIndicator, isDraggingOver, index } = dragObject;\n\n    if (isDraggingOver) {\n      setDropPosition(dropIndicator);\n      setDragOverTabIndex(index);\n    } else {\n      setDropPosition(null);\n    }\n  }, []);\n\n  const handleDragggingTab = useCallback((tabId) => {\n    if (tabId) {\n      setDraggingTabId(tabId);\n    } else {\n      setDraggingTabId(null);\n    }\n  }, []);\n\n  const {\n    depth,\n    component: tabsComponent,\n    parentComponent,\n    index,\n    availableColumnCount = 0,\n    columnWidth = 0,\n    onResizeStart,\n    onResize,\n    onResizeStop,\n    renderTabContent = true,\n    renderHoverMenu = true,\n    isComponentVisible: isCurrentTabVisible,\n    editMode\n  } = props;\n\n  const { children: tabIds } = tabsComponent;\n\n  const showDropIndicators = useCallback(\n    (currentDropTabIndex) =>\n    currentDropTabIndex === dragOverTabIndex && {\n      left: editMode && dropPosition === DROP_LEFT,\n      right: editMode && dropPosition === DROP_RIGHT\n    },\n    [dragOverTabIndex, dropPosition, editMode]\n  );\n\n  const removeDraggedTab = useCallback(\n    (tabID) => draggingTabId === tabID,\n    [draggingTabId]\n  );\n\n  let tabsToHighlight;\n  const highlightedFilterId =\n  (nativeFilters == null ? void 0 : nativeFilters.focusedFilterId) || (nativeFilters == null ? void 0 : nativeFilters.hoveredFilterId);\n  if (highlightedFilterId) {var _nativeFilters$filter;\n    tabsToHighlight = (_nativeFilters$filter = nativeFilters.filters[highlightedFilterId]) == null ? void 0 : _nativeFilters$filter.tabsInScope;\n  }\n\n  const renderChild = useCallback(\n    ({ dragSourceRef: tabsDragSourceRef }) =>\n    _jsxs(StyledTabsContainer, {\n      className: \"dashboard-component dashboard-component-tabs\",\n      \"data-test\": \"dashboard-component-tabs\", children: [\n\n      editMode && renderHoverMenu &&\n      _jsxs(HoverMenu, { innerRef: tabsDragSourceRef, position: \"left\", children: [\n        _jsx(DragHandle, { position: \"left\" }),\n        _jsx(DeleteComponentButton, { onDelete: handleDeleteComponent })] }\n      ),\n\n\n      _jsx(LineEditableTabs, {\n        id: tabsComponent.id,\n        activeKey: activeKey,\n        onChange: (key) => {\n          handleClickTab(tabIds.indexOf(key));\n        },\n        onEdit: handleEdit,\n        \"data-test\": \"nav-list\",\n        type: editMode ? 'editable-card' : 'card', children:\n\n        tabIds.map((tabId, tabIndex) => {var _tabsToHighlight;return (\n            _jsx(LineEditableTabs.TabPane, {\n\n              tab:\n              removeDraggedTab(tabId) ?\n              _jsx(_Fragment, {}) :\n\n              _jsxs(_Fragment, { children: [\n                showDropIndicators(tabIndex).left &&\n                _jsx(DropIndicator, {\n                  className: \"drop-indicator-left\",\n                  pos: \"left\" }\n                ),\n\n                _jsx(DashboardComponent, {\n                  id: tabId,\n                  parentId: tabsComponent.id,\n                  depth: depth,\n                  index: tabIndex,\n                  renderType: RENDER_TAB,\n                  availableColumnCount: availableColumnCount,\n                  columnWidth: columnWidth,\n                  onDropOnTab: handleDropOnTab,\n                  onDropPositionChange: handleGetDropPosition,\n                  onDragTab: handleDragggingTab,\n                  onHoverTab: () => handleClickTab(tabIndex),\n                  isFocused: activeKey === tabId,\n                  isHighlighted:\n                  activeKey !== tabId && ((_tabsToHighlight = tabsToHighlight) == null ? void 0 : _tabsToHighlight.includes(tabId)) }\n\n                )] }\n              ),\n\n\n              closeIcon:\n              removeDraggedTab(tabId) ?\n              _jsx(_Fragment, {}) :\n\n              _jsx(CloseIconWithDropIndicator, {\n                role: \"button\",\n                tabIndex: tabIndex,\n                showDropIndicators: showDropIndicators(tabIndex) }\n              ), children:\n\n\n\n              renderTabContent &&\n              _jsx(DashboardComponent, {\n                id: tabId,\n                parentId: tabsComponent.id,\n                depth: depth // see isValidChild.js for why tabs don't increment child depth\n                , index: tabIndex,\n                renderType: RENDER_TAB_CONTENT,\n                availableColumnCount: availableColumnCount,\n                columnWidth: columnWidth,\n                onResizeStart: onResizeStart,\n                onResize: onResize,\n                onResizeStop: onResizeStop,\n                onDropOnTab: handleDropOnTab,\n                isComponentVisible:\n                selectedTabIndex === tabIndex && isCurrentTabVisible }\n\n              ) }, tabId\n\n            ));}\n        ) }\n      )] }\n    ),\n\n    [\n    editMode,\n    renderHoverMenu,\n    handleDeleteComponent,\n    tabsComponent.id,\n    activeKey,\n    handleEdit,\n    tabIds,\n    handleClickTab,\n    removeDraggedTab,\n    showDropIndicators,\n    depth,\n    availableColumnCount,\n    columnWidth,\n    handleDropOnTab,\n    handleGetDropPosition,\n    handleDragggingTab,\n    tabsToHighlight,\n    renderTabContent,\n    onResizeStart,\n    onResize,\n    onResizeStop,\n    selectedTabIndex,\n    isCurrentTabVisible]\n\n  );\n\n  return (\n    _jsx(Draggable, {\n      component: tabsComponent,\n      parentComponent: parentComponent,\n      orientation: \"row\",\n      index: index,\n      depth: depth,\n      onDrop: handleDrop,\n      editMode: editMode, children:\n\n      renderChild }\n    ));\n\n};__signature__(Tabs, \"useSelector{nativeFilters}\\nuseSelector{activeTabs}\\nuseSelector{directPathToChild}\\nuseMemo{{ tabIndex: initTabIndex, activeKey: initActiveKey }}\\nuseState{[activeKey, setActiveKey](initActiveKey)}\\nuseState{[selectedTabIndex, setSelectedTabIndex](initTabIndex)}\\nuseState{[dropPosition, setDropPosition](null)}\\nuseState{[dragOverTabIndex, setDragOverTabIndex](null)}\\nuseState{[draggingTabId, setDraggingTabId](null)}\\nusePrevious{prevActiveKey}\\nusePrevious{prevDashboardId}\\nusePrevious{prevDirectPathToChild}\\nusePrevious{prevTabIds}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{handleClickTab}\\nuseCallback{handleDropOnTab}\\nuseCallback{handleDrop}\\nuseCallback{handleDeleteTab}\\nuseCallback{showDeleteConfirmModal}\\nuseCallback{handleEdit}\\nuseCallback{handleDeleteComponent}\\nuseCallback{handleGetDropPosition}\\nuseCallback{handleDragggingTab}\\nuseCallback{showDropIndicators}\\nuseCallback{removeDraggedTab}\\nuseCallback{renderChild}\", () => [useSelector, useSelector, useSelector, usePrevious, usePrevious, usePrevious, usePrevious]);\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;const _default = /*#__PURE__*/\n\nmemo(Tabs);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(StyledTabsContainer, \"StyledTabsContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(DropIndicator, \"DropIndicator\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(CloseIconWithDropIndicator, \"CloseIconWithDropIndicator\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(Tabs, \"Tabs\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","memo","PropTypes","styled","t","usePrevious","css","useSelector","LineEditableTabs","Icons","LOG_ACTIONS_SELECT_DASHBOARD_TAB","Modal","DROP_LEFT","DROP_RIGHT","Draggable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","findTabIndexByComponentId","getDirectPathToTabIndex","getLeafComponentIdFromPath","componentShape","NEW_TAB_ID","RENDER_TAB","RENDER_TAB_CONTENT","TABS_TYPE","TAB_TYPE","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","renderTabContent","bool","editMode","renderHoverMenu","activeTabs","arrayOf","logEvent","func","setActiveTab","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","createComponent","handleComponentDrop","onChangeTab","deleteComponent","updateComponents","defaultProps","StyledTabsContainer","div","theme","colors","grayscale","light5","gridUnit","DropIndicator","primary","base","pos","CloseIconWithDropIndicator","props","children","CloseOutlined","iconSize","showDropIndicators","right","className","Tabs","nativeFilters","state","dashboardState","directPathToChild","tabIndex","initTabIndex","activeKey","initActiveKey","Math","max","currentComponent","length","forEach","tabId","includes","tabIds","setActiveKey","selectedTabIndex","setSelectedTabIndex","dropPosition","setDropPosition","dragOverTabIndex","setDragOverTabIndex","draggingTabId","setDraggingTabId","prevActiveKey","prevDashboardId","dashboardId","prevDirectPathToChild","prevTabIds","maxIndex","currTabsIds","isComponentVisible","nextFocusComponent","currentFocusComponent","nextTabIndex","handleClickTab","pathToTabIndex","targetTabId","target_id","handleDropOnTab","dropResult","destination","dropTabIndex","indexOf","setTimeout","handleDrop","dragging","type","handleDeleteTab","showDeleteConfirmModal","key","confirm","title","content","onOk","okType","okText","cancelText","icon","handleEdit","event","action","stopPropagation","handleDeleteComponent","handleGetDropPosition","dragObject","dropIndicator","isDraggingOver","handleDragggingTab","tabsComponent","isCurrentTabVisible","currentDropTabIndex","left","removeDraggedTab","tabID","tabsToHighlight","highlightedFilterId","focusedFilterId","hoveredFilterId","_nativeFilters$filter","filters","tabsInScope","renderChild","dragSourceRef","tabsDragSourceRef","innerRef","position","onDelete","onChange","onEdit","map","_tabsToHighlight","TabPane","tab","renderType","onDropOnTab","onDropPositionChange","onDragTab","onHoverTab","isFocused","isHighlighted","closeIcon","role","orientation","onDrop","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t, usePrevious, css } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { Icons } from 'src/components/Icons';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport Modal from 'src/components/Modal';\nimport { DROP_LEFT, DROP_RIGHT } from 'src/dashboard/util/getDropPosition';\nimport { Draggable } from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  activeTabs: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTab: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  setActiveTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {},\n};\n\nconst StyledTabsContainer = styled.div`\n  ${({ theme }) => css`\n    width: 100%;\n    background-color: ${theme.colors.grayscale.light5};\n\n    .dashboard-component-tabs-content {\n      min-height: ${theme.gridUnit * 12}px;\n      margin-top: ${theme.gridUnit / 4}px;\n      position: relative;\n    }\n\n    .ant-tabs {\n      overflow: visible;\n\n      .ant-tabs-nav-wrap {\n        min-height: ${theme.gridUnit * 12.5}px;\n      }\n\n      .ant-tabs-content-holder {\n        overflow: visible;\n      }\n    }\n\n    div .ant-tabs-tab-btn {\n      text-transform: none;\n    }\n  `}\n`;\nconst DropIndicator = styled.div`\n  border: 2px solid ${({ theme }) => theme.colors.primary.base};\n  width: 5px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  ${({ pos }) => (pos === 'left' ? 'left: -4px' : 'right: -4px')};\n  border-radius: 2px;\n`;\n\nconst CloseIconWithDropIndicator = props => (\n  <>\n    <Icons.CloseOutlined iconSize=\"s\" />\n    {props.showDropIndicators.right && (\n      <DropIndicator className=\"drop-indicator-right\" pos=\"right\" />\n    )}\n  </>\n);\n\nconst Tabs = props => {\n  const nativeFilters = useSelector(state => state.nativeFilters);\n  const activeTabs = useSelector(state => state.dashboardState.activeTabs);\n  const directPathToChild = useSelector(\n    state => state.dashboardState.directPathToChild,\n  );\n\n  const { tabIndex: initTabIndex, activeKey: initActiveKey } = useMemo(() => {\n    let tabIndex = Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: props.component,\n        directPathToChild,\n      }),\n    );\n    if (tabIndex === 0 && activeTabs?.length) {\n      props.component.children.forEach((tabId, index) => {\n        if (tabIndex === 0 && activeTabs?.includes(tabId)) {\n          tabIndex = index;\n        }\n      });\n    }\n    const { children: tabIds } = props.component;\n    const activeKey = tabIds[tabIndex];\n\n    return {\n      tabIndex,\n      activeKey,\n    };\n  }, [activeTabs, props.component, directPathToChild]);\n\n  const [activeKey, setActiveKey] = useState(initActiveKey);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(initTabIndex);\n  const [dropPosition, setDropPosition] = useState(null);\n  const [dragOverTabIndex, setDragOverTabIndex] = useState(null);\n  const [draggingTabId, setDraggingTabId] = useState(null);\n  const prevActiveKey = usePrevious(activeKey);\n  const prevDashboardId = usePrevious(props.dashboardId);\n  const prevDirectPathToChild = usePrevious(directPathToChild);\n  const prevTabIds = usePrevious(props.component.children);\n\n  useEffect(() => {\n    if (prevActiveKey) {\n      props.setActiveTab(activeKey, prevActiveKey);\n    } else {\n      props.setActiveTab(activeKey);\n    }\n  }, [props.setActiveTab, prevActiveKey, activeKey]);\n\n  useEffect(() => {\n    if (prevDashboardId && props.dashboardId !== prevDashboardId) {\n      setSelectedTabIndex(initTabIndex);\n      setActiveKey(initActiveKey);\n    }\n  }, [props.dashboardId, prevDashboardId, initTabIndex, initActiveKey]);\n\n  useEffect(() => {\n    const maxIndex = Math.max(0, props.component.children.length - 1);\n    if (selectedTabIndex > maxIndex) {\n      setSelectedTabIndex(maxIndex);\n    }\n  }, [selectedTabIndex, props.component.children.length, setSelectedTabIndex]);\n\n  useEffect(() => {\n    const currTabsIds = props.component.children;\n\n    if (props.isComponentVisible) {\n      const nextFocusComponent = getLeafComponentIdFromPath(directPathToChild);\n      const currentFocusComponent = getLeafComponentIdFromPath(\n        prevDirectPathToChild,\n      );\n\n      // If the currently selected component is different than the new one,\n      // or the tab length/order changed, calculate the new tab index and\n      // replace it if it's different than the current one\n      if (\n        nextFocusComponent !== currentFocusComponent ||\n        (nextFocusComponent === currentFocusComponent &&\n          currTabsIds !== prevTabIds)\n      ) {\n        const nextTabIndex = findTabIndexByComponentId({\n          currentComponent: props.component,\n          directPathToChild,\n        });\n\n        // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== selectedTabIndex) {\n          setSelectedTabIndex(nextTabIndex);\n          setActiveKey(currTabsIds[nextTabIndex]);\n        }\n      }\n    }\n  }, [\n    props.component,\n    directPathToChild,\n    props.isComponentVisible,\n    selectedTabIndex,\n    prevDirectPathToChild,\n    prevTabIds,\n  ]);\n\n  const handleClickTab = useCallback(\n    tabIndex => {\n      const { component } = props;\n      const { children: tabIds } = component;\n\n      if (tabIndex !== selectedTabIndex) {\n        const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n        const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n        props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n          target_id: targetTabId,\n          index: tabIndex,\n        });\n\n        props.onChangeTab({ pathToTabIndex });\n      }\n      setActiveKey(tabIds[tabIndex]);\n    },\n    [\n      props.component,\n      props.logEvent,\n      props.onChangeTab,\n      selectedTabIndex,\n      setActiveKey,\n    ],\n  );\n\n  const handleDropOnTab = useCallback(\n    dropResult => {\n      const { component } = props;\n\n      // Ensure dropped tab is visible\n      const { destination } = dropResult;\n      if (destination) {\n        const dropTabIndex =\n          destination.id === component.id\n            ? destination.index // dropped ON tabs\n            : component.children.indexOf(destination.id); // dropped IN tab\n\n        if (dropTabIndex > -1) {\n          setTimeout(() => {\n            handleClickTab(dropTabIndex);\n          }, 30);\n        }\n      }\n    },\n    [props.component, handleClickTab],\n  );\n\n  const handleDrop = useCallback(\n    dropResult => {\n      if (dropResult.dragging.type !== TABS_TYPE) {\n        props.handleComponentDrop(dropResult);\n      }\n    },\n    [props.handleComponentDrop],\n  );\n\n  const handleDeleteTab = useCallback(\n    tabIndex => {\n      // If we're removing the currently selected tab,\n      // select the previous one (if any)\n      if (selectedTabIndex === tabIndex) {\n        handleClickTab(Math.max(0, tabIndex - 1));\n      }\n    },\n    [selectedTabIndex, handleClickTab],\n  );\n\n  const showDeleteConfirmModal = useCallback(\n    key => {\n      const { component, deleteComponent } = props;\n      Modal.confirm({\n        title: t('Delete dashboard tab?'),\n        content: (\n          <span>\n            {t(\n              'Deleting a tab will remove all content within it and will deactivate any related alerts or reports. You may still ' +\n                'reverse this action with the',\n            )}{' '}\n            <b>{t('undo')}</b>{' '}\n            {t('button (cmd + z) until you save your changes.')}\n          </span>\n        ),\n        onOk: () => {\n          deleteComponent(key, component.id);\n          const tabIndex = component.children.indexOf(key);\n          handleDeleteTab(tabIndex);\n        },\n        okType: 'danger',\n        okText: t('DELETE'),\n        cancelText: t('CANCEL'),\n        icon: null,\n      });\n    },\n    [props.component, props.deleteComponent, handleDeleteTab],\n  );\n\n  const handleEdit = useCallback(\n    (event, action) => {\n      const { component, createComponent } = props;\n      if (action === 'add') {\n        // Prevent the tab container to be selected\n        event?.stopPropagation?.();\n\n        createComponent({\n          destination: {\n            id: component.id,\n            type: component.type,\n            index: component.children.length,\n          },\n          dragging: {\n            id: NEW_TAB_ID,\n            type: TAB_TYPE,\n          },\n        });\n      } else if (action === 'remove') {\n        showDeleteConfirmModal(event);\n      }\n    },\n    [props.component, props.createComponent, showDeleteConfirmModal],\n  );\n\n  const handleDeleteComponent = useCallback(() => {\n    const { deleteComponent, id, parentId } = props;\n    deleteComponent(id, parentId);\n  }, [props.deleteComponent, props.id, props.parentId]);\n\n  const handleGetDropPosition = useCallback(dragObject => {\n    const { dropIndicator, isDraggingOver, index } = dragObject;\n\n    if (isDraggingOver) {\n      setDropPosition(dropIndicator);\n      setDragOverTabIndex(index);\n    } else {\n      setDropPosition(null);\n    }\n  }, []);\n\n  const handleDragggingTab = useCallback(tabId => {\n    if (tabId) {\n      setDraggingTabId(tabId);\n    } else {\n      setDraggingTabId(null);\n    }\n  }, []);\n\n  const {\n    depth,\n    component: tabsComponent,\n    parentComponent,\n    index,\n    availableColumnCount = 0,\n    columnWidth = 0,\n    onResizeStart,\n    onResize,\n    onResizeStop,\n    renderTabContent = true,\n    renderHoverMenu = true,\n    isComponentVisible: isCurrentTabVisible,\n    editMode,\n  } = props;\n\n  const { children: tabIds } = tabsComponent;\n\n  const showDropIndicators = useCallback(\n    currentDropTabIndex =>\n      currentDropTabIndex === dragOverTabIndex && {\n        left: editMode && dropPosition === DROP_LEFT,\n        right: editMode && dropPosition === DROP_RIGHT,\n      },\n    [dragOverTabIndex, dropPosition, editMode],\n  );\n\n  const removeDraggedTab = useCallback(\n    tabID => draggingTabId === tabID,\n    [draggingTabId],\n  );\n\n  let tabsToHighlight;\n  const highlightedFilterId =\n    nativeFilters?.focusedFilterId || nativeFilters?.hoveredFilterId;\n  if (highlightedFilterId) {\n    tabsToHighlight = nativeFilters.filters[highlightedFilterId]?.tabsInScope;\n  }\n\n  const renderChild = useCallback(\n    ({ dragSourceRef: tabsDragSourceRef }) => (\n      <StyledTabsContainer\n        className=\"dashboard-component dashboard-component-tabs\"\n        data-test=\"dashboard-component-tabs\"\n      >\n        {editMode && renderHoverMenu && (\n          <HoverMenu innerRef={tabsDragSourceRef} position=\"left\">\n            <DragHandle position=\"left\" />\n            <DeleteComponentButton onDelete={handleDeleteComponent} />\n          </HoverMenu>\n        )}\n\n        <LineEditableTabs\n          id={tabsComponent.id}\n          activeKey={activeKey}\n          onChange={key => {\n            handleClickTab(tabIds.indexOf(key));\n          }}\n          onEdit={handleEdit}\n          data-test=\"nav-list\"\n          type={editMode ? 'editable-card' : 'card'}\n        >\n          {tabIds.map((tabId, tabIndex) => (\n            <LineEditableTabs.TabPane\n              key={tabId}\n              tab={\n                removeDraggedTab(tabId) ? (\n                  <></>\n                ) : (\n                  <>\n                    {showDropIndicators(tabIndex).left && (\n                      <DropIndicator\n                        className=\"drop-indicator-left\"\n                        pos=\"left\"\n                      />\n                    )}\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth}\n                      index={tabIndex}\n                      renderType={RENDER_TAB}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onDropOnTab={handleDropOnTab}\n                      onDropPositionChange={handleGetDropPosition}\n                      onDragTab={handleDragggingTab}\n                      onHoverTab={() => handleClickTab(tabIndex)}\n                      isFocused={activeKey === tabId}\n                      isHighlighted={\n                        activeKey !== tabId && tabsToHighlight?.includes(tabId)\n                      }\n                    />\n                  </>\n                )\n              }\n              closeIcon={\n                removeDraggedTab(tabId) ? (\n                  <></>\n                ) : (\n                  <CloseIconWithDropIndicator\n                    role=\"button\"\n                    tabIndex={tabIndex}\n                    showDropIndicators={showDropIndicators(tabIndex)}\n                  />\n                )\n              }\n            >\n              {renderTabContent && (\n                <DashboardComponent\n                  id={tabId}\n                  parentId={tabsComponent.id}\n                  depth={depth} // see isValidChild.js for why tabs don't increment child depth\n                  index={tabIndex}\n                  renderType={RENDER_TAB_CONTENT}\n                  availableColumnCount={availableColumnCount}\n                  columnWidth={columnWidth}\n                  onResizeStart={onResizeStart}\n                  onResize={onResize}\n                  onResizeStop={onResizeStop}\n                  onDropOnTab={handleDropOnTab}\n                  isComponentVisible={\n                    selectedTabIndex === tabIndex && isCurrentTabVisible\n                  }\n                />\n              )}\n            </LineEditableTabs.TabPane>\n          ))}\n        </LineEditableTabs>\n      </StyledTabsContainer>\n    ),\n    [\n      editMode,\n      renderHoverMenu,\n      handleDeleteComponent,\n      tabsComponent.id,\n      activeKey,\n      handleEdit,\n      tabIds,\n      handleClickTab,\n      removeDraggedTab,\n      showDropIndicators,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      handleDropOnTab,\n      handleGetDropPosition,\n      handleDragggingTab,\n      tabsToHighlight,\n      renderTabContent,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      selectedTabIndex,\n      isCurrentTabVisible,\n    ],\n  );\n\n  return (\n    <Draggable\n      component={tabsComponent}\n      parentComponent={parentComponent}\n      orientation=\"row\"\n      index={index}\n      depth={depth}\n      onDrop={handleDrop}\n      editMode={editMode}\n    >\n      {renderChild}\n    </Draggable>\n  );\n};\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nexport default memo(Tabs);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}