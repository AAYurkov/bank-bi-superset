{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { styled, t, useTheme, css } from '@superset-ui/core';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { saveFilterBarOrientation, saveCrossFiltersSetting } from 'src/dashboard/actions/dashboardInfo';\nimport { Icons } from 'src/components/Icons';\nimport Checkbox from 'src/components/Checkbox';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { Button } from 'src/components';\nimport { Space } from 'src/components/Space';\nimport { clearDataMaskState } from 'src/dataMask/actions';\nimport { useFilters } from 'src/dashboard/components/nativeFilters/FilterBar/state';\nimport { useFilterConfigModal } from 'src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/useFilterConfigModal';\nimport { useCrossFiltersScopingModal } from '../CrossFilters/ScopingModal/useCrossFiltersScopingModal';\nimport FilterConfigurationLink from '../FilterConfigurationLink';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst StyledMenuLabel = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .enable-cross-filters-text {\n    padding-left: ${({ theme }) => `${theme.gridUnit * 2}px`};\n  }\n`;\nconst StyledCheckbox = styled(Checkbox)`\n  ${({ theme }) => `\n  &,\n  svg {\n    display: inline-block;\n    width: ${theme.gridUnit * 4}px;\n    height: ${theme.gridUnit * 4}px;\n  }\n`}\n`;\nconst CROSS_FILTERS_MENU_KEY = 'cross-filters-menu-key';\nconst CROSS_FILTERS_SCOPING_MENU_KEY = 'cross-filters-scoping-menu-key';\nconst ADD_EDIT_FILTERS_MENU_KEY = 'add-edit-filters-menu-key';\nconst isOrientation = (o) => o === FilterBarOrientation.Vertical || o === FilterBarOrientation.Horizontal;\nconst FilterBarSettings = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const isCrossFiltersEnabled = useSelector(({ dashboardInfo }) => dashboardInfo.crossFiltersEnabled);\n  const filterBarOrientation = useSelector(({ dashboardInfo }) => dashboardInfo.filterBarOrientation);\n  const [selectedFilterBarOrientation, setSelectedFilterBarOrientation] = useState(filterBarOrientation);\n  const [crossFiltersEnabled, setCrossFiltersEnabled] = useState(isCrossFiltersEnabled);\n  const canEdit = useSelector(({ dashboardInfo }) => dashboardInfo.dash_edit_perm);\n  const filters = useFilters();\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const dashboardId = useSelector(({ dashboardInfo }) => dashboardInfo.id);\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal();\n  const { openFilterConfigModal, FilterConfigModalComponent } = useFilterConfigModal({\n    createNewOnOpen: filterValues.length === 0,\n    dashboardId\n  });\n  const updateCrossFiltersSetting = useCallback(async (isEnabled) => {\n    if (!isEnabled) {\n      dispatch(clearDataMaskState());\n    }\n    await dispatch(saveCrossFiltersSetting(isEnabled));\n  }, [dispatch]);\n  const toggleCrossFiltering = useCallback(() => {\n    setCrossFiltersEnabled(!crossFiltersEnabled);\n    updateCrossFiltersSetting(!crossFiltersEnabled);\n  }, [crossFiltersEnabled, updateCrossFiltersSetting]);\n  const toggleFilterBarOrientation = useCallback(async (orientation) => {\n    if (orientation === filterBarOrientation) {\n      return;\n    }\n    // set displayed selection in local state for immediate visual response after clicking\n    setSelectedFilterBarOrientation(orientation);\n    try {\n      // save selection in Redux and backend\n      await dispatch(saveFilterBarOrientation(orientation));\n    }\n    catch {\n      // revert local state in case of error when saving\n      setSelectedFilterBarOrientation(filterBarOrientation);\n    }\n  }, [dispatch, filterBarOrientation]);\n  const handleClick = useCallback((selection) => {\n    const selectedKey = selection.key;\n    if (selectedKey === CROSS_FILTERS_MENU_KEY) {\n      toggleCrossFiltering();\n    } else\n    if (isOrientation(selectedKey)) {\n      toggleFilterBarOrientation(selectedKey);\n    } else\n    if (selectedKey === CROSS_FILTERS_SCOPING_MENU_KEY) {\n      openScopingModal();\n    } else\n    if (selectedKey === ADD_EDIT_FILTERS_MENU_KEY) {\n      openFilterConfigModal();\n    }\n  }, [\n  openScopingModal,\n  toggleCrossFiltering,\n  toggleFilterBarOrientation,\n  openFilterConfigModal]\n  );\n  const crossFiltersMenuItem = useMemo(() => _jsxs(StyledMenuLabel, { children: [\n    _jsx(StyledCheckbox, { className: \"enable-cross-filters\", checked: crossFiltersEnabled, onChange: (checked) => setCrossFiltersEnabled(checked || false) }), ' ',\n    _jsx(\"span\", { className: \"enable-cross-filters-text\", children:\n      t('Enable cross-filtering') }\n    )] }\n  ), [crossFiltersEnabled]);\n  const menuItems = useMemo(() => {\n    const items = [];\n    if (canEdit) {\n      items.push({\n        key: ADD_EDIT_FILTERS_MENU_KEY,\n        label: _jsx(FilterConfigurationLink, { children:\n          t('Add or edit filters') }\n        )\n      });\n      if (canEdit) {\n        items.push({ type: 'divider' });\n      }\n    }\n    if (canEdit) {\n      items.push({\n        key: CROSS_FILTERS_MENU_KEY,\n        label: crossFiltersMenuItem\n      });\n      items.push({\n        key: CROSS_FILTERS_SCOPING_MENU_KEY,\n        label: t('Cross-filtering scoping')\n      });\n      items.push({ type: 'divider' });\n    }\n    if (canEdit) {\n      items.push({\n        key: 'placement',\n        label: t('Orientation of filter bar'),\n        children: [\n        {\n          key: FilterBarOrientation.Vertical,\n          label: _jsxs(Space, { children: [\n            t('Vertical (Left)'),\n            selectedFilterBarOrientation ===\n            FilterBarOrientation.Vertical && _jsx(Icons.CheckOutlined, { iconColor: theme.colors.primary.base, css: css`\n                      vertical-align: -${theme.gridUnit * 0.03125}em;\n                    `, iconSize: \"m\" })] }\n          )\n        },\n        {\n          key: FilterBarOrientation.Horizontal,\n          label: _jsxs(Space, { children: [\n            t('Horizontal (Top)'),\n            selectedFilterBarOrientation ===\n            FilterBarOrientation.Horizontal && _jsx(Icons.CheckOutlined, { iconSize: \"m\", css: css`\n                      vertical-align: middle;\n                    ` })] }\n          )\n        }],\n\n        ...{ 'data-test': 'dropdown-selectable-icon-submenu' }\n      });\n    }\n    return items;\n  }, [\n  selectedFilterBarOrientation,\n  canEdit,\n  crossFiltersMenuItem,\n  dashboardId,\n  filterValues]\n  );\n  if (!menuItems.length) {\n    return null;\n  }\n  return _jsxs(_Fragment, { children: [\n    _jsx(Dropdown, { menu: {\n        onClick: handleClick,\n        items: menuItems,\n        selectedKeys: [selectedFilterBarOrientation]\n      }, trigger: ['click'], children:\n      _jsx(Button, { type: \"link\", css: css`\n            padding: 0;\n          `, children:\n        _jsx(Icons.SettingOutlined, { iconSize: \"xl\", name: \"gear\", \"data-test\": \"filterbar-orientation-icon\" }) }\n      ) }\n    ),\n    scopingModal,\n    FilterConfigModalComponent] }\n  );\n};__signature__(FilterBarSettings, \"useTheme{theme}\\nuseDispatch{dispatch}\\nuseSelector{isCrossFiltersEnabled}\\nuseSelector{filterBarOrientation}\\nuseState{[selectedFilterBarOrientation, setSelectedFilterBarOrientation](filterBarOrientation)}\\nuseState{[crossFiltersEnabled, setCrossFiltersEnabled](isCrossFiltersEnabled)}\\nuseSelector{canEdit}\\nuseFilters{filters}\\nuseMemo{filterValues}\\nuseSelector{dashboardId}\\nuseCrossFiltersScopingModal{[openScopingModal, scopingModal]}\\nuseFilterConfigModal{{ openFilterConfigModal, FilterConfigModalComponent }}\\nuseCallback{updateCrossFiltersSetting}\\nuseCallback{toggleCrossFiltering}\\nuseCallback{toggleFilterBarOrientation}\\nuseCallback{handleClick}\\nuseMemo{crossFiltersMenuItem}\\nuseMemo{menuItems}\", () => [useTheme, useDispatch, useSelector, useSelector, useSelector, useFilters, useSelector, useCrossFiltersScopingModal, useFilterConfigModal]);const _default =\nFilterBarSettings;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledMenuLabel, \"StyledMenuLabel\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");reactHotLoader.register(StyledCheckbox, \"StyledCheckbox\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");reactHotLoader.register(CROSS_FILTERS_MENU_KEY, \"CROSS_FILTERS_MENU_KEY\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");reactHotLoader.register(CROSS_FILTERS_SCOPING_MENU_KEY, \"CROSS_FILTERS_SCOPING_MENU_KEY\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");reactHotLoader.register(ADD_EDIT_FILTERS_MENU_KEY, \"ADD_EDIT_FILTERS_MENU_KEY\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");reactHotLoader.register(isOrientation, \"isOrientation\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");reactHotLoader.register(FilterBarSettings, \"FilterBarSettings\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useMemo","useState","useDispatch","useSelector","styled","t","useTheme","css","FilterBarOrientation","saveFilterBarOrientation","saveCrossFiltersSetting","Icons","Checkbox","Dropdown","Button","Space","clearDataMaskState","useFilters","useFilterConfigModal","useCrossFiltersScopingModal","FilterConfigurationLink","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StyledMenuLabel","span","theme","gridUnit","StyledCheckbox","CROSS_FILTERS_MENU_KEY","CROSS_FILTERS_SCOPING_MENU_KEY","ADD_EDIT_FILTERS_MENU_KEY","isOrientation","o","Vertical","Horizontal","FilterBarSettings","dispatch","isCrossFiltersEnabled","dashboardInfo","crossFiltersEnabled","filterBarOrientation","selectedFilterBarOrientation","setSelectedFilterBarOrientation","setCrossFiltersEnabled","canEdit","dash_edit_perm","filters","filterValues","Object","values","dashboardId","id","openScopingModal","scopingModal","openFilterConfigModal","FilterConfigModalComponent","createNewOnOpen","length","updateCrossFiltersSetting","isEnabled","toggleCrossFiltering","toggleFilterBarOrientation","orientation","handleClick","selection","selectedKey","key","crossFiltersMenuItem","children","className","checked","onChange","menuItems","items","push","label","type","CheckOutlined","iconColor","colors","primary","base","iconSize","menu","onClick","selectedKeys","trigger","SettingOutlined","name","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterBarSettings/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { styled, t, useTheme, css } from '@superset-ui/core';\nimport { MenuProps } from 'src/components/Menu';\nimport { FilterBarOrientation, RootState } from 'src/dashboard/types';\nimport {\n  saveFilterBarOrientation,\n  saveCrossFiltersSetting,\n} from 'src/dashboard/actions/dashboardInfo';\nimport { Icons } from 'src/components/Icons';\nimport Checkbox from 'src/components/Checkbox';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { Button } from 'src/components';\nimport { Space } from 'src/components/Space';\nimport { clearDataMaskState } from 'src/dataMask/actions';\nimport { useFilters } from 'src/dashboard/components/nativeFilters/FilterBar/state';\nimport { useFilterConfigModal } from 'src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/useFilterConfigModal';\nimport { useCrossFiltersScopingModal } from '../CrossFilters/ScopingModal/useCrossFiltersScopingModal';\nimport FilterConfigurationLink from '../FilterConfigurationLink';\n\ntype SelectedKey = FilterBarOrientation | string | number;\n\nconst StyledMenuLabel = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .enable-cross-filters-text {\n    padding-left: ${({ theme }) => `${theme.gridUnit * 2}px`};\n  }\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  ${({ theme }) => `\n  &,\n  svg {\n    display: inline-block;\n    width: ${theme.gridUnit * 4}px;\n    height: ${theme.gridUnit * 4}px;\n  }\n`}\n`;\n\nconst CROSS_FILTERS_MENU_KEY = 'cross-filters-menu-key';\nconst CROSS_FILTERS_SCOPING_MENU_KEY = 'cross-filters-scoping-menu-key';\nconst ADD_EDIT_FILTERS_MENU_KEY = 'add-edit-filters-menu-key';\n\nconst isOrientation = (o: SelectedKey): o is FilterBarOrientation =>\n  o === FilterBarOrientation.Vertical || o === FilterBarOrientation.Horizontal;\n\nconst FilterBarSettings = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const isCrossFiltersEnabled = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.crossFiltersEnabled,\n  );\n  const filterBarOrientation = useSelector<RootState, FilterBarOrientation>(\n    ({ dashboardInfo }) => dashboardInfo.filterBarOrientation,\n  );\n  const [selectedFilterBarOrientation, setSelectedFilterBarOrientation] =\n    useState(filterBarOrientation);\n\n  const [crossFiltersEnabled, setCrossFiltersEnabled] = useState<boolean>(\n    isCrossFiltersEnabled,\n  );\n  const canEdit = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n  );\n  const filters = useFilters();\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const dashboardId = useSelector<RootState, number>(\n    ({ dashboardInfo }) => dashboardInfo.id,\n  );\n\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal();\n\n  const { openFilterConfigModal, FilterConfigModalComponent } =\n    useFilterConfigModal({\n      createNewOnOpen: filterValues.length === 0,\n      dashboardId,\n    });\n\n  const updateCrossFiltersSetting = useCallback(\n    async isEnabled => {\n      if (!isEnabled) {\n        dispatch(clearDataMaskState());\n      }\n      await dispatch(saveCrossFiltersSetting(isEnabled));\n    },\n    [dispatch],\n  );\n\n  const toggleCrossFiltering = useCallback(() => {\n    setCrossFiltersEnabled(!crossFiltersEnabled);\n    updateCrossFiltersSetting(!crossFiltersEnabled);\n  }, [crossFiltersEnabled, updateCrossFiltersSetting]);\n\n  const toggleFilterBarOrientation = useCallback(\n    async (orientation: FilterBarOrientation) => {\n      if (orientation === filterBarOrientation) {\n        return;\n      }\n      // set displayed selection in local state for immediate visual response after clicking\n      setSelectedFilterBarOrientation(orientation);\n      try {\n        // save selection in Redux and backend\n        await dispatch(saveFilterBarOrientation(orientation));\n      } catch {\n        // revert local state in case of error when saving\n        setSelectedFilterBarOrientation(filterBarOrientation);\n      }\n    },\n    [dispatch, filterBarOrientation],\n  );\n\n  const handleClick = useCallback(\n    (\n      selection: Parameters<\n        Required<Pick<MenuProps, 'onSelect'>>['onSelect']\n      >[0],\n    ) => {\n      const selectedKey: SelectedKey = selection.key;\n      if (selectedKey === CROSS_FILTERS_MENU_KEY) {\n        toggleCrossFiltering();\n      } else if (isOrientation(selectedKey)) {\n        toggleFilterBarOrientation(selectedKey);\n      } else if (selectedKey === CROSS_FILTERS_SCOPING_MENU_KEY) {\n        openScopingModal();\n      } else if (selectedKey === ADD_EDIT_FILTERS_MENU_KEY) {\n        openFilterConfigModal();\n      }\n    },\n    [\n      openScopingModal,\n      toggleCrossFiltering,\n      toggleFilterBarOrientation,\n      openFilterConfigModal,\n    ],\n  );\n\n  const crossFiltersMenuItem = useMemo(\n    () => (\n      <StyledMenuLabel>\n        <StyledCheckbox\n          className=\"enable-cross-filters\"\n          checked={crossFiltersEnabled}\n          onChange={checked => setCrossFiltersEnabled(checked || false)}\n        />{' '}\n        <span className=\"enable-cross-filters-text\">\n          {t('Enable cross-filtering')}\n        </span>\n      </StyledMenuLabel>\n    ),\n    [crossFiltersEnabled],\n  );\n\n  const menuItems = useMemo(() => {\n    const items: MenuProps['items'] = [];\n\n    if (canEdit) {\n      items.push({\n        key: ADD_EDIT_FILTERS_MENU_KEY,\n        label: (\n          <FilterConfigurationLink>\n            {t('Add or edit filters')}\n          </FilterConfigurationLink>\n        ),\n      });\n      if (canEdit) {\n        items.push({ type: 'divider' });\n      }\n    }\n    if (canEdit) {\n      items.push({\n        key: CROSS_FILTERS_MENU_KEY,\n        label: crossFiltersMenuItem,\n      });\n      items.push({\n        key: CROSS_FILTERS_SCOPING_MENU_KEY,\n        label: t('Cross-filtering scoping'),\n      });\n      items.push({ type: 'divider' });\n    }\n    if (canEdit) {\n      items.push({\n        key: 'placement',\n        label: t('Orientation of filter bar'),\n        children: [\n          {\n            key: FilterBarOrientation.Vertical,\n            label: (\n              <Space>\n                {t('Vertical (Left)')}\n                {selectedFilterBarOrientation ===\n                  FilterBarOrientation.Vertical && (\n                  <Icons.CheckOutlined\n                    iconColor={theme.colors.primary.base}\n                    css={css`\n                      vertical-align: -${theme.gridUnit * 0.03125}em;\n                    `}\n                    iconSize=\"m\"\n                  />\n                )}\n              </Space>\n            ),\n          },\n          {\n            key: FilterBarOrientation.Horizontal,\n            label: (\n              <Space>\n                {t('Horizontal (Top)')}\n                {selectedFilterBarOrientation ===\n                  FilterBarOrientation.Horizontal && (\n                  <Icons.CheckOutlined\n                    iconSize=\"m\"\n                    css={css`\n                      vertical-align: middle;\n                    `}\n                  />\n                )}\n              </Space>\n            ),\n          },\n        ],\n        ...{ 'data-test': 'dropdown-selectable-icon-submenu' },\n      });\n    }\n    return items;\n  }, [\n    selectedFilterBarOrientation,\n    canEdit,\n    crossFiltersMenuItem,\n    dashboardId,\n    filterValues,\n  ]);\n\n  if (!menuItems.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <Dropdown\n        menu={{\n          onClick: handleClick,\n          items: menuItems,\n          selectedKeys: [selectedFilterBarOrientation],\n        }}\n        trigger={['click']}\n      >\n        <Button\n          type=\"link\"\n          css={css`\n            padding: 0;\n          `}\n        >\n          <Icons.SettingOutlined\n            iconSize=\"xl\"\n            name=\"gear\"\n            data-test=\"filterbar-orientation-icon\"\n          />\n        </Button>\n      </Dropdown>\n      {scopingModal}\n      {FilterConfigModalComponent}\n    </>\n  );\n};\n\nexport default FilterBarSettings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}