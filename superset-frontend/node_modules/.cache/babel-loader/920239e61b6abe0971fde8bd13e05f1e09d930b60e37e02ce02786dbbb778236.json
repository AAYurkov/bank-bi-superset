{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { CategoricalColorNamespace } from '@superset-ui/core';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport from './utils/fitViewport';\nimport { DeckGLContainerStyledWrapper } from './DeckGLContainer';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst { getScale } = CategoricalColorNamespace;\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const appliedScheme = fd.color_scheme;\n  const colorFn = getScale(appliedScheme);\n  const categories = {};\n  data.forEach((d) => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else\n      {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n  return categories;\n}\nconst CategoricalDeckGLContainer = (props) => {\n  const containerRef = useRef(null);\n  const getAdjustedViewport = useCallback(() => {\n    let viewport = { ...props.viewport };\n    if (props.formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width: props.width,\n        height: props.height,\n        points: props.getPoints(props.payload.data.features || [])\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n    return viewport;\n  }, [props]);\n  const [categories, setCategories] = useState(getCategories(props.formData, props.payload.data.features || []));\n  const [stateFormData, setStateFormData] = useState(props.payload.form_data);\n  const [viewport, setViewport] = useState(getAdjustedViewport());\n  useEffect(() => {\n    if (props.payload.form_data !== stateFormData) {\n      const features = props.payload.data.features || [];\n      const categories = getCategories(props.formData, features);\n      setViewport(getAdjustedViewport());\n      setStateFormData(props.payload.form_data);\n      setCategories(categories);\n    }\n  }, [getAdjustedViewport, props, stateFormData]);\n  const setTooltip = useCallback((tooltip) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n  const addColor = useCallback((data, fd) => {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const appliedScheme = fd.color_scheme;\n    const colorFn = getScale(appliedScheme);\n    return data.map((d) => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n        return { ...d, color };\n      }\n      return d;\n    });\n  }, []);\n  const getLayers = useCallback(() => {\n    const { getLayer, payload, formData: fd, onAddFilter } = props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n    // Add colors from categories or fixed color\n    features = addColor(features, fd);\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n    // Show only categories selected in the legend\n    if (fd.dimension) {\n      features = features.filter((d) => {var _categories$d$cat_col;return (_categories$d$cat_col = categories[d.cat_color]) == null ? void 0 : _categories$d$cat_col.enabled;});\n    }\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features }\n    };\n    return [\n    getLayer(fd, filteredPayload, onAddFilter, setTooltip, props.datasource)];\n\n  }, [addColor, categories, props, setTooltip]);\n  const toggleCategory = useCallback((category) => {\n    const categoryState = categories[category];\n    const categoriesExtended = {\n      ...categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled\n      }\n    };\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categoriesExtended).every((v) => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categoriesExtended).forEach((v) => {\n        v.enabled = true;\n      });\n    }\n    setCategories(categoriesExtended);\n  }, [categories]);\n  const showSingleCategory = useCallback((category) => {\n    const modifiedCategories = { ...categories };\n    Object.values(modifiedCategories).forEach((v) => {\n      v.enabled = false;\n    });\n    modifiedCategories[category].enabled = true;\n    setCategories(modifiedCategories);\n  }, [categories]);\n  return _jsxs(\"div\", { style: { position: 'relative' }, children: [\n    _jsx(DeckGLContainerStyledWrapper, { ref: containerRef, viewport: viewport, layers: getLayers(), setControlValue: props.setControlValue, mapStyle: props.formData.mapbox_style, mapboxApiAccessToken: props.mapboxApiKey, width: props.width, height: props.height }),\n    _jsx(Legend, { forceCategorical: true, categories: categories, format: props.formData.legend_format, position: props.formData.legend_position, showSingleCategory: showSingleCategory, toggleCategory: toggleCategory })] }\n  );\n};__signature__(CategoricalDeckGLContainer, \"useRef{containerRef}\\nuseCallback{getAdjustedViewport}\\nuseState{[categories, setCategories](getCategories(props.formData, props.payload.data.features || []))}\\nuseState{[stateFormData, setStateFormData](props.payload.form_data)}\\nuseState{[viewport, setViewport](getAdjustedViewport())}\\nuseEffect{}\\nuseCallback{setTooltip}\\nuseCallback{addColor}\\nuseCallback{getLayers}\\nuseCallback{toggleCategory}\\nuseCallback{showSingleCategory}\");const _default = /*#__PURE__*/\nmemo(CategoricalDeckGLContainer);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getScale, \"getScale\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");reactHotLoader.register(getCategories, \"getCategories\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");reactHotLoader.register(CategoricalDeckGLContainer, \"CategoricalDeckGLContainer\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["memo","useCallback","useEffect","useRef","useState","CategoricalColorNamespace","Legend","hexToRGB","sandboxedEval","fitViewport","DeckGLContainerStyledWrapper","jsx","_jsx","jsxs","_jsxs","getScale","getCategories","fd","data","c","color_picker","r","g","b","a","fixedColor","appliedScheme","color_scheme","colorFn","categories","forEach","d","cat_color","hasOwnProperty","color","dimension","sliceId","enabled","CategoricalDeckGLContainer","props","containerRef","getAdjustedViewport","viewport","formData","autozoom","width","height","points","getPoints","payload","features","zoom","setCategories","stateFormData","setStateFormData","form_data","setViewport","setTooltip","tooltip","current","addColor","map","getLayers","getLayer","onAddFilter","js_data_mutator","jsFnMutator","filter","_categories$d$cat_col","filteredPayload","datasource","toggleCategory","category","categoryState","categoriesExtended","Object","values","every","v","showSingleCategory","modifiedCategories","style","position","children","ref","layers","setControlValue","mapStyle","mapbox_style","mapboxApiAccessToken","mapboxApiKey","forceCategorical","format","legend_format","legend_position","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  CategoricalColorNamespace,\n  Datasource,\n  HandlerFunction,\n  JsonObject,\n  JsonValue,\n  QueryFormData,\n} from '@superset-ui/core';\nimport type { Layer } from '@deck.gl/core';\nimport Legend from './components/Legend';\nimport { hexToRGB } from './utils/colors';\nimport sandboxedEval from './utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport fitViewport, { Viewport } from './utils/fitViewport';\nimport {\n  DeckGLContainerHandle,\n  DeckGLContainerStyledWrapper,\n} from './DeckGLContainer';\nimport { Point } from './types';\nimport { getLayerType } from './factory';\nimport { TooltipProps } from './components/Tooltip';\n\nconst { getScale } = CategoricalColorNamespace;\n\nfunction getCategories(fd: QueryFormData, data: JsonObject[]) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const appliedScheme = fd.color_scheme;\n  const colorFn = getScale(appliedScheme);\n  const categories: Record<any, { color: any; enabled: boolean }> = {};\n  data.forEach(d => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n\n  return categories;\n}\n\nexport type CategoricalDeckGLContainerProps = {\n  datasource: Datasource;\n  formData: QueryFormData;\n  mapboxApiKey: string;\n  getPoints: (data: JsonObject[]) => Point[];\n  height: number;\n  width: number;\n  viewport: Viewport;\n  getLayer: getLayerType<unknown>;\n  payload: JsonObject;\n  onAddFilter?: HandlerFunction;\n  setControlValue: (control: string, value: JsonValue) => void;\n};\n\nconst CategoricalDeckGLContainer = (props: CategoricalDeckGLContainerProps) => {\n  const containerRef = useRef<DeckGLContainerHandle>(null);\n\n  const getAdjustedViewport = useCallback(() => {\n    let viewport = { ...props.viewport };\n    if (props.formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width: props.width,\n        height: props.height,\n        points: props.getPoints(props.payload.data.features || []),\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n    return viewport;\n  }, [props]);\n\n  const [categories, setCategories] = useState<JsonObject>(\n    getCategories(props.formData, props.payload.data.features || []),\n  );\n  const [stateFormData, setStateFormData] = useState<JsonObject>(\n    props.payload.form_data,\n  );\n  const [viewport, setViewport] = useState(getAdjustedViewport());\n\n  useEffect(() => {\n    if (props.payload.form_data !== stateFormData) {\n      const features = props.payload.data.features || [];\n      const categories = getCategories(props.formData, features);\n\n      setViewport(getAdjustedViewport());\n      setStateFormData(props.payload.form_data);\n      setCategories(categories);\n    }\n  }, [getAdjustedViewport, props, stateFormData]);\n\n  const setTooltip = useCallback((tooltip: TooltipProps['tooltip']) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n\n  const addColor = useCallback((data: JsonObject[], fd: QueryFormData) => {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const appliedScheme = fd.color_scheme;\n    const colorFn = getScale(appliedScheme);\n\n    return data.map(d => {\n      let color;\n      if (fd.dimension) {\n        color = hexToRGB(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n\n        return { ...d, color };\n      }\n\n      return d;\n    });\n  }, []);\n\n  const getLayers = useCallback(() => {\n    const { getLayer, payload, formData: fd, onAddFilter } = props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n\n    // Add colors from categories or fixed color\n    features = addColor(features, fd);\n\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n\n    // Show only categories selected in the legend\n    if (fd.dimension) {\n      features = features.filter(d => categories[d.cat_color]?.enabled);\n    }\n\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features },\n    };\n\n    return [\n      getLayer(\n        fd,\n        filteredPayload,\n        onAddFilter,\n        setTooltip,\n        props.datasource,\n      ) as Layer,\n    ];\n  }, [addColor, categories, props, setTooltip]);\n\n  const toggleCategory = useCallback(\n    (category: string) => {\n      const categoryState = categories[category];\n      const categoriesExtended = {\n        ...categories,\n        [category]: {\n          ...categoryState,\n          enabled: !categoryState.enabled,\n        },\n      };\n\n      // if all categories are disabled, enable all -- similar to nvd3\n      if (Object.values(categoriesExtended).every(v => !v.enabled)) {\n        /* eslint-disable no-param-reassign */\n        Object.values(categoriesExtended).forEach(v => {\n          v.enabled = true;\n        });\n      }\n      setCategories(categoriesExtended);\n    },\n    [categories],\n  );\n\n  const showSingleCategory = useCallback(\n    (category: string) => {\n      const modifiedCategories = { ...categories };\n      Object.values(modifiedCategories).forEach(v => {\n        v.enabled = false;\n      });\n      modifiedCategories[category].enabled = true;\n      setCategories(modifiedCategories);\n    },\n    [categories],\n  );\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <DeckGLContainerStyledWrapper\n        ref={containerRef}\n        viewport={viewport}\n        layers={getLayers()}\n        setControlValue={props.setControlValue}\n        mapStyle={props.formData.mapbox_style}\n        mapboxApiAccessToken={props.mapboxApiKey}\n        width={props.width}\n        height={props.height}\n      />\n      <Legend\n        forceCategorical\n        categories={categories}\n        format={props.formData.legend_format}\n        position={props.formData.legend_position}\n        showSingleCategory={showSingleCategory}\n        toggleCategory={toggleCategory}\n      />\n    </div>\n  );\n};\n\nexport default memo(CategoricalDeckGLContainer);\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkBA;AAEA,SAASA,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SACEC,yBAAyB,QAMpB,mBAAmB;AAE1B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C;AACA,OAAOC,WAAyB,MAAM,qBAAqB;AAC3D,SAEEC,4BAA4B,QACvB,mBAAmB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAK3B,MAAM,EAAEC,QAAQ,EAAE,GAAGV,yBAAyB;AAE9C,SAASW,aAAaA,CAACC,EAAiB,EAAEC,IAAkB;EAC1D,MAAMC,CAAC,GAAGF,EAAE,CAACG,YAAY,IAAI,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAE;EACvD,MAAMC,UAAU,GAAG,CAACN,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACI,CAAC,EAAE,GAAG,GAAGJ,CAAC,CAACK,CAAC,CAAC;EAC7C,MAAME,aAAa,GAAGT,EAAE,CAACU,YAAY;EACrC,MAAMC,OAAO,GAAGb,QAAQ,CAACW,aAAa,CAAC;EACvC,MAAMG,UAAU,GAAkD,EAAE;EACpEX,IAAI,CAACY,OAAO,CAAC,CAAAC,CAAC,KAAG;IACf,IAAIA,CAAC,CAACC,SAAS,IAAI,IAAI,IAAI,CAACH,UAAU,CAACI,cAAc,CAACF,CAAC,CAACC,SAAS,CAAC,EAAE;MAClE,IAAIE,KAAK;MACT,IAAIjB,EAAE,CAACkB,SAAS,EAAE;QAChBD,KAAK,GAAG3B,QAAQ,CAACqB,OAAO,CAACG,CAAC,CAACC,SAAS,EAAEf,EAAE,CAACmB,OAAO,CAAC,EAAEjB,CAAC,CAACK,CAAC,GAAG,GAAG,CAAC;OAC9D;MAAM;QACLU,KAAK,GAAGT,UAAU;;MAEpBI,UAAU,CAACE,CAAC,CAACC,SAAS,CAAC,GAAG,EAAEE,KAAK,EAAEG,OAAO,EAAE,IAAI,EAAE;;EAEtD,CAAC,CAAC;EAEF,OAAOR,UAAU;AACnB;AAgBA,MAAMS,0BAA0B,GAAGA,CAACC,KAAsC,KAAI;EAC5E,MAAMC,YAAY,GAAGrC,MAAM,CAAwB,IAAI,CAAC;EAExD,MAAMsC,mBAAmB,GAAGxC,WAAW,CAAC,MAAK;IAC3C,IAAIyC,QAAQ,GAAG,EAAE,GAAGH,KAAK,CAACG,QAAQ,EAAE;IACpC,IAAIH,KAAK,CAACI,QAAQ,CAACC,QAAQ,EAAE;MAC3BF,QAAQ,GAAGjC,WAAW,CAACiC,QAAQ,EAAE;QAC/BG,KAAK,EAAEN,KAAK,CAACM,KAAK;QAClBC,MAAM,EAAEP,KAAK,CAACO,MAAM;QACpBC,MAAM,EAAER,KAAK,CAACS,SAAS,CAACT,KAAK,CAACU,OAAO,CAAC/B,IAAI,CAACgC,QAAQ,IAAI,EAAE;OAC1D,CAAC;;IAEJ,IAAIR,QAAQ,CAACS,IAAI,GAAG,CAAC,EAAE;MACrBT,QAAQ,CAACS,IAAI,GAAG,CAAC;;IAEnB,OAAOT,QAAQ;EACjB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAM,CAACV,UAAU,EAAEuB,aAAa,CAAC,GAAGhD,QAAQ,CAC1CY,aAAa,CAACuB,KAAK,CAACI,QAAQ,EAAEJ,KAAK,CAACU,OAAO,CAAC/B,IAAI,CAACgC,QAAQ,IAAI,EAAE,CAAC,CACjE;EACD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGlD,QAAQ,CAChDmC,KAAK,CAACU,OAAO,CAACM,SAAS,CACxB;EACD,MAAM,CAACb,QAAQ,EAAEc,WAAW,CAAC,GAAGpD,QAAQ,CAACqC,mBAAmB,EAAE,CAAC;EAE/DvC,SAAS,CAAC,MAAK;IACb,IAAIqC,KAAK,CAACU,OAAO,CAACM,SAAS,KAAKF,aAAa,EAAE;MAC7C,MAAMH,QAAQ,GAAGX,KAAK,CAACU,OAAO,CAAC/B,IAAI,CAACgC,QAAQ,IAAI,EAAE;MAClD,MAAMrB,UAAU,GAAGb,aAAa,CAACuB,KAAK,CAACI,QAAQ,EAAEO,QAAQ,CAAC;MAE1DM,WAAW,CAACf,mBAAmB,EAAE,CAAC;MAClCa,gBAAgB,CAACf,KAAK,CAACU,OAAO,CAACM,SAAS,CAAC;MACzCH,aAAa,CAACvB,UAAU,CAAC;;EAE7B,CAAC,EAAE,CAACY,mBAAmB,EAAEF,KAAK,EAAEc,aAAa,CAAC,CAAC;EAE/C,MAAMI,UAAU,GAAGxD,WAAW,CAAC,CAACyD,OAAgC,KAAI;IAClE,MAAM,EAAEC,OAAO,EAAE,GAAGnB,YAAY;IAChC,IAAImB,OAAO,EAAE;MACXA,OAAO,CAACF,UAAU,CAACC,OAAO,CAAC;;EAE/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,QAAQ,GAAG3D,WAAW,CAAC,CAACiB,IAAkB,EAAED,EAAiB,KAAI;IACrE,MAAME,CAAC,GAAGF,EAAE,CAACG,YAAY,IAAI,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAE;IACvD,MAAME,aAAa,GAAGT,EAAE,CAACU,YAAY;IACrC,MAAMC,OAAO,GAAGb,QAAQ,CAACW,aAAa,CAAC;IAEvC,OAAOR,IAAI,CAAC2C,GAAG,CAAC,CAAA9B,CAAC,KAAG;MAClB,IAAIG,KAAK;MACT,IAAIjB,EAAE,CAACkB,SAAS,EAAE;QAChBD,KAAK,GAAG3B,QAAQ,CAACqB,OAAO,CAACG,CAAC,CAACC,SAAS,EAAEf,EAAE,CAACmB,OAAO,CAAC,EAAEjB,CAAC,CAACK,CAAC,GAAG,GAAG,CAAC;QAE7D,OAAO,EAAE,GAAGO,CAAC,EAAEG,KAAK,EAAE;;MAGxB,OAAOH,CAAC;IACV,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM+B,SAAS,GAAG7D,WAAW,CAAC,MAAK;IACjC,MAAM,EAAE8D,QAAQ,EAAEd,OAAO,EAAEN,QAAQ,EAAE1B,EAAE,EAAE+C,WAAW,EAAE,GAAGzB,KAAK;IAC9D,IAAIW,QAAQ,GAAGD,OAAO,CAAC/B,IAAI,CAACgC,QAAQ,GAAG,CAAC,GAAGD,OAAO,CAAC/B,IAAI,CAACgC,QAAQ,CAAC,GAAG,EAAE;IAEtE;IACAA,QAAQ,GAAGU,QAAQ,CAACV,QAAQ,EAAEjC,EAAE,CAAC;IAEjC;IACA,IAAIA,EAAE,CAACgD,eAAe,EAAE;MACtB,MAAMC,WAAW,GAAG1D,aAAa,CAACS,EAAE,CAACgD,eAAe,CAAC;MACrDf,QAAQ,GAAGgB,WAAW,CAAChB,QAAQ,CAAC;;IAGlC;IACA,IAAIjC,EAAE,CAACkB,SAAS,EAAE;MAChBe,QAAQ,GAAGA,QAAQ,CAACiB,MAAM,CAAC,CAAApC,CAAC,UAAAqC,qBAAA,SAAAA,qBAAA,GAAIvC,UAAU,CAACE,CAAC,CAACC,SAAS,CAAC,qBAAvBoC,qBAAA,CAAyB/B,OAAO,GAAC;;IAGnE,MAAMgC,eAAe,GAAG;MACtB,GAAGpB,OAAO;MACV/B,IAAI,EAAE,EAAE,GAAG+B,OAAO,CAAC/B,IAAI,EAAEgC,QAAQ;KAClC;IAED,OAAO;IACLa,QAAQ,CACN9C,EAAE,EACFoD,eAAe,EACfL,WAAW,EACXP,UAAU,EACVlB,KAAK,CAAC+B,UAAU,CACR,CACX;;EACH,CAAC,EAAE,CAACV,QAAQ,EAAE/B,UAAU,EAAEU,KAAK,EAAEkB,UAAU,CAAC,CAAC;EAE7C,MAAMc,cAAc,GAAGtE,WAAW,CAChC,CAACuE,QAAgB,KAAI;IACnB,MAAMC,aAAa,GAAG5C,UAAU,CAAC2C,QAAQ,CAAC;IAC1C,MAAME,kBAAkB,GAAG;MACzB,GAAG7C,UAAU;MACb,CAAC2C,QAAQ,GAAG;QACV,GAAGC,aAAa;QAChBpC,OAAO,EAAE,CAACoC,aAAa,CAACpC;;KAE3B;IAED;IACA,IAAIsC,MAAM,CAACC,MAAM,CAACF,kBAAkB,CAAC,CAACG,KAAK,CAAC,CAAAC,CAAC,KAAI,CAACA,CAAC,CAACzC,OAAO,CAAC,EAAE;MAC5D;MACAsC,MAAM,CAACC,MAAM,CAACF,kBAAkB,CAAC,CAAC5C,OAAO,CAAC,CAAAgD,CAAC,KAAG;QAC5CA,CAAC,CAACzC,OAAO,GAAG,IAAI;MAClB,CAAC,CAAC;;IAEJe,aAAa,CAACsB,kBAAkB,CAAC;EACnC,CAAC,EACD,CAAC7C,UAAU,CAAC,CACb;EAED,MAAMkD,kBAAkB,GAAG9E,WAAW,CACpC,CAACuE,QAAgB,KAAI;IACnB,MAAMQ,kBAAkB,GAAG,EAAE,GAAGnD,UAAU,EAAE;IAC5C8C,MAAM,CAACC,MAAM,CAACI,kBAAkB,CAAC,CAAClD,OAAO,CAAC,CAAAgD,CAAC,KAAG;MAC5CA,CAAC,CAACzC,OAAO,GAAG,KAAK;IACnB,CAAC,CAAC;IACF2C,kBAAkB,CAACR,QAAQ,CAAC,CAACnC,OAAO,GAAG,IAAI;IAC3Ce,aAAa,CAAC4B,kBAAkB,CAAC;EACnC,CAAC,EACD,CAACnD,UAAU,CAAC,CACb;EAED,OACEf,KAAA,UAAKmE,KAAK,EAAE,EAAEC,QAAQ,EAAE,UAAU,EAAG,EAAAC,QAAA;IACnCvE,IAAA,CAACF,4BAA4B,IAC3B0E,GAAG,EAAE5C,YAAa,EAClBE,QAAQ,EAAEA,QAAS,EACnB2C,MAAM,EAAEvB,SAAS,EAAG,EACpBwB,eAAe,EAAE/C,KAAK,CAAC+C,eAAgB,EACvCC,QAAQ,EAAEhD,KAAK,CAACI,QAAQ,CAAC6C,YAAa,EACtCC,oBAAoB,EAAElD,KAAK,CAACmD,YAAa,EACzC7C,KAAK,EAAEN,KAAK,CAACM,KAAM,EACnBC,MAAM,EAAEP,KAAK,CAACO,MAAO,GAEvB;IAAAlC,IAAA,CAACN,MAAM,IACLqF,gBAAgB,QAChB9D,UAAU,EAAEA,UAAW,EACvB+D,MAAM,EAAErD,KAAK,CAACI,QAAQ,CAACkD,aAAc,EACrCX,QAAQ,EAAE3C,KAAK,CAACI,QAAQ,CAACmD,eAAgB,EACzCf,kBAAkB,EAAEA,kBAAmB,EACvCR,cAAc,EAAEA,cAAe,GAEnC;EAAK,CAAC;AAEV,CAAC,CAACwB,aAAA,CAxJIzD,0BAA0B,8bAAA0D,QAAA;AA0JjBhG,IAAI,CAACsC,0BAA0B,CAAC,CAA/C,eAAA0D,QAAA,CAAgD,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA/LxCtF,QAAQ,kIAAAkF,cAAA,CAAAI,QAAA,CAEPrF,aAAa,uIAAAiF,cAAA,CAAAI,QAAA,CAmChB/D,0BAA0B,oJAAA2D,cAAA,CAAAI,QAAA,CAAAL,QAAA,yJAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}