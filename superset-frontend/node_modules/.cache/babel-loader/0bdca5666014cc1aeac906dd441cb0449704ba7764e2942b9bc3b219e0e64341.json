{"ast":null,"code":"import _pick from \"lodash/pick\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\n\nimport { EditableTabs } from 'src/components/Tabs';\nimport { connect } from 'react-redux';\nimport URI from 'urijs';\nimport { FeatureFlag, styled, t, isFeatureEnabled, css } from '@superset-ui/core';\nimport { Logger } from 'src/logger/LogUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport { EmptyState } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { locationContext } from 'src/pages/SqlLab/LocationContext';\nimport { navigateWithState } from 'src/utils/navigationUtils';\nimport { Icons } from 'src/components/Icons';\nimport SqlEditor from '../SqlEditor';\nimport SqlEditorTabHeader from '../SqlEditorTabHeader';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DEFAULT_PROPS = {\n  queryEditors: [],\n  offline: false,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null\n};\nconst StyledEditableTabs = styled(EditableTabs)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledTab = styled.span`\n  line-height: 24px;\n`;\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n// Get the user's OS\nconst userOS = detectOS();\nconst SQL_LAB_URL = '/sqllab';\nclass TabbedSqlEditors extends PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    onTabClicked = () => {var _this$props$queryEdit;\n      Logger.markTimeOrigin();\n      const noQueryEditors = ((_this$props$queryEdit = this.props.queryEditors) == null ? void 0 : _this$props$queryEdit.length) === 0;\n      if (noQueryEditors) {\n        this.newQueryEditor();\n      }\n    };this.removeQueryEditor = this.removeQueryEditor.bind(this);this.handleSelect = this.handleSelect.bind(this);this.handleEdit = this.handleEdit.bind(this);}componentDidMount() {var _path$match; // merge post form data with GET search params\n    // Hack: this data should be coming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const bootstrapData = getBootstrapData();const queryParameters = URI(window.location).search(true);const path = URI(window.location).path();const { id, name, sql, savedQueryId, datasourceKey, queryId, dbid, dbname, catalog, schema, autorun, new: isNewQuery, ...urlParams } = { ...this.context.requestedQuery, ...bootstrapData.requested_query, ...queryParameters };const permalink = (_path$match = path.match(/\\/p\\/\\w+/)) == null ? void 0 : _path$match[0].slice(3); // Popping a new tab based on the querystring\n    if (permalink || id || sql || savedQueryId || datasourceKey || queryId) {if (permalink) {this.props.actions.popPermalink(permalink);} else if (id) {this.props.actions.popStoredQuery(id);} else if (savedQueryId) {this.props.actions.popSavedQuery(savedQueryId);} else if (queryId) {this.props.actions.popQuery(queryId);} else if (datasourceKey) {this.props.actions.popDatasourceQuery(datasourceKey, sql);} else if (sql) {let databaseId = dbid;if (databaseId) {databaseId = parseInt(databaseId, 10);} else {const { databases } = this.props;const databaseName = dbname;if (databaseName) {Object.keys(databases).forEach((db) => {if (databases[db].database_name === databaseName) {databaseId = databases[db].id;}});}}const newQueryEditor = { name, dbId: databaseId, catalog, schema, autorun, sql };this.props.actions.addQueryEditor(newQueryEditor);}this.popNewTab(_pick(urlParams, Object.keys(queryParameters != null ? queryParameters : {})));} else if (isNewQuery || this.props.queryEditors.length === 0) {this.newQueryEditor();if (isNewQuery) {navigateWithState(SQL_LAB_URL, {}, { replace: true });}} else {const qe = this.activeQueryEditor();const latestQuery = this.props.queries[(qe == null ? void 0 : qe.latestQueryId) || ''];if (isFeatureEnabled(FeatureFlag.SqllabBackendPersistence) && latestQuery && latestQuery.resultsKey) {// when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(latestQuery, this.props.displayLimit);}}}popNewTab(urlParams) {// Clean the url in browser history\n    const updatedUrl = `${URI(SQL_LAB_URL).query(urlParams)}`;navigateWithState(updatedUrl, {}, { replace: true });}activeQueryEditor() {if (this.props.tabHistory.length === 0) {return this.props.queryEditors[0];}const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];return this.props.queryEditors.find((qe) => qe.id === qeid) || null;}newQueryEditor() {this.props.actions.addNewQueryEditor();}handleSelect(key) {const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];if (key !== qeid) {const queryEditor = this.props.queryEditors.find((qe) => qe.id === key);if (!queryEditor) {return;}this.props.actions.setActiveQueryEditor(queryEditor);}}handleEdit(key, action) {if (action === 'remove') {const qe = this.props.queryEditors.find((qe) => qe.id === key);if (qe) {this.removeQueryEditor(qe);}}if (action === 'add') {Logger.markTimeOrigin();this.newQueryEditor();}}removeQueryEditor(qe) {this.props.actions.removeQueryEditor(qe);}render() {var _this$props$queryEdit2, _this$props$queryEdit3;const noQueryEditors = ((_this$props$queryEdit2 = this.props.queryEditors) == null ? void 0 : _this$props$queryEdit2.length) === 0;const editors = (_this$props$queryEdit3 = this.props.queryEditors) == null ? void 0 : _this$props$queryEdit3.map((qe) => _jsx(EditableTabs.TabPane, { tab: _jsx(SqlEditorTabHeader, { queryEditor: qe }) // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n        , \"data-key\": qe.id, children: _jsx(SqlEditor, { queryEditor: qe, defaultQueryLimit: this.props.defaultQueryLimit, maxRow: this.props.maxRow, displayLimit: this.props.displayLimit, saveQueryWarning: this.props.saveQueryWarning, scheduleQueryWarning: this.props.scheduleQueryWarning }) }, qe.id));const emptyTab = _jsxs(StyledTab, { children: [_jsx(TabTitle, { children: t('Add a new tab') }),\n        _jsx(Tooltip, { id: \"add-tab\", placement: \"bottom\", title: userOS === 'Windows' ?\n          t('New tab (Ctrl + q)') :\n          t('New tab (Ctrl + t)'), children:\n          _jsx(Icons.PlusCircleOutlined, { iconSize: \"s\", css: css`\n              vertical-align: middle;\n            `, \"data-test\": \"add-tab-icon\" }) }\n        )] }\n    );\n    const emptyTabState = _jsx(EditableTabs.TabPane, { \"data-key\": 0, tab: emptyTab, closable: false, children:\n      _jsx(EmptyState, { image: \"empty_sql_chart.svg\", size: \"large\", description: t('Add a new tab to create SQL Query') }) }, 0\n    );\n    return _jsxs(StyledEditableTabs, { activeKey: this.props.tabHistory[this.props.tabHistory.length - 1], id: \"a11y-query-editor-tabs\", className: \"SqlEditorTabs\", \"data-test\": \"sql-editor-tabs\", onChange: this.handleSelect, fullWidth: false, hideAdd: this.props.offline, onTabClick: this.onTabClicked, onEdit: this.handleEdit, type: noQueryEditors ? 'card' : 'editable-card', addIcon: _jsx(Tooltip, { id: \"add-tab\", placement: \"bottom\", title: userOS === 'Windows' ?\n        t('New tab (Ctrl + q)') :\n        t('New tab (Ctrl + t)'), children:\n        _jsx(Icons.PlusCircleOutlined, { iconSize: \"l\", css: css`\n                vertical-align: middle;\n              `, \"data-test\": \"add-tab-icon\" }) }\n      ), children: [\n      editors,\n      noQueryEditors && emptyTabState] }\n    );\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TabbedSqlEditors.contextType = locationContext;\nexport function mapStateToProps({ sqlLab, common }) {var _sqlLab$queryEditors, _sqlLab$offline, _common$conf$SQLLAB_S, _common$conf$SQLLAB_S2;\n  return {\n    databases: sqlLab.databases,\n    queryEditors: (_sqlLab$queryEditors = sqlLab.queryEditors) != null ? _sqlLab$queryEditors : DEFAULT_PROPS.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    defaultDbId: common.conf.SQLLAB_DEFAULT_DBID,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: (_sqlLab$offline = sqlLab.offline) != null ? _sqlLab$offline : DEFAULT_PROPS.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: (_common$conf$SQLLAB_S = common.conf.SQLLAB_SAVE_WARNING_MESSAGE) != null ? _common$conf$SQLLAB_S : DEFAULT_PROPS.saveQueryWarning,\n    scheduleQueryWarning: (_common$conf$SQLLAB_S2 = common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE) != null ? _common$conf$SQLLAB_S2 :\n    DEFAULT_PROPS.scheduleQueryWarning\n  };\n}\nconst mapDispatchToProps = {\n  ...Actions\n};\nfunction mergeProps(stateProps, dispatchProps) {\n  return {\n    ...stateProps,\n    actions: dispatchProps\n  };\n}const _default =\nconnect(mapStateToProps, mapDispatchToProps, mergeProps)(TabbedSqlEditors);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_PROPS, \"DEFAULT_PROPS\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(StyledEditableTabs, \"StyledEditableTabs\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(StyledTab, \"StyledTab\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(TabTitle, \"TabTitle\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(userOS, \"userOS\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(SQL_LAB_URL, \"SQL_LAB_URL\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(TabbedSqlEditors, \"TabbedSqlEditors\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(mergeProps, \"mergeProps\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","EditableTabs","connect","URI","FeatureFlag","styled","t","isFeatureEnabled","css","Logger","Tooltip","detectOS","Actions","EmptyState","getBootstrapData","locationContext","navigateWithState","Icons","SqlEditor","SqlEditorTabHeader","jsx","_jsx","jsxs","_jsxs","DEFAULT_PROPS","queryEditors","offline","saveQueryWarning","scheduleQueryWarning","StyledEditableTabs","StyledTab","span","TabTitle","theme","gridUnit","userOS","SQL_LAB_URL","TabbedSqlEditors","constructor","props","onTabClicked","_this$props$queryEdit","markTimeOrigin","noQueryEditors","length","newQueryEditor","removeQueryEditor","bind","handleSelect","handleEdit","componentDidMount","_path$match","bootstrapData","queryParameters","window","location","search","path","id","name","sql","savedQueryId","datasourceKey","queryId","dbid","dbname","catalog","schema","autorun","new","isNewQuery","urlParams","context","requestedQuery","requested_query","permalink","match","slice","actions","popPermalink","popStoredQuery","popSavedQuery","popQuery","popDatasourceQuery","databaseId","parseInt","databases","databaseName","Object","keys","forEach","db","database_name","dbId","addQueryEditor","popNewTab","_pick","replace","qe","activeQueryEditor","latestQuery","queries","latestQueryId","SqllabBackendPersistence","resultsKey","fetchQueryResults","displayLimit","updatedUrl","query","tabHistory","qeid","find","addNewQueryEditor","key","queryEditor","setActiveQueryEditor","action","render","_this$props$queryEdit2","_this$props$queryEdit3","editors","map","TabPane","tab","children","defaultQueryLimit","maxRow","emptyTab","placement","title","PlusCircleOutlined","iconSize","emptyTabState","closable","image","size","description","activeKey","className","onChange","fullWidth","hideAdd","onTabClick","onEdit","type","addIcon","__reactstandin__regenerateByEval","code","eval","contextType","mapStateToProps","sqlLab","common","_sqlLab$queryEditors","_sqlLab$offline","_common$conf$SQLLAB_S","_common$conf$SQLLAB_S2","defaultDbId","conf","SQLLAB_DEFAULT_DBID","DISPLAY_MAX_ROW","DEFAULT_SQLLAB_LIMIT","SQL_MAX_ROW","SQLLAB_SAVE_WARNING_MESSAGE","SQLLAB_SCHEDULE_WARNING_MESSAGE","mapDispatchToProps","mergeProps","stateProps","dispatchProps","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport { pick } from 'lodash';\nimport { EditableTabs } from 'src/components/Tabs';\nimport { connect } from 'react-redux';\nimport URI from 'urijs';\nimport type { QueryEditor, SqlLabRootState } from 'src/SqlLab/types';\nimport {\n  FeatureFlag,\n  styled,\n  t,\n  isFeatureEnabled,\n  css,\n} from '@superset-ui/core';\nimport { Logger } from 'src/logger/LogUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport { EmptyState } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { locationContext } from 'src/pages/SqlLab/LocationContext';\nimport { navigateWithState } from 'src/utils/navigationUtils';\nimport { Icons } from 'src/components/Icons';\nimport SqlEditor from '../SqlEditor';\nimport SqlEditorTabHeader from '../SqlEditorTabHeader';\n\nconst DEFAULT_PROPS = {\n  queryEditors: [],\n  offline: false,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null,\n};\n\nconst StyledEditableTabs = styled(EditableTabs)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTab = styled.span`\n  line-height: 24px;\n`;\n\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n\n// Get the user's OS\nconst userOS = detectOS();\n\ntype TabbedSqlEditorsProps = ReturnType<typeof mergeProps>;\n\nconst SQL_LAB_URL = '/sqllab';\n\nclass TabbedSqlEditors extends PureComponent<TabbedSqlEditorsProps> {\n  constructor(props: TabbedSqlEditorsProps) {\n    super(props);\n    this.removeQueryEditor = this.removeQueryEditor.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    // merge post form data with GET search params\n    // Hack: this data should be coming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const bootstrapData = getBootstrapData();\n    const queryParameters = URI(window.location).search(true);\n    const path = URI(window.location).path();\n    const {\n      id,\n      name,\n      sql,\n      savedQueryId,\n      datasourceKey,\n      queryId,\n      dbid,\n      dbname,\n      catalog,\n      schema,\n      autorun,\n      new: isNewQuery,\n      ...urlParams\n    } = {\n      ...this.context.requestedQuery,\n      ...bootstrapData.requested_query,\n      ...queryParameters,\n    } as Record<string, string>;\n    const permalink = path.match(/\\/p\\/\\w+/)?.[0].slice(3);\n\n    // Popping a new tab based on the querystring\n    if (permalink || id || sql || savedQueryId || datasourceKey || queryId) {\n      if (permalink) {\n        this.props.actions.popPermalink(permalink);\n      } else if (id) {\n        this.props.actions.popStoredQuery(id);\n      } else if (savedQueryId) {\n        this.props.actions.popSavedQuery(savedQueryId);\n      } else if (queryId) {\n        this.props.actions.popQuery(queryId);\n      } else if (datasourceKey) {\n        this.props.actions.popDatasourceQuery(datasourceKey, sql);\n      } else if (sql) {\n        let databaseId: string | number = dbid;\n        if (databaseId) {\n          databaseId = parseInt(databaseId, 10);\n        } else {\n          const { databases } = this.props;\n          const databaseName = dbname;\n          if (databaseName) {\n            Object.keys(databases).forEach(db => {\n              if (databases[db].database_name === databaseName) {\n                databaseId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          name,\n          dbId: databaseId,\n          catalog,\n          schema,\n          autorun,\n          sql,\n        };\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab(pick(urlParams, Object.keys(queryParameters ?? {})));\n    } else if (isNewQuery || this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n\n      if (isNewQuery) {\n        navigateWithState(SQL_LAB_URL, {}, { replace: true });\n      }\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe?.latestQueryId || ''];\n      if (\n        isFeatureEnabled(FeatureFlag.SqllabBackendPersistence) &&\n        latestQuery &&\n        latestQuery.resultsKey\n      ) {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n          latestQuery,\n          this.props.displayLimit,\n        );\n      }\n    }\n  }\n\n  popNewTab(urlParams: Record<string, string>) {\n    // Clean the url in browser history\n    const updatedUrl = `${URI(SQL_LAB_URL).query(urlParams)}`;\n    navigateWithState(updatedUrl, {}, { replace: true });\n  }\n\n  activeQueryEditor() {\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return this.props.queryEditors.find(qe => qe.id === qeid) || null;\n  }\n\n  newQueryEditor() {\n    this.props.actions.addNewQueryEditor();\n  }\n\n  handleSelect(key: string) {\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    if (key !== qeid) {\n      const queryEditor = this.props.queryEditors.find(qe => qe.id === key);\n      if (!queryEditor) {\n        return;\n      }\n      this.props.actions.setActiveQueryEditor(queryEditor);\n    }\n  }\n\n  handleEdit(key: string, action: string) {\n    if (action === 'remove') {\n      const qe = this.props.queryEditors.find(qe => qe.id === key);\n      if (qe) {\n        this.removeQueryEditor(qe);\n      }\n    }\n    if (action === 'add') {\n      Logger.markTimeOrigin();\n      this.newQueryEditor();\n    }\n  }\n\n  removeQueryEditor(qe: QueryEditor) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n\n  onTabClicked = () => {\n    Logger.markTimeOrigin();\n    const noQueryEditors = this.props.queryEditors?.length === 0;\n    if (noQueryEditors) {\n      this.newQueryEditor();\n    }\n  };\n\n  render() {\n    const noQueryEditors = this.props.queryEditors?.length === 0;\n    const editors = this.props.queryEditors?.map(qe => (\n      <EditableTabs.TabPane\n        key={qe.id}\n        tab={<SqlEditorTabHeader queryEditor={qe} />}\n        // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n        data-key={qe.id}\n      >\n        <SqlEditor\n          queryEditor={qe}\n          defaultQueryLimit={this.props.defaultQueryLimit}\n          maxRow={this.props.maxRow}\n          displayLimit={this.props.displayLimit}\n          saveQueryWarning={this.props.saveQueryWarning}\n          scheduleQueryWarning={this.props.scheduleQueryWarning}\n        />\n      </EditableTabs.TabPane>\n    ));\n\n    const emptyTab = (\n      <StyledTab>\n        <TabTitle>{t('Add a new tab')}</TabTitle>\n        <Tooltip\n          id=\"add-tab\"\n          placement=\"bottom\"\n          title={\n            userOS === 'Windows'\n              ? t('New tab (Ctrl + q)')\n              : t('New tab (Ctrl + t)')\n          }\n        >\n          <Icons.PlusCircleOutlined\n            iconSize=\"s\"\n            css={css`\n              vertical-align: middle;\n            `}\n            data-test=\"add-tab-icon\"\n          />\n        </Tooltip>\n      </StyledTab>\n    );\n\n    const emptyTabState = (\n      <EditableTabs.TabPane\n        key={0}\n        data-key={0}\n        tab={emptyTab}\n        closable={false}\n      >\n        <EmptyState\n          image=\"empty_sql_chart.svg\"\n          size=\"large\"\n          description={t('Add a new tab to create SQL Query')}\n        />\n      </EditableTabs.TabPane>\n    );\n\n    return (\n      <StyledEditableTabs\n        activeKey={this.props.tabHistory[this.props.tabHistory.length - 1]}\n        id=\"a11y-query-editor-tabs\"\n        className=\"SqlEditorTabs\"\n        data-test=\"sql-editor-tabs\"\n        onChange={this.handleSelect}\n        fullWidth={false}\n        hideAdd={this.props.offline}\n        onTabClick={this.onTabClicked}\n        onEdit={this.handleEdit}\n        type={noQueryEditors ? 'card' : 'editable-card'}\n        addIcon={\n          <Tooltip\n            id=\"add-tab\"\n            placement=\"bottom\"\n            title={\n              userOS === 'Windows'\n                ? t('New tab (Ctrl + q)')\n                : t('New tab (Ctrl + t)')\n            }\n          >\n            <Icons.PlusCircleOutlined\n              iconSize=\"l\"\n              css={css`\n                vertical-align: middle;\n              `}\n              data-test=\"add-tab-icon\"\n            />\n          </Tooltip>\n        }\n      >\n        {editors}\n        {noQueryEditors && emptyTabState}\n      </StyledEditableTabs>\n    );\n  }\n}\n\nTabbedSqlEditors.contextType = locationContext;\n\nexport function mapStateToProps({ sqlLab, common }: SqlLabRootState) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors ?? DEFAULT_PROPS.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    defaultDbId: common.conf.SQLLAB_DEFAULT_DBID,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline ?? DEFAULT_PROPS.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning:\n      common.conf.SQLLAB_SAVE_WARNING_MESSAGE ?? DEFAULT_PROPS.saveQueryWarning,\n    scheduleQueryWarning:\n      common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE ??\n      DEFAULT_PROPS.scheduleQueryWarning,\n  };\n}\n\nconst mapDispatchToProps = {\n  ...Actions,\n};\n\nfunction mergeProps(\n  stateProps: ReturnType<typeof mapStateToProps>,\n  dispatchProps: typeof mapDispatchToProps,\n) {\n  return {\n    ...stateProps,\n    actions: dispatchProps,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(TabbedSqlEditors);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}