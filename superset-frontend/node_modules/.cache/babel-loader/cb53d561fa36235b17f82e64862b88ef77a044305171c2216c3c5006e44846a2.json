{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Behavior, EXTRA_FORM_DATA_APPEND_KEYS, EXTRA_FORM_DATA_OVERRIDE_KEYS, getChartMetadataRegistry, t } from '@superset-ui/core';\nimport extractUrlParams from 'src/dashboard/util/extractUrlParams';\nimport { isIterable } from 'src/utils/types';\nimport { TAB_TYPE } from '../../util/componentTypes';\nimport getBootstrapData from '../../../utils/getBootstrapData';\nconst getDefaultRowLimit = () => {var _bootstrapData$common, _bootstrapData$common2;\n  const bootstrapData = getBootstrapData();\n  const nativeFilterDefaultRowLimit = bootstrapData == null ? void 0 : (_bootstrapData$common = bootstrapData.common) == null ? void 0 : (_bootstrapData$common2 = _bootstrapData$common.conf) == null ? void 0 : _bootstrapData$common2.NATIVE_FILTER_DEFAULT_ROW_LIMIT;\n  return nativeFilterDefaultRowLimit || 1000;\n};\nexport const getFormData = ({ datasetId, dependencies = {}, groupby, defaultDataMask, controlValues, filterType, sortMetric, adhoc_filters, time_range, granularity_sqla, type, dashboardId, id }) => {var _defaultDataMask$filt;\n  const otherProps = {};\n  if (datasetId) {\n    otherProps.datasource = `${datasetId}__table`;\n  }\n  if (groupby) {\n    otherProps.groupby = [groupby];\n  }\n  if (sortMetric) {\n    otherProps.sortMetric = sortMetric;\n  }\n  return {\n    ...controlValues,\n    ...otherProps,\n    adhoc_filters: adhoc_filters != null ? adhoc_filters : [],\n    extra_filters: [],\n    extra_form_data: dependencies,\n    granularity_sqla,\n    metrics: ['count'],\n    row_limit: getDefaultRowLimit(),\n    showSearch: true,\n    defaultValue: defaultDataMask == null ? void 0 : (_defaultDataMask$filt = defaultDataMask.filterState) == null ? void 0 : _defaultDataMask$filt.value,\n    time_range,\n    url_params: extractUrlParams('regular'),\n    inView: true,\n    viz_type: filterType,\n    type,\n    dashboardId,\n    native_filter_id: id\n  };\n};\nexport function mergeExtraFormData(originalExtra = {}, newExtra = {}) {\n  const mergedExtra = {};\n  EXTRA_FORM_DATA_APPEND_KEYS.forEach((key) => {\n    const originalExtraData = originalExtra[key];\n    const newExtraData = newExtra[key];\n    const mergedValues = [\n    ...(isIterable(originalExtraData) ? originalExtraData : []),\n    ...(isIterable(newExtraData) ? newExtraData : [])];\n\n    if (mergedValues.length) {\n      mergedExtra[key] = mergedValues;\n    }\n  });\n  EXTRA_FORM_DATA_OVERRIDE_KEYS.forEach((key) => {\n    const originalValue = originalExtra[key];\n    if (originalValue !== undefined) {\n      mergedExtra[key] =\n      originalValue;\n    }\n    const newValue = newExtra[key];\n    if (newValue !== undefined) {\n      mergedExtra[key] =\n      newValue;\n    }\n  });\n  return mergedExtra;\n}\nexport function isCrossFilter(vizType) {var _getChartMetadataRegi, _getChartMetadataRegi2;\n  // @ts-ignore need export from superset-ui `ItemWithValue`\n  return (_getChartMetadataRegi = getChartMetadataRegistry().items[vizType]) == null ? void 0 : (_getChartMetadataRegi2 = _getChartMetadataRegi.value.behaviors) == null ? void 0 : _getChartMetadataRegi2.includes(Behavior.InteractiveChart);\n}\nexport function getExtraFormData(dataMask, filterIdsAppliedOnChart) {\n  let extraFormData = {};\n  filterIdsAppliedOnChart.forEach((key) => {var _dataMask$key$extraFo, _dataMask$key;\n    extraFormData = mergeExtraFormData(extraFormData, (_dataMask$key$extraFo = (_dataMask$key = dataMask[key]) == null ? void 0 : _dataMask$key.extraFormData) != null ? _dataMask$key$extraFo : {});\n  });\n  return extraFormData;\n}\nexport function nativeFilterGate(behaviors) {\n  return !behaviors.includes(Behavior.NativeFilter) ||\n  behaviors.includes(Behavior.InteractiveChart);\n}\nexport const findTabsWithChartsInScope = (chartLayoutItems, chartsInScope) => new Set(chartsInScope.\nmap((chartId) => {var _chartLayoutItems$fin, _chartLayoutItems$fin2;return (_chartLayoutItems$fin = chartLayoutItems.\n  find((item) => {var _item$meta;return (item == null ? void 0 : (_item$meta = item.meta) == null ? void 0 : _item$meta.chartId) === chartId;})) == null ? void 0 : (_chartLayoutItems$fin2 = _chartLayoutItems$fin.\n  parents) == null ? void 0 : _chartLayoutItems$fin2.filter((parent) => parent.startsWith(`${TAB_TYPE}-`));}).\nfilter((id) => id !== undefined).\nflat());\nexport const getFilterValueForDisplay = (value) => {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    return `${value}`;\n  }\n  if (Array.isArray(value)) {\n    return value.join(', ');\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  return t('Unknown value');\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getDefaultRowLimit, \"getDefaultRowLimit\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");reactHotLoader.register(getFormData, \"getFormData\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");reactHotLoader.register(mergeExtraFormData, \"mergeExtraFormData\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");reactHotLoader.register(isCrossFilter, \"isCrossFilter\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");reactHotLoader.register(getExtraFormData, \"getExtraFormData\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");reactHotLoader.register(nativeFilterGate, \"nativeFilterGate\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");reactHotLoader.register(findTabsWithChartsInScope, \"findTabsWithChartsInScope\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");reactHotLoader.register(getFilterValueForDisplay, \"getFilterValueForDisplay\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Behavior","EXTRA_FORM_DATA_APPEND_KEYS","EXTRA_FORM_DATA_OVERRIDE_KEYS","getChartMetadataRegistry","t","extractUrlParams","isIterable","TAB_TYPE","getBootstrapData","getDefaultRowLimit","_bootstrapData$common","_bootstrapData$common2","bootstrapData","nativeFilterDefaultRowLimit","common","conf","NATIVE_FILTER_DEFAULT_ROW_LIMIT","getFormData","datasetId","dependencies","groupby","defaultDataMask","controlValues","filterType","sortMetric","adhoc_filters","time_range","granularity_sqla","type","dashboardId","id","_defaultDataMask$filt","otherProps","datasource","extra_filters","extra_form_data","metrics","row_limit","showSearch","defaultValue","filterState","value","url_params","inView","viz_type","native_filter_id","mergeExtraFormData","originalExtra","newExtra","mergedExtra","forEach","key","originalExtraData","newExtraData","mergedValues","length","originalValue","undefined","newValue","isCrossFilter","vizType","_getChartMetadataRegi","_getChartMetadataRegi2","items","behaviors","includes","InteractiveChart","getExtraFormData","dataMask","filterIdsAppliedOnChart","extraFormData","_dataMask$key$extraFo","_dataMask$key","nativeFilterGate","NativeFilter","findTabsWithChartsInScope","chartLayoutItems","chartsInScope","Set","map","chartId","_chartLayoutItems$fin","_chartLayoutItems$fin2","find","item","_item$meta","meta","parents","filter","parent","startsWith","flat","getFilterValueForDisplay","Array","isArray","join","JSON","stringify","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/utils.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AdhocFilter,\n  Behavior,\n  DataMaskStateWithId,\n  EXTRA_FORM_DATA_APPEND_KEYS,\n  EXTRA_FORM_DATA_OVERRIDE_KEYS,\n  ExtraFormData,\n  Filter,\n  getChartMetadataRegistry,\n  QueryFormData,\n  t,\n  ExtraFormDataOverride,\n  TimeGranularity,\n  ExtraFormDataAppend,\n} from '@superset-ui/core';\nimport { LayoutItem } from 'src/dashboard/types';\nimport extractUrlParams from 'src/dashboard/util/extractUrlParams';\nimport { isIterable, OnlyKeyWithType } from 'src/utils/types';\nimport { TAB_TYPE } from '../../util/componentTypes';\nimport getBootstrapData from '../../../utils/getBootstrapData';\n\nconst getDefaultRowLimit = (): number => {\n  const bootstrapData = getBootstrapData();\n  const nativeFilterDefaultRowLimit =\n    bootstrapData?.common?.conf?.NATIVE_FILTER_DEFAULT_ROW_LIMIT;\n  return nativeFilterDefaultRowLimit || 1000;\n};\n\nexport const getFormData = ({\n  datasetId,\n  dependencies = {},\n  groupby,\n  defaultDataMask,\n  controlValues,\n  filterType,\n  sortMetric,\n  adhoc_filters,\n  time_range,\n  granularity_sqla,\n  type,\n  dashboardId,\n  id,\n}: Partial<Filter> & {\n  dashboardId: number;\n  datasetId?: number;\n  dependencies?: object;\n  groupby?: string;\n  adhoc_filters?: AdhocFilter[];\n  time_range?: string;\n}): Partial<QueryFormData> => {\n  const otherProps: {\n    datasource?: string;\n    groupby?: string[];\n    sortMetric?: string;\n  } = {};\n  if (datasetId) {\n    otherProps.datasource = `${datasetId}__table`;\n  }\n  if (groupby) {\n    otherProps.groupby = [groupby];\n  }\n  if (sortMetric) {\n    otherProps.sortMetric = sortMetric;\n  }\n  return {\n    ...controlValues,\n    ...otherProps,\n    adhoc_filters: adhoc_filters ?? [],\n    extra_filters: [],\n    extra_form_data: dependencies,\n    granularity_sqla,\n    metrics: ['count'],\n    row_limit: getDefaultRowLimit(),\n    showSearch: true,\n    defaultValue: defaultDataMask?.filterState?.value,\n    time_range,\n    url_params: extractUrlParams('regular'),\n    inView: true,\n    viz_type: filterType,\n    type,\n    dashboardId,\n    native_filter_id: id,\n  };\n};\n\nexport function mergeExtraFormData(\n  originalExtra: ExtraFormData = {},\n  newExtra: ExtraFormData = {},\n): ExtraFormData {\n  const mergedExtra: ExtraFormData = {};\n  EXTRA_FORM_DATA_APPEND_KEYS.forEach((key: string) => {\n    const originalExtraData = originalExtra[key as keyof ExtraFormDataAppend];\n    const newExtraData = newExtra[key as keyof ExtraFormDataAppend];\n    const mergedValues = [\n      ...(isIterable(originalExtraData) ? originalExtraData : []),\n      ...(isIterable(newExtraData) ? newExtraData : []),\n    ];\n    if (mergedValues.length) {\n      mergedExtra[key as OnlyKeyWithType<ExtraFormData, any[]>] = mergedValues;\n    }\n  });\n  EXTRA_FORM_DATA_OVERRIDE_KEYS.forEach((key: string) => {\n    const originalValue = originalExtra[key as keyof ExtraFormDataOverride];\n    if (originalValue !== undefined) {\n      mergedExtra[key as OnlyKeyWithType<ExtraFormData, typeof originalValue>] =\n        originalValue as TimeGranularity;\n    }\n    const newValue = newExtra[key as keyof ExtraFormDataOverride];\n    if (newValue !== undefined) {\n      mergedExtra[key as OnlyKeyWithType<ExtraFormData, typeof newValue>] =\n        newValue as TimeGranularity;\n    }\n  });\n  return mergedExtra;\n}\n\nexport function isCrossFilter(vizType: string) {\n  // @ts-ignore need export from superset-ui `ItemWithValue`\n  return getChartMetadataRegistry().items[vizType]?.value.behaviors?.includes(\n    Behavior.InteractiveChart,\n  );\n}\n\nexport function getExtraFormData(\n  dataMask: DataMaskStateWithId,\n  filterIdsAppliedOnChart: string[],\n): ExtraFormData {\n  let extraFormData: ExtraFormData = {};\n  filterIdsAppliedOnChart.forEach(key => {\n    extraFormData = mergeExtraFormData(\n      extraFormData,\n      dataMask[key]?.extraFormData ?? {},\n    );\n  });\n  return extraFormData;\n}\n\nexport function nativeFilterGate(behaviors: Behavior[]): boolean {\n  return (\n    !behaviors.includes(Behavior.NativeFilter) ||\n    behaviors.includes(Behavior.InteractiveChart)\n  );\n}\n\nexport const findTabsWithChartsInScope = (\n  chartLayoutItems: LayoutItem[],\n  chartsInScope: number[],\n) =>\n  new Set<string>(\n    chartsInScope\n      .map(chartId =>\n        chartLayoutItems\n          .find(item => item?.meta?.chartId === chartId)\n          ?.parents?.filter(parent => parent.startsWith(`${TAB_TYPE}-`)),\n      )\n      .filter(id => id !== undefined)\n      .flat() as string[],\n  );\n\nexport const getFilterValueForDisplay = (\n  value?: string[] | null | string | number | object,\n): string => {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    return `${value}`;\n  }\n  if (Array.isArray(value)) {\n    return value.join(', ');\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  return t('Unknown value');\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}