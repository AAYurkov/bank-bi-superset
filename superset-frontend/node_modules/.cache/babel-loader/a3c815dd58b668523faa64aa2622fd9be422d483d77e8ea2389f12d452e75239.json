{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport FormModal from 'src/components/Modal/FormModal';\nimport { RoleNameField } from './RoleFormItems';\nimport { createRole, updateRolePermissions } from './utils';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nfunction RoleListDuplicateModal({ role, show, onHide, onSave }) {\n  const { name, permission_ids } = role;\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const handleFormSubmit = async (values) => {\n    try {\n      const { json: roleResponse } = await createRole(values.roleName);\n      if (permission_ids.length > 0) {\n        await updateRolePermissions(roleResponse.id, permission_ids);\n      }\n      addSuccessToast(t('Role was successfully duplicated!'));\n    }\n    catch (err) {\n      addDangerToast(t('Error while duplicating role!'));\n      throw err;\n    }\n  };\n  return _jsx(FormModal, { show: show, onHide: onHide, title: t('Duplicate role %(name)s', { name }), onSave: onSave, formSubmitHandler: handleFormSubmit, requiredFields: ['roleName'], initialValues: {}, children:\n    _jsx(RoleNameField, {}) }\n  );\n}__signature__(RoleListDuplicateModal, \"useToasts{{ addDangerToast, addSuccessToast }}\", () => [useToasts]);const _default =\nRoleListDuplicateModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RoleListDuplicateModal, \"RoleListDuplicateModal\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListDuplicateModal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListDuplicateModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","useToasts","FormModal","RoleNameField","createRole","updateRolePermissions","jsx","_jsx","RoleListDuplicateModal","role","show","onHide","onSave","name","permission_ids","addDangerToast","addSuccessToast","handleFormSubmit","values","json","roleResponse","roleName","length","id","err","title","formSubmitHandler","requiredFields","initialValues","children","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListDuplicateModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { t } from '@superset-ui/core';\nimport { RoleObject } from 'src/pages/RolesList';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport FormModal from 'src/components/Modal/FormModal';\nimport { RoleNameField } from './RoleFormItems';\nimport { BaseModalProps, RoleForm } from './types';\nimport { createRole, updateRolePermissions } from './utils';\n\nexport interface RoleListDuplicateModalProps extends BaseModalProps {\n  role: RoleObject;\n}\n\nfunction RoleListDuplicateModal({\n  role,\n  show,\n  onHide,\n  onSave,\n}: RoleListDuplicateModalProps) {\n  const { name, permission_ids } = role;\n  const { addDangerToast, addSuccessToast } = useToasts();\n\n  const handleFormSubmit = async (values: RoleForm) => {\n    try {\n      const { json: roleResponse } = await createRole(values.roleName);\n\n      if (permission_ids.length > 0) {\n        await updateRolePermissions(roleResponse.id, permission_ids);\n      }\n      addSuccessToast(t('Role was successfully duplicated!'));\n    } catch (err) {\n      addDangerToast(t('Error while duplicating role!'));\n      throw err;\n    }\n  };\n\n  return (\n    <FormModal\n      show={show}\n      onHide={onHide}\n      title={t('Duplicate role %(name)s', { name })}\n      onSave={onSave}\n      formSubmitHandler={handleFormSubmit}\n      requiredFields={['roleName']}\n      initialValues={{}}\n    >\n      <RoleNameField />\n    </FormModal>\n  );\n}\nexport default RoleListDuplicateModal;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,CAAC,QAAQ,mBAAmB;AAErC,SAASC,SAAS,QAAQ,yCAAyC;AACnE,OAAOC,SAAS,MAAM,gCAAgC;AACtD,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,SAASC,UAAU,EAAEC,qBAAqB,QAAQ,SAAS,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAM5D,SAASC,sBAAsBA,CAAC,EAC9BC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,MAAM,EACsB;EAC5B,MAAM,EAAEC,IAAI,EAAEC,cAAc,EAAE,GAAGL,IAAI;EACrC,MAAM,EAAEM,cAAc,EAAEC,eAAe,EAAE,GAAGf,SAAS,EAAE;EAEvD,MAAMgB,gBAAgB,GAAG,MAAAA,CAAOC,MAAgB,KAAI;IAClD,IAAI;MACF,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAE,GAAG,MAAMhB,UAAU,CAACc,MAAM,CAACG,QAAQ,CAAC;MAEhE,IAAIP,cAAc,CAACQ,MAAM,GAAG,CAAC,EAAE;QAC7B,MAAMjB,qBAAqB,CAACe,YAAY,CAACG,EAAE,EAAET,cAAc,CAAC;;MAE9DE,eAAe,CAAChB,CAAC,CAAC,mCAAmC,CAAC,CAAC;;IACvD,OAAOwB,GAAG,EAAE;MACZT,cAAc,CAACf,CAAC,CAAC,+BAA+B,CAAC,CAAC;MAClD,MAAMwB,GAAG;;EAEb,CAAC;EAED,OACEjB,IAAA,CAACL,SAAS,IACRQ,IAAI,EAAEA,IAAK,EACXC,MAAM,EAAEA,MAAO,EACfc,KAAK,EAAEzB,CAAC,CAAC,yBAAyB,EAAE,EAAEa,IAAI,EAAE,CAAE,EAC9CD,MAAM,EAAEA,MAAO,EACfc,iBAAiB,EAAET,gBAAiB,EACpCU,cAAc,EAAE,CAAC,UAAU,CAAE,EAC7BC,aAAa,EAAE,EAAG,EAAAC,QAAA;IAElBtB,IAAA,CAACJ,aAAa,KAChB;EAAW,CAAC;AAEhB,CAAC2B,aAAA,CApCQtB,sBAAsB,2DAOeP,SAAS,SAAA8B,QAAA;AA8BxCvB,sBAAsB,CAArC,eAAAuB,QAAA,CAAsC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CArC7B5B,sBAAsB,wHAAAwB,cAAA,CAAAI,QAAA,CAAAL,QAAA,iIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}