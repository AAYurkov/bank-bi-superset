{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useMemo } from 'react';\nimport { Global } from '@emotion/react';\nimport { css, useTheme } from '@superset-ui/core';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport copyTextToClipboard from 'src/utils/copy';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport { PIVOT_COL_ID, GridSize } from './constants';\nimport Header from './Header';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst gridComponents = {\n  agColumnHeader: Header\n};\nexport { GridSize };\nconst onSortChanged = ({ api }) => api.refreshCells();\nfunction GridTable({ data, columns, sortable = true, columnReorderable, height, externalFilter, showRowNumber, enableActions, size = GridSize.Middle, striped }) {\n  const theme = useTheme();\n  const isExternalFilterPresent = useCallback(() => Boolean(externalFilter), [externalFilter]);\n  const rowIndexLength = `${data.length}}`.length;\n  const onKeyDown = useCallback(({ event, column, data, value, api }) => {var _document$getSelectio;\n    if (!(document.getSelection != null && (_document$getSelectio = document.getSelection()) != null && _document$getSelectio.toString != null && _document$getSelectio.toString()) &&\n    event &&\n    event.key === 'c' && (\n    event.ctrlKey || event.metaKey)) {\n      const columns = column.getColId() === PIVOT_COL_ID ?\n      api.\n      getAllDisplayedColumns().\n      filter((column) => column.getColId() !== PIVOT_COL_ID) :\n      [column];\n      const record = column.getColId() === PIVOT_COL_ID ?\n      [\n      columns.map((column) => column.getColId()).join('\\t'),\n      columns.\n      map((column) => data == null ? void 0 : data[column.getColId()]).\n      join('\\t')].\n      join('\\n') :\n      String(value);\n      copyTextToClipboard(() => Promise.resolve(record));\n    }\n  }, []);\n  const columnDefs = useMemo(() => [\n  {\n    field: PIVOT_COL_ID,\n    valueGetter: 'node.rowIndex+1',\n    cellClass: 'locked-col',\n    width: 30 + rowIndexLength * 6,\n    suppressNavigable: true,\n    resizable: false,\n    pinned: 'left',\n    sortable: false,\n    ...(columnReorderable && { suppressMovable: true })\n  },\n  ...columns.map(({ label, headerName, width, render: cellRenderer, comparator }, index) => ({\n    field: label,\n    headerName,\n    cellRenderer,\n    sortable,\n    comparator,\n    ...(index === columns.length - 1 && {\n      flex: 1,\n      width,\n      minWidth: 150\n    })\n  }))].\n  slice(showRowNumber ? 0 : 1), [rowIndexLength, columnReorderable, columns, showRowNumber, sortable]);\n  const defaultColDef = useMemo(() => ({\n    ...(!columnReorderable && { suppressMovable: true }),\n    resizable: true,\n    sortable,\n    filter: Boolean(enableActions)\n  }), [columnReorderable, enableActions, sortable]);\n  const rowHeight = theme.gridUnit * (size === GridSize.Middle ? 9 : 7);\n  const gridOptions = useMemo(() => ({\n    enableCellTextSelection: true,\n    ensureDomOrder: true,\n    suppressFieldDotNotation: true,\n    headerHeight: rowHeight,\n    rowSelection: 'multiple',\n    rowHeight\n  }), [rowHeight]);\n  return _jsxs(ErrorBoundary, { children: [\n    _jsx(Global, { styles: () => css`\n          #grid-table.ag-theme-quartz {\n            --ag-icon-font-family: agGridMaterial;\n            --ag-grid-size: ${theme.gridUnit}px;\n            --ag-font-size: ${theme.typography.sizes[size === GridSize.Middle ? 'm' : 's']}px;\n            --ag-font-family: ${theme.typography.families.sansSerif};\n            --ag-row-height: ${rowHeight}px;\n            ${!striped &&\n      `--ag-odd-row-background-color: ${theme.colors.grayscale.light5};`}\n            --ag-border-color: ${theme.colors.grayscale.light2};\n            --ag-row-border-color: ${theme.colors.grayscale.light2};\n            --ag-header-background-color: ${theme.colors.grayscale.light4};\n          }\n          #grid-table .ag-cell {\n            -webkit-font-smoothing: antialiased;\n          }\n          .locked-col {\n            background: var(--ag-row-border-color);\n            padding: 0;\n            text-align: center;\n            font-size: calc(var(--ag-font-size) * 0.9);\n            color: var(--ag-disabled-foreground-color);\n          }\n          .ag-row-hover .locked-col {\n            background: var(--ag-row-hover-color);\n          }\n          .ag-header-cell {\n            overflow: hidden;\n          }\n          & [role='columnheader']:hover .customHeaderAction {\n            display: flex;\n          }\n        ` }),\n    _jsx(\"div\", { id: \"grid-table\", className: \"ag-theme-quartz\", css: css`\n          width: 100%;\n          height: ${height}px;\n        `, children:\n      _jsx(AgGridReact\n      // TODO: migrate to Theme API - https://www.ag-grid.com/react-data-grid/theming-migration/\n      , { rowData: data, columnDefs: columnDefs, defaultColDef: defaultColDef, onSortChanged: onSortChanged, isExternalFilterPresent: isExternalFilterPresent, doesExternalFilterPass: externalFilter, components: gridComponents, gridOptions: gridOptions, onCellKeyDown: onKeyDown }) }\n    )] }\n  );\n}__signature__(GridTable, \"useTheme{theme}\\nuseCallback{isExternalFilterPresent}\\nuseCallback{onKeyDown}\\nuseMemo{columnDefs}\\nuseMemo{defaultColDef}\\nuseMemo{gridOptions}\", () => [useTheme]);const _default =\nGridTable;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(gridComponents, \"gridComponents\", \"/Users/aryurkov/superset/superset-frontend/src/components/GridTable/index.tsx\");reactHotLoader.register(onSortChanged, \"onSortChanged\", \"/Users/aryurkov/superset/superset-frontend/src/components/GridTable/index.tsx\");reactHotLoader.register(GridTable, \"GridTable\", \"/Users/aryurkov/superset/superset-frontend/src/components/GridTable/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/components/GridTable/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useMemo","Global","css","useTheme","AgGridReact","copyTextToClipboard","ErrorBoundary","PIVOT_COL_ID","GridSize","Header","jsx","_jsx","jsxs","_jsxs","gridComponents","agColumnHeader","onSortChanged","api","refreshCells","GridTable","data","columns","sortable","columnReorderable","height","externalFilter","showRowNumber","enableActions","size","Middle","striped","theme","isExternalFilterPresent","Boolean","rowIndexLength","length","onKeyDown","event","column","value","_document$getSelectio","document","getSelection","toString","key","ctrlKey","metaKey","getColId","getAllDisplayedColumns","filter","record","map","join","String","Promise","resolve","columnDefs","field","valueGetter","cellClass","width","suppressNavigable","resizable","pinned","suppressMovable","label","headerName","render","cellRenderer","comparator","index","flex","minWidth","slice","defaultColDef","rowHeight","gridUnit","gridOptions","enableCellTextSelection","ensureDomOrder","suppressFieldDotNotation","headerHeight","rowSelection","children","styles","typography","sizes","families","sansSerif","colors","grayscale","light5","light2","light4","id","className","rowData","doesExternalFilterPass","components","onCellKeyDown","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/GridTable/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode, useCallback, useMemo } from 'react';\nimport { Global } from '@emotion/react';\nimport { css, useTheme } from '@superset-ui/core';\n\nimport type { Column, GridOptions } from 'ag-grid-community';\nimport { AgGridReact, type AgGridReactProps } from 'ag-grid-react';\n\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\n\nimport copyTextToClipboard from 'src/utils/copy';\nimport ErrorBoundary from 'src/components/ErrorBoundary';\n\nimport { PIVOT_COL_ID, GridSize } from './constants';\nimport Header from './Header';\n\nconst gridComponents = {\n  agColumnHeader: Header,\n};\n\nexport { GridSize };\n\nexport type ColDef = {\n  type: string;\n  field: string;\n};\n\nexport interface TableProps<RecordType> {\n  /**\n   * Data that will populate the each row and map to the column key.\n   */\n  data: RecordType[];\n  /**\n   * Table column definitions.\n   */\n  columns: {\n    label: string;\n    headerName?: string;\n    width?: number;\n    comparator?: (valueA: string | number, valueB: string | number) => number;\n    render?: (value: any) => ReactNode;\n  }[];\n\n  size?: GridSize;\n\n  externalFilter?: AgGridReactProps['doesExternalFilterPass'];\n\n  height: number;\n\n  columnReorderable?: boolean;\n\n  sortable?: boolean;\n\n  enableActions?: boolean;\n\n  showRowNumber?: boolean;\n\n  usePagination?: boolean;\n\n  striped?: boolean;\n}\n\nconst onSortChanged: AgGridReactProps['onSortChanged'] = ({ api }) =>\n  api.refreshCells();\n\nfunction GridTable<RecordType extends object>({\n  data,\n  columns,\n  sortable = true,\n  columnReorderable,\n  height,\n  externalFilter,\n  showRowNumber,\n  enableActions,\n  size = GridSize.Middle,\n  striped,\n}: TableProps<RecordType>) {\n  const theme = useTheme();\n  const isExternalFilterPresent = useCallback(\n    () => Boolean(externalFilter),\n    [externalFilter],\n  );\n  const rowIndexLength = `${data.length}}`.length;\n  const onKeyDown: AgGridReactProps<Record<string, any>>['onCellKeyDown'] =\n    useCallback(({ event, column, data, value, api }) => {\n      if (\n        !document.getSelection?.()?.toString?.() &&\n        event &&\n        event.key === 'c' &&\n        (event.ctrlKey || event.metaKey)\n      ) {\n        const columns =\n          column.getColId() === PIVOT_COL_ID\n            ? api\n                .getAllDisplayedColumns()\n                .filter((column: Column) => column.getColId() !== PIVOT_COL_ID)\n            : [column];\n        const record =\n          column.getColId() === PIVOT_COL_ID\n            ? [\n                columns.map((column: Column) => column.getColId()).join('\\t'),\n                columns\n                  .map((column: Column) => data?.[column.getColId()])\n                  .join('\\t'),\n              ].join('\\n')\n            : String(value);\n        copyTextToClipboard(() => Promise.resolve(record));\n      }\n    }, []);\n  const columnDefs = useMemo(\n    () =>\n      [\n        {\n          field: PIVOT_COL_ID,\n          valueGetter: 'node.rowIndex+1',\n          cellClass: 'locked-col',\n          width: 30 + rowIndexLength * 6,\n          suppressNavigable: true,\n          resizable: false,\n          pinned: 'left' as const,\n          sortable: false,\n          ...(columnReorderable && { suppressMovable: true }),\n        },\n        ...columns.map(\n          (\n            { label, headerName, width, render: cellRenderer, comparator },\n            index,\n          ) => ({\n            field: label,\n            headerName,\n            cellRenderer,\n            sortable,\n            comparator,\n            ...(index === columns.length - 1 && {\n              flex: 1,\n              width,\n              minWidth: 150,\n            }),\n          }),\n        ),\n      ].slice(showRowNumber ? 0 : 1),\n    [rowIndexLength, columnReorderable, columns, showRowNumber, sortable],\n  );\n  const defaultColDef: AgGridReactProps['defaultColDef'] = useMemo(\n    () => ({\n      ...(!columnReorderable && { suppressMovable: true }),\n      resizable: true,\n      sortable,\n      filter: Boolean(enableActions),\n    }),\n    [columnReorderable, enableActions, sortable],\n  );\n\n  const rowHeight = theme.gridUnit * (size === GridSize.Middle ? 9 : 7);\n\n  const gridOptions = useMemo<GridOptions>(\n    () => ({\n      enableCellTextSelection: true,\n      ensureDomOrder: true,\n      suppressFieldDotNotation: true,\n      headerHeight: rowHeight,\n      rowSelection: 'multiple',\n      rowHeight,\n    }),\n    [rowHeight],\n  );\n\n  return (\n    <ErrorBoundary>\n      <Global\n        styles={() => css`\n          #grid-table.ag-theme-quartz {\n            --ag-icon-font-family: agGridMaterial;\n            --ag-grid-size: ${theme.gridUnit}px;\n            --ag-font-size: ${theme.typography.sizes[\n              size === GridSize.Middle ? 'm' : 's'\n            ]}px;\n            --ag-font-family: ${theme.typography.families.sansSerif};\n            --ag-row-height: ${rowHeight}px;\n            ${!striped &&\n            `--ag-odd-row-background-color: ${theme.colors.grayscale.light5};`}\n            --ag-border-color: ${theme.colors.grayscale.light2};\n            --ag-row-border-color: ${theme.colors.grayscale.light2};\n            --ag-header-background-color: ${theme.colors.grayscale.light4};\n          }\n          #grid-table .ag-cell {\n            -webkit-font-smoothing: antialiased;\n          }\n          .locked-col {\n            background: var(--ag-row-border-color);\n            padding: 0;\n            text-align: center;\n            font-size: calc(var(--ag-font-size) * 0.9);\n            color: var(--ag-disabled-foreground-color);\n          }\n          .ag-row-hover .locked-col {\n            background: var(--ag-row-hover-color);\n          }\n          .ag-header-cell {\n            overflow: hidden;\n          }\n          & [role='columnheader']:hover .customHeaderAction {\n            display: flex;\n          }\n        `}\n      />\n      <div\n        id=\"grid-table\"\n        className=\"ag-theme-quartz\"\n        css={css`\n          width: 100%;\n          height: ${height}px;\n        `}\n      >\n        <AgGridReact\n          // TODO: migrate to Theme API - https://www.ag-grid.com/react-data-grid/theming-migration/\n          rowData={data}\n          columnDefs={columnDefs}\n          defaultColDef={defaultColDef}\n          onSortChanged={onSortChanged}\n          isExternalFilterPresent={isExternalFilterPresent}\n          doesExternalFilterPass={externalFilter}\n          components={gridComponents}\n          gridOptions={gridOptions}\n          onCellKeyDown={onKeyDown}\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default GridTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}