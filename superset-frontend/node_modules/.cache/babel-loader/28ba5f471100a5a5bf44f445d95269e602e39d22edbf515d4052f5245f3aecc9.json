{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { init as echartsInit } from 'echarts';\nimport { createRef, useEffect } from 'react';\nimport { createDragGraphicOptions, dataToZoomConfigs, MAX_ZOOM_LEVEL, MIN_ZOOM_LEVEL, zoomConfigsToData } from './zoomUtil';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const ZoomConfigsChart = ({ value, onChange = () => {} }) => {\n  const ref = /*#__PURE__*/createRef();\n  useEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    // TODO check if this can be applied here\n    if (value === null || value === undefined) {\n      return undefined;\n    }\n    let timer;\n    const barWidth = 15;\n    const data = zoomConfigsToData(value.values);\n    const chart = echartsInit(ref.current);\n    const option = {\n      xAxis: {\n        min: 0,\n        name: t('Size in pixels'),\n        nameLocation: 'center',\n        nameGap: 25\n      },\n      yAxis: {\n        type: 'category',\n        min: MIN_ZOOM_LEVEL,\n        max: MAX_ZOOM_LEVEL,\n        name: t('Zoom level'),\n        nameLocation: 'center',\n        nameRotate: 90,\n        nameGap: 25\n      },\n      dataset: {\n        dimensions: ['width', 'height', 'zoom'],\n        source: data\n      },\n      grid: {\n        top: 12,\n        left: 40\n      },\n      series: [\n      {\n        id: 'width',\n        name: 'width',\n        type: 'bar',\n        animation: false,\n        showBackground: true,\n        barWidth,\n        barGap: '0%',\n        label: {\n          show: true,\n          formatter: '{a}: {@width}'\n        },\n        encode: {\n          x: 'width',\n          y: 'zoom'\n        }\n      },\n      {\n        id: 'height',\n        name: 'height',\n        type: 'bar',\n        animation: false,\n        showBackground: true,\n        barWidth,\n        barGap: '0%',\n        label: {\n          show: true,\n          formatter: '{a}: {@height}'\n        },\n        encode: {\n          x: 'height',\n          y: 'zoom'\n        }\n      }]\n\n    };\n    chart.setOption(option);\n    const onDrag = function (dataIndex, itemIndex) {\n      if (dataIndex === undefined) {\n        return;\n      }\n      // eslint-disable-next-line react/no-this-in-sfc\n      const newPosition = chart.convertFromPixel('grid', [this.x, this.y]);\n      if (typeof newPosition === 'number') {\n        return;\n      }\n      const roundedPosition = Math.round(newPosition[0]);\n      const newRoundedPosition = roundedPosition < 0 ? 0 : roundedPosition;\n      data[dataIndex][itemIndex] = newRoundedPosition;\n      chart.setOption({\n        dataset: {\n          source: data\n        }\n      });\n      if (timer !== undefined) {\n        clearTimeout(timer);\n      }\n      timer = window.setTimeout(() => {\n        const newValues = dataToZoomConfigs(data);\n        onChange({ ...value, values: newValues });\n      }, 200);\n    };\n    const onWidthDrag = function (dataIndex) {\n      onDrag.call(this, dataIndex, 0);\n    };\n    const onHeightDrag = function (dataIndex) {\n      onDrag.call(this, dataIndex, 1);\n    };\n    // TODO listen to resize event and redraw chart\n    // TODO rearrange the draghandlers when the chart range changes\n    chart.setOption({\n      graphic: createDragGraphicOptions({\n        data,\n        onWidthDrag,\n        onHeightDrag,\n        barWidth,\n        chart\n      })\n    });\n    // chart.on('click', 'series', (params) => {\n    //   const clickedData: number[] = params.data as number[];\n    //   const zoomLevel: number = clickedData[2];\n    //   // TODO we have to set a flag on value that indicates, which zoomLevel should be active\n    //   // TODO maybe it's better to add a callback to the map that triggers when the zoom\n    //   //      in the map changes. This can then be displayed on the zoom chart.\n    // });\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value]);\n  return _jsx(\"div\", { ref: ref, style: { height: '1300px', width: '100%' } });\n};__signature__(ZoomConfigsChart, \"useEffect{}\");const _default =\nZoomConfigsChart;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ZoomConfigsChart, \"ZoomConfigsChart\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ZoomConfigControl/ZoomConfigsChart.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ZoomConfigControl/ZoomConfigsChart.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","init","echartsInit","createRef","useEffect","createDragGraphicOptions","dataToZoomConfigs","MAX_ZOOM_LEVEL","MIN_ZOOM_LEVEL","zoomConfigsToData","jsx","_jsx","ZoomConfigsChart","value","onChange","ref","current","undefined","timer","barWidth","data","values","chart","option","xAxis","min","name","nameLocation","nameGap","yAxis","type","max","nameRotate","dataset","dimensions","source","grid","top","left","series","id","animation","showBackground","barGap","label","show","formatter","encode","x","y","setOption","onDrag","dataIndex","itemIndex","newPosition","convertFromPixel","roundedPosition","Math","round","newRoundedPosition","clearTimeout","window","setTimeout","newValues","onWidthDrag","call","onHeightDrag","graphic","style","height","width","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ZoomConfigControl/ZoomConfigsChart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { init as echartsInit } from 'echarts';\nimport { createRef, FC, useEffect } from 'react';\nimport { ZoomConfigsChartProps } from './types';\nimport {\n  createDragGraphicOptions,\n  dataToZoomConfigs,\n  MAX_ZOOM_LEVEL,\n  MIN_ZOOM_LEVEL,\n  zoomConfigsToData,\n} from './zoomUtil';\n\nexport const ZoomConfigsChart: FC<ZoomConfigsChartProps> = ({\n  value,\n  onChange = () => {},\n}) => {\n  const ref = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    // TODO check if this can be applied here\n    if (value === null || value === undefined) {\n      return undefined;\n    }\n\n    let timer: number;\n\n    const barWidth = 15;\n    const data = zoomConfigsToData(value.values);\n\n    const chart = echartsInit(ref.current);\n\n    const option = {\n      xAxis: {\n        min: 0,\n        name: t('Size in pixels'),\n        nameLocation: 'center',\n        nameGap: 25,\n      },\n      yAxis: {\n        type: 'category',\n        min: MIN_ZOOM_LEVEL,\n        max: MAX_ZOOM_LEVEL,\n        name: t('Zoom level'),\n        nameLocation: 'center',\n        nameRotate: 90,\n        nameGap: 25,\n      },\n      dataset: {\n        dimensions: ['width', 'height', 'zoom'],\n        source: data,\n      },\n      grid: {\n        top: 12,\n        left: 40,\n      },\n      series: [\n        {\n          id: 'width',\n          name: 'width',\n          type: 'bar',\n          animation: false,\n          showBackground: true,\n          barWidth,\n          barGap: '0%',\n          label: {\n            show: true,\n            formatter: '{a}: {@width}',\n          },\n          encode: {\n            x: 'width',\n            y: 'zoom',\n          },\n        },\n        {\n          id: 'height',\n          name: 'height',\n          type: 'bar',\n          animation: false,\n          showBackground: true,\n          barWidth,\n          barGap: '0%',\n          label: {\n            show: true,\n            formatter: '{a}: {@height}',\n          },\n          encode: {\n            x: 'height',\n            y: 'zoom',\n          },\n        },\n      ],\n    };\n\n    chart.setOption(option);\n\n    const onDrag = function (\n      this: any,\n      dataIndex: number | undefined,\n      itemIndex: number,\n    ) {\n      if (dataIndex === undefined) {\n        return;\n      }\n\n      // eslint-disable-next-line react/no-this-in-sfc\n      const newPosition = chart.convertFromPixel('grid', [this.x, this.y]);\n      if (typeof newPosition === 'number') {\n        return;\n      }\n\n      const roundedPosition = Math.round(newPosition[0]);\n      const newRoundedPosition = roundedPosition < 0 ? 0 : roundedPosition;\n      data[dataIndex][itemIndex] = newRoundedPosition;\n      chart.setOption({\n        dataset: {\n          source: data,\n        },\n      });\n      if (timer !== undefined) {\n        clearTimeout(timer);\n      }\n      timer = window.setTimeout(() => {\n        const newValues = dataToZoomConfigs(data);\n        onChange({ ...value, values: newValues });\n      }, 200);\n    };\n\n    const onWidthDrag = function (this: any, dataIndex: number | undefined) {\n      onDrag.call(this, dataIndex, 0);\n    };\n    const onHeightDrag = function (this: any, dataIndex: number | undefined) {\n      onDrag.call(this, dataIndex, 1);\n    };\n\n    // TODO listen to resize event and redraw chart\n    // TODO rearrange the draghandlers when the chart range changes\n    chart.setOption({\n      graphic: createDragGraphicOptions({\n        data,\n        onWidthDrag,\n        onHeightDrag,\n        barWidth,\n        chart,\n      }),\n    });\n    // chart.on('click', 'series', (params) => {\n    //   const clickedData: number[] = params.data as number[];\n    //   const zoomLevel: number = clickedData[2];\n    //   // TODO we have to set a flag on value that indicates, which zoomLevel should be active\n    //   // TODO maybe it's better to add a callback to the map that triggers when the zoom\n    //   //      in the map changes. This can then be displayed on the zoom chart.\n    // });\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value]);\n\n  return <div ref={ref} style={{ height: '1300px', width: '100%' }} />;\n};\n\nexport default ZoomConfigsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}