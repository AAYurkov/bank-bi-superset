{"ast":null,"code":"import _isNumber from \"lodash/isNumber\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, getColumnLabel, getNumberFormatter, isEqualArray, NumberFormats, styled, t } from '@superset-ui/core';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { InputNumber } from 'src/components/Input';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport Metadata from 'src/components/Metadata';\n\nimport { StatusMessage, StyledFormItem, FilterPluginStyle } from '../common';\nimport { getRangeExtraFormData } from '../../utils';\nimport { SingleValueType } from './SingleValueType';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst StyledDivider = styled.span`\n  margin: 0 ${({ theme }) => theme.gridUnit * 3}px;\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  align-content: center;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  .antd5-input-number {\n    width: 100%;\n    position: relative;\n  }\n`;\nconst numberFormatter = getNumberFormatter(NumberFormats.SMART_NUMBER);\nconst getLabel = (lower, upper, enableSingleExactValue = false) => {\n  if (enableSingleExactValue && lower !== null ||\n  lower !== null && lower === upper) {\n    return `x = ${numberFormatter(lower)}`;\n  }\n  if (lower !== null && upper !== null) {\n    return `${numberFormatter(lower)} ≤ x ≤ ${numberFormatter(upper)}`;\n  }\n  if (lower !== null) {\n    return `x ≥ ${numberFormatter(lower)}`;\n  }\n  if (upper !== null) {\n    return `x ≤ ${numberFormatter(upper)}`;\n  }\n  return '';\n};\nconst validateRange = (values, min, max, enableEmptyFilter, enableSingleValue) => {\n  const [inputMin, inputMax] = values;\n  const requiredError = t('Filter value is required');\n  const rangeError = t('Please provide a value within range');\n  if (enableSingleValue !== undefined) {\n    const isSingleMin = enableSingleValue === SingleValueType.Minimum ||\n    enableSingleValue === SingleValueType.Exact;\n    const value = isSingleMin ? inputMin : inputMax;\n    if (!value && enableEmptyFilter) {\n      return { isValid: false, errorMessage: requiredError };\n    }\n    if (_isNumber(value) && (value < min || value > max)) {\n      return { isValid: false, errorMessage: rangeError };\n    }\n    return { isValid: true, errorMessage: null };\n  }\n  // Range validation\n  if (enableEmptyFilter && (inputMin === null || inputMax === null)) {\n    return { isValid: false, errorMessage: t('Please provide a valid range') };\n  }\n  if (!enableEmptyFilter && inputMin !== null !== (inputMax !== null)) {\n    return { isValid: false, errorMessage: t('Please provide a valid range') };\n  }\n  if (inputMin !== null && inputMax !== null) {\n    if (inputMin > inputMax) {\n      return {\n        isValid: false,\n        errorMessage: t('Minimum value cannot be higher than maximum value')\n      };\n    }\n    if (inputMin < min || inputMax > max) {\n      return {\n        isValid: false,\n        errorMessage: t('Your range is not within the dataset range')\n      };\n    }\n  }\n  return { isValid: true, errorMessage: null };\n};\nexport default function RangeFilterPlugin(props) {\n  const { data, formData, height, width, setDataMask, setFocusedFilter, unsetFocusedFilter, setHoveredFilter, unsetHoveredFilter, setFilterActive, filterState, inputRef, filterBarOrientation = FilterBarOrientation.Vertical } = props;\n  const [row] = data;\n  // @ts-ignore\n  const { min, max } = row;\n  const { groupby, enableSingleValue, enableEmptyFilter, defaultValue } = formData;\n  const minIndex = 0;\n  const maxIndex = 1;\n  const enableSingleExactValue = enableSingleValue === SingleValueType.Exact;\n  const rangeInput = enableSingleValue === undefined;\n  const [col = ''] = ensureIsArray(groupby).map(getColumnLabel);\n  const [inputValue, setInputValue] = useState(filterState.value || defaultValue || [null, null]);\n  const [error, setError] = useState(null);\n  const updateDataMaskError = useCallback((errorMessage) => {\n    setDataMask({\n      extraFormData: {},\n      filterState: {\n        value: null,\n        label: '',\n        validateStatus: 'error',\n        validateMessage: errorMessage || ''\n      }\n    });\n  }, [setDataMask]);\n  const updateDataMaskValue = useCallback((value) => {\n    const [inputMin, inputMax] = value;\n    setDataMask({\n      extraFormData: getRangeExtraFormData(col, inputMin, inputMax),\n      filterState: {\n        value: enableSingleExactValue ?\n        [inputMin, inputMin] :\n        [inputMin, inputMax],\n        label: getLabel(inputMin, inputMax, enableSingleExactValue),\n        validateStatus: undefined,\n        validateMessage: ''\n      }\n    });\n  }, [setDataMask]);\n  useEffect(() => {\n    if ((row == null ? void 0 : row.min) === undefined && (row == null ? void 0 : row.max) === undefined) {\n      return;\n    }\n    if (filterState.validateStatus === 'error' &&\n    error !== filterState.validateMessage) {\n      setError(filterState.validateMessage);\n      const [inputMin, inputMax] = inputValue;\n      const { isValid, errorMessage } = validateRange(inputValue, min, max, enableEmptyFilter, enableSingleValue);\n      const isDefaultError = inputMin === null &&\n      inputMax === null &&\n      filterState.validateStatus === 'error';\n      if (!isValid || isDefaultError) {\n        setError(errorMessage);\n        updateDataMaskError(errorMessage);\n        return;\n      }\n      setError(null);\n      updateDataMaskValue(inputValue);\n      return;\n    }\n    if (filterState.validateStatus === 'error') {\n      setError(filterState.validateMessage);\n      return;\n    }\n    // Clear all case\n    if (filterState.value === undefined && !filterState.validateStatus) {\n      setInputValue([null, null]);\n      updateDataMaskValue([null, null]);\n      return;\n    }\n    if (isEqualArray(defaultValue, inputValue)) {\n      updateDataMaskValue(defaultValue);\n      return;\n    }\n    // Filter state is pre-set case\n    if (filterState.value && !filterState.validateStatus) {\n      setInputValue(filterState.value);\n      updateDataMaskValue(filterState.value);\n    }\n  }, [JSON.stringify(filterState.value)]);\n  const metadataText = useMemo(() => {\n    switch (enableSingleValue) {\n      case SingleValueType.Minimum:\n        return t('Filters for values greater than or equal.');\n      case SingleValueType.Maximum:\n        return t('Filters for values less than or equal.');\n      case SingleValueType.Exact:\n        return t('Filters for values equal to this exact value.');\n      default:\n        return '';\n    }\n  }, [enableSingleValue]);\n  const handleChange = useCallback((newValue, index) => {\n    if ((row == null ? void 0 : row.min) === undefined && (row == null ? void 0 : row.max) === undefined) {\n      return;\n    }\n    const newInputValue = index === minIndex ?\n    [newValue, inputValue[maxIndex]] :\n    [inputValue[minIndex], newValue];\n    setInputValue(newInputValue);\n    const { isValid, errorMessage } = validateRange(newInputValue, min, max, enableEmptyFilter, enableSingleValue);\n    if (!isValid) {\n      setError(errorMessage);\n      updateDataMaskError(errorMessage);\n      return;\n    }\n    setError(null);\n    updateDataMaskValue(newInputValue);\n  }, [col, min, max, enableEmptyFilter, enableSingleValue, setDataMask]);\n  const formItemExtra = useMemo(() => {\n    if (error) {\n      return _jsx(StatusMessage, { status: \"error\", children: error });\n    }\n    return undefined;\n  }, [error]);\n  useEffect(() => {\n    switch (enableSingleValue) {\n      case SingleValueType.Minimum:\n      case SingleValueType.Exact:\n        handleChange(null, maxIndex);\n        break;\n      case SingleValueType.Maximum:\n        handleChange(null, minIndex);\n        break;\n      default:\n        break;\n    }\n    setDataMask({\n      extraFormData: {},\n      filterState: {\n        value: null,\n        label: ''\n      }\n    });\n  }, [enableSingleValue]);\n  return _jsx(FilterPluginStyle, { height: height, width: width, children:\n    Number.isNaN(Number(min)) || Number.isNaN(Number(max)) ? _jsx(\"h4\", { children: t('Chosen non-numeric column') }) : _jsxs(StyledFormItem, { \"aria-labelledby\": `filter-name-${formData.nativeFilterId}`, extra: formItemExtra, children: [\n      _jsxs(Wrapper, { tabIndex: -1, ref: inputRef, onFocus: setFocusedFilter, onBlur: unsetFocusedFilter, onMouseEnter: setHoveredFilter, onMouseLeave: unsetHoveredFilter, onMouseDown: () => setFilterActive(true), onMouseUp: () => setFilterActive(false), children: [\n        (enableSingleValue === SingleValueType.Minimum ||\n        enableSingleValue === SingleValueType.Exact ||\n        enableSingleValue === undefined) && _jsx(InputNumber, { value: inputValue[minIndex], onChange: (val) => handleChange(val, minIndex), placeholder: `${min}`, status: filterState.validateStatus, \"data-test\": \"range-filter-from-input\" }),\n        enableSingleValue === undefined && _jsx(StyledDivider, { children: \"-\" }),\n        (enableSingleValue === SingleValueType.Maximum ||\n        enableSingleValue === undefined) && _jsx(InputNumber, { value: inputValue[maxIndex], onChange: (val) => handleChange(val, maxIndex), placeholder: `${max}`, \"data-test\": \"range-filter-to-input\", status: filterState.validateStatus })] }\n      ),\n      (rangeInput ||\n      filterBarOrientation === FilterBarOrientation.Vertical) &&\n      !filterState.validateStatus && _jsx(Metadata, { value: metadataText })] }\n    ) }\n  );\n}__signature__(RangeFilterPlugin, \"useState{[inputValue, setInputValue](filterState.value || defaultValue || [null, null])}\\nuseState{[error, setError](null)}\\nuseCallback{updateDataMaskError}\\nuseCallback{updateDataMaskValue}\\nuseEffect{}\\nuseMemo{metadataText}\\nuseCallback{handleChange}\\nuseMemo{formItemExtra}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledDivider, \"StyledDivider\", \"/Users/aryurkov/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx\");reactHotLoader.register(Wrapper, \"Wrapper\", \"/Users/aryurkov/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx\");reactHotLoader.register(numberFormatter, \"numberFormatter\", \"/Users/aryurkov/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx\");reactHotLoader.register(getLabel, \"getLabel\", \"/Users/aryurkov/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx\");reactHotLoader.register(validateRange, \"validateRange\", \"/Users/aryurkov/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx\");reactHotLoader.register(RangeFilterPlugin, \"RangeFilterPlugin\", \"/Users/aryurkov/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","getColumnLabel","getNumberFormatter","isEqualArray","NumberFormats","styled","t","useCallback","useEffect","useMemo","useState","InputNumber","FilterBarOrientation","Metadata","StatusMessage","StyledFormItem","FilterPluginStyle","getRangeExtraFormData","SingleValueType","jsx","_jsx","jsxs","_jsxs","StyledDivider","span","theme","gridUnit","colors","grayscale","light1","typography","weights","bold","sizes","m","Wrapper","div","numberFormatter","SMART_NUMBER","getLabel","lower","upper","enableSingleExactValue","validateRange","values","min","max","enableEmptyFilter","enableSingleValue","inputMin","inputMax","requiredError","rangeError","undefined","isSingleMin","Minimum","Exact","value","isValid","errorMessage","_isNumber","RangeFilterPlugin","props","data","formData","height","width","setDataMask","setFocusedFilter","unsetFocusedFilter","setHoveredFilter","unsetHoveredFilter","setFilterActive","filterState","inputRef","filterBarOrientation","Vertical","row","groupby","defaultValue","minIndex","maxIndex","rangeInput","col","map","inputValue","setInputValue","error","setError","updateDataMaskError","extraFormData","label","validateStatus","validateMessage","updateDataMaskValue","isDefaultError","JSON","stringify","metadataText","Maximum","handleChange","newValue","index","newInputValue","formItemExtra","status","children","Number","isNaN","nativeFilterId","extra","tabIndex","ref","onFocus","onBlur","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onChange","val","placeholder","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getNumberFormatter,\n  isEqualArray,\n  NumberFormats,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { InputNumber } from 'src/components/Input';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport Metadata from 'src/components/Metadata';\nimport { isNumber } from 'lodash';\nimport { PluginFilterRangeProps } from './types';\nimport { StatusMessage, StyledFormItem, FilterPluginStyle } from '../common';\nimport { getRangeExtraFormData } from '../../utils';\nimport { SingleValueType } from './SingleValueType';\n\ntype InputValue = number | null;\ntype RangeValue = [InputValue, InputValue];\n\nconst StyledDivider = styled.span`\n  margin: 0 ${({ theme }) => theme.gridUnit * 3}px;\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  align-content: center;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  .antd5-input-number {\n    width: 100%;\n    position: relative;\n  }\n`;\n\nconst numberFormatter = getNumberFormatter(NumberFormats.SMART_NUMBER);\n\nconst getLabel = (\n  lower: number | null,\n  upper: number | null,\n  enableSingleExactValue = false,\n): string => {\n  if (\n    (enableSingleExactValue && lower !== null) ||\n    (lower !== null && lower === upper)\n  ) {\n    return `x = ${numberFormatter(lower)}`;\n  }\n  if (lower !== null && upper !== null) {\n    return `${numberFormatter(lower)} ≤ x ≤ ${numberFormatter(upper)}`;\n  }\n  if (lower !== null) {\n    return `x ≥ ${numberFormatter(lower)}`;\n  }\n  if (upper !== null) {\n    return `x ≤ ${numberFormatter(upper)}`;\n  }\n  return '';\n};\n\nconst validateRange = (\n  values: RangeValue,\n  min: number,\n  max: number,\n  enableEmptyFilter: boolean,\n  enableSingleValue?: SingleValueType,\n): { isValid: boolean; errorMessage: string | null } => {\n  const [inputMin, inputMax] = values;\n  const requiredError = t('Filter value is required');\n  const rangeError = t('Please provide a value within range');\n  if (enableSingleValue !== undefined) {\n    const isSingleMin =\n      enableSingleValue === SingleValueType.Minimum ||\n      enableSingleValue === SingleValueType.Exact;\n    const value = isSingleMin ? inputMin : inputMax;\n\n    if (!value && enableEmptyFilter) {\n      return { isValid: false, errorMessage: requiredError };\n    }\n\n    if (isNumber(value) && (value < min || value > max)) {\n      return { isValid: false, errorMessage: rangeError };\n    }\n\n    return { isValid: true, errorMessage: null };\n  }\n\n  // Range validation\n  if (enableEmptyFilter && (inputMin === null || inputMax === null)) {\n    return { isValid: false, errorMessage: t('Please provide a valid range') };\n  }\n\n  if (!enableEmptyFilter && (inputMin !== null) !== (inputMax !== null)) {\n    return { isValid: false, errorMessage: t('Please provide a valid range') };\n  }\n\n  if (inputMin !== null && inputMax !== null) {\n    if (inputMin > inputMax) {\n      return {\n        isValid: false,\n        errorMessage: t('Minimum value cannot be higher than maximum value'),\n      };\n    }\n    if (inputMin < min || inputMax > max) {\n      return {\n        isValid: false,\n        errorMessage: t('Your range is not within the dataset range'),\n      };\n    }\n  }\n\n  return { isValid: true, errorMessage: null };\n};\n\nexport default function RangeFilterPlugin(props: PluginFilterRangeProps) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    setFocusedFilter,\n    unsetFocusedFilter,\n    setHoveredFilter,\n    unsetHoveredFilter,\n    setFilterActive,\n    filterState,\n    inputRef,\n    filterBarOrientation = FilterBarOrientation.Vertical,\n  } = props;\n  const [row] = data;\n  // @ts-ignore\n  const { min, max }: { min: number; max: number } = row;\n  const { groupby, enableSingleValue, enableEmptyFilter, defaultValue } =\n    formData;\n  const minIndex = 0;\n  const maxIndex = 1;\n  const enableSingleExactValue = enableSingleValue === SingleValueType.Exact;\n  const rangeInput = enableSingleValue === undefined;\n\n  const [col = ''] = ensureIsArray(groupby).map(getColumnLabel);\n\n  const [inputValue, setInputValue] = useState<RangeValue>(\n    filterState.value || defaultValue || [null, null],\n  );\n  const [error, setError] = useState<string | null>(null);\n\n  const updateDataMaskError = useCallback(\n    (errorMessage: string | null) => {\n      setDataMask({\n        extraFormData: {},\n        filterState: {\n          value: null,\n          label: '',\n          validateStatus: 'error',\n          validateMessage: errorMessage || '',\n        },\n      });\n    },\n    [setDataMask],\n  );\n\n  const updateDataMaskValue = useCallback(\n    (value: RangeValue) => {\n      const [inputMin, inputMax] = value;\n      setDataMask({\n        extraFormData: getRangeExtraFormData(col, inputMin, inputMax),\n        filterState: {\n          value: enableSingleExactValue\n            ? [inputMin, inputMin]\n            : [inputMin, inputMax],\n          label: getLabel(inputMin, inputMax, enableSingleExactValue),\n          validateStatus: undefined,\n          validateMessage: '',\n        },\n      });\n    },\n    [setDataMask],\n  );\n\n  useEffect(() => {\n    if (row?.min === undefined && row?.max === undefined) {\n      return;\n    }\n\n    if (\n      filterState.validateStatus === 'error' &&\n      error !== filterState.validateMessage\n    ) {\n      setError(filterState.validateMessage);\n\n      const [inputMin, inputMax] = inputValue;\n\n      const { isValid, errorMessage } = validateRange(\n        inputValue,\n        min,\n        max,\n        enableEmptyFilter,\n        enableSingleValue,\n      );\n\n      const isDefaultError =\n        inputMin === null &&\n        inputMax === null &&\n        filterState.validateStatus === 'error';\n\n      if (!isValid || isDefaultError) {\n        setError(errorMessage);\n        updateDataMaskError(errorMessage);\n        return;\n      }\n\n      setError(null);\n      updateDataMaskValue(inputValue);\n      return;\n    }\n    if (filterState.validateStatus === 'error') {\n      setError(filterState.validateMessage);\n      return;\n    }\n\n    // Clear all case\n    if (filterState.value === undefined && !filterState.validateStatus) {\n      setInputValue([null, null]);\n      updateDataMaskValue([null, null]);\n      return;\n    }\n\n    if (isEqualArray(defaultValue, inputValue)) {\n      updateDataMaskValue(defaultValue);\n      return;\n    }\n\n    // Filter state is pre-set case\n    if (filterState.value && !filterState.validateStatus) {\n      setInputValue(filterState.value);\n      updateDataMaskValue(filterState.value);\n    }\n  }, [JSON.stringify(filterState.value)]);\n\n  const metadataText = useMemo(() => {\n    switch (enableSingleValue) {\n      case SingleValueType.Minimum:\n        return t('Filters for values greater than or equal.');\n      case SingleValueType.Maximum:\n        return t('Filters for values less than or equal.');\n      case SingleValueType.Exact:\n        return t('Filters for values equal to this exact value.');\n      default:\n        return '';\n    }\n  }, [enableSingleValue]);\n\n  const handleChange = useCallback(\n    (newValue: number | null, index: 0 | 1) => {\n      if (row?.min === undefined && row?.max === undefined) {\n        return;\n      }\n      const newInputValue: [number | null, number | null] =\n        index === minIndex\n          ? [newValue, inputValue[maxIndex]]\n          : [inputValue[minIndex], newValue];\n\n      setInputValue(newInputValue);\n\n      const { isValid, errorMessage } = validateRange(\n        newInputValue,\n        min,\n        max,\n        enableEmptyFilter,\n        enableSingleValue,\n      );\n\n      if (!isValid) {\n        setError(errorMessage);\n        updateDataMaskError(errorMessage);\n        return;\n      }\n\n      setError(null);\n      updateDataMaskValue(newInputValue);\n    },\n    [col, min, max, enableEmptyFilter, enableSingleValue, setDataMask],\n  );\n\n  const formItemExtra = useMemo(() => {\n    if (error) {\n      return <StatusMessage status=\"error\">{error}</StatusMessage>;\n    }\n    return undefined;\n  }, [error]);\n\n  useEffect(() => {\n    switch (enableSingleValue) {\n      case SingleValueType.Minimum:\n      case SingleValueType.Exact:\n        handleChange(null, maxIndex);\n        break;\n      case SingleValueType.Maximum:\n        handleChange(null, minIndex);\n        break;\n      default:\n        break;\n    }\n\n    setDataMask({\n      extraFormData: {},\n      filterState: {\n        value: null,\n        label: '',\n      },\n    });\n  }, [enableSingleValue]);\n\n  return (\n    <FilterPluginStyle height={height} width={width}>\n      {Number.isNaN(Number(min)) || Number.isNaN(Number(max)) ? (\n        <h4>{t('Chosen non-numeric column')}</h4>\n      ) : (\n        <StyledFormItem\n          aria-labelledby={`filter-name-${formData.nativeFilterId}`}\n          extra={formItemExtra}\n        >\n          <Wrapper\n            tabIndex={-1}\n            ref={inputRef}\n            onFocus={setFocusedFilter}\n            onBlur={unsetFocusedFilter}\n            onMouseEnter={setHoveredFilter}\n            onMouseLeave={unsetHoveredFilter}\n            onMouseDown={() => setFilterActive(true)}\n            onMouseUp={() => setFilterActive(false)}\n          >\n            {(enableSingleValue === SingleValueType.Minimum ||\n              enableSingleValue === SingleValueType.Exact ||\n              enableSingleValue === undefined) && (\n              <InputNumber\n                value={inputValue[minIndex]}\n                onChange={val => handleChange(val, minIndex)}\n                placeholder={`${min}`}\n                status={filterState.validateStatus}\n                data-test=\"range-filter-from-input\"\n              />\n            )}\n            {enableSingleValue === undefined && (\n              <StyledDivider>-</StyledDivider>\n            )}\n            {(enableSingleValue === SingleValueType.Maximum ||\n              enableSingleValue === undefined) && (\n              <InputNumber\n                value={inputValue[maxIndex]}\n                onChange={val => handleChange(val, maxIndex)}\n                placeholder={`${max}`}\n                data-test=\"range-filter-to-input\"\n                status={filterState.validateStatus}\n              />\n            )}\n          </Wrapper>\n          {(rangeInput ||\n            filterBarOrientation === FilterBarOrientation.Vertical) &&\n            !filterState.validateStatus && <Metadata value={metadataText} />}\n        </StyledFormItem>\n      )}\n    </FilterPluginStyle>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}