{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport FormModal from 'src/components/Modal/FormModal';\nimport { PermissionsField, RoleNameField, UsersField } from './RoleFormItems';\nimport { updateRoleName, updateRolePermissions, updateRoleUsers } from './utils';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst roleTabs = {\n  edit: {\n    key: 'edit',\n    name: t('Edit Role')\n  },\n  users: {\n    key: 'users',\n    name: t('Users')\n  }\n};\nconst userColumns = [\n{\n  accessor: 'first_name',\n  Header: 'First Name'\n},\n{\n  accessor: 'last_name',\n  Header: 'Last Name'\n},\n{\n  accessor: 'username',\n  Header: 'User Name'\n},\n{\n  accessor: 'email',\n  Header: 'Email'\n},\n{\n  accessor: 'active',\n  Header: 'Is Active?',\n  Cell: ({ cell }) => cell.value ? 'Yes' : 'No'\n}];\n\nfunction RoleListEditModal({ show, onHide, role, onSave, permissions, users }) {\n  const { id, name, permission_ids, user_ids } = role;\n  const [activeTabKey, setActiveTabKey] = useState(roleTabs.edit.key);\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const filteredUsers = users.filter((user) => user == null ? void 0 : user.roles.some((role) => role.id === id));\n  const handleFormSubmit = async (values) => {\n    try {\n      await updateRoleName(id, values.roleName);\n      await updateRolePermissions(id, values.rolePermissions);\n      await updateRoleUsers(id, values.roleUsers);\n      addSuccessToast(t('Role successfully updated!'));\n    }\n    catch (err) {\n      addDangerToast(t('Error while updating role!'));\n      throw err;\n    }\n  };\n  const initialValues = {\n    roleName: name,\n    rolePermissions: permission_ids,\n    roleUsers: user_ids\n  };\n  return _jsx(FormModal, { show: show, onHide: onHide, title: t('Edit Role'), onSave: onSave, formSubmitHandler: handleFormSubmit, initialValues: initialValues, bodyStyle: { height: '400px' }, requiredFields: ['roleName'], children:\n    _jsxs(Tabs, { activeKey: activeTabKey, onChange: (activeKey) => setActiveTabKey(activeKey), children: [\n      _jsx(Tabs.TabPane, { tab: roleTabs.edit.name, forceRender: true, children:\n        _jsxs(_Fragment, { children: [\n          _jsx(RoleNameField, {}),\n          _jsx(PermissionsField, { permissions: permissions }),\n          _jsx(UsersField, { users: users })] }\n        ) }, roleTabs.edit.key\n      ),\n      _jsx(Tabs.TabPane, { tab: roleTabs.users.name, children:\n        _jsx(TableView, { columns: userColumns, data: filteredUsers, emptyWrapperType: EmptyWrapperType.Small }) }, roleTabs.users.key\n      )] }\n    ) }\n  );\n}__signature__(RoleListEditModal, \"useState{[activeTabKey, setActiveTabKey](roleTabs.edit.key)}\\nuseToasts{{ addDangerToast, addSuccessToast }}\", () => [useToasts]);const _default =\nRoleListEditModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(roleTabs, \"roleTabs\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListEditModal.tsx\");reactHotLoader.register(userColumns, \"userColumns\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListEditModal.tsx\");reactHotLoader.register(RoleListEditModal, \"RoleListEditModal\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListEditModal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListEditModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","t","Tabs","TableView","EmptyWrapperType","useToasts","FormModal","PermissionsField","RoleNameField","UsersField","updateRoleName","updateRolePermissions","updateRoleUsers","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","roleTabs","edit","key","name","users","userColumns","accessor","Header","Cell","cell","value","RoleListEditModal","show","onHide","role","onSave","permissions","id","permission_ids","user_ids","activeTabKey","setActiveTabKey","addDangerToast","addSuccessToast","filteredUsers","filter","user","roles","some","handleFormSubmit","values","roleName","rolePermissions","roleUsers","err","initialValues","title","formSubmitHandler","bodyStyle","height","requiredFields","children","activeKey","onChange","TabPane","tab","forceRender","columns","data","emptyWrapperType","Small","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListEditModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport { RoleObject } from 'src/pages/RolesList';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport {\n  BaseModalProps,\n  FormattedPermission,\n  RoleForm,\n  UserObject,\n} from 'src/features/roles/types';\nimport { CellProps } from 'react-table';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport FormModal from 'src/components/Modal/FormModal';\nimport { PermissionsField, RoleNameField, UsersField } from './RoleFormItems';\nimport {\n  updateRoleName,\n  updateRolePermissions,\n  updateRoleUsers,\n} from './utils';\n\nexport interface RoleListEditModalProps extends BaseModalProps {\n  role: RoleObject;\n  permissions: FormattedPermission[];\n  users: UserObject[];\n}\n\nconst roleTabs = {\n  edit: {\n    key: 'edit',\n    name: t('Edit Role'),\n  },\n  users: {\n    key: 'users',\n    name: t('Users'),\n  },\n};\n\nconst userColumns = [\n  {\n    accessor: 'first_name',\n    Header: 'First Name',\n  },\n  {\n    accessor: 'last_name',\n    Header: 'Last Name',\n  },\n  {\n    accessor: 'username',\n    Header: 'User Name',\n  },\n  {\n    accessor: 'email',\n    Header: 'Email',\n  },\n  {\n    accessor: 'active',\n    Header: 'Is Active?',\n    Cell: ({ cell }: CellProps<{ active: boolean }>) =>\n      cell.value ? 'Yes' : 'No',\n  },\n];\n\nfunction RoleListEditModal({\n  show,\n  onHide,\n  role,\n  onSave,\n  permissions,\n  users,\n}: RoleListEditModalProps) {\n  const { id, name, permission_ids, user_ids } = role;\n  const [activeTabKey, setActiveTabKey] = useState(roleTabs.edit.key);\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const filteredUsers = users.filter(user =>\n    user?.roles.some(role => role.id === id),\n  );\n\n  const handleFormSubmit = async (values: RoleForm) => {\n    try {\n      await updateRoleName(id, values.roleName);\n      await updateRolePermissions(id, values.rolePermissions);\n      await updateRoleUsers(id, values.roleUsers);\n      addSuccessToast(t('Role successfully updated!'));\n    } catch (err) {\n      addDangerToast(t('Error while updating role!'));\n      throw err;\n    }\n  };\n\n  const initialValues = {\n    roleName: name,\n    rolePermissions: permission_ids,\n    roleUsers: user_ids,\n  };\n\n  return (\n    <FormModal\n      show={show}\n      onHide={onHide}\n      title={t('Edit Role')}\n      onSave={onSave}\n      formSubmitHandler={handleFormSubmit}\n      initialValues={initialValues}\n      bodyStyle={{ height: '400px' }}\n      requiredFields={['roleName']}\n    >\n      <Tabs\n        activeKey={activeTabKey}\n        onChange={activeKey => setActiveTabKey(activeKey)}\n      >\n        <Tabs.TabPane\n          tab={roleTabs.edit.name}\n          key={roleTabs.edit.key}\n          forceRender\n        >\n          <>\n            <RoleNameField />\n            <PermissionsField permissions={permissions} />\n            <UsersField users={users} />\n          </>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={roleTabs.users.name} key={roleTabs.users.key}>\n          <TableView\n            columns={userColumns}\n            data={filteredUsers}\n            emptyWrapperType={EmptyWrapperType.Small}\n          />\n        </Tabs.TabPane>\n      </Tabs>\n    </FormModal>\n  );\n}\n\nexport default RoleListEditModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}