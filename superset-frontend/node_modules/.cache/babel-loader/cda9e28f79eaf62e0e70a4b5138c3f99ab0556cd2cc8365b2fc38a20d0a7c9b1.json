{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport { extendedDayjs } from 'src/utils/dates';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  styled,\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  t,\n  getExtensionsRegistry,\n  useTheme } from\n'@superset-ui/core';\nimport { Global } from '@emotion/react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\n  LOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\n  LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD } from\n'src/logger/LogUtils';\nimport { Icons } from 'src/components/Icons';\nimport { Button } from 'src/components/';\nimport { findPermission } from 'src/utils/findPermission';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport PublishedStatus from 'src/dashboard/components/PublishedStatus';\nimport UndoRedoKeyListeners from 'src/dashboard/components/UndoRedoKeyListeners';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport {\n  UNDO_LIMIT,\n  SAVE_TYPE_OVERWRITE,\n  DASHBOARD_POSITION_DATA_LIMIT,\n  DASHBOARD_HEADER_ID } from\n'src/dashboard/util/constants';\nimport setPeriodicRunner, {\n  stopPeriodicRender } from\n'src/dashboard/util/setPeriodicRunner';\nimport ReportModal from 'src/features/reports/ReportModal';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { deleteActiveReport } from 'src/features/reports/ReportModal/actions';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport DashboardEmbedModal from '../EmbeddedModal';\nimport OverwriteConfirm from '../OverwriteConfirm';\nimport {\n  addDangerToast,\n  addSuccessToast,\n  addWarningToast } from\n'../../../components/MessageToasts/actions';\nimport {\n  dashboardTitleChanged,\n  redoLayoutAction,\n  undoLayoutAction,\n  updateDashboardTitle,\n  clearDashboardHistory } from\n'../../actions/dashboardLayout';\nimport {\n  fetchCharts,\n  fetchFaveStar,\n  maxUndoHistoryToast,\n  onChange,\n  onRefresh,\n  saveDashboardRequest,\n  saveFaveStar,\n  savePublished,\n  setEditMode,\n  setMaxUndoHistoryExceeded,\n  setRefreshFrequency,\n  setUnsavedChanges,\n  updateCss } from\n'../../actions/dashboardState';\nimport { logEvent } from '../../../logger/actions';\nimport { dashboardInfoChanged } from '../../actions/dashboardInfo';\nimport isDashboardLoading from '../../util/isDashboardLoading';\nimport { useChartIds } from '../../util/charts/useChartIds';\nimport { useDashboardMetadataBar } from './useDashboardMetadataBar';\nimport { useHeaderActionsMenu } from './useHeaderActionsDropdownMenu';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst headerContainerStyle = (theme) => css`\n  border-bottom: 1px solid ${theme.colors.grayscale.light2};\n`;\n\nconst editButtonStyle = (theme) => css`\n  color: ${theme.colors.primary.dark2};\n`;\n\nconst actionButtonsStyle = (theme) => css`\n  display: flex;\n  align-items: center;\n\n  .action-schedule-report {\n    margin-left: ${theme.gridUnit * 2}px;\n  }\n\n  .undoRedo {\n    display: flex;\n    margin-right: ${theme.gridUnit * 2}px;\n  }\n`;\n\nconst StyledUndoRedoButton = styled(Button)`\n  // TODO: check if we need this\n  padding: 0;\n  &:hover {\n    background: transparent;\n  }\n`;\n\nconst undoRedoStyle = (theme) => css`\n  color: ${theme.colors.grayscale.light1};\n  &:hover {\n    color: ${theme.colors.grayscale.base};\n  }\n`;\n\nconst undoRedoEmphasized = (theme) => css`\n  color: ${theme.colors.grayscale.base};\n`;\n\nconst undoRedoDisabled = (theme) => css`\n  color: ${theme.colors.grayscale.light2};\n`;\n\nconst saveBtnStyle = (theme) => css`\n  min-width: ${theme.gridUnit * 17}px;\n  height: ${theme.gridUnit * 8}px;\n  span > :first-of-type {\n    margin-right: 0;\n  }\n`;\n\nconst discardBtnStyle = (theme) => css`\n  min-width: ${theme.gridUnit * 22}px;\n  height: ${theme.gridUnit * 8}px;\n`;\n\nconst discardChanges = () => {\n  const url = new URL(window.location.href);\n\n  url.searchParams.delete('edit');\n  window.location.assign(url);\n};\n\nconst Header = () => {var _layout$DASHBOARD_HEA, _layout$DASHBOARD_HEA2, _dashboardInfo$common7, _dashboardInfo$common8, _dashboardInfo$common9, _dashboardInfo$common0, _dashboardInfo$common1, _dashboardInfo$common10;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [didNotifyMaxUndoHistoryToast, setDidNotifyMaxUndoHistoryToast] =\n  useState(false);\n  const [emphasizeUndo, setEmphasizeUndo] = useState(false);\n  const [emphasizeRedo, setEmphasizeRedo] = useState(false);\n  const [showingPropertiesModal, setShowingPropertiesModal] = useState(false);\n  const [showingEmbedModal, setShowingEmbedModal] = useState(false);\n  const [showingReportModal, setShowingReportModal] = useState(false);\n  const [currentReportDeleting, setCurrentReportDeleting] = useState(null);\n  const dashboardInfo = useSelector((state) => state.dashboardInfo);\n  const layout = useSelector((state) => state.dashboardLayout.present);\n  const undoLength = useSelector((state) => state.dashboardLayout.past.length);\n  const redoLength = useSelector((state) => state.dashboardLayout.future.length);\n  const dataMask = useSelector((state) => state.dataMask);\n  const user = useSelector((state) => state.user);\n  const chartIds = useChartIds();\n\n  const {\n    expandedSlices,\n    refreshFrequency,\n    shouldPersistRefreshFrequency,\n    customCss,\n    colorNamespace,\n    colorScheme,\n    isStarred,\n    isPublished,\n    hasUnsavedChanges,\n    maxUndoHistoryExceeded,\n    editMode,\n    lastModifiedTime\n  } = useSelector(\n    (state) => ({\n      expandedSlices: state.dashboardState.expandedSlices,\n      refreshFrequency: state.dashboardState.refreshFrequency,\n      shouldPersistRefreshFrequency:\n      !!state.dashboardState.shouldPersistRefreshFrequency,\n      customCss: state.dashboardState.css,\n      colorNamespace: state.dashboardState.colorNamespace,\n      colorScheme: state.dashboardState.colorScheme,\n      isStarred: !!state.dashboardState.isStarred,\n      isPublished: !!state.dashboardState.isPublished,\n      hasUnsavedChanges: !!state.dashboardState.hasUnsavedChanges,\n      maxUndoHistoryExceeded: !!state.dashboardState.maxUndoHistoryExceeded,\n      editMode: !!state.dashboardState.editMode,\n      lastModifiedTime: state.lastModifiedTime\n    }),\n    shallowEqual\n  );\n  const isLoading = useSelector((state) => isDashboardLoading(state.charts));\n\n  const refreshTimer = useRef(0);\n  const ctrlYTimeout = useRef(0);\n  const ctrlZTimeout = useRef(0);\n\n  const dashboardTitle = (_layout$DASHBOARD_HEA = layout[DASHBOARD_HEADER_ID]) == null ? void 0 : (_layout$DASHBOARD_HEA2 = _layout$DASHBOARD_HEA.meta) == null ? void 0 : _layout$DASHBOARD_HEA2.text;\n  const { slug } = dashboardInfo;\n  const actualLastModifiedTime = Math.max(\n    lastModifiedTime,\n    dashboardInfo.last_modified_time\n  );\n  const boundActionCreators = useMemo(\n    () =>\n    bindActionCreators(\n      {\n        addSuccessToast,\n        addDangerToast,\n        addWarningToast,\n        onUndo: undoLayoutAction,\n        onRedo: redoLayoutAction,\n        clearDashboardHistory,\n        setEditMode,\n        setUnsavedChanges,\n        fetchFaveStar,\n        saveFaveStar,\n        savePublished,\n        fetchCharts,\n        updateDashboardTitle,\n        updateCss,\n        onChange,\n        onSave: saveDashboardRequest,\n        setMaxUndoHistoryExceeded,\n        maxUndoHistoryToast,\n        logEvent,\n        setRefreshFrequency,\n        onRefresh,\n        dashboardInfoChanged,\n        dashboardTitleChanged\n      },\n      dispatch\n    ),\n    [dispatch]\n  );\n\n  const startPeriodicRender = useCallback(\n    (interval) => {\n      let intervalMessage;\n\n      if (interval) {var _dashboardInfo$common, _dashboardInfo$common2;\n        const periodicRefreshOptions = (_dashboardInfo$common =\n        dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common2 = _dashboardInfo$common.conf) == null ? void 0 : _dashboardInfo$common2.DASHBOARD_AUTO_REFRESH_INTERVALS;\n        const predefinedValue = periodicRefreshOptions.find(\n          (option) => Number(option[0]) === interval / 1000\n        );\n\n        if (predefinedValue) {\n          intervalMessage = t(predefinedValue[1]);\n        } else {\n          intervalMessage = extendedDayjs.\n          duration(interval, 'millisecond').\n          humanize();\n        }\n      }\n\n      const fetchCharts = (charts, force = false) =>\n      boundActionCreators.fetchCharts(\n        charts,\n        force,\n        interval * 0.2,\n        dashboardInfo.id\n      );\n\n      const periodicRender = () => {var _dashboardInfo$common3, _dashboardInfo$common4;\n        const { metadata } = dashboardInfo;\n        const immune = metadata.timed_refresh_immune_slices || [];\n        const affectedCharts = chartIds.filter(\n          (chartId) => immune.indexOf(chartId) === -1\n        );\n\n        boundActionCreators.logEvent(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, {\n          interval,\n          chartCount: affectedCharts.length\n        });\n        boundActionCreators.addWarningToast(\n          t(\n            `This dashboard is currently auto refreshing; the next auto refresh will be in %s.`,\n            intervalMessage\n          )\n        );\n        if (\n        ((_dashboardInfo$common3 = dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common4 = _dashboardInfo$common3.conf) == null ? void 0 : _dashboardInfo$common4.DASHBOARD_AUTO_REFRESH_MODE) === 'fetch')\n        {\n          // force-refresh while auto-refresh in dashboard\n          return fetchCharts(affectedCharts);\n        }\n        return fetchCharts(affectedCharts, true);\n      };\n\n      refreshTimer.current = setPeriodicRunner({\n        interval,\n        periodicRender,\n        refreshTimer: refreshTimer.current\n      });\n    },\n    [boundActionCreators, chartIds, dashboardInfo]\n  );\n\n  useEffect(() => {\n    startPeriodicRender(refreshFrequency * 1000);\n  }, [refreshFrequency, startPeriodicRender]);\n\n  useEffect(() => {\n    if (UNDO_LIMIT - undoLength <= 0 && !didNotifyMaxUndoHistoryToast) {\n      setDidNotifyMaxUndoHistoryToast(true);\n      boundActionCreators.maxUndoHistoryToast();\n    }\n    if (undoLength > UNDO_LIMIT && !maxUndoHistoryExceeded) {\n      boundActionCreators.setMaxUndoHistoryExceeded();\n    }\n  }, [\n  boundActionCreators,\n  didNotifyMaxUndoHistoryToast,\n  maxUndoHistoryExceeded,\n  undoLength]\n  );\n\n  useEffect(\n    () => () => {\n      stopPeriodicRender(refreshTimer.current);\n      boundActionCreators.setRefreshFrequency(0);\n      clearTimeout(ctrlYTimeout.current);\n      clearTimeout(ctrlZTimeout.current);\n    },\n    [boundActionCreators]\n  );\n\n  const handleChangeText = useCallback(\n    (nextText) => {\n      if (nextText && dashboardTitle !== nextText) {\n        boundActionCreators.updateDashboardTitle(nextText);\n        boundActionCreators.onChange();\n      }\n    },\n    [boundActionCreators, dashboardTitle]\n  );\n\n  const handleCtrlY = useCallback(() => {\n    boundActionCreators.onRedo();\n    setEmphasizeRedo(true);\n    if (ctrlYTimeout.current) {\n      clearTimeout(ctrlYTimeout.current);\n    }\n    ctrlYTimeout.current = setTimeout(() => {\n      setEmphasizeRedo(false);\n    }, 100);\n  }, [boundActionCreators]);\n\n  const handleCtrlZ = useCallback(() => {\n    boundActionCreators.onUndo();\n    setEmphasizeUndo(true);\n    if (ctrlZTimeout.current) {\n      clearTimeout(ctrlZTimeout.current);\n    }\n    ctrlZTimeout.current = setTimeout(() => {\n      setEmphasizeUndo(false);\n    }, 100);\n  }, [boundActionCreators]);\n\n  const forceRefresh = useCallback(() => {\n    if (!isLoading) {\n      boundActionCreators.logEvent(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, {\n        force: true,\n        interval: 0,\n        chartCount: chartIds.length\n      });\n      return boundActionCreators.onRefresh(chartIds, true, 0, dashboardInfo.id);\n    }\n    return false;\n  }, [boundActionCreators, chartIds, dashboardInfo.id, isLoading]);\n\n  const toggleEditMode = useCallback(() => {\n    boundActionCreators.logEvent(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, {\n      edit_mode: !editMode\n    });\n    boundActionCreators.setEditMode(!editMode);\n  }, [boundActionCreators, editMode]);\n\n  const overwriteDashboard = useCallback(() => {var _dashboardInfo$metada, _dashboardInfo$metada2, _dashboardInfo$metada3, _dashboardInfo$common5, _dashboardInfo$common6;\n    const currentColorNamespace =\n    (dashboardInfo == null ? void 0 : (_dashboardInfo$metada = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada.color_namespace) || colorNamespace;\n    const currentColorScheme =\n    (dashboardInfo == null ? void 0 : (_dashboardInfo$metada2 = dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada2.color_scheme) || colorScheme;\n\n    const data = {\n      certified_by: dashboardInfo.certified_by,\n      certification_details: dashboardInfo.certification_details,\n      css: customCss,\n      dashboard_title: dashboardTitle,\n      last_modified_time: actualLastModifiedTime,\n      owners: dashboardInfo.owners,\n      roles: dashboardInfo.roles,\n      slug,\n      metadata: {\n        ...(dashboardInfo == null ? void 0 : dashboardInfo.metadata),\n        color_namespace: currentColorNamespace,\n        color_scheme: currentColorScheme,\n        positions: layout,\n        refresh_frequency: shouldPersistRefreshFrequency ?\n        refreshFrequency : (_dashboardInfo$metada3 =\n        dashboardInfo.metadata) == null ? void 0 : _dashboardInfo$metada3.refresh_frequency\n      }\n    };\n\n    // make sure positions data less than DB storage limitation:\n    const positionJSONLength = safeStringify(layout).length;\n    const limit =\n    ((_dashboardInfo$common5 = dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common6 = _dashboardInfo$common5.conf) == null ? void 0 : _dashboardInfo$common6.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT) ||\n    DASHBOARD_POSITION_DATA_LIMIT;\n    if (positionJSONLength >= limit) {\n      boundActionCreators.addDangerToast(\n        t(\n          'Your dashboard is too large. Please reduce its size before saving it.'\n        )\n      );\n    } else {\n      if (positionJSONLength >= limit * 0.9) {\n        boundActionCreators.addWarningToast(\n          t('Your dashboard is near the size limit.')\n        );\n      }\n\n      boundActionCreators.onSave(data, dashboardInfo.id, SAVE_TYPE_OVERWRITE);\n    }\n  }, [\n  actualLastModifiedTime,\n  boundActionCreators,\n  colorNamespace,\n  colorScheme,\n  customCss,\n  dashboardInfo.certification_details,\n  dashboardInfo.certified_by, (_dashboardInfo$common7 =\n  dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common8 = _dashboardInfo$common7.conf) == null ? void 0 : _dashboardInfo$common8.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT,\n  dashboardInfo.id,\n  dashboardInfo.metadata,\n  dashboardInfo.owners,\n  dashboardInfo.roles,\n  dashboardTitle,\n  layout,\n  refreshFrequency,\n  shouldPersistRefreshFrequency,\n  slug]\n  );\n\n  const showPropertiesModal = useCallback(() => {\n    setShowingPropertiesModal(true);\n  }, []);\n\n  const hidePropertiesModal = useCallback(() => {\n    setShowingPropertiesModal(false);\n  }, []);\n\n  const showEmbedModal = useCallback(() => {\n    setShowingEmbedModal(true);\n  }, []);\n\n  const hideEmbedModal = useCallback(() => {\n    setShowingEmbedModal(false);\n  }, []);\n\n  const showReportModal = useCallback(() => {\n    setShowingReportModal(true);\n  }, []);\n\n  const hideReportModal = useCallback(() => {\n    setShowingReportModal(false);\n  }, []);\n\n  const metadataBar = useDashboardMetadataBar(dashboardInfo);\n\n  const userCanEdit =\n  dashboardInfo.dash_edit_perm && !dashboardInfo.is_managed_externally;\n  const userCanShare = dashboardInfo.dash_share_perm;\n  const userCanSaveAs = dashboardInfo.dash_save_perm;\n  const userCanCurate =\n  isFeatureEnabled(FeatureFlag.EmbeddedSuperset) &&\n  findPermission('can_set_embedded', 'Dashboard', user.roles);\n  const refreshLimit = (_dashboardInfo$common9 =\n  dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common0 = _dashboardInfo$common9.conf) == null ? void 0 : _dashboardInfo$common0.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT;\n  const refreshWarning = (_dashboardInfo$common1 =\n  dashboardInfo.common) == null ? void 0 : (_dashboardInfo$common10 = _dashboardInfo$common1.conf) == null ? void 0 : _dashboardInfo$common10.\n  SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE;\n  const isEmbedded = !(dashboardInfo != null && dashboardInfo.userId);\n\n  const handleOnPropertiesChange = useCallback(\n    (updates) => {\n      boundActionCreators.dashboardInfoChanged({\n        slug: updates.slug,\n        metadata: JSON.parse(updates.jsonMetadata || '{}'),\n        certified_by: updates.certifiedBy,\n        certification_details: updates.certificationDetails,\n        owners: updates.owners,\n        roles: updates.roles\n      });\n      boundActionCreators.setUnsavedChanges(true);\n      boundActionCreators.dashboardTitleChanged(updates.title);\n    },\n    [boundActionCreators]\n  );\n\n  const NavExtension = extensionsRegistry.get('dashboard.nav.right');\n\n  const editableTitleProps = useMemo(\n    () => ({\n      title: dashboardTitle,\n      canEdit: userCanEdit && editMode,\n      onSave: handleChangeText,\n      placeholder: t('Add the name of the dashboard'),\n      label: t('Dashboard title'),\n      showTooltip: false\n    }),\n    [dashboardTitle, editMode, handleChangeText, userCanEdit]\n  );\n\n  const certifiedBadgeProps = useMemo(\n    () => ({\n      certifiedBy: dashboardInfo.certified_by,\n      details: dashboardInfo.certification_details\n    }),\n    [dashboardInfo.certification_details, dashboardInfo.certified_by]\n  );\n\n  const faveStarProps = useMemo(\n    () => ({\n      itemId: dashboardInfo.id,\n      fetchFaveStar: boundActionCreators.fetchFaveStar,\n      saveFaveStar: boundActionCreators.saveFaveStar,\n      isStarred,\n      showTooltip: true\n    }),\n    [\n    boundActionCreators.fetchFaveStar,\n    boundActionCreators.saveFaveStar,\n    dashboardInfo.id,\n    isStarred]\n\n  );\n\n  const titlePanelAdditionalItems = useMemo(\n    () => [\n    !editMode &&\n    _jsx(PublishedStatus, {\n      dashboardId: dashboardInfo.id,\n      isPublished: isPublished,\n      savePublished: boundActionCreators.savePublished,\n      userCanEdit: userCanEdit,\n      userCanSave: userCanSaveAs,\n      visible: !editMode }\n    ),\n\n    !editMode && !isEmbedded && metadataBar],\n\n    [\n    boundActionCreators.savePublished,\n    dashboardInfo.id,\n    editMode,\n    metadataBar,\n    isEmbedded,\n    isPublished,\n    userCanEdit,\n    userCanSaveAs]\n\n  );\n\n  const rightPanelAdditionalItems = useMemo(\n    () =>\n    _jsxs(\"div\", { className: \"button-container\", children: [\n      userCanSaveAs &&\n      _jsx(\"div\", { className: \"button-container\", \"data-test\": \"dashboard-edit-actions\", children:\n        editMode &&\n        _jsxs(\"div\", { css: actionButtonsStyle, children: [\n          _jsxs(\"div\", { className: \"undoRedo\", children: [\n            _jsx(Tooltip, {\n              id: \"dashboard-undo-tooltip\",\n              title: t('Undo the action'), children:\n\n              _jsx(StyledUndoRedoButton, {\n                buttonStyle: \"link\",\n                disabled: undoLength < 1,\n                onClick: undoLength && boundActionCreators.onUndo, children:\n\n                _jsx(Icons.Undo, {\n                  css: [\n                  undoRedoStyle,\n                  emphasizeUndo && undoRedoEmphasized,\n                  undoLength < 1 && undoRedoDisabled, process.env.NODE_ENV === \"production\" ? \"\" : \";label:rightPanelAdditionalItems;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n\n                  \"data-test\": \"undo-action\",\n                  iconSize: \"xl\" }\n                ) }\n              ) }\n            ),\n            _jsx(Tooltip, {\n              id: \"dashboard-redo-tooltip\",\n              title: t('Redo the action'), children:\n\n              _jsx(StyledUndoRedoButton, {\n                buttonStyle: \"link\",\n                disabled: redoLength < 1,\n                onClick: redoLength && boundActionCreators.onRedo, children:\n\n                _jsx(Icons.Redo, {\n                  css: [\n                  undoRedoStyle,\n                  emphasizeRedo && undoRedoEmphasized,\n                  redoLength < 1 && undoRedoDisabled, process.env.NODE_ENV === \"production\" ? \"\" : \";label:rightPanelAdditionalItems;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n\n                  \"data-test\": \"redo-action\",\n                  iconSize: \"xl\" }\n                ) }\n              ) }\n            )] }\n          ),\n          _jsx(Button, {\n            css: discardBtnStyle,\n            buttonSize: \"small\",\n            onClick: discardChanges,\n            buttonStyle: \"default\",\n            \"data-test\": \"discard-changes-button\",\n            \"aria-label\": t('Discard'), children:\n\n            t('Discard') }\n          ),\n          _jsxs(Button, {\n            css: saveBtnStyle,\n            buttonSize: \"small\",\n            disabled: !hasUnsavedChanges,\n            buttonStyle: \"primary\",\n            onClick: overwriteDashboard,\n            \"data-test\": \"header-save-button\",\n            \"aria-label\": t('Save'), children: [\n\n            _jsx(Icons.SaveOutlined, {\n              iconColor: hasUnsavedChanges && theme.colors.primary.light5,\n              iconSize: \"m\" }\n            ),\n            t('Save')] }\n          )] }\n        ) }\n\n      ),\n\n      editMode ?\n      _jsx(UndoRedoKeyListeners, { onUndo: handleCtrlZ, onRedo: handleCtrlY }) :\n\n      _jsxs(\"div\", { css: actionButtonsStyle, children: [\n        NavExtension && _jsx(NavExtension, {}),\n        userCanEdit &&\n        _jsx(Button, {\n          buttonStyle: \"secondary\",\n          onClick: () => {\n            toggleEditMode();\n            boundActionCreators.clearDashboardHistory == null ? void 0 : boundActionCreators.clearDashboardHistory(); // Resets the `past` as an empty array\n          },\n          \"data-test\": \"edit-dashboard-button\",\n          className: \"action-button\",\n          css: editButtonStyle,\n          \"aria-label\": t('Edit dashboard'), children:\n\n          t('Edit dashboard') }\n        )] }\n\n      )] }\n\n    ),\n\n    [\n    NavExtension,\n    boundActionCreators.onRedo,\n    boundActionCreators.onUndo,\n    boundActionCreators.clearDashboardHistory,\n    editMode,\n    emphasizeRedo,\n    emphasizeUndo,\n    handleCtrlY,\n    handleCtrlZ,\n    hasUnsavedChanges,\n    overwriteDashboard,\n    redoLength,\n    toggleEditMode,\n    undoLength,\n    userCanEdit,\n    userCanSaveAs]\n\n  );\n\n  const handleReportDelete = async (report) => {\n    await dispatch(deleteActiveReport(report));\n    setCurrentReportDeleting(null);\n  };\n\n  const [menu, isDropdownVisible, setIsDropdownVisible] = useHeaderActionsMenu({\n    addSuccessToast: boundActionCreators.addSuccessToast,\n    addDangerToast: boundActionCreators.addDangerToast,\n    dashboardInfo,\n    dashboardId: dashboardInfo.id,\n    dashboardTitle,\n    dataMask,\n    layout,\n    expandedSlices,\n    customCss,\n    colorNamespace,\n    colorScheme,\n    onSave: boundActionCreators.onSave,\n    onChange: boundActionCreators.onChange,\n    forceRefreshAllCharts: forceRefresh,\n    startPeriodicRender,\n    refreshFrequency,\n    shouldPersistRefreshFrequency,\n    setRefreshFrequency: boundActionCreators.setRefreshFrequency,\n    updateCss: boundActionCreators.updateCss,\n    editMode,\n    hasUnsavedChanges,\n    userCanEdit,\n    userCanShare,\n    userCanSave: userCanSaveAs,\n    userCanCurate,\n    isLoading,\n    showReportModal,\n    showPropertiesModal,\n    setCurrentReportDeleting,\n    manageEmbedded: showEmbedModal,\n    refreshLimit,\n    refreshWarning,\n    lastModifiedTime: actualLastModifiedTime,\n    logEvent: boundActionCreators.logEvent\n  });\n  return (\n    _jsxs(\"div\", {\n      css: headerContainerStyle,\n      \"data-test\": \"dashboard-header-container\",\n      \"data-test-id\": dashboardInfo.id,\n      className: \"dashboard-header-container\", children: [\n\n      _jsx(PageHeaderWithActions, {\n        editableTitleProps: editableTitleProps,\n        certificatiedBadgeProps: certifiedBadgeProps,\n        faveStarProps: faveStarProps,\n        titlePanelAdditionalItems: titlePanelAdditionalItems,\n        rightPanelAdditionalItems: rightPanelAdditionalItems,\n        menuDropdownProps: {\n          open: isDropdownVisible,\n          onOpenChange: setIsDropdownVisible\n        },\n        additionalActionsMenu: menu,\n        showFaveStar: (user == null ? void 0 : user.userId) && (dashboardInfo == null ? void 0 : dashboardInfo.id),\n        showTitlePanelItems: true }\n      ),\n      showingPropertiesModal &&\n      _jsx(PropertiesModal, {\n        dashboardId: dashboardInfo.id,\n        dashboardInfo: dashboardInfo,\n        dashboardTitle: dashboardTitle,\n        show: showingPropertiesModal,\n        onHide: hidePropertiesModal,\n        colorScheme: colorScheme,\n        onSubmit: handleOnPropertiesChange,\n        onlyApply: true }\n      ),\n\n\n      _jsx(ReportModal, {\n        userId: user.userId,\n        show: showingReportModal,\n        onHide: hideReportModal,\n        userEmail: user.email,\n        dashboardId: dashboardInfo.id,\n        creationMethod: \"dashboards\" }\n      ),\n\n      currentReportDeleting &&\n      _jsx(DeleteModal, {\n        description: t(\n          'This action will permanently delete %s.',\n          currentReportDeleting == null ? void 0 : currentReportDeleting.name\n        ),\n        onConfirm: () => {\n          if (currentReportDeleting) {\n            handleReportDelete(currentReportDeleting);\n          }\n        },\n        onHide: () => setCurrentReportDeleting(null),\n        open: true,\n        title: t('Delete Report?') }\n      ),\n\n\n      _jsx(OverwriteConfirm, {}),\n\n      userCanCurate &&\n      _jsx(DashboardEmbedModal, {\n        show: showingEmbedModal,\n        onHide: hideEmbedModal,\n        dashboardId: dashboardInfo.id }\n      ),\n\n      _jsx(Global, {\n        styles: css`\n          .antd5-menu-vertical {\n            border-right: none;\n          }\n        ` }\n      )] }\n    ));\n\n};__signature__(Header, \"useTheme{theme}\\nuseDispatch{dispatch}\\nuseState{[didNotifyMaxUndoHistoryToast, setDidNotifyMaxUndoHistoryToast](false)}\\nuseState{[emphasizeUndo, setEmphasizeUndo](false)}\\nuseState{[emphasizeRedo, setEmphasizeRedo](false)}\\nuseState{[showingPropertiesModal, setShowingPropertiesModal](false)}\\nuseState{[showingEmbedModal, setShowingEmbedModal](false)}\\nuseState{[showingReportModal, setShowingReportModal](false)}\\nuseState{[currentReportDeleting, setCurrentReportDeleting](null)}\\nuseSelector{dashboardInfo}\\nuseSelector{layout}\\nuseSelector{undoLength}\\nuseSelector{redoLength}\\nuseSelector{dataMask}\\nuseSelector{user}\\nuseChartIds{chartIds}\\nuseSelector{{\\n    expandedSlices,\\n    refreshFrequency,\\n    shouldPersistRefreshFrequency,\\n    customCss,\\n    colorNamespace,\\n    colorScheme,\\n    isStarred,\\n    isPublished,\\n    hasUnsavedChanges,\\n    maxUndoHistoryExceeded,\\n    editMode,\\n    lastModifiedTime,\\n  }}\\nuseSelector{isLoading}\\nuseRef{refreshTimer}\\nuseRef{ctrlYTimeout}\\nuseRef{ctrlZTimeout}\\nuseMemo{boundActionCreators}\\nuseCallback{startPeriodicRender}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{handleChangeText}\\nuseCallback{handleCtrlY}\\nuseCallback{handleCtrlZ}\\nuseCallback{forceRefresh}\\nuseCallback{toggleEditMode}\\nuseCallback{overwriteDashboard}\\nuseCallback{showPropertiesModal}\\nuseCallback{hidePropertiesModal}\\nuseCallback{showEmbedModal}\\nuseCallback{hideEmbedModal}\\nuseCallback{showReportModal}\\nuseCallback{hideReportModal}\\nuseDashboardMetadataBar{metadataBar}\\nuseCallback{handleOnPropertiesChange}\\nuseMemo{editableTitleProps}\\nuseMemo{certifiedBadgeProps}\\nuseMemo{faveStarProps}\\nuseMemo{titlePanelAdditionalItems}\\nuseMemo{rightPanelAdditionalItems}\\nuseHeaderActionsMenu{[menu, isDropdownVisible, setIsDropdownVisible]}\", () => [useTheme, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useChartIds, useSelector, useSelector, useDashboardMetadataBar, useHeaderActionsMenu]);const _default =\n\nHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(headerContainerStyle, \"headerContainerStyle\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(editButtonStyle, \"editButtonStyle\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(actionButtonsStyle, \"actionButtonsStyle\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(StyledUndoRedoButton, \"StyledUndoRedoButton\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(undoRedoStyle, \"undoRedoStyle\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(undoRedoEmphasized, \"undoRedoEmphasized\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(undoRedoDisabled, \"undoRedoDisabled\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(saveBtnStyle, \"saveBtnStyle\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(discardBtnStyle, \"discardBtnStyle\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(discardChanges, \"discardChanges\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(Header, \"Header\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["extendedDayjs","useCallback","useEffect","useMemo","useRef","useState","styled","css","isFeatureEnabled","FeatureFlag","t","getExtensionsRegistry","useTheme","Global","shallowEqual","useDispatch","useSelector","bindActionCreators","LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD","LOG_ACTIONS_FORCE_REFRESH_DASHBOARD","LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD","Icons","Button","findPermission","Tooltip","safeStringify","PublishedStatus","UndoRedoKeyListeners","PropertiesModal","UNDO_LIMIT","SAVE_TYPE_OVERWRITE","DASHBOARD_POSITION_DATA_LIMIT","DASHBOARD_HEADER_ID","setPeriodicRunner","stopPeriodicRender","ReportModal","DeleteModal","deleteActiveReport","PageHeaderWithActions","DashboardEmbedModal","OverwriteConfirm","addDangerToast","addSuccessToast","addWarningToast","dashboardTitleChanged","redoLayoutAction","undoLayoutAction","updateDashboardTitle","clearDashboardHistory","fetchCharts","fetchFaveStar","maxUndoHistoryToast","onChange","onRefresh","saveDashboardRequest","saveFaveStar","savePublished","setEditMode","setMaxUndoHistoryExceeded","setRefreshFrequency","setUnsavedChanges","updateCss","logEvent","dashboardInfoChanged","isDashboardLoading","useChartIds","useDashboardMetadataBar","useHeaderActionsMenu","jsx","_jsx","jsxs","_jsxs","extensionsRegistry","headerContainerStyle","theme","colors","grayscale","light2","editButtonStyle","primary","dark2","actionButtonsStyle","gridUnit","StyledUndoRedoButton","undoRedoStyle","light1","base","undoRedoEmphasized","undoRedoDisabled","saveBtnStyle","discardBtnStyle","discardChanges","url","URL","window","location","href","searchParams","delete","assign","Header","_layout$DASHBOARD_HEA","_layout$DASHBOARD_HEA2","_dashboardInfo$common7","_dashboardInfo$common8","_dashboardInfo$common9","_dashboardInfo$common0","_dashboardInfo$common1","_dashboardInfo$common10","dispatch","didNotifyMaxUndoHistoryToast","setDidNotifyMaxUndoHistoryToast","emphasizeUndo","setEmphasizeUndo","emphasizeRedo","setEmphasizeRedo","showingPropertiesModal","setShowingPropertiesModal","showingEmbedModal","setShowingEmbedModal","showingReportModal","setShowingReportModal","currentReportDeleting","setCurrentReportDeleting","dashboardInfo","state","layout","dashboardLayout","present","undoLength","past","length","redoLength","future","dataMask","user","chartIds","expandedSlices","refreshFrequency","shouldPersistRefreshFrequency","customCss","colorNamespace","colorScheme","isStarred","isPublished","hasUnsavedChanges","maxUndoHistoryExceeded","editMode","lastModifiedTime","dashboardState","isLoading","charts","refreshTimer","ctrlYTimeout","ctrlZTimeout","dashboardTitle","meta","text","slug","actualLastModifiedTime","Math","max","last_modified_time","boundActionCreators","onUndo","onRedo","onSave","startPeriodicRender","interval","intervalMessage","_dashboardInfo$common","_dashboardInfo$common2","periodicRefreshOptions","common","conf","DASHBOARD_AUTO_REFRESH_INTERVALS","predefinedValue","find","option","Number","duration","humanize","force","id","periodicRender","_dashboardInfo$common3","_dashboardInfo$common4","metadata","immune","timed_refresh_immune_slices","affectedCharts","filter","chartId","indexOf","chartCount","DASHBOARD_AUTO_REFRESH_MODE","current","clearTimeout","handleChangeText","nextText","handleCtrlY","setTimeout","handleCtrlZ","forceRefresh","toggleEditMode","edit_mode","overwriteDashboard","_dashboardInfo$metada","_dashboardInfo$metada2","_dashboardInfo$metada3","_dashboardInfo$common5","_dashboardInfo$common6","currentColorNamespace","color_namespace","currentColorScheme","color_scheme","data","certified_by","certification_details","dashboard_title","owners","roles","positions","refresh_frequency","positionJSONLength","limit","SUPERSET_DASHBOARD_POSITION_DATA_LIMIT","showPropertiesModal","hidePropertiesModal","showEmbedModal","hideEmbedModal","showReportModal","hideReportModal","metadataBar","userCanEdit","dash_edit_perm","is_managed_externally","userCanShare","dash_share_perm","userCanSaveAs","dash_save_perm","userCanCurate","EmbeddedSuperset","refreshLimit","SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT","refreshWarning","SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE","isEmbedded","userId","handleOnPropertiesChange","updates","JSON","parse","jsonMetadata","certifiedBy","certificationDetails","title","NavExtension","get","editableTitleProps","canEdit","placeholder","label","showTooltip","certifiedBadgeProps","details","faveStarProps","itemId","titlePanelAdditionalItems","dashboardId","userCanSave","visible","rightPanelAdditionalItems","className","children","buttonStyle","disabled","onClick","Undo","process","env","NODE_ENV","iconSize","Redo","buttonSize","SaveOutlined","iconColor","light5","handleReportDelete","report","menu","isDropdownVisible","setIsDropdownVisible","forceRefreshAllCharts","manageEmbedded","certificatiedBadgeProps","menuDropdownProps","open","onOpenChange","additionalActionsMenu","showFaveStar","showTitlePanelItems","show","onHide","onSubmit","onlyApply","userEmail","email","creationMethod","description","name","onConfirm","styles","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Header/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport { extendedDayjs } from 'src/utils/dates';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  styled,\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  t,\n  getExtensionsRegistry,\n  useTheme,\n} from '@superset-ui/core';\nimport { Global } from '@emotion/react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\n  LOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\n  LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\n} from 'src/logger/LogUtils';\nimport { Icons } from 'src/components/Icons';\nimport { Button } from 'src/components/';\nimport { findPermission } from 'src/utils/findPermission';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport PublishedStatus from 'src/dashboard/components/PublishedStatus';\nimport UndoRedoKeyListeners from 'src/dashboard/components/UndoRedoKeyListeners';\nimport PropertiesModal from 'src/dashboard/components/PropertiesModal';\nimport {\n  UNDO_LIMIT,\n  SAVE_TYPE_OVERWRITE,\n  DASHBOARD_POSITION_DATA_LIMIT,\n  DASHBOARD_HEADER_ID,\n} from 'src/dashboard/util/constants';\nimport setPeriodicRunner, {\n  stopPeriodicRender,\n} from 'src/dashboard/util/setPeriodicRunner';\nimport ReportModal from 'src/features/reports/ReportModal';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { deleteActiveReport } from 'src/features/reports/ReportModal/actions';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport DashboardEmbedModal from '../EmbeddedModal';\nimport OverwriteConfirm from '../OverwriteConfirm';\nimport {\n  addDangerToast,\n  addSuccessToast,\n  addWarningToast,\n} from '../../../components/MessageToasts/actions';\nimport {\n  dashboardTitleChanged,\n  redoLayoutAction,\n  undoLayoutAction,\n  updateDashboardTitle,\n  clearDashboardHistory,\n} from '../../actions/dashboardLayout';\nimport {\n  fetchCharts,\n  fetchFaveStar,\n  maxUndoHistoryToast,\n  onChange,\n  onRefresh,\n  saveDashboardRequest,\n  saveFaveStar,\n  savePublished,\n  setEditMode,\n  setMaxUndoHistoryExceeded,\n  setRefreshFrequency,\n  setUnsavedChanges,\n  updateCss,\n} from '../../actions/dashboardState';\nimport { logEvent } from '../../../logger/actions';\nimport { dashboardInfoChanged } from '../../actions/dashboardInfo';\nimport isDashboardLoading from '../../util/isDashboardLoading';\nimport { useChartIds } from '../../util/charts/useChartIds';\nimport { useDashboardMetadataBar } from './useDashboardMetadataBar';\nimport { useHeaderActionsMenu } from './useHeaderActionsDropdownMenu';\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst headerContainerStyle = theme => css`\n  border-bottom: 1px solid ${theme.colors.grayscale.light2};\n`;\n\nconst editButtonStyle = theme => css`\n  color: ${theme.colors.primary.dark2};\n`;\n\nconst actionButtonsStyle = theme => css`\n  display: flex;\n  align-items: center;\n\n  .action-schedule-report {\n    margin-left: ${theme.gridUnit * 2}px;\n  }\n\n  .undoRedo {\n    display: flex;\n    margin-right: ${theme.gridUnit * 2}px;\n  }\n`;\n\nconst StyledUndoRedoButton = styled(Button)`\n  // TODO: check if we need this\n  padding: 0;\n  &:hover {\n    background: transparent;\n  }\n`;\n\nconst undoRedoStyle = theme => css`\n  color: ${theme.colors.grayscale.light1};\n  &:hover {\n    color: ${theme.colors.grayscale.base};\n  }\n`;\n\nconst undoRedoEmphasized = theme => css`\n  color: ${theme.colors.grayscale.base};\n`;\n\nconst undoRedoDisabled = theme => css`\n  color: ${theme.colors.grayscale.light2};\n`;\n\nconst saveBtnStyle = theme => css`\n  min-width: ${theme.gridUnit * 17}px;\n  height: ${theme.gridUnit * 8}px;\n  span > :first-of-type {\n    margin-right: 0;\n  }\n`;\n\nconst discardBtnStyle = theme => css`\n  min-width: ${theme.gridUnit * 22}px;\n  height: ${theme.gridUnit * 8}px;\n`;\n\nconst discardChanges = () => {\n  const url = new URL(window.location.href);\n\n  url.searchParams.delete('edit');\n  window.location.assign(url);\n};\n\nconst Header = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [didNotifyMaxUndoHistoryToast, setDidNotifyMaxUndoHistoryToast] =\n    useState(false);\n  const [emphasizeUndo, setEmphasizeUndo] = useState(false);\n  const [emphasizeRedo, setEmphasizeRedo] = useState(false);\n  const [showingPropertiesModal, setShowingPropertiesModal] = useState(false);\n  const [showingEmbedModal, setShowingEmbedModal] = useState(false);\n  const [showingReportModal, setShowingReportModal] = useState(false);\n  const [currentReportDeleting, setCurrentReportDeleting] = useState(null);\n  const dashboardInfo = useSelector(state => state.dashboardInfo);\n  const layout = useSelector(state => state.dashboardLayout.present);\n  const undoLength = useSelector(state => state.dashboardLayout.past.length);\n  const redoLength = useSelector(state => state.dashboardLayout.future.length);\n  const dataMask = useSelector(state => state.dataMask);\n  const user = useSelector(state => state.user);\n  const chartIds = useChartIds();\n\n  const {\n    expandedSlices,\n    refreshFrequency,\n    shouldPersistRefreshFrequency,\n    customCss,\n    colorNamespace,\n    colorScheme,\n    isStarred,\n    isPublished,\n    hasUnsavedChanges,\n    maxUndoHistoryExceeded,\n    editMode,\n    lastModifiedTime,\n  } = useSelector(\n    state => ({\n      expandedSlices: state.dashboardState.expandedSlices,\n      refreshFrequency: state.dashboardState.refreshFrequency,\n      shouldPersistRefreshFrequency:\n        !!state.dashboardState.shouldPersistRefreshFrequency,\n      customCss: state.dashboardState.css,\n      colorNamespace: state.dashboardState.colorNamespace,\n      colorScheme: state.dashboardState.colorScheme,\n      isStarred: !!state.dashboardState.isStarred,\n      isPublished: !!state.dashboardState.isPublished,\n      hasUnsavedChanges: !!state.dashboardState.hasUnsavedChanges,\n      maxUndoHistoryExceeded: !!state.dashboardState.maxUndoHistoryExceeded,\n      editMode: !!state.dashboardState.editMode,\n      lastModifiedTime: state.lastModifiedTime,\n    }),\n    shallowEqual,\n  );\n  const isLoading = useSelector(state => isDashboardLoading(state.charts));\n\n  const refreshTimer = useRef(0);\n  const ctrlYTimeout = useRef(0);\n  const ctrlZTimeout = useRef(0);\n\n  const dashboardTitle = layout[DASHBOARD_HEADER_ID]?.meta?.text;\n  const { slug } = dashboardInfo;\n  const actualLastModifiedTime = Math.max(\n    lastModifiedTime,\n    dashboardInfo.last_modified_time,\n  );\n  const boundActionCreators = useMemo(\n    () =>\n      bindActionCreators(\n        {\n          addSuccessToast,\n          addDangerToast,\n          addWarningToast,\n          onUndo: undoLayoutAction,\n          onRedo: redoLayoutAction,\n          clearDashboardHistory,\n          setEditMode,\n          setUnsavedChanges,\n          fetchFaveStar,\n          saveFaveStar,\n          savePublished,\n          fetchCharts,\n          updateDashboardTitle,\n          updateCss,\n          onChange,\n          onSave: saveDashboardRequest,\n          setMaxUndoHistoryExceeded,\n          maxUndoHistoryToast,\n          logEvent,\n          setRefreshFrequency,\n          onRefresh,\n          dashboardInfoChanged,\n          dashboardTitleChanged,\n        },\n        dispatch,\n      ),\n    [dispatch],\n  );\n\n  const startPeriodicRender = useCallback(\n    interval => {\n      let intervalMessage;\n\n      if (interval) {\n        const periodicRefreshOptions =\n          dashboardInfo.common?.conf?.DASHBOARD_AUTO_REFRESH_INTERVALS;\n        const predefinedValue = periodicRefreshOptions.find(\n          option => Number(option[0]) === interval / 1000,\n        );\n\n        if (predefinedValue) {\n          intervalMessage = t(predefinedValue[1]);\n        } else {\n          intervalMessage = extendedDayjs\n            .duration(interval, 'millisecond')\n            .humanize();\n        }\n      }\n\n      const fetchCharts = (charts, force = false) =>\n        boundActionCreators.fetchCharts(\n          charts,\n          force,\n          interval * 0.2,\n          dashboardInfo.id,\n        );\n\n      const periodicRender = () => {\n        const { metadata } = dashboardInfo;\n        const immune = metadata.timed_refresh_immune_slices || [];\n        const affectedCharts = chartIds.filter(\n          chartId => immune.indexOf(chartId) === -1,\n        );\n\n        boundActionCreators.logEvent(LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD, {\n          interval,\n          chartCount: affectedCharts.length,\n        });\n        boundActionCreators.addWarningToast(\n          t(\n            `This dashboard is currently auto refreshing; the next auto refresh will be in %s.`,\n            intervalMessage,\n          ),\n        );\n        if (\n          dashboardInfo.common?.conf?.DASHBOARD_AUTO_REFRESH_MODE === 'fetch'\n        ) {\n          // force-refresh while auto-refresh in dashboard\n          return fetchCharts(affectedCharts);\n        }\n        return fetchCharts(affectedCharts, true);\n      };\n\n      refreshTimer.current = setPeriodicRunner({\n        interval,\n        periodicRender,\n        refreshTimer: refreshTimer.current,\n      });\n    },\n    [boundActionCreators, chartIds, dashboardInfo],\n  );\n\n  useEffect(() => {\n    startPeriodicRender(refreshFrequency * 1000);\n  }, [refreshFrequency, startPeriodicRender]);\n\n  useEffect(() => {\n    if (UNDO_LIMIT - undoLength <= 0 && !didNotifyMaxUndoHistoryToast) {\n      setDidNotifyMaxUndoHistoryToast(true);\n      boundActionCreators.maxUndoHistoryToast();\n    }\n    if (undoLength > UNDO_LIMIT && !maxUndoHistoryExceeded) {\n      boundActionCreators.setMaxUndoHistoryExceeded();\n    }\n  }, [\n    boundActionCreators,\n    didNotifyMaxUndoHistoryToast,\n    maxUndoHistoryExceeded,\n    undoLength,\n  ]);\n\n  useEffect(\n    () => () => {\n      stopPeriodicRender(refreshTimer.current);\n      boundActionCreators.setRefreshFrequency(0);\n      clearTimeout(ctrlYTimeout.current);\n      clearTimeout(ctrlZTimeout.current);\n    },\n    [boundActionCreators],\n  );\n\n  const handleChangeText = useCallback(\n    nextText => {\n      if (nextText && dashboardTitle !== nextText) {\n        boundActionCreators.updateDashboardTitle(nextText);\n        boundActionCreators.onChange();\n      }\n    },\n    [boundActionCreators, dashboardTitle],\n  );\n\n  const handleCtrlY = useCallback(() => {\n    boundActionCreators.onRedo();\n    setEmphasizeRedo(true);\n    if (ctrlYTimeout.current) {\n      clearTimeout(ctrlYTimeout.current);\n    }\n    ctrlYTimeout.current = setTimeout(() => {\n      setEmphasizeRedo(false);\n    }, 100);\n  }, [boundActionCreators]);\n\n  const handleCtrlZ = useCallback(() => {\n    boundActionCreators.onUndo();\n    setEmphasizeUndo(true);\n    if (ctrlZTimeout.current) {\n      clearTimeout(ctrlZTimeout.current);\n    }\n    ctrlZTimeout.current = setTimeout(() => {\n      setEmphasizeUndo(false);\n    }, 100);\n  }, [boundActionCreators]);\n\n  const forceRefresh = useCallback(() => {\n    if (!isLoading) {\n      boundActionCreators.logEvent(LOG_ACTIONS_FORCE_REFRESH_DASHBOARD, {\n        force: true,\n        interval: 0,\n        chartCount: chartIds.length,\n      });\n      return boundActionCreators.onRefresh(chartIds, true, 0, dashboardInfo.id);\n    }\n    return false;\n  }, [boundActionCreators, chartIds, dashboardInfo.id, isLoading]);\n\n  const toggleEditMode = useCallback(() => {\n    boundActionCreators.logEvent(LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD, {\n      edit_mode: !editMode,\n    });\n    boundActionCreators.setEditMode(!editMode);\n  }, [boundActionCreators, editMode]);\n\n  const overwriteDashboard = useCallback(() => {\n    const currentColorNamespace =\n      dashboardInfo?.metadata?.color_namespace || colorNamespace;\n    const currentColorScheme =\n      dashboardInfo?.metadata?.color_scheme || colorScheme;\n\n    const data = {\n      certified_by: dashboardInfo.certified_by,\n      certification_details: dashboardInfo.certification_details,\n      css: customCss,\n      dashboard_title: dashboardTitle,\n      last_modified_time: actualLastModifiedTime,\n      owners: dashboardInfo.owners,\n      roles: dashboardInfo.roles,\n      slug,\n      metadata: {\n        ...dashboardInfo?.metadata,\n        color_namespace: currentColorNamespace,\n        color_scheme: currentColorScheme,\n        positions: layout,\n        refresh_frequency: shouldPersistRefreshFrequency\n          ? refreshFrequency\n          : dashboardInfo.metadata?.refresh_frequency,\n      },\n    };\n\n    // make sure positions data less than DB storage limitation:\n    const positionJSONLength = safeStringify(layout).length;\n    const limit =\n      dashboardInfo.common?.conf?.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT ||\n      DASHBOARD_POSITION_DATA_LIMIT;\n    if (positionJSONLength >= limit) {\n      boundActionCreators.addDangerToast(\n        t(\n          'Your dashboard is too large. Please reduce its size before saving it.',\n        ),\n      );\n    } else {\n      if (positionJSONLength >= limit * 0.9) {\n        boundActionCreators.addWarningToast(\n          t('Your dashboard is near the size limit.'),\n        );\n      }\n\n      boundActionCreators.onSave(data, dashboardInfo.id, SAVE_TYPE_OVERWRITE);\n    }\n  }, [\n    actualLastModifiedTime,\n    boundActionCreators,\n    colorNamespace,\n    colorScheme,\n    customCss,\n    dashboardInfo.certification_details,\n    dashboardInfo.certified_by,\n    dashboardInfo.common?.conf?.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT,\n    dashboardInfo.id,\n    dashboardInfo.metadata,\n    dashboardInfo.owners,\n    dashboardInfo.roles,\n    dashboardTitle,\n    layout,\n    refreshFrequency,\n    shouldPersistRefreshFrequency,\n    slug,\n  ]);\n\n  const showPropertiesModal = useCallback(() => {\n    setShowingPropertiesModal(true);\n  }, []);\n\n  const hidePropertiesModal = useCallback(() => {\n    setShowingPropertiesModal(false);\n  }, []);\n\n  const showEmbedModal = useCallback(() => {\n    setShowingEmbedModal(true);\n  }, []);\n\n  const hideEmbedModal = useCallback(() => {\n    setShowingEmbedModal(false);\n  }, []);\n\n  const showReportModal = useCallback(() => {\n    setShowingReportModal(true);\n  }, []);\n\n  const hideReportModal = useCallback(() => {\n    setShowingReportModal(false);\n  }, []);\n\n  const metadataBar = useDashboardMetadataBar(dashboardInfo);\n\n  const userCanEdit =\n    dashboardInfo.dash_edit_perm && !dashboardInfo.is_managed_externally;\n  const userCanShare = dashboardInfo.dash_share_perm;\n  const userCanSaveAs = dashboardInfo.dash_save_perm;\n  const userCanCurate =\n    isFeatureEnabled(FeatureFlag.EmbeddedSuperset) &&\n    findPermission('can_set_embedded', 'Dashboard', user.roles);\n  const refreshLimit =\n    dashboardInfo.common?.conf?.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT;\n  const refreshWarning =\n    dashboardInfo.common?.conf\n      ?.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE;\n  const isEmbedded = !dashboardInfo?.userId;\n\n  const handleOnPropertiesChange = useCallback(\n    updates => {\n      boundActionCreators.dashboardInfoChanged({\n        slug: updates.slug,\n        metadata: JSON.parse(updates.jsonMetadata || '{}'),\n        certified_by: updates.certifiedBy,\n        certification_details: updates.certificationDetails,\n        owners: updates.owners,\n        roles: updates.roles,\n      });\n      boundActionCreators.setUnsavedChanges(true);\n      boundActionCreators.dashboardTitleChanged(updates.title);\n    },\n    [boundActionCreators],\n  );\n\n  const NavExtension = extensionsRegistry.get('dashboard.nav.right');\n\n  const editableTitleProps = useMemo(\n    () => ({\n      title: dashboardTitle,\n      canEdit: userCanEdit && editMode,\n      onSave: handleChangeText,\n      placeholder: t('Add the name of the dashboard'),\n      label: t('Dashboard title'),\n      showTooltip: false,\n    }),\n    [dashboardTitle, editMode, handleChangeText, userCanEdit],\n  );\n\n  const certifiedBadgeProps = useMemo(\n    () => ({\n      certifiedBy: dashboardInfo.certified_by,\n      details: dashboardInfo.certification_details,\n    }),\n    [dashboardInfo.certification_details, dashboardInfo.certified_by],\n  );\n\n  const faveStarProps = useMemo(\n    () => ({\n      itemId: dashboardInfo.id,\n      fetchFaveStar: boundActionCreators.fetchFaveStar,\n      saveFaveStar: boundActionCreators.saveFaveStar,\n      isStarred,\n      showTooltip: true,\n    }),\n    [\n      boundActionCreators.fetchFaveStar,\n      boundActionCreators.saveFaveStar,\n      dashboardInfo.id,\n      isStarred,\n    ],\n  );\n\n  const titlePanelAdditionalItems = useMemo(\n    () => [\n      !editMode && (\n        <PublishedStatus\n          dashboardId={dashboardInfo.id}\n          isPublished={isPublished}\n          savePublished={boundActionCreators.savePublished}\n          userCanEdit={userCanEdit}\n          userCanSave={userCanSaveAs}\n          visible={!editMode}\n        />\n      ),\n      !editMode && !isEmbedded && metadataBar,\n    ],\n    [\n      boundActionCreators.savePublished,\n      dashboardInfo.id,\n      editMode,\n      metadataBar,\n      isEmbedded,\n      isPublished,\n      userCanEdit,\n      userCanSaveAs,\n    ],\n  );\n\n  const rightPanelAdditionalItems = useMemo(\n    () => (\n      <div className=\"button-container\">\n        {userCanSaveAs && (\n          <div className=\"button-container\" data-test=\"dashboard-edit-actions\">\n            {editMode && (\n              <div css={actionButtonsStyle}>\n                <div className=\"undoRedo\">\n                  <Tooltip\n                    id=\"dashboard-undo-tooltip\"\n                    title={t('Undo the action')}\n                  >\n                    <StyledUndoRedoButton\n                      buttonStyle=\"link\"\n                      disabled={undoLength < 1}\n                      onClick={undoLength && boundActionCreators.onUndo}\n                    >\n                      <Icons.Undo\n                        css={[\n                          undoRedoStyle,\n                          emphasizeUndo && undoRedoEmphasized,\n                          undoLength < 1 && undoRedoDisabled,\n                        ]}\n                        data-test=\"undo-action\"\n                        iconSize=\"xl\"\n                      />\n                    </StyledUndoRedoButton>\n                  </Tooltip>\n                  <Tooltip\n                    id=\"dashboard-redo-tooltip\"\n                    title={t('Redo the action')}\n                  >\n                    <StyledUndoRedoButton\n                      buttonStyle=\"link\"\n                      disabled={redoLength < 1}\n                      onClick={redoLength && boundActionCreators.onRedo}\n                    >\n                      <Icons.Redo\n                        css={[\n                          undoRedoStyle,\n                          emphasizeRedo && undoRedoEmphasized,\n                          redoLength < 1 && undoRedoDisabled,\n                        ]}\n                        data-test=\"redo-action\"\n                        iconSize=\"xl\"\n                      />\n                    </StyledUndoRedoButton>\n                  </Tooltip>\n                </div>\n                <Button\n                  css={discardBtnStyle}\n                  buttonSize=\"small\"\n                  onClick={discardChanges}\n                  buttonStyle=\"default\"\n                  data-test=\"discard-changes-button\"\n                  aria-label={t('Discard')}\n                >\n                  {t('Discard')}\n                </Button>\n                <Button\n                  css={saveBtnStyle}\n                  buttonSize=\"small\"\n                  disabled={!hasUnsavedChanges}\n                  buttonStyle=\"primary\"\n                  onClick={overwriteDashboard}\n                  data-test=\"header-save-button\"\n                  aria-label={t('Save')}\n                >\n                  <Icons.SaveOutlined\n                    iconColor={hasUnsavedChanges && theme.colors.primary.light5}\n                    iconSize=\"m\"\n                  />\n                  {t('Save')}\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n        {editMode ? (\n          <UndoRedoKeyListeners onUndo={handleCtrlZ} onRedo={handleCtrlY} />\n        ) : (\n          <div css={actionButtonsStyle}>\n            {NavExtension && <NavExtension />}\n            {userCanEdit && (\n              <Button\n                buttonStyle=\"secondary\"\n                onClick={() => {\n                  toggleEditMode();\n                  boundActionCreators.clearDashboardHistory?.(); // Resets the `past` as an empty array\n                }}\n                data-test=\"edit-dashboard-button\"\n                className=\"action-button\"\n                css={editButtonStyle}\n                aria-label={t('Edit dashboard')}\n              >\n                {t('Edit dashboard')}\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    ),\n    [\n      NavExtension,\n      boundActionCreators.onRedo,\n      boundActionCreators.onUndo,\n      boundActionCreators.clearDashboardHistory,\n      editMode,\n      emphasizeRedo,\n      emphasizeUndo,\n      handleCtrlY,\n      handleCtrlZ,\n      hasUnsavedChanges,\n      overwriteDashboard,\n      redoLength,\n      toggleEditMode,\n      undoLength,\n      userCanEdit,\n      userCanSaveAs,\n    ],\n  );\n\n  const handleReportDelete = async report => {\n    await dispatch(deleteActiveReport(report));\n    setCurrentReportDeleting(null);\n  };\n\n  const [menu, isDropdownVisible, setIsDropdownVisible] = useHeaderActionsMenu({\n    addSuccessToast: boundActionCreators.addSuccessToast,\n    addDangerToast: boundActionCreators.addDangerToast,\n    dashboardInfo,\n    dashboardId: dashboardInfo.id,\n    dashboardTitle,\n    dataMask,\n    layout,\n    expandedSlices,\n    customCss,\n    colorNamespace,\n    colorScheme,\n    onSave: boundActionCreators.onSave,\n    onChange: boundActionCreators.onChange,\n    forceRefreshAllCharts: forceRefresh,\n    startPeriodicRender,\n    refreshFrequency,\n    shouldPersistRefreshFrequency,\n    setRefreshFrequency: boundActionCreators.setRefreshFrequency,\n    updateCss: boundActionCreators.updateCss,\n    editMode,\n    hasUnsavedChanges,\n    userCanEdit,\n    userCanShare,\n    userCanSave: userCanSaveAs,\n    userCanCurate,\n    isLoading,\n    showReportModal,\n    showPropertiesModal,\n    setCurrentReportDeleting,\n    manageEmbedded: showEmbedModal,\n    refreshLimit,\n    refreshWarning,\n    lastModifiedTime: actualLastModifiedTime,\n    logEvent: boundActionCreators.logEvent,\n  });\n  return (\n    <div\n      css={headerContainerStyle}\n      data-test=\"dashboard-header-container\"\n      data-test-id={dashboardInfo.id}\n      className=\"dashboard-header-container\"\n    >\n      <PageHeaderWithActions\n        editableTitleProps={editableTitleProps}\n        certificatiedBadgeProps={certifiedBadgeProps}\n        faveStarProps={faveStarProps}\n        titlePanelAdditionalItems={titlePanelAdditionalItems}\n        rightPanelAdditionalItems={rightPanelAdditionalItems}\n        menuDropdownProps={{\n          open: isDropdownVisible,\n          onOpenChange: setIsDropdownVisible,\n        }}\n        additionalActionsMenu={menu}\n        showFaveStar={user?.userId && dashboardInfo?.id}\n        showTitlePanelItems\n      />\n      {showingPropertiesModal && (\n        <PropertiesModal\n          dashboardId={dashboardInfo.id}\n          dashboardInfo={dashboardInfo}\n          dashboardTitle={dashboardTitle}\n          show={showingPropertiesModal}\n          onHide={hidePropertiesModal}\n          colorScheme={colorScheme}\n          onSubmit={handleOnPropertiesChange}\n          onlyApply\n        />\n      )}\n\n      <ReportModal\n        userId={user.userId}\n        show={showingReportModal}\n        onHide={hideReportModal}\n        userEmail={user.email}\n        dashboardId={dashboardInfo.id}\n        creationMethod=\"dashboards\"\n      />\n\n      {currentReportDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete %s.',\n            currentReportDeleting?.name,\n          )}\n          onConfirm={() => {\n            if (currentReportDeleting) {\n              handleReportDelete(currentReportDeleting);\n            }\n          }}\n          onHide={() => setCurrentReportDeleting(null)}\n          open\n          title={t('Delete Report?')}\n        />\n      )}\n\n      <OverwriteConfirm />\n\n      {userCanCurate && (\n        <DashboardEmbedModal\n          show={showingEmbedModal}\n          onHide={hideEmbedModal}\n          dashboardId={dashboardInfo.id}\n        />\n      )}\n      <Global\n        styles={css`\n          .antd5-menu-vertical {\n            border-right: none;\n          }\n        `}\n      />\n    </div>\n  );\n};\n\nexport default Header;\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACzE;EACEC,MAAM;EACNC,GAAG;EACHC,gBAAgB;EAChBC,WAAW;EACXC,CAAC;EACDC,qBAAqB;EACrBC,QAAQ;AACH,mBAAmB;AAC1B,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,YAAY,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACpE,SAASC,kBAAkB,QAAQ,OAAO;AAC1C;EACEC,qCAAqC;EACrCC,mCAAmC;EACnCC,iCAAiC;AAC5B,qBAAqB;AAC5B,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,eAAe,MAAM,0CAA0C;AACtE,OAAOC,oBAAoB,MAAM,+CAA+C;AAChF,OAAOC,eAAe,MAAM,0CAA0C;AACtE;EACEC,UAAU;EACVC,mBAAmB;EACnBC,6BAA6B;EAC7BC,mBAAmB;AACd,8BAA8B;AACrC,OAAOC,iBAAiB;EACtBC,kBAAkB;AACb,sCAAsC;AAC7C,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,kBAAkB,QAAQ,0CAA0C;AAC7E,SAASC,qBAAqB,QAAQ,sCAAsC;AAC5E,OAAOC,mBAAmB,MAAM,kBAAkB;AAClD,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD;EACEC,cAAc;EACdC,eAAe;EACfC,eAAe;AACV,2CAA2C;AAClD;EACEC,qBAAqB;EACrBC,gBAAgB;EAChBC,gBAAgB;EAChBC,oBAAoB;EACpBC,qBAAqB;AAChB,+BAA+B;AACtC;EACEC,WAAW;EACXC,aAAa;EACbC,mBAAmB;EACnBC,QAAQ;EACRC,SAAS;EACTC,oBAAoB;EACpBC,YAAY;EACZC,aAAa;EACbC,WAAW;EACXC,yBAAyB;EACzBC,mBAAmB;EACnBC,iBAAiB;EACjBC,SAAS;AACJ,8BAA8B;AACrC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,uBAAuB,QAAQ,2BAA2B;AACnE,SAASC,oBAAoB,QAAQ,gCAAgC,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;;AAEtE,MAAMC,kBAAkB,GAAG7D,qBAAqB,CAAC,CAAC;;AAElD,MAAM8D,oBAAoB,GAAGA,CAAAC,KAAK,KAAInE,GAAG;AACzC,6BAA6BmE,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,MAAM;AAC1D,CAAC;;AAED,MAAMC,eAAe,GAAGA,CAAAJ,KAAK,KAAInE,GAAG;AACpC,WAAWmE,KAAK,CAACC,MAAM,CAACI,OAAO,CAACC,KAAK;AACrC,CAAC;;AAED,MAAMC,kBAAkB,GAAGA,CAAAP,KAAK,KAAInE,GAAG;AACvC;AACA;AACA;AACA;AACA,mBAAmBmE,KAAK,CAACQ,QAAQ,GAAG,CAAC;AACrC;AACA;AACA;AACA;AACA,oBAAoBR,KAAK,CAACQ,QAAQ,GAAG,CAAC;AACtC;AACA,CAAC;;AAED,MAAMC,oBAAoB,GAAG7E,MAAM,CAACgB,MAAM,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,MAAM8D,aAAa,GAAGA,CAAAV,KAAK,KAAInE,GAAG;AAClC,WAAWmE,KAAK,CAACC,MAAM,CAACC,SAAS,CAACS,MAAM;AACxC;AACA,aAAaX,KAAK,CAACC,MAAM,CAACC,SAAS,CAACU,IAAI;AACxC;AACA,CAAC;;AAED,MAAMC,kBAAkB,GAAGA,CAAAb,KAAK,KAAInE,GAAG;AACvC,WAAWmE,KAAK,CAACC,MAAM,CAACC,SAAS,CAACU,IAAI;AACtC,CAAC;;AAED,MAAME,gBAAgB,GAAGA,CAAAd,KAAK,KAAInE,GAAG;AACrC,WAAWmE,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,MAAM;AACxC,CAAC;;AAED,MAAMY,YAAY,GAAGA,CAAAf,KAAK,KAAInE,GAAG;AACjC,eAAemE,KAAK,CAACQ,QAAQ,GAAG,EAAE;AAClC,YAAYR,KAAK,CAACQ,QAAQ,GAAG,CAAC;AAC9B;AACA;AACA;AACA,CAAC;;AAED,MAAMQ,eAAe,GAAGA,CAAAhB,KAAK,KAAInE,GAAG;AACpC,eAAemE,KAAK,CAACQ,QAAQ,GAAG,EAAE;AAClC,YAAYR,KAAK,CAACQ,QAAQ,GAAG,CAAC;AAC9B,CAAC;;AAED,MAAMS,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;;EAEzCJ,GAAG,CAACK,YAAY,CAACC,MAAM,CAAC,MAAM,CAAC;EAC/BJ,MAAM,CAACC,QAAQ,CAACI,MAAM,CAACP,GAAG,CAAC;AAC7B,CAAC;;AAED,MAAMQ,MAAM,GAAGA,CAAA,KAAM,KAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA;EACnB,MAAMlC,KAAK,GAAG9D,QAAQ,CAAC,CAAC;EACxB,MAAMiG,QAAQ,GAAG9F,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC+F,4BAA4B,EAAEC,+BAA+B,CAAC;EACnE1G,QAAQ,CAAC,KAAK,CAAC;EACjB,MAAM,CAAC2G,aAAa,EAAEC,gBAAgB,CAAC,GAAG5G,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC6G,aAAa,EAAEC,gBAAgB,CAAC,GAAG9G,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC+G,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGhH,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACiH,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlH,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACmH,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpH,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACqH,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtH,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAMuH,aAAa,GAAG5G,WAAW,CAAC,CAAA6G,KAAK,KAAIA,KAAK,CAACD,aAAa,CAAC;EAC/D,MAAME,MAAM,GAAG9G,WAAW,CAAC,CAAA6G,KAAK,KAAIA,KAAK,CAACE,eAAe,CAACC,OAAO,CAAC;EAClE,MAAMC,UAAU,GAAGjH,WAAW,CAAC,CAAA6G,KAAK,KAAIA,KAAK,CAACE,eAAe,CAACG,IAAI,CAACC,MAAM,CAAC;EAC1E,MAAMC,UAAU,GAAGpH,WAAW,CAAC,CAAA6G,KAAK,KAAIA,KAAK,CAACE,eAAe,CAACM,MAAM,CAACF,MAAM,CAAC;EAC5E,MAAMG,QAAQ,GAAGtH,WAAW,CAAC,CAAA6G,KAAK,KAAIA,KAAK,CAACS,QAAQ,CAAC;EACrD,MAAMC,IAAI,GAAGvH,WAAW,CAAC,CAAA6G,KAAK,KAAIA,KAAK,CAACU,IAAI,CAAC;EAC7C,MAAMC,QAAQ,GAAGvE,WAAW,CAAC,CAAC;;EAE9B,MAAM;IACJwE,cAAc;IACdC,gBAAgB;IAChBC,6BAA6B;IAC7BC,SAAS;IACTC,cAAc;IACdC,WAAW;IACXC,SAAS;IACTC,WAAW;IACXC,iBAAiB;IACjBC,sBAAsB;IACtBC,QAAQ;IACRC;EACF,CAAC,GAAGpI,WAAW;IACb,CAAA6G,KAAK,MAAK;MACRY,cAAc,EAAEZ,KAAK,CAACwB,cAAc,CAACZ,cAAc;MACnDC,gBAAgB,EAAEb,KAAK,CAACwB,cAAc,CAACX,gBAAgB;MACvDC,6BAA6B;MAC3B,CAAC,CAACd,KAAK,CAACwB,cAAc,CAACV,6BAA6B;MACtDC,SAAS,EAAEf,KAAK,CAACwB,cAAc,CAAC9I,GAAG;MACnCsI,cAAc,EAAEhB,KAAK,CAACwB,cAAc,CAACR,cAAc;MACnDC,WAAW,EAAEjB,KAAK,CAACwB,cAAc,CAACP,WAAW;MAC7CC,SAAS,EAAE,CAAC,CAAClB,KAAK,CAACwB,cAAc,CAACN,SAAS;MAC3CC,WAAW,EAAE,CAAC,CAACnB,KAAK,CAACwB,cAAc,CAACL,WAAW;MAC/CC,iBAAiB,EAAE,CAAC,CAACpB,KAAK,CAACwB,cAAc,CAACJ,iBAAiB;MAC3DC,sBAAsB,EAAE,CAAC,CAACrB,KAAK,CAACwB,cAAc,CAACH,sBAAsB;MACrEC,QAAQ,EAAE,CAAC,CAACtB,KAAK,CAACwB,cAAc,CAACF,QAAQ;MACzCC,gBAAgB,EAAEvB,KAAK,CAACuB;IAC1B,CAAC,CAAC;IACFtI;EACF,CAAC;EACD,MAAMwI,SAAS,GAAGtI,WAAW,CAAC,CAAA6G,KAAK,KAAI7D,kBAAkB,CAAC6D,KAAK,CAAC0B,MAAM,CAAC,CAAC;;EAExE,MAAMC,YAAY,GAAGpJ,MAAM,CAAC,CAAC,CAAC;EAC9B,MAAMqJ,YAAY,GAAGrJ,MAAM,CAAC,CAAC,CAAC;EAC9B,MAAMsJ,YAAY,GAAGtJ,MAAM,CAAC,CAAC,CAAC;;EAE9B,MAAMuJ,cAAc,IAAAtD,qBAAA,GAAGyB,MAAM,CAAC9F,mBAAmB,CAAC,sBAAAsE,sBAAA,GAA3BD,qBAAA,CAA6BuD,IAAI,qBAAjCtD,sBAAA,CAAmCuD,IAAI;EAC9D,MAAM,EAAEC,IAAI,CAAC,CAAC,GAAGlC,aAAa;EAC9B,MAAMmC,sBAAsB,GAAGC,IAAI,CAACC,GAAG;IACrCb,gBAAgB;IAChBxB,aAAa,CAACsC;EAChB,CAAC;EACD,MAAMC,mBAAmB,GAAGhK,OAAO;IACjC;IACEc,kBAAkB;MAChB;QACEyB,eAAe;QACfD,cAAc;QACdE,eAAe;QACfyH,MAAM,EAAEtH,gBAAgB;QACxBuH,MAAM,EAAExH,gBAAgB;QACxBG,qBAAqB;QACrBS,WAAW;QACXG,iBAAiB;QACjBV,aAAa;QACbK,YAAY;QACZC,aAAa;QACbP,WAAW;QACXF,oBAAoB;QACpBc,SAAS;QACTT,QAAQ;QACRkH,MAAM,EAAEhH,oBAAoB;QAC5BI,yBAAyB;QACzBP,mBAAmB;QACnBW,QAAQ;QACRH,mBAAmB;QACnBN,SAAS;QACTU,oBAAoB;QACpBnB;MACF,CAAC;MACDiE;IACF,CAAC;IACH,CAACA,QAAQ;EACX,CAAC;;EAED,MAAM0D,mBAAmB,GAAGtK,WAAW;IACrC,CAAAuK,QAAQ,KAAI;MACV,IAAIC,eAAe;;MAEnB,IAAID,QAAQ,EAAE,KAAAE,qBAAA,EAAAC,sBAAA;QACZ,MAAMC,sBAAsB,IAAAF,qBAAA;QAC1B9C,aAAa,CAACiD,MAAM,sBAAAF,sBAAA,GAApBD,qBAAA,CAAsBI,IAAI,qBAA1BH,sBAAA,CAA4BI,gCAAgC;QAC9D,MAAMC,eAAe,GAAGJ,sBAAsB,CAACK,IAAI;UACjD,CAAAC,MAAM,KAAIC,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,KAAKV,QAAQ,GAAG;QAC7C,CAAC;;QAED,IAAIQ,eAAe,EAAE;UACnBP,eAAe,GAAG/J,CAAC,CAACsK,eAAe,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,MAAM;UACLP,eAAe,GAAGzK,aAAa;UAC5BoL,QAAQ,CAACZ,QAAQ,EAAE,aAAa,CAAC;UACjCa,QAAQ,CAAC,CAAC;QACf;MACF;;MAEA,MAAMpI,WAAW,GAAGA,CAACsG,MAAM,EAAE+B,KAAK,GAAG,KAAK;MACxCnB,mBAAmB,CAAClH,WAAW;QAC7BsG,MAAM;QACN+B,KAAK;QACLd,QAAQ,GAAG,GAAG;QACd5C,aAAa,CAAC2D;MAChB,CAAC;;MAEH,MAAMC,cAAc,GAAGA,CAAA,KAAM,KAAAC,sBAAA,EAAAC,sBAAA;QAC3B,MAAM,EAAEC,QAAQ,CAAC,CAAC,GAAG/D,aAAa;QAClC,MAAMgE,MAAM,GAAGD,QAAQ,CAACE,2BAA2B,IAAI,EAAE;QACzD,MAAMC,cAAc,GAAGtD,QAAQ,CAACuD,MAAM;UACpC,CAAAC,OAAO,KAAIJ,MAAM,CAACK,OAAO,CAACD,OAAO,CAAC,KAAK,CAAC;QAC1C,CAAC;;QAED7B,mBAAmB,CAACrG,QAAQ,CAAC5C,qCAAqC,EAAE;UAClEsJ,QAAQ;UACR0B,UAAU,EAAEJ,cAAc,CAAC3D;QAC7B,CAAC,CAAC;QACFgC,mBAAmB,CAACxH,eAAe;UACjCjC,CAAC;YACC,mFAAmF;YACnF+J;UACF;QACF,CAAC;QACD;QACE,EAAAgB,sBAAA,GAAA7D,aAAa,CAACiD,MAAM,sBAAAa,sBAAA,GAApBD,sBAAA,CAAsBX,IAAI,qBAA1BY,sBAAA,CAA4BS,2BAA2B,MAAK,OAAO;QACnE;UACA;UACA,OAAOlJ,WAAW,CAAC6I,cAAc,CAAC;QACpC;QACA,OAAO7I,WAAW,CAAC6I,cAAc,EAAE,IAAI,CAAC;MAC1C,CAAC;;MAEDtC,YAAY,CAAC4C,OAAO,GAAGnK,iBAAiB,CAAC;QACvCuI,QAAQ;QACRgB,cAAc;QACdhC,YAAY,EAAEA,YAAY,CAAC4C;MAC7B,CAAC,CAAC;IACJ,CAAC;IACD,CAACjC,mBAAmB,EAAE3B,QAAQ,EAAEZ,aAAa;EAC/C,CAAC;;EAED1H,SAAS,CAAC,MAAM;IACdqK,mBAAmB,CAAC7B,gBAAgB,GAAG,IAAI,CAAC;EAC9C,CAAC,EAAE,CAACA,gBAAgB,EAAE6B,mBAAmB,CAAC,CAAC;;EAE3CrK,SAAS,CAAC,MAAM;IACd,IAAI2B,UAAU,GAAGoG,UAAU,IAAI,CAAC,IAAI,CAACnB,4BAA4B,EAAE;MACjEC,+BAA+B,CAAC,IAAI,CAAC;MACrCoD,mBAAmB,CAAChH,mBAAmB,CAAC,CAAC;IAC3C;IACA,IAAI8E,UAAU,GAAGpG,UAAU,IAAI,CAACqH,sBAAsB,EAAE;MACtDiB,mBAAmB,CAACzG,yBAAyB,CAAC,CAAC;IACjD;EACF,CAAC,EAAE;EACDyG,mBAAmB;EACnBrD,4BAA4B;EAC5BoC,sBAAsB;EACtBjB,UAAU;EACX,CAAC;;EAEF/H,SAAS;IACP,MAAM,MAAM;MACVgC,kBAAkB,CAACsH,YAAY,CAAC4C,OAAO,CAAC;MACxCjC,mBAAmB,CAACxG,mBAAmB,CAAC,CAAC,CAAC;MAC1C0I,YAAY,CAAC5C,YAAY,CAAC2C,OAAO,CAAC;MAClCC,YAAY,CAAC3C,YAAY,CAAC0C,OAAO,CAAC;IACpC,CAAC;IACD,CAACjC,mBAAmB;EACtB,CAAC;;EAED,MAAMmC,gBAAgB,GAAGrM,WAAW;IAClC,CAAAsM,QAAQ,KAAI;MACV,IAAIA,QAAQ,IAAI5C,cAAc,KAAK4C,QAAQ,EAAE;QAC3CpC,mBAAmB,CAACpH,oBAAoB,CAACwJ,QAAQ,CAAC;QAClDpC,mBAAmB,CAAC/G,QAAQ,CAAC,CAAC;MAChC;IACF,CAAC;IACD,CAAC+G,mBAAmB,EAAER,cAAc;EACtC,CAAC;;EAED,MAAM6C,WAAW,GAAGvM,WAAW,CAAC,MAAM;IACpCkK,mBAAmB,CAACE,MAAM,CAAC,CAAC;IAC5BlD,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAIsC,YAAY,CAAC2C,OAAO,EAAE;MACxBC,YAAY,CAAC5C,YAAY,CAAC2C,OAAO,CAAC;IACpC;IACA3C,YAAY,CAAC2C,OAAO,GAAGK,UAAU,CAAC,MAAM;MACtCtF,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACgD,mBAAmB,CAAC,CAAC;;EAEzB,MAAMuC,WAAW,GAAGzM,WAAW,CAAC,MAAM;IACpCkK,mBAAmB,CAACC,MAAM,CAAC,CAAC;IAC5BnD,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAIyC,YAAY,CAAC0C,OAAO,EAAE;MACxBC,YAAY,CAAC3C,YAAY,CAAC0C,OAAO,CAAC;IACpC;IACA1C,YAAY,CAAC0C,OAAO,GAAGK,UAAU,CAAC,MAAM;MACtCxF,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACkD,mBAAmB,CAAC,CAAC;;EAEzB,MAAMwC,YAAY,GAAG1M,WAAW,CAAC,MAAM;IACrC,IAAI,CAACqJ,SAAS,EAAE;MACda,mBAAmB,CAACrG,QAAQ,CAAC3C,mCAAmC,EAAE;QAChEmK,KAAK,EAAE,IAAI;QACXd,QAAQ,EAAE,CAAC;QACX0B,UAAU,EAAE1D,QAAQ,CAACL;MACvB,CAAC,CAAC;MACF,OAAOgC,mBAAmB,CAAC9G,SAAS,CAACmF,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAEZ,aAAa,CAAC2D,EAAE,CAAC;IAC3E;IACA,OAAO,KAAK;EACd,CAAC,EAAE,CAACpB,mBAAmB,EAAE3B,QAAQ,EAAEZ,aAAa,CAAC2D,EAAE,EAAEjC,SAAS,CAAC,CAAC;;EAEhE,MAAMsD,cAAc,GAAG3M,WAAW,CAAC,MAAM;IACvCkK,mBAAmB,CAACrG,QAAQ,CAAC1C,iCAAiC,EAAE;MAC9DyL,SAAS,EAAE,CAAC1D;IACd,CAAC,CAAC;IACFgB,mBAAmB,CAAC1G,WAAW,CAAC,CAAC0F,QAAQ,CAAC;EAC5C,CAAC,EAAE,CAACgB,mBAAmB,EAAEhB,QAAQ,CAAC,CAAC;;EAEnC,MAAM2D,kBAAkB,GAAG7M,WAAW,CAAC,MAAM,KAAA8M,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAC3C,MAAMC,qBAAqB;IACzB,CAAAxF,aAAa,qBAAAmF,qBAAA,GAAbnF,aAAa,CAAE+D,QAAQ,qBAAvBoB,qBAAA,CAAyBM,eAAe,KAAIxE,cAAc;IAC5D,MAAMyE,kBAAkB;IACtB,CAAA1F,aAAa,qBAAAoF,sBAAA,GAAbpF,aAAa,CAAE+D,QAAQ,qBAAvBqB,sBAAA,CAAyBO,YAAY,KAAIzE,WAAW;;IAEtD,MAAM0E,IAAI,GAAG;MACXC,YAAY,EAAE7F,aAAa,CAAC6F,YAAY;MACxCC,qBAAqB,EAAE9F,aAAa,CAAC8F,qBAAqB;MAC1DnN,GAAG,EAAEqI,SAAS;MACd+E,eAAe,EAAEhE,cAAc;MAC/BO,kBAAkB,EAAEH,sBAAsB;MAC1C6D,MAAM,EAAEhG,aAAa,CAACgG,MAAM;MAC5BC,KAAK,EAAEjG,aAAa,CAACiG,KAAK;MAC1B/D,IAAI;MACJ6B,QAAQ,EAAE;QACR,IAAG/D,aAAa,oBAAbA,aAAa,CAAE+D,QAAQ;QAC1B0B,eAAe,EAAED,qBAAqB;QACtCG,YAAY,EAAED,kBAAkB;QAChCQ,SAAS,EAAEhG,MAAM;QACjBiG,iBAAiB,EAAEpF,6BAA6B;QAC5CD,gBAAgB,IAAAuE,sBAAA;QAChBrF,aAAa,CAAC+D,QAAQ,qBAAtBsB,sBAAA,CAAwBc;MAC9B;IACF,CAAC;;IAED;IACA,MAAMC,kBAAkB,GAAGvM,aAAa,CAACqG,MAAM,CAAC,CAACK,MAAM;IACvD,MAAM8F,KAAK;IACT,EAAAf,sBAAA,GAAAtF,aAAa,CAACiD,MAAM,sBAAAsC,sBAAA,GAApBD,sBAAA,CAAsBpC,IAAI,qBAA1BqC,sBAAA,CAA4Be,sCAAsC;IAClEnM,6BAA6B;IAC/B,IAAIiM,kBAAkB,IAAIC,KAAK,EAAE;MAC/B9D,mBAAmB,CAAC1H,cAAc;QAChC/B,CAAC;UACC;QACF;MACF,CAAC;IACH,CAAC,MAAM;MACL,IAAIsN,kBAAkB,IAAIC,KAAK,GAAG,GAAG,EAAE;QACrC9D,mBAAmB,CAACxH,eAAe;UACjCjC,CAAC,CAAC,wCAAwC;QAC5C,CAAC;MACH;;MAEAyJ,mBAAmB,CAACG,MAAM,CAACkD,IAAI,EAAE5F,aAAa,CAAC2D,EAAE,EAAEzJ,mBAAmB,CAAC;IACzE;EACF,CAAC,EAAE;EACDiI,sBAAsB;EACtBI,mBAAmB;EACnBtB,cAAc;EACdC,WAAW;EACXF,SAAS;EACThB,aAAa,CAAC8F,qBAAqB;EACnC9F,aAAa,CAAC6F,YAAY,GAAAlH,sBAAA;EAC1BqB,aAAa,CAACiD,MAAM,sBAAArE,sBAAA,GAApBD,sBAAA,CAAsBuE,IAAI,qBAA1BtE,sBAAA,CAA4B0H,sCAAsC;EAClEtG,aAAa,CAAC2D,EAAE;EAChB3D,aAAa,CAAC+D,QAAQ;EACtB/D,aAAa,CAACgG,MAAM;EACpBhG,aAAa,CAACiG,KAAK;EACnBlE,cAAc;EACd7B,MAAM;EACNY,gBAAgB;EAChBC,6BAA6B;EAC7BmB,IAAI;EACL,CAAC;;EAEF,MAAMqE,mBAAmB,GAAGlO,WAAW,CAAC,MAAM;IAC5CoH,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAM+G,mBAAmB,GAAGnO,WAAW,CAAC,MAAM;IAC5CoH,yBAAyB,CAAC,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAMgH,cAAc,GAAGpO,WAAW,CAAC,MAAM;IACvCsH,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAM+G,cAAc,GAAGrO,WAAW,CAAC,MAAM;IACvCsH,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAMgH,eAAe,GAAGtO,WAAW,CAAC,MAAM;IACxCwH,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAM+G,eAAe,GAAGvO,WAAW,CAAC,MAAM;IACxCwH,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAMgH,WAAW,GAAGvK,uBAAuB,CAAC0D,aAAa,CAAC;;EAE1D,MAAM8G,WAAW;EACf9G,aAAa,CAAC+G,cAAc,IAAI,CAAC/G,aAAa,CAACgH,qBAAqB;EACtE,MAAMC,YAAY,GAAGjH,aAAa,CAACkH,eAAe;EAClD,MAAMC,aAAa,GAAGnH,aAAa,CAACoH,cAAc;EAClD,MAAMC,aAAa;EACjBzO,gBAAgB,CAACC,WAAW,CAACyO,gBAAgB,CAAC;EAC9C3N,cAAc,CAAC,kBAAkB,EAAE,WAAW,EAAEgH,IAAI,CAACsF,KAAK,CAAC;EAC7D,MAAMsB,YAAY,IAAA1I,sBAAA;EAChBmB,aAAa,CAACiD,MAAM,sBAAAnE,sBAAA,GAApBD,sBAAA,CAAsBqE,IAAI,qBAA1BpE,sBAAA,CAA4B0I,2CAA2C;EACzE,MAAMC,cAAc,IAAA1I,sBAAA;EAClBiB,aAAa,CAACiD,MAAM,sBAAAjE,uBAAA,GAApBD,sBAAA,CAAsBmE,IAAI,qBAA1BlE,uBAAA;EACI0I,qDAAqD;EAC3D,MAAMC,UAAU,GAAG,EAAC3H,aAAa,YAAbA,aAAa,CAAE4H,MAAM;;EAEzC,MAAMC,wBAAwB,GAAGxP,WAAW;IAC1C,CAAAyP,OAAO,KAAI;MACTvF,mBAAmB,CAACpG,oBAAoB,CAAC;QACvC+F,IAAI,EAAE4F,OAAO,CAAC5F,IAAI;QAClB6B,QAAQ,EAAEgE,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,YAAY,IAAI,IAAI,CAAC;QAClDpC,YAAY,EAAEiC,OAAO,CAACI,WAAW;QACjCpC,qBAAqB,EAAEgC,OAAO,CAACK,oBAAoB;QACnDnC,MAAM,EAAE8B,OAAO,CAAC9B,MAAM;QACtBC,KAAK,EAAE6B,OAAO,CAAC7B;MACjB,CAAC,CAAC;MACF1D,mBAAmB,CAACvG,iBAAiB,CAAC,IAAI,CAAC;MAC3CuG,mBAAmB,CAACvH,qBAAqB,CAAC8M,OAAO,CAACM,KAAK,CAAC;IAC1D,CAAC;IACD,CAAC7F,mBAAmB;EACtB,CAAC;;EAED,MAAM8F,YAAY,GAAGzL,kBAAkB,CAAC0L,GAAG,CAAC,qBAAqB,CAAC;;EAElE,MAAMC,kBAAkB,GAAGhQ,OAAO;IAChC,OAAO;MACL6P,KAAK,EAAErG,cAAc;MACrByG,OAAO,EAAE1B,WAAW,IAAIvF,QAAQ;MAChCmB,MAAM,EAAEgC,gBAAgB;MACxB+D,WAAW,EAAE3P,CAAC,CAAC,+BAA+B,CAAC;MAC/C4P,KAAK,EAAE5P,CAAC,CAAC,iBAAiB,CAAC;MAC3B6P,WAAW,EAAE;IACf,CAAC,CAAC;IACF,CAAC5G,cAAc,EAAER,QAAQ,EAAEmD,gBAAgB,EAAEoC,WAAW;EAC1D,CAAC;;EAED,MAAM8B,mBAAmB,GAAGrQ,OAAO;IACjC,OAAO;MACL2P,WAAW,EAAElI,aAAa,CAAC6F,YAAY;MACvCgD,OAAO,EAAE7I,aAAa,CAAC8F;IACzB,CAAC,CAAC;IACF,CAAC9F,aAAa,CAAC8F,qBAAqB,EAAE9F,aAAa,CAAC6F,YAAY;EAClE,CAAC;;EAED,MAAMiD,aAAa,GAAGvQ,OAAO;IAC3B,OAAO;MACLwQ,MAAM,EAAE/I,aAAa,CAAC2D,EAAE;MACxBrI,aAAa,EAAEiH,mBAAmB,CAACjH,aAAa;MAChDK,YAAY,EAAE4G,mBAAmB,CAAC5G,YAAY;MAC9CwF,SAAS;MACTwH,WAAW,EAAE;IACf,CAAC,CAAC;IACF;IACEpG,mBAAmB,CAACjH,aAAa;IACjCiH,mBAAmB,CAAC5G,YAAY;IAChCqE,aAAa,CAAC2D,EAAE;IAChBxC,SAAS;;EAEb,CAAC;;EAED,MAAM6H,yBAAyB,GAAGzQ,OAAO;IACvC,MAAM;IACJ,CAACgJ,QAAQ;IACP9E,IAAA,CAAC3C,eAAe;MACdmP,WAAW,EAAEjJ,aAAa,CAAC2D,EAAG;MAC9BvC,WAAW,EAAEA,WAAY;MACzBxF,aAAa,EAAE2G,mBAAmB,CAAC3G,aAAc;MACjDkL,WAAW,EAAEA,WAAY;MACzBoC,WAAW,EAAE/B,aAAc;MAC3BgC,OAAO,EAAE,CAAC5H,QAAS;IACpB,CACF;;IACD,CAACA,QAAQ,IAAI,CAACoG,UAAU,IAAId,WAAW,CACxC;;IACD;IACEtE,mBAAmB,CAAC3G,aAAa;IACjCoE,aAAa,CAAC2D,EAAE;IAChBpC,QAAQ;IACRsF,WAAW;IACXc,UAAU;IACVvG,WAAW;IACX0F,WAAW;IACXK,aAAa;;EAEjB,CAAC;;EAED,MAAMiC,yBAAyB,GAAG7Q,OAAO;IACvC;IACEoE,KAAA,UAAK0M,SAAS,EAAC,kBAAkB,EAAAC,QAAA;MAC9BnC,aAAa;MACZ1K,IAAA,UAAK4M,SAAS,EAAC,kBAAkB,EAAC,aAAU,wBAAwB,EAAAC,QAAA;QACjE/H,QAAQ;QACP5E,KAAA,UAAKhE,GAAG,EAAE0E,kBAAmB,EAAAiM,QAAA;UAC3B3M,KAAA,UAAK0M,SAAS,EAAC,UAAU,EAAAC,QAAA;YACvB7M,IAAA,CAAC7C,OAAO;cACN+J,EAAE,EAAC,wBAAwB;cAC3ByE,KAAK,EAAEtP,CAAC,CAAC,iBAAiB,CAAE,EAAAwQ,QAAA;;cAE5B7M,IAAA,CAACc,oBAAoB;gBACnBgM,WAAW,EAAC,MAAM;gBAClBC,QAAQ,EAAEnJ,UAAU,GAAG,CAAE;gBACzBoJ,OAAO,EAAEpJ,UAAU,IAAIkC,mBAAmB,CAACC,MAAO,EAAA8G,QAAA;;gBAElD7M,IAAA,CAAChD,KAAK,CAACiQ,IAAI;kBACT/Q,GAAG;kBACD6E,aAAa;kBACb4B,aAAa,IAAIzB,kBAAkB;kBACnC0C,UAAU,GAAG,CAAC,IAAIzC,gBAAgB,EAAA+L,OAAA,CAAAC,GAAA,CAAAC,QAAA,8DAAAF,OAAA,CAAAC,GAAA,CAAAC,QAAA,mnlCAClC;;kBACF,aAAU,aAAa;kBACvBC,QAAQ,EAAC,IAAI;gBACd,CAAC;cACkB,CAAC;YAChB,CAAC;YACVrN,IAAA,CAAC7C,OAAO;cACN+J,EAAE,EAAC,wBAAwB;cAC3ByE,KAAK,EAAEtP,CAAC,CAAC,iBAAiB,CAAE,EAAAwQ,QAAA;;cAE5B7M,IAAA,CAACc,oBAAoB;gBACnBgM,WAAW,EAAC,MAAM;gBAClBC,QAAQ,EAAEhJ,UAAU,GAAG,CAAE;gBACzBiJ,OAAO,EAAEjJ,UAAU,IAAI+B,mBAAmB,CAACE,MAAO,EAAA6G,QAAA;;gBAElD7M,IAAA,CAAChD,KAAK,CAACsQ,IAAI;kBACTpR,GAAG;kBACD6E,aAAa;kBACb8B,aAAa,IAAI3B,kBAAkB;kBACnC6C,UAAU,GAAG,CAAC,IAAI5C,gBAAgB,EAAA+L,OAAA,CAAAC,GAAA,CAAAC,QAAA,8DAAAF,OAAA,CAAAC,GAAA,CAAAC,QAAA,mnlCAClC;;kBACF,aAAU,aAAa;kBACvBC,QAAQ,EAAC,IAAI;gBACd,CAAC;cACkB,CAAC;YAChB,CAAC;UACP,CAAC;UACNrN,IAAA,CAAC/C,MAAM;YACLf,GAAG,EAAEmF,eAAgB;YACrBkM,UAAU,EAAC,OAAO;YAClBP,OAAO,EAAE1L,cAAe;YACxBwL,WAAW,EAAC,SAAS;YACrB,aAAU,wBAAwB;YAClC,cAAYzQ,CAAC,CAAC,SAAS,CAAE,EAAAwQ,QAAA;;YAExBxQ,CAAC,CAAC,SAAS,CAAC;UACP,CAAC;UACT6D,KAAA,CAACjD,MAAM;YACLf,GAAG,EAAEkF,YAAa;YAClBmM,UAAU,EAAC,OAAO;YAClBR,QAAQ,EAAE,CAACnI,iBAAkB;YAC7BkI,WAAW,EAAC,SAAS;YACrBE,OAAO,EAAEvE,kBAAmB;YAC5B,aAAU,oBAAoB;YAC9B,cAAYpM,CAAC,CAAC,MAAM,CAAE,EAAAwQ,QAAA;;YAEtB7M,IAAA,CAAChD,KAAK,CAACwQ,YAAY;cACjBC,SAAS,EAAE7I,iBAAiB,IAAIvE,KAAK,CAACC,MAAM,CAACI,OAAO,CAACgN,MAAO;cAC5DL,QAAQ,EAAC,GAAG;YACb,CAAC;YACDhR,CAAC,CAAC,MAAM,CAAC;UACJ,CAAC;QACN,CACN;;MACE,CACN;;MACAyI,QAAQ;MACP9E,IAAA,CAAC1C,oBAAoB,IAACyI,MAAM,EAAEsC,WAAY,EAACrC,MAAM,EAAEmC,WAAY,EAAE,CAAC;;MAElEjI,KAAA,UAAKhE,GAAG,EAAE0E,kBAAmB,EAAAiM,QAAA;QAC1BjB,YAAY,IAAI5L,IAAA,CAAC4L,YAAY,IAAE,CAAC;QAChCvB,WAAW;QACVrK,IAAA,CAAC/C,MAAM;UACL6P,WAAW,EAAC,WAAW;UACvBE,OAAO,EAAEA,CAAA,KAAM;YACbzE,cAAc,CAAC,CAAC;YAChBzC,mBAAmB,CAACnH,qBAAqB,oBAAzCmH,mBAAmB,CAACnH,qBAAqB,CAAG,CAAC,CAAC,CAAC;UACjD,CAAE;UACF,aAAU,uBAAuB;UACjCiO,SAAS,EAAC,eAAe;UACzB1Q,GAAG,EAAEuE,eAAgB;UACrB,cAAYpE,CAAC,CAAC,gBAAgB,CAAE,EAAAwQ,QAAA;;UAE/BxQ,CAAC,CAAC,gBAAgB,CAAC;QACd,CACT;;MACE,CACN;;IACE,CACN;;IACD;IACEuP,YAAY;IACZ9F,mBAAmB,CAACE,MAAM;IAC1BF,mBAAmB,CAACC,MAAM;IAC1BD,mBAAmB,CAACnH,qBAAqB;IACzCmG,QAAQ;IACRjC,aAAa;IACbF,aAAa;IACbwF,WAAW;IACXE,WAAW;IACXzD,iBAAiB;IACjB6D,kBAAkB;IAClB1E,UAAU;IACVwE,cAAc;IACd3E,UAAU;IACVyG,WAAW;IACXK,aAAa;;EAEjB,CAAC;;EAED,MAAMiD,kBAAkB,GAAG,MAAAA,CAAMC,MAAM,KAAI;IACzC,MAAMpL,QAAQ,CAACxE,kBAAkB,CAAC4P,MAAM,CAAC,CAAC;IAC1CtK,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;;EAED,MAAM,CAACuK,IAAI,EAAEC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjO,oBAAoB,CAAC;IAC3EzB,eAAe,EAAEyH,mBAAmB,CAACzH,eAAe;IACpDD,cAAc,EAAE0H,mBAAmB,CAAC1H,cAAc;IAClDmF,aAAa;IACbiJ,WAAW,EAAEjJ,aAAa,CAAC2D,EAAE;IAC7B5B,cAAc;IACdrB,QAAQ;IACRR,MAAM;IACNW,cAAc;IACdG,SAAS;IACTC,cAAc;IACdC,WAAW;IACXwB,MAAM,EAAEH,mBAAmB,CAACG,MAAM;IAClClH,QAAQ,EAAE+G,mBAAmB,CAAC/G,QAAQ;IACtCiP,qBAAqB,EAAE1F,YAAY;IACnCpC,mBAAmB;IACnB7B,gBAAgB;IAChBC,6BAA6B;IAC7BhF,mBAAmB,EAAEwG,mBAAmB,CAACxG,mBAAmB;IAC5DE,SAAS,EAAEsG,mBAAmB,CAACtG,SAAS;IACxCsF,QAAQ;IACRF,iBAAiB;IACjByF,WAAW;IACXG,YAAY;IACZiC,WAAW,EAAE/B,aAAa;IAC1BE,aAAa;IACb3F,SAAS;IACTiF,eAAe;IACfJ,mBAAmB;IACnBxG,wBAAwB;IACxB2K,cAAc,EAAEjE,cAAc;IAC9Bc,YAAY;IACZE,cAAc;IACdjG,gBAAgB,EAAEW,sBAAsB;IACxCjG,QAAQ,EAAEqG,mBAAmB,CAACrG;EAChC,CAAC,CAAC;EACF;IACES,KAAA;MACEhE,GAAG,EAAEkE,oBAAqB;MAC1B,aAAU,4BAA4B;MACtC,gBAAcmD,aAAa,CAAC2D,EAAG;MAC/B0F,SAAS,EAAC,4BAA4B,EAAAC,QAAA;;MAEtC7M,IAAA,CAAC/B,qBAAqB;QACpB6N,kBAAkB,EAAEA,kBAAmB;QACvCoC,uBAAuB,EAAE/B,mBAAoB;QAC7CE,aAAa,EAAEA,aAAc;QAC7BE,yBAAyB,EAAEA,yBAA0B;QACrDI,yBAAyB,EAAEA,yBAA0B;QACrDwB,iBAAiB,EAAE;UACjBC,IAAI,EAAEN,iBAAiB;UACvBO,YAAY,EAAEN;QAChB,CAAE;QACFO,qBAAqB,EAAET,IAAK;QAC5BU,YAAY,EAAE,CAAArK,IAAI,oBAAJA,IAAI,CAAEiH,MAAM,MAAI5H,aAAa,oBAAbA,aAAa,CAAE2D,EAAE,CAAC;QAChDsH,mBAAmB;MACpB,CAAC;MACDzL,sBAAsB;MACrB/C,IAAA,CAACzC,eAAe;QACdiP,WAAW,EAAEjJ,aAAa,CAAC2D,EAAG;QAC9B3D,aAAa,EAAEA,aAAc;QAC7B+B,cAAc,EAAEA,cAAe;QAC/BmJ,IAAI,EAAE1L,sBAAuB;QAC7B2L,MAAM,EAAE3E,mBAAoB;QAC5BtF,WAAW,EAAEA,WAAY;QACzBkK,QAAQ,EAAEvD,wBAAyB;QACnCwD,SAAS;MACV,CACF;;;MAED5O,IAAA,CAAClC,WAAW;QACVqN,MAAM,EAAEjH,IAAI,CAACiH,MAAO;QACpBsD,IAAI,EAAEtL,kBAAmB;QACzBuL,MAAM,EAAEvE,eAAgB;QACxB0E,SAAS,EAAE3K,IAAI,CAAC4K,KAAM;QACtBtC,WAAW,EAAEjJ,aAAa,CAAC2D,EAAG;QAC9B6H,cAAc,EAAC,YAAY;MAC5B,CAAC;;MAED1L,qBAAqB;MACpBrD,IAAA,CAACjC,WAAW;QACViR,WAAW,EAAE3S,CAAC;UACZ,yCAAyC;UACzCgH,qBAAqB,oBAArBA,qBAAqB,CAAE4L;QACzB,CAAE;QACFC,SAAS,EAAEA,CAAA,KAAM;UACf,IAAI7L,qBAAqB,EAAE;YACzBsK,kBAAkB,CAACtK,qBAAqB,CAAC;UAC3C;QACF,CAAE;QACFqL,MAAM,EAAEA,CAAA,KAAMpL,wBAAwB,CAAC,IAAI,CAAE;QAC7C8K,IAAI;QACJzC,KAAK,EAAEtP,CAAC,CAAC,gBAAgB,CAAE;MAC5B,CACF;;;MAED2D,IAAA,CAAC7B,gBAAgB,IAAE,CAAC;;MAEnByM,aAAa;MACZ5K,IAAA,CAAC9B,mBAAmB;QAClBuQ,IAAI,EAAExL,iBAAkB;QACxByL,MAAM,EAAEzE,cAAe;QACvBuC,WAAW,EAAEjJ,aAAa,CAAC2D,EAAG;MAC/B,CACF;;MACDlH,IAAA,CAACxD,MAAM;QACL2S,MAAM,EAAEjT,GAAG;AACnB;AACA;AACA;AACA,SAAU;MACH,CAAC;IACC,CAAC;;AAEV,CAAC,CAACkT,aAAA,CAzpBIrN,MAAM,mwDACIxF,QAAQ,EACLG,WAAW,EASNC,WAAW,EAClBA,WAAW,EACPA,WAAW,EACXA,WAAW,EACbA,WAAW,EACfA,WAAW,EACPiD,WAAW,EAexBjD,WAAW,EAkBGA,WAAW,EAsRTkD,uBAAuB,EA+NaC,oBAAoB,SAAAuP,QAAA;;AAoH/DtN,MAAM,CAArB,eAAAsN,QAAA,CAAsB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA9tBhBvP,kBAAkB,gHAAAmP,cAAA,CAAAI,QAAA,CAElBtP,oBAAoB,kHAAAkP,cAAA,CAAAI,QAAA,CAIpBjP,eAAe,6GAAA6O,cAAA,CAAAI,QAAA,CAIf9O,kBAAkB,gHAAA0O,cAAA,CAAAI,QAAA,CAclB5O,oBAAoB,kHAAAwO,cAAA,CAAAI,QAAA,CAQpB3O,aAAa,2GAAAuO,cAAA,CAAAI,QAAA,CAObxO,kBAAkB,gHAAAoO,cAAA,CAAAI,QAAA,CAIlBvO,gBAAgB,8GAAAmO,cAAA,CAAAI,QAAA,CAIhBtO,YAAY,0GAAAkO,cAAA,CAAAI,QAAA,CAQZrO,eAAe,6GAAAiO,cAAA,CAAAI,QAAA,CAKfpO,cAAc,4GAAAgO,cAAA,CAAAI,QAAA,CAOd3N,MAAM,oGAAAuN,cAAA,CAAAI,QAAA,CAAAL,QAAA,6HAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}