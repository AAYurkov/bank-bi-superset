{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { VariableSizeList as List } from 'react-window';\nimport DatasourcePanelItem from './DatasourcePanelItem';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst BORDER_WIDTH = 2;\nconst HEADER_ITEM_HEIGHT = 50;\nconst METRIC_OR_COLUMN_ITEM_HEIGHT = 32;\nconst SUBTITLE_ITEM_HEIGHT = 32;\nconst DIVIDER_ITEM_HEIGHT = 16;\nconst flattenFolderStructure = (foldersToFlatten, collapsedFolderIds, depth = 0, folderMap = new Map()) => {\n  const flattenedItems = [];\n  foldersToFlatten.forEach((folder, idx) => {\n    folderMap.set(folder.id, folder);\n    flattenedItems.push({\n      type: 'header',\n      folderId: folder.id,\n      depth,\n      height: HEADER_ITEM_HEIGHT\n    });\n    if (!collapsedFolderIds.has(folder.id)) {\n      flattenedItems.push({\n        type: 'subtitle',\n        folderId: folder.id,\n        depth,\n        height: SUBTITLE_ITEM_HEIGHT,\n        totalItems: folder.totalItems,\n        showingItems: folder.showingItems\n      });\n      folder.items.forEach((item) => {\n        flattenedItems.push({\n          type: 'item',\n          folderId: folder.id,\n          depth,\n          item,\n          height: METRIC_OR_COLUMN_ITEM_HEIGHT\n        });\n      });\n      if (folder.subFolders && folder.subFolders.length > 0) {\n        const { flattenedItems: subItems } = flattenFolderStructure(folder.subFolders, collapsedFolderIds, depth + 1, folderMap);\n        flattenedItems.push(...subItems);\n      }\n    }\n    if (depth === 0 && idx !== foldersToFlatten.length - 1) {\n      flattenedItems.push({\n        type: 'divider',\n        folderId: folder.id,\n        depth,\n        height: DIVIDER_ITEM_HEIGHT\n      });\n    }\n  });\n  return { flattenedItems, folderMap };\n};\nexport const DatasourceItems = ({ width, height, folders }) => {\n  const listRef = useRef(null);\n  const [collapsedFolderIds, setCollapsedFolderIds] = useState(new Set(folders.filter((folder) => folder.isCollapsed).map((folder) => folder.id)));\n  const { flattenedItems, folderMap } = useMemo(() => flattenFolderStructure(folders, collapsedFolderIds), [folders, collapsedFolderIds]);\n  const handleToggleCollapse = useCallback((folderId) => {\n    setCollapsedFolderIds((prevIds) => {\n      const newIds = new Set(prevIds);\n      if (newIds.has(folderId)) {\n        newIds.delete(folderId);\n      } else\n      {\n        newIds.add(folderId);\n      }\n      return newIds;\n    });\n  }, []);\n  useEffect(() => {var _listRef$current;\n    // reset the list cache when flattenedItems length changes to recalculate the heights\n    (_listRef$current = listRef.current) == null ? void 0 : _listRef$current.resetAfterIndex(0);\n  }, [flattenedItems]);\n  const getItemSize = useCallback((index) => flattenedItems[index].height, [flattenedItems]);\n  const itemData = useMemo(() => ({\n    flattenedItems,\n    folderMap,\n    width,\n    onToggleCollapse: handleToggleCollapse,\n    collapsedFolderIds\n  }), [\n  flattenedItems,\n  folderMap,\n  width,\n  handleToggleCollapse,\n  collapsedFolderIds]\n  );\n  return _jsx(List, { ref: listRef, width: width - BORDER_WIDTH, height: height, itemSize: getItemSize, itemCount: flattenedItems.length, itemData: itemData, overscanCount: 5, children:\n    DatasourcePanelItem }\n  );\n};__signature__(DatasourceItems, \"useRef{listRef}\\nuseState{[collapsedFolderIds, setCollapsedFolderIds](new Set(folders.filter(folder => folder.isCollapsed).map(folder => folder.id)))}\\nuseMemo{{ flattenedItems, folderMap }}\\nuseCallback{handleToggleCollapse}\\nuseEffect{}\\nuseCallback{getItemSize}\\nuseMemo{itemData}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(BORDER_WIDTH, \"BORDER_WIDTH\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx\");reactHotLoader.register(HEADER_ITEM_HEIGHT, \"HEADER_ITEM_HEIGHT\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx\");reactHotLoader.register(METRIC_OR_COLUMN_ITEM_HEIGHT, \"METRIC_OR_COLUMN_ITEM_HEIGHT\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx\");reactHotLoader.register(SUBTITLE_ITEM_HEIGHT, \"SUBTITLE_ITEM_HEIGHT\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx\");reactHotLoader.register(DIVIDER_ITEM_HEIGHT, \"DIVIDER_ITEM_HEIGHT\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx\");reactHotLoader.register(flattenFolderStructure, \"flattenFolderStructure\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx\");reactHotLoader.register(DatasourceItems, \"DatasourceItems\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useMemo","useRef","useState","VariableSizeList","List","DatasourcePanelItem","jsx","_jsx","BORDER_WIDTH","HEADER_ITEM_HEIGHT","METRIC_OR_COLUMN_ITEM_HEIGHT","SUBTITLE_ITEM_HEIGHT","DIVIDER_ITEM_HEIGHT","flattenFolderStructure","foldersToFlatten","collapsedFolderIds","depth","folderMap","Map","flattenedItems","forEach","folder","idx","set","id","push","type","folderId","height","has","totalItems","showingItems","items","item","subFolders","length","subItems","DatasourceItems","width","folders","listRef","setCollapsedFolderIds","Set","filter","isCollapsed","map","handleToggleCollapse","prevIds","newIds","delete","add","_listRef$current","current","resetAfterIndex","getItemSize","index","itemData","onToggleCollapse","ref","itemSize","itemCount","overscanCount","children","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/DatasourceItems.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { VariableSizeList as List } from 'react-window';\nimport { FlattenedItem, Folder } from './types';\nimport DatasourcePanelItem from './DatasourcePanelItem';\n\nconst BORDER_WIDTH = 2;\nconst HEADER_ITEM_HEIGHT = 50;\nconst METRIC_OR_COLUMN_ITEM_HEIGHT = 32;\nconst SUBTITLE_ITEM_HEIGHT = 32;\nconst DIVIDER_ITEM_HEIGHT = 16;\n\nconst flattenFolderStructure = (\n  foldersToFlatten: Folder[],\n  collapsedFolderIds: Set<string>,\n  depth = 0,\n  folderMap: Map<string, Folder> = new Map(),\n): { flattenedItems: FlattenedItem[]; folderMap: Map<string, Folder> } => {\n  const flattenedItems: FlattenedItem[] = [];\n\n  foldersToFlatten.forEach((folder, idx) => {\n    folderMap.set(folder.id, folder);\n\n    flattenedItems.push({\n      type: 'header',\n      folderId: folder.id,\n      depth,\n      height: HEADER_ITEM_HEIGHT,\n    });\n\n    if (!collapsedFolderIds.has(folder.id)) {\n      flattenedItems.push({\n        type: 'subtitle',\n        folderId: folder.id,\n        depth,\n        height: SUBTITLE_ITEM_HEIGHT,\n        totalItems: folder.totalItems,\n        showingItems: folder.showingItems,\n      });\n      folder.items.forEach(item => {\n        flattenedItems.push({\n          type: 'item',\n          folderId: folder.id,\n          depth,\n          item,\n          height: METRIC_OR_COLUMN_ITEM_HEIGHT,\n        });\n      });\n\n      if (folder.subFolders && folder.subFolders.length > 0) {\n        const { flattenedItems: subItems } = flattenFolderStructure(\n          folder.subFolders,\n          collapsedFolderIds,\n          depth + 1,\n          folderMap,\n        );\n\n        flattenedItems.push(...subItems);\n      }\n    }\n    if (depth === 0 && idx !== foldersToFlatten.length - 1) {\n      flattenedItems.push({\n        type: 'divider',\n        folderId: folder.id,\n        depth,\n        height: DIVIDER_ITEM_HEIGHT,\n      });\n    }\n  });\n\n  return { flattenedItems, folderMap };\n};\n\ninterface DatasourceItemsProps {\n  width: number;\n  height: number;\n  folders: Folder[];\n}\nexport const DatasourceItems = ({\n  width,\n  height,\n  folders,\n}: DatasourceItemsProps) => {\n  const listRef = useRef<List>(null);\n  const [collapsedFolderIds, setCollapsedFolderIds] = useState<Set<string>>(\n    new Set(\n      folders.filter(folder => folder.isCollapsed).map(folder => folder.id),\n    ),\n  );\n\n  const { flattenedItems, folderMap } = useMemo(\n    () => flattenFolderStructure(folders, collapsedFolderIds),\n    [folders, collapsedFolderIds],\n  );\n\n  const handleToggleCollapse = useCallback((folderId: string) => {\n    setCollapsedFolderIds(prevIds => {\n      const newIds = new Set(prevIds);\n      if (newIds.has(folderId)) {\n        newIds.delete(folderId);\n      } else {\n        newIds.add(folderId);\n      }\n      return newIds;\n    });\n  }, []);\n\n  useEffect(() => {\n    // reset the list cache when flattenedItems length changes to recalculate the heights\n    listRef.current?.resetAfterIndex(0);\n  }, [flattenedItems]);\n\n  const getItemSize = useCallback(\n    (index: number) => flattenedItems[index].height,\n    [flattenedItems],\n  );\n\n  const itemData = useMemo(\n    () => ({\n      flattenedItems,\n      folderMap,\n      width,\n      onToggleCollapse: handleToggleCollapse,\n      collapsedFolderIds,\n    }),\n    [\n      flattenedItems,\n      folderMap,\n      width,\n      handleToggleCollapse,\n      collapsedFolderIds,\n    ],\n  );\n\n  return (\n    <List\n      ref={listRef}\n      width={width - BORDER_WIDTH}\n      height={height}\n      itemSize={getItemSize}\n      itemCount={flattenedItems.length}\n      itemData={itemData}\n      overscanCount={5}\n    >\n      {DatasourcePanelItem}\n    </List>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}