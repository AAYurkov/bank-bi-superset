{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { css, t, SupersetClient, useTheme } from '@superset-ui/core';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport SubMenu from 'src/features/home/SubMenu';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport { Icons } from 'src/components/Icons';\nimport { UserListAddModal, UserListEditModal } from 'src/features/users/UserListModal';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { deleteUser } from 'src/features/users/utils';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst PAGE_SIZE = 25;\nvar ModalType;\n(function (ModalType) {\n  ModalType[\"ADD\"] = \"add\";\n  ModalType[\"EDIT\"] = \"edit\";\n})(ModalType || (ModalType = {}));\nconst isActiveOptions = [\n{\n  label: 'Yes',\n  value: true\n},\n{\n  label: 'No',\n  value: false\n}];\n\nfunction UsersList({ user }) {\n  const theme = useTheme();\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const { state: { loading, resourceCount: usersCount, resourceCollection: users, bulkSelectEnabled }, fetchData, refreshData, toggleBulkSelect } = useListViewResource('security/users', t('User'), addDangerToast);\n  const [modalState, setModalState] = useState({\n    edit: false,\n    add: false,\n    duplicate: false\n  });\n  const openModal = (type) => setModalState((prev) => ({ ...prev, [type]: true }));\n  const closeModal = (type) => setModalState((prev) => ({ ...prev, [type]: false }));\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userCurrentlyDeleting, setUserCurrentlyDeleting] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [roles, setRoles] = useState([]);\n  const loginCountStats = useMemo(() => {\n    if (!users || users.length === 0)\n    return { min: 0, max: 0 };\n    const loginCounts = users.map((user) => user.login_count);\n    return {\n      min: Math.min(...loginCounts),\n      max: Math.max(...loginCounts)\n    };\n  }, [users]);\n  const failLoginCountStats = useMemo(() => {\n    if (!users || users.length === 0)\n    return { min: 0, max: 0 };\n    const failLoginCounts = users.map((user) => user.fail_login_count);\n    return {\n      min: Math.min(...failLoginCounts),\n      max: Math.max(...failLoginCounts)\n    };\n  }, [users]);\n  const isAdmin = useMemo(() => isUserAdmin(user), [user]);\n  const fetchRoles = useCallback(async () => {\n    try {\n      const pageSize = 100;\n      const fetchPage = async (pageIndex) => {\n        const response = await SupersetClient.get({\n          endpoint: `api/v1/security/roles/?q=(page_size:${pageSize},page:${pageIndex})`\n        });\n        return response.json;\n      };\n      const initialResponse = await fetchPage(0);\n      const totalRoles = initialResponse.count;\n      const firstPageResults = initialResponse.result;\n      if (pageSize >= totalRoles) {\n        setRoles(firstPageResults);\n        return;\n      }\n      const totalPages = Math.ceil(totalRoles / pageSize);\n      const roleRequests = Array.from({ length: totalPages - 1 }, (_, i) => fetchPage(i + 1));\n      const remainingResults = await Promise.all(roleRequests);\n      setRoles([\n      ...firstPageResults,\n      ...remainingResults.flatMap((res) => res.result)]\n      );\n    }\n    catch (err) {\n      addDangerToast(t('Error while fetching roles'));\n    } finally\n    {\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchRoles();\n  }, [fetchRoles]);\n  const handleUserDelete = async ({ id, username }) => {\n    try {\n      await deleteUser(id);\n      refreshData();\n      setUserCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted user: %s', username));\n    }\n    catch (error) {\n      addDangerToast(t('There was an issue deleting %s', username));\n    }\n  };\n  const handleBulkUsersDelete = (usersToDelete) => {\n    const deletedUserNames = [];\n    Promise.all(usersToDelete.map((user) => deleteUser(user.id).\n    then(() => {\n      deletedUserNames.push(user.username);\n    }).\n    catch((err) => {\n      addDangerToast(t('Error deleting %s', user.username));\n    }))).\n    then(() => {\n      if (deletedUserNames.length > 0) {\n        addSuccessToast(t('Deleted users: %s', deletedUserNames.join(', ')));\n      }\n    }).\n    finally(() => {\n      refreshData();\n    });\n  };\n  const initialSort = [{ id: 'username', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'first_name',\n    Header: t('First name'),\n    Cell: ({ row: { original: { first_name } } }) => _jsx(\"span\", { children: first_name })\n  },\n  {\n    accessor: 'last_name',\n    Header: t('Last name'),\n    Cell: ({ row: { original: { last_name } } }) => _jsx(\"span\", { children: last_name })\n  },\n  {\n    accessor: 'username',\n    Header: t('Username'),\n    Cell: ({ row: { original: { username } } }) => _jsx(\"span\", { children: username })\n  },\n  {\n    accessor: 'email',\n    Header: t('Email'),\n    Cell: ({ row: { original: { email } } }) => _jsx(\"span\", { children: email })\n  },\n  {\n    accessor: 'active',\n    Header: t('Is active?'),\n    Cell: ({ row: { original: { active } } }) => _jsx(\"span\", { children: active ? 'Yes' : 'No' })\n  },\n  {\n    accessor: 'roles',\n    Header: t('Roles'),\n    Cell: ({ row: { original: { roles } } }) => _jsx(\"span\", { children: roles.map((role) => role.name).join(', ') }),\n    disableSortBy: true\n  },\n  {\n    accessor: 'login_count',\n    Header: t('Login count'),\n    hidden: true,\n    Cell: ({ row: { original } }) => original.login_count\n  },\n  {\n    accessor: 'fail_login_count',\n    Header: t('Fail login count'),\n    hidden: true,\n    Cell: ({ row: { original } }) => original.fail_login_count\n  },\n  {\n    accessor: 'created_on',\n    Header: t('Created on'),\n    hidden: true,\n    Cell: ({ row: { original: { created_on } } }) => created_on\n  },\n  {\n    accessor: 'changed_on',\n    Header: t('Changed on'),\n    hidden: true,\n    Cell: ({ row: { original: { changed_on } } }) => changed_on\n  },\n  {\n    accessor: 'last_login',\n    Header: t('Last login'),\n    hidden: true,\n    Cell: ({ row: { original: { last_login } } }) => last_login\n  },\n  {\n    Cell: ({ row: { original } }) => {\n      const handleEdit = () => {\n        setCurrentUser(original);\n        openModal(ModalType.EDIT);\n      };\n      const handleDelete = () => setUserCurrentlyDeleting(original);\n      const actions = isAdmin ?\n      [\n      {\n        label: 'user-list-edit-action',\n        tooltip: t('Edit user'),\n        placement: 'bottom',\n        icon: 'EditOutlined',\n        onClick: handleEdit\n      },\n      {\n        label: 'role-list-delete-action',\n        tooltip: t('Delete user'),\n        placement: 'bottom',\n        icon: 'DeleteOutlined',\n        onClick: handleDelete\n      }] :\n\n      [];\n      return _jsx(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    hidden: !isAdmin,\n    size: 'xl'\n  }],\n  [isAdmin]);\n  const subMenuButtons = [];\n  if (isAdmin) {\n    subMenuButtons.push({\n      name: _jsxs(_Fragment, { children: [\n        _jsx(Icons.PlusOutlined, { iconColor: theme.colors.primary.light5, iconSize: \"m\", css: css`\n                margin: auto ${theme.gridUnit * 2}px auto 0;\n                vertical-align: text-top;\n              ` }),\n        t('User')] }\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        openModal(ModalType.ADD);\n      },\n      loading: isLoading,\n      'data-test': 'add-user-button'\n    }, {\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary'\n    });\n  }\n  const filters = useMemo(() => [\n  {\n    Header: t('First name'),\n    key: 'first_name',\n    id: 'first_name',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Last name'),\n    key: 'last_name',\n    id: 'last_name',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Username'),\n    key: 'username',\n    id: 'username',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Email'),\n    key: 'email',\n    id: 'email',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Is active?'),\n    key: 'active',\n    id: 'active',\n    input: 'select',\n    operator: FilterOperator.Equals,\n    unfilteredLabel: t('All'),\n    selects: isActiveOptions == null ? void 0 : isActiveOptions.map((option) => ({\n      label: option.label,\n      value: option.value\n    })),\n    loading: isLoading\n  },\n  {\n    Header: t('Roles'),\n    key: 'roles',\n    id: 'roles',\n    input: 'select',\n    operator: FilterOperator.RelationManyMany,\n    unfilteredLabel: t('All'),\n    selects: roles == null ? void 0 : roles.map((role) => ({\n      label: role.name,\n      value: role.id\n    })),\n    loading: isLoading\n  },\n  {\n    Header: t('Created on'),\n    key: 'created_on',\n    id: 'created_on',\n    input: 'datetime_range',\n    operator: FilterOperator.Between,\n    dateFilterValueType: 'iso'\n  },\n  {\n    Header: t('Changed on'),\n    key: 'changed_on',\n    id: 'changed_on',\n    input: 'datetime_range',\n    operator: FilterOperator.Between,\n    dateFilterValueType: 'iso'\n  },\n  {\n    Header: t('Last login'),\n    key: 'last_login',\n    id: 'last_login',\n    input: 'datetime_range',\n    operator: FilterOperator.Between,\n    dateFilterValueType: 'iso'\n  },\n  {\n    Header: t('Login count'),\n    key: 'login_count',\n    id: 'login_count',\n    input: 'numerical_range',\n    operator: FilterOperator.Between,\n    min: loginCountStats.min,\n    max: loginCountStats.max\n  },\n  {\n    Header: t('Fail login count'),\n    key: 'fail_login_count',\n    id: 'fail_login_count',\n    input: 'numerical_range',\n    operator: FilterOperator.Between\n  }],\n  [isLoading, roles, loginCountStats, failLoginCountStats]);\n  const emptyState = {\n    title: t('No users yet'),\n    image: 'filter-results.svg',\n    ...(isAdmin && {\n      buttonAction: () => {\n        openModal(ModalType.ADD);\n      },\n      buttonText: _jsxs(_Fragment, { children: [\n        _jsx(Icons.PlusOutlined, { iconColor: theme.colors.primary.light5, iconSize: \"m\", css: css`\n              margin: auto ${theme.gridUnit * 2}px auto 0;\n              vertical-align: text-top;\n            ` }),\n        t('User')] }\n      )\n    })\n  };\n  return _jsxs(_Fragment, { children: [\n    _jsx(SubMenu, { name: t('List Users'), buttons: subMenuButtons }),\n    _jsx(UserListAddModal, { onHide: () => closeModal(ModalType.ADD), show: modalState.add, onSave: () => {\n        refreshData();\n        closeModal(ModalType.ADD);\n      }, roles: roles }),\n    modalState.edit && currentUser && _jsx(UserListEditModal, { user: currentUser, show: modalState.edit, onHide: () => closeModal(ModalType.EDIT), onSave: () => {\n        refreshData();\n        closeModal(ModalType.EDIT);\n      }, roles: roles }),\n\n    userCurrentlyDeleting && _jsx(DeleteModal, { description: t('This action will permanently delete the user.'), onConfirm: () => {\n        if (userCurrentlyDeleting) {\n          handleUserDelete(userCurrentlyDeleting);\n        }\n      }, onHide: () => setUserCurrentlyDeleting(null), open: true, title: t('Delete User?') }),\n    _jsx(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected users?'), onConfirm: handleBulkUsersDelete, children:\n      (confirmDelete) => {\n        const bulkActions = isAdmin ?\n        [\n        {\n          key: 'delete',\n          name: t('Delete'),\n          onSelect: confirmDelete,\n          type: 'danger'\n        }] :\n\n        [];\n        return _jsx(ListView, { className: \"user-list-view\", columns: columns, count: usersCount, data: users, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, emptyState: emptyState, refreshData: refreshData });\n      } }\n    )] }\n  );\n}__signature__(UsersList, \"useTheme{theme}\\nuseToasts{{ addDangerToast, addSuccessToast }}\\nuseListViewResource{{ state: { loading, resourceCount: usersCount, resourceCollection: users, bulkSelectEnabled, }, fetchData, refreshData, toggleBulkSelect, }}\\nuseState{[modalState, setModalState]({\\n        edit: false,\\n        add: false,\\n        duplicate: false,\\n    })}\\nuseState{[currentUser, setCurrentUser](null)}\\nuseState{[userCurrentlyDeleting, setUserCurrentlyDeleting](null)}\\nuseState{[isLoading, setIsLoading](true)}\\nuseState{[roles, setRoles]([])}\\nuseMemo{loginCountStats}\\nuseMemo{failLoginCountStats}\\nuseMemo{isAdmin}\\nuseCallback{fetchRoles}\\nuseEffect{}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useTheme, useToasts, useListViewResource]);const _default =\nUsersList;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/Users/aryurkov/superset/superset-frontend/src/pages/UsersList/index.tsx\");reactHotLoader.register(ModalType, \"ModalType\", \"/Users/aryurkov/superset/superset-frontend/src/pages/UsersList/index.tsx\");reactHotLoader.register(isActiveOptions, \"isActiveOptions\", \"/Users/aryurkov/superset/superset-frontend/src/pages/UsersList/index.tsx\");reactHotLoader.register(UsersList, \"UsersList\", \"/Users/aryurkov/superset/superset-frontend/src/pages/UsersList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/pages/UsersList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","css","t","SupersetClient","useTheme","useListViewResource","SubMenu","ActionsBar","ListView","FilterOperator","DeleteModal","ConfirmStatusChange","isUserAdmin","Icons","UserListAddModal","UserListEditModal","useToasts","deleteUser","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PAGE_SIZE","ModalType","isActiveOptions","label","value","UsersList","user","theme","addDangerToast","addSuccessToast","state","loading","resourceCount","usersCount","resourceCollection","users","bulkSelectEnabled","fetchData","refreshData","toggleBulkSelect","modalState","setModalState","edit","add","duplicate","openModal","type","prev","closeModal","currentUser","setCurrentUser","userCurrentlyDeleting","setUserCurrentlyDeleting","isLoading","setIsLoading","roles","setRoles","loginCountStats","length","min","max","loginCounts","map","login_count","Math","failLoginCountStats","failLoginCounts","fail_login_count","isAdmin","fetchRoles","pageSize","fetchPage","pageIndex","response","get","endpoint","json","initialResponse","totalRoles","count","firstPageResults","result","totalPages","ceil","roleRequests","Array","from","_","i","remainingResults","Promise","all","flatMap","res","err","handleUserDelete","id","username","error","handleBulkUsersDelete","usersToDelete","deletedUserNames","then","push","catch","join","finally","initialSort","desc","columns","accessor","Header","Cell","row","original","first_name","children","last_name","email","active","role","name","disableSortBy","hidden","created_on","changed_on","last_login","handleEdit","EDIT","handleDelete","actions","tooltip","placement","icon","onClick","size","subMenuButtons","PlusOutlined","iconColor","colors","primary","light5","iconSize","gridUnit","buttonStyle","ADD","filters","key","input","operator","Contains","Equals","unfilteredLabel","selects","option","RelationManyMany","Between","dateFilterValueType","emptyState","title","image","buttonAction","buttonText","buttons","onHide","show","onSave","description","onConfirm","open","confirmDelete","bulkActions","onSelect","className","data","disableBulkSelect","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/pages/UsersList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { css, t, SupersetClient, useTheme } from '@superset-ui/core';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport { Icons } from 'src/components/Icons';\nimport {\n  UserListAddModal,\n  UserListEditModal,\n} from 'src/features/users/UserListModal';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport { deleteUser } from 'src/features/users/utils';\n\nconst PAGE_SIZE = 25;\n\ninterface UsersListProps {\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n    roles: object;\n  };\n}\n\nexport type Role = {\n  id: number;\n  name: string;\n};\n\nexport type UserObject = {\n  active: boolean;\n  changed_by: string | null;\n  changed_on: string;\n  created_by: string | null;\n  created_on: string;\n  email: string;\n  fail_login_count: number;\n  first_name: string;\n  id: number;\n  last_login: string;\n  last_name: string;\n  login_count: number;\n  roles: Role[];\n  username: string;\n};\n\nenum ModalType {\n  ADD = 'add',\n  EDIT = 'edit',\n}\n\nconst isActiveOptions = [\n  {\n    label: 'Yes',\n    value: true,\n  },\n  {\n    label: 'No',\n    value: false,\n  },\n];\n\nfunction UsersList({ user }: UsersListProps) {\n  const theme = useTheme();\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const {\n    state: {\n      loading,\n      resourceCount: usersCount,\n      resourceCollection: users,\n      bulkSelectEnabled,\n    },\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<UserObject>(\n    'security/users',\n    t('User'),\n    addDangerToast,\n  );\n  const [modalState, setModalState] = useState({\n    edit: false,\n    add: false,\n    duplicate: false,\n  });\n  const openModal = (type: ModalType) =>\n    setModalState(prev => ({ ...prev, [type]: true }));\n  const closeModal = (type: ModalType) =>\n    setModalState(prev => ({ ...prev, [type]: false }));\n\n  const [currentUser, setCurrentUser] = useState<UserObject | null>(null);\n  const [userCurrentlyDeleting, setUserCurrentlyDeleting] =\n    useState<UserObject | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [roles, setRoles] = useState<Role[]>([]);\n  const loginCountStats = useMemo(() => {\n    if (!users || users.length === 0) return { min: 0, max: 0 };\n\n    const loginCounts = users.map(user => user.login_count);\n    return {\n      min: Math.min(...loginCounts),\n      max: Math.max(...loginCounts),\n    };\n  }, [users]);\n  const failLoginCountStats = useMemo(() => {\n    if (!users || users.length === 0) return { min: 0, max: 0 };\n\n    const failLoginCounts = users.map(user => user.fail_login_count);\n    return {\n      min: Math.min(...failLoginCounts),\n      max: Math.max(...failLoginCounts),\n    };\n  }, [users]);\n\n  const isAdmin = useMemo(() => isUserAdmin(user), [user]);\n\n  const fetchRoles = useCallback(async () => {\n    try {\n      const pageSize = 100;\n\n      const fetchPage = async (pageIndex: number) => {\n        const response = await SupersetClient.get({\n          endpoint: `api/v1/security/roles/?q=(page_size:${pageSize},page:${pageIndex})`,\n        });\n        return response.json;\n      };\n\n      const initialResponse = await fetchPage(0);\n      const totalRoles = initialResponse.count;\n      const firstPageResults = initialResponse.result;\n\n      if (pageSize >= totalRoles) {\n        setRoles(firstPageResults);\n        return;\n      }\n\n      const totalPages = Math.ceil(totalRoles / pageSize);\n\n      const roleRequests = Array.from({ length: totalPages - 1 }, (_, i) =>\n        fetchPage(i + 1),\n      );\n      const remainingResults = await Promise.all(roleRequests);\n\n      setRoles([\n        ...firstPageResults,\n        ...remainingResults.flatMap(res => res.result),\n      ]);\n    } catch (err) {\n      addDangerToast(t('Error while fetching roles'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchRoles();\n  }, [fetchRoles]);\n\n  const handleUserDelete = async ({ id, username }: UserObject) => {\n    try {\n      await deleteUser(id);\n      refreshData();\n      setUserCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted user: %s', username));\n    } catch (error) {\n      addDangerToast(t('There was an issue deleting %s', username));\n    }\n  };\n\n  const handleBulkUsersDelete = (usersToDelete: UserObject[]) => {\n    const deletedUserNames: string[] = [];\n\n    Promise.all(\n      usersToDelete.map(user =>\n        deleteUser(user.id)\n          .then(() => {\n            deletedUserNames.push(user.username);\n          })\n          .catch(err => {\n            addDangerToast(t('Error deleting %s', user.username));\n          }),\n      ),\n    )\n      .then(() => {\n        if (deletedUserNames.length > 0) {\n          addSuccessToast(t('Deleted users: %s', deletedUserNames.join(', ')));\n        }\n      })\n      .finally(() => {\n        refreshData();\n      });\n  };\n\n  const initialSort = [{ id: 'username', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'first_name',\n        Header: t('First name'),\n        Cell: ({\n          row: {\n            original: { first_name },\n          },\n        }: any) => <span>{first_name}</span>,\n      },\n      {\n        accessor: 'last_name',\n        Header: t('Last name'),\n        Cell: ({\n          row: {\n            original: { last_name },\n          },\n        }: any) => <span>{last_name}</span>,\n      },\n      {\n        accessor: 'username',\n        Header: t('Username'),\n        Cell: ({\n          row: {\n            original: { username },\n          },\n        }: any) => <span>{username}</span>,\n      },\n      {\n        accessor: 'email',\n        Header: t('Email'),\n        Cell: ({\n          row: {\n            original: { email },\n          },\n        }: any) => <span>{email}</span>,\n      },\n      {\n        accessor: 'active',\n        Header: t('Is active?'),\n        Cell: ({\n          row: {\n            original: { active },\n          },\n        }: any) => <span>{active ? 'Yes' : 'No'}</span>,\n      },\n      {\n        accessor: 'roles',\n        Header: t('Roles'),\n        Cell: ({\n          row: {\n            original: { roles },\n          },\n        }: any) => (\n          <span>{roles.map((role: Role) => role.name).join(', ')}</span>\n        ),\n        disableSortBy: true,\n      },\n      {\n        accessor: 'login_count',\n        Header: t('Login count'),\n        hidden: true,\n        Cell: ({ row: { original } }: any) => original.login_count,\n      },\n      {\n        accessor: 'fail_login_count',\n        Header: t('Fail login count'),\n        hidden: true,\n        Cell: ({ row: { original } }: any) => original.fail_login_count,\n      },\n      {\n        accessor: 'created_on',\n        Header: t('Created on'),\n        hidden: true,\n        Cell: ({\n          row: {\n            original: { created_on },\n          },\n        }: any) => created_on,\n      },\n      {\n        accessor: 'changed_on',\n        Header: t('Changed on'),\n        hidden: true,\n        Cell: ({\n          row: {\n            original: { changed_on },\n          },\n        }: any) => changed_on,\n      },\n      {\n        accessor: 'last_login',\n        Header: t('Last login'),\n        hidden: true,\n        Cell: ({\n          row: {\n            original: { last_login },\n          },\n        }: any) => last_login,\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => {\n            setCurrentUser(original);\n            openModal(ModalType.EDIT);\n          };\n          const handleDelete = () => setUserCurrentlyDeleting(original);\n          const actions = isAdmin\n            ? [\n                {\n                  label: 'user-list-edit-action',\n                  tooltip: t('Edit user'),\n                  placement: 'bottom',\n                  icon: 'EditOutlined',\n                  onClick: handleEdit,\n                },\n                {\n                  label: 'role-list-delete-action',\n                  tooltip: t('Delete user'),\n                  placement: 'bottom',\n                  icon: 'DeleteOutlined',\n                  onClick: handleDelete,\n                },\n              ]\n            : [];\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !isAdmin,\n        size: 'xl',\n      },\n    ],\n    [isAdmin],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (isAdmin) {\n    subMenuButtons.push(\n      {\n        name: (\n          <>\n            <Icons.PlusOutlined\n              iconColor={theme.colors.primary.light5}\n              iconSize=\"m\"\n              css={css`\n                margin: auto ${theme.gridUnit * 2}px auto 0;\n                vertical-align: text-top;\n              `}\n            />\n            {t('User')}\n          </>\n        ),\n        buttonStyle: 'primary',\n        onClick: () => {\n          openModal(ModalType.ADD);\n        },\n        loading: isLoading,\n        'data-test': 'add-user-button',\n      },\n      {\n        name: t('Bulk select'),\n        onClick: toggleBulkSelect,\n        buttonStyle: 'secondary',\n      },\n    );\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('First name'),\n        key: 'first_name',\n        id: 'first_name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Last name'),\n        key: 'last_name',\n        id: 'last_name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Username'),\n        key: 'username',\n        id: 'username',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Email'),\n        key: 'email',\n        id: 'email',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Is active?'),\n        key: 'active',\n        id: 'active',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        selects: isActiveOptions?.map(option => ({\n          label: option.label,\n          value: option.value,\n        })),\n        loading: isLoading,\n      },\n      {\n        Header: t('Roles'),\n        key: 'roles',\n        id: 'roles',\n        input: 'select',\n        operator: FilterOperator.RelationManyMany,\n        unfilteredLabel: t('All'),\n        selects: roles?.map(role => ({\n          label: role.name,\n          value: role.id,\n        })),\n        loading: isLoading,\n      },\n      {\n        Header: t('Created on'),\n        key: 'created_on',\n        id: 'created_on',\n        input: 'datetime_range',\n        operator: FilterOperator.Between,\n        dateFilterValueType: 'iso',\n      },\n      {\n        Header: t('Changed on'),\n        key: 'changed_on',\n        id: 'changed_on',\n        input: 'datetime_range',\n        operator: FilterOperator.Between,\n        dateFilterValueType: 'iso',\n      },\n      {\n        Header: t('Last login'),\n        key: 'last_login',\n        id: 'last_login',\n        input: 'datetime_range',\n        operator: FilterOperator.Between,\n        dateFilterValueType: 'iso',\n      },\n      {\n        Header: t('Login count'),\n        key: 'login_count',\n        id: 'login_count',\n        input: 'numerical_range',\n        operator: FilterOperator.Between,\n        min: loginCountStats.min,\n        max: loginCountStats.max,\n      },\n      {\n        Header: t('Fail login count'),\n        key: 'fail_login_count',\n        id: 'fail_login_count',\n        input: 'numerical_range',\n        operator: FilterOperator.Between,\n      },\n    ],\n    [isLoading, roles, loginCountStats, failLoginCountStats],\n  );\n\n  const emptyState = {\n    title: t('No users yet'),\n    image: 'filter-results.svg',\n    ...(isAdmin && {\n      buttonAction: () => {\n        openModal(ModalType.ADD);\n      },\n      buttonText: (\n        <>\n          <Icons.PlusOutlined\n            iconColor={theme.colors.primary.light5}\n            iconSize=\"m\"\n            css={css`\n              margin: auto ${theme.gridUnit * 2}px auto 0;\n              vertical-align: text-top;\n            `}\n          />\n          {t('User')}\n        </>\n      ),\n    }),\n  };\n\n  return (\n    <>\n      <SubMenu name={t('List Users')} buttons={subMenuButtons} />\n      <UserListAddModal\n        onHide={() => closeModal(ModalType.ADD)}\n        show={modalState.add}\n        onSave={() => {\n          refreshData();\n          closeModal(ModalType.ADD);\n        }}\n        roles={roles}\n      />\n      {modalState.edit && currentUser && (\n        <UserListEditModal\n          user={currentUser}\n          show={modalState.edit}\n          onHide={() => closeModal(ModalType.EDIT)}\n          onSave={() => {\n            refreshData();\n            closeModal(ModalType.EDIT);\n          }}\n          roles={roles}\n        />\n      )}\n\n      {userCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the user.')}\n          onConfirm={() => {\n            if (userCurrentlyDeleting) {\n              handleUserDelete(userCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setUserCurrentlyDeleting(null)}\n          open\n          title={t('Delete User?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected users?')}\n        onConfirm={handleBulkUsersDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = isAdmin\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<UserObject>\n              className=\"user-list-view\"\n              columns={columns}\n              count={usersCount}\n              data={users}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              emptyState={emptyState}\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default UsersList;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,GAAG,EAAEC,CAAC,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,mBAAmB;AACpE,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,OAAOC,OAAyB,MAAM,2BAA2B;AACjE,OAAOC,UAA2B,MAAM,oCAAoC;AAC5E,OAAOC,QAAQ,IAGbC,cAAc,QACT,yBAAyB;AAChC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SACEC,gBAAgB,EAChBC,iBAAiB,QACZ,kCAAkC;AACzC,SAASC,SAAS,QAAQ,yCAAyC;AACnE,SAASC,UAAU,QAAQ,0BAA0B,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAEtD,MAAMC,SAAS,GAAG,EAAE;AAiCpB,IAAKC,SAGJ;AAHD,WAAKA,SAAS;EACZA,SAAA,eAAW;EACXA,SAAA,iBAAa;AACf,CAAC,EAHIA,SAAS,KAATA,SAAS;AAKd,MAAMC,eAAe,GAAG;AACtB;EACEC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;CACR;AACD;EACED,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;CACR,CACF;;AAED,SAASC,SAASA,CAAC,EAAEC,IAAI,EAAkB;EACzC,MAAMC,KAAK,GAAG3B,QAAQ,EAAE;EACxB,MAAM,EAAE4B,cAAc,EAAEC,eAAe,EAAE,GAAGjB,SAAS,EAAE;EACvD,MAAM,EACJkB,KAAK,EAAE,EACLC,OAAO,EACPC,aAAa,EAAEC,UAAU,EACzBC,kBAAkB,EAAEC,KAAK,EACzBC,iBAAiB,EAClB,EACDC,SAAS,EACTC,WAAW,EACXC,gBAAgB,EACjB,GAAGtC,mBAAmB,CACrB,gBAAgB,EAChBH,CAAC,CAAC,MAAM,CAAC,EACT8B,cAAc,CACf;EACD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC;IAC3C8C,IAAI,EAAE,KAAK;IACXC,GAAG,EAAE,KAAK;IACVC,SAAS,EAAE;GACZ,CAAC;EACF,MAAMC,SAAS,GAAGA,CAACC,IAAe,KAChCL,aAAa,CAAC,CAAAM,IAAI,MAAK,EAAE,GAAGA,IAAI,EAAE,CAACD,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;EACpD,MAAME,UAAU,GAAGA,CAACF,IAAe,KACjCL,aAAa,CAAC,CAAAM,IAAI,MAAK,EAAE,GAAGA,IAAI,EAAE,CAACD,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC;EAErD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGtD,QAAQ,CAAoB,IAAI,CAAC;EACvE,MAAM,CAACuD,qBAAqB,EAAEC,wBAAwB,CAAC,GACrDxD,QAAQ,CAAoB,IAAI,CAAC;EACnC,MAAM,CAACyD,SAAS,EAAEC,YAAY,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC2D,KAAK,EAAEC,QAAQ,CAAC,GAAG5D,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM6D,eAAe,GAAG9D,OAAO,CAAC,MAAK;IACnC,IAAI,CAACwC,KAAK,IAAIA,KAAK,CAACuB,MAAM,KAAK,CAAC;IAAE,OAAO,EAAEC,GAAG,EAAE,CAAC,EAAEC,GAAG,EAAE,CAAC,EAAE;IAE3D,MAAMC,WAAW,GAAG1B,KAAK,CAAC2B,GAAG,CAAC,CAAApC,IAAI,KAAIA,IAAI,CAACqC,WAAW,CAAC;IACvD,OAAO;MACLJ,GAAG,EAAEK,IAAI,CAACL,GAAG,CAAC,GAAGE,WAAW,CAAC;MAC7BD,GAAG,EAAEI,IAAI,CAACJ,GAAG,CAAC,GAAGC,WAAW;KAC7B;EACH,CAAC,EAAE,CAAC1B,KAAK,CAAC,CAAC;EACX,MAAM8B,mBAAmB,GAAGtE,OAAO,CAAC,MAAK;IACvC,IAAI,CAACwC,KAAK,IAAIA,KAAK,CAACuB,MAAM,KAAK,CAAC;IAAE,OAAO,EAAEC,GAAG,EAAE,CAAC,EAAEC,GAAG,EAAE,CAAC,EAAE;IAE3D,MAAMM,eAAe,GAAG/B,KAAK,CAAC2B,GAAG,CAAC,CAAApC,IAAI,KAAIA,IAAI,CAACyC,gBAAgB,CAAC;IAChE,OAAO;MACLR,GAAG,EAAEK,IAAI,CAACL,GAAG,CAAC,GAAGO,eAAe,CAAC;MACjCN,GAAG,EAAEI,IAAI,CAACJ,GAAG,CAAC,GAAGM,eAAe;KACjC;EACH,CAAC,EAAE,CAAC/B,KAAK,CAAC,CAAC;EAEX,MAAMiC,OAAO,GAAGzE,OAAO,CAAC,MAAMa,WAAW,CAACkB,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAExD,MAAM2C,UAAU,GAAG5E,WAAW,CAAC,YAAW;IACxC,IAAI;MACF,MAAM6E,QAAQ,GAAG,GAAG;MAEpB,MAAMC,SAAS,GAAG,MAAAA,CAAOC,SAAiB,KAAI;QAC5C,MAAMC,QAAQ,GAAG,MAAM1E,cAAc,CAAC2E,GAAG,CAAC;UACxCC,QAAQ,EAAE,uCAAuCL,QAAQ,SAASE,SAAS;SAC5E,CAAC;QACF,OAAOC,QAAQ,CAACG,IAAI;MACtB,CAAC;MAED,MAAMC,eAAe,GAAG,MAAMN,SAAS,CAAC,CAAC,CAAC;MAC1C,MAAMO,UAAU,GAAGD,eAAe,CAACE,KAAK;MACxC,MAAMC,gBAAgB,GAAGH,eAAe,CAACI,MAAM;MAE/C,IAAIX,QAAQ,IAAIQ,UAAU,EAAE;QAC1BtB,QAAQ,CAACwB,gBAAgB,CAAC;QAC1B;;MAGF,MAAME,UAAU,GAAGlB,IAAI,CAACmB,IAAI,CAACL,UAAU,GAAGR,QAAQ,CAAC;MAEnD,MAAMc,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,EAAE5B,MAAM,EAAEwB,UAAU,GAAG,CAAC,EAAE,EAAE,CAACK,CAAC,EAAEC,CAAC,KAC/DjB,SAAS,CAACiB,CAAC,GAAG,CAAC,CAAC,CACjB;MACD,MAAMC,gBAAgB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,YAAY,CAAC;MAExD5B,QAAQ,CAAC;MACP,GAAGwB,gBAAgB;MACnB,GAAGS,gBAAgB,CAACG,OAAO,CAAC,CAAAC,GAAG,KAAIA,GAAG,CAACZ,MAAM,CAAC;MAC/C,CAAC;;IACF,OAAOa,GAAG,EAAE;MACZlE,cAAc,CAAC9B,CAAC,CAAC,4BAA4B,CAAC,CAAC;KAChD;IAAS;MACRwD,YAAY,CAAC,KAAK,CAAC;;EAEvB,CAAC,EAAE,EAAE,CAAC;EAEN5D,SAAS,CAAC,MAAK;IACb2E,UAAU,EAAE;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAM0B,gBAAgB,GAAG,MAAAA,CAAO,EAAEC,EAAE,EAAEC,QAAQ,EAAc,KAAI;IAC9D,IAAI;MACF,MAAMpF,UAAU,CAACmF,EAAE,CAAC;MACpB1D,WAAW,EAAE;MACbc,wBAAwB,CAAC,IAAI,CAAC;MAC9BvB,eAAe,CAAC/B,CAAC,CAAC,kBAAkB,EAAEmG,QAAQ,CAAC,CAAC;;IAChD,OAAOC,KAAK,EAAE;MACdtE,cAAc,CAAC9B,CAAC,CAAC,gCAAgC,EAAEmG,QAAQ,CAAC,CAAC;;EAEjE,CAAC;EAED,MAAME,qBAAqB,GAAGA,CAACC,aAA2B,KAAI;IAC5D,MAAMC,gBAAgB,GAAa,EAAE;IAErCX,OAAO,CAACC,GAAG,CACTS,aAAa,CAACtC,GAAG,CAAC,CAAApC,IAAI,KACpBb,UAAU,CAACa,IAAI,CAACsE,EAAE,CAAC;IAChBM,IAAI,CAAC,MAAK;MACTD,gBAAgB,CAACE,IAAI,CAAC7E,IAAI,CAACuE,QAAQ,CAAC;IACtC,CAAC,CAAC;IACDO,KAAK,CAAC,CAAAV,GAAG,KAAG;MACXlE,cAAc,CAAC9B,CAAC,CAAC,mBAAmB,EAAE4B,IAAI,CAACuE,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC,CACL,CACF;IACEK,IAAI,CAAC,MAAK;MACT,IAAID,gBAAgB,CAAC3C,MAAM,GAAG,CAAC,EAAE;QAC/B7B,eAAe,CAAC/B,CAAC,CAAC,mBAAmB,EAAEuG,gBAAgB,CAACI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;IAExE,CAAC,CAAC;IACDC,OAAO,CAAC,MAAK;MACZpE,WAAW,EAAE;IACf,CAAC,CAAC;EACN,CAAC;EAED,MAAMqE,WAAW,GAAG,CAAC,EAAEX,EAAE,EAAE,UAAU,EAAEY,IAAI,EAAE,IAAI,EAAE,CAAC;EACpD,MAAMC,OAAO,GAAGlH,OAAO,CACrB,MAAM;EACJ;IACEmH,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvBkH,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEC,UAAU,EAAE,EACzB,EACG,KAAKpG,IAAA,WAAAqG,QAAA,EAAOD,UAAU,EAAO;GACpC;EACD;IACEL,QAAQ,EAAE,WAAW;IACrBC,MAAM,EAAEjH,CAAC,CAAC,WAAW,CAAC;IACtBkH,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEG,SAAS,EAAE,EACxB,EACG,KAAKtG,IAAA,WAAAqG,QAAA,EAAOC,SAAS,EAAO;GACnC;EACD;IACEP,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAEjH,CAAC,CAAC,UAAU,CAAC;IACrBkH,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEjB,QAAQ,EAAE,EACvB,EACG,KAAKlF,IAAA,WAAAqG,QAAA,EAAOnB,QAAQ,EAAO;GAClC;EACD;IACEa,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAEjH,CAAC,CAAC,OAAO,CAAC;IAClBkH,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEI,KAAK,EAAE,EACpB,EACG,KAAKvG,IAAA,WAAAqG,QAAA,EAAOE,KAAK,EAAO;GAC/B;EACD;IACER,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvBkH,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEK,MAAM,EAAE,EACrB,EACG,KAAKxG,IAAA,WAAAqG,QAAA,EAAOG,MAAM,GAAG,KAAK,GAAG,IAAI,EAAO;GAC/C;EACD;IACET,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAEjH,CAAC,CAAC,OAAO,CAAC;IAClBkH,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAE3D,KAAK,EAAE,EACpB,EACG,KACJxC,IAAA,WAAAqG,QAAA,EAAO7D,KAAK,CAACO,GAAG,CAAC,CAAC0D,IAAU,KAAKA,IAAI,CAACC,IAAI,CAAC,CAAChB,IAAI,CAAC,IAAI,CAAC,EAAO,CAC9D;IACDiB,aAAa,EAAE;GAChB;EACD;IACEZ,QAAQ,EAAE,aAAa;IACvBC,MAAM,EAAEjH,CAAC,CAAC,aAAa,CAAC;IACxB6H,MAAM,EAAE,IAAI;IACZX,IAAI,EAAEA,CAAC,EAAEC,GAAG,EAAE,EAAEC,QAAQ,EAAE,EAAO,KAAKA,QAAQ,CAACnD;GAChD;EACD;IACE+C,QAAQ,EAAE,kBAAkB;IAC5BC,MAAM,EAAEjH,CAAC,CAAC,kBAAkB,CAAC;IAC7B6H,MAAM,EAAE,IAAI;IACZX,IAAI,EAAEA,CAAC,EAAEC,GAAG,EAAE,EAAEC,QAAQ,EAAE,EAAO,KAAKA,QAAQ,CAAC/C;GAChD;EACD;IACE2C,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvB6H,MAAM,EAAE,IAAI;IACZX,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEU,UAAU,EAAE,EACzB,EACG,KAAKA;GACZ;EACD;IACEd,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvB6H,MAAM,EAAE,IAAI;IACZX,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEW,UAAU,EAAE,EACzB,EACG,KAAKA;GACZ;EACD;IACEf,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvB6H,MAAM,EAAE,IAAI;IACZX,IAAI,EAAEA,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEY,UAAU,EAAE,EACzB,EACG,KAAKA;GACZ;EACD;IACEd,IAAI,EAAEA,CAAC,EAAEC,GAAG,EAAE,EAAEC,QAAQ,EAAE,EAAO,KAAI;MACnC,MAAMa,UAAU,GAAGA,CAAA,KAAK;QACtB7E,cAAc,CAACgE,QAAQ,CAAC;QACxBrE,SAAS,CAACxB,SAAS,CAAC2G,IAAI,CAAC;MAC3B,CAAC;MACD,MAAMC,YAAY,GAAGA,CAAA,KAAM7E,wBAAwB,CAAC8D,QAAQ,CAAC;MAC7D,MAAMgB,OAAO,GAAG9D,OAAO;MACnB;MACE;QACE7C,KAAK,EAAE,uBAAuB;QAC9B4G,OAAO,EAAErI,CAAC,CAAC,WAAW,CAAC;QACvBsI,SAAS,EAAE,QAAQ;QACnBC,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAEP;OACV;MACD;QACExG,KAAK,EAAE,yBAAyB;QAChC4G,OAAO,EAAErI,CAAC,CAAC,aAAa,CAAC;QACzBsI,SAAS,EAAE,QAAQ;QACnBC,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAEL;OACV,CACF;;MACD,EAAE;MAEN,OAAOlH,IAAA,CAACZ,UAAU,IAAC+H,OAAO,EAAEA,OAAyB,GAAG;IAC1D,CAAC;IACDnB,MAAM,EAAEjH,CAAC,CAAC,SAAS,CAAC;IACpBkG,EAAE,EAAE,SAAS;IACb0B,aAAa,EAAE,IAAI;IACnBC,MAAM,EAAE,CAACvD,OAAO;IAChBmE,IAAI,EAAE;GACP,CACF;EACD,CAACnE,OAAO,CAAC,CACV;EAED,MAAMoE,cAAc,GAA4B,EAAE;EAElD,IAAIpE,OAAO,EAAE;IACXoE,cAAc,CAACjC,IAAI,CACjB;MACEkB,IAAI,EACFtG,KAAA,CAAAF,SAAA,IAAAmG,QAAA;QACErG,IAAA,CAACN,KAAK,CAACgI,YAAY,IACjBC,SAAS,EAAE/G,KAAK,CAACgH,MAAM,CAACC,OAAO,CAACC,MAAO,EACvCC,QAAQ,EAAC,GAAG,EACZjJ,GAAG,EAAEA,GAAG;+BACS8B,KAAK,CAACoH,QAAQ,GAAG,CAAC;;eAEjC,GAEJ;QAACjJ,CAAC,CAAC,MAAM,CAAC;MACZ,CACD;MACDkJ,WAAW,EAAE,SAAS;MACtBV,OAAO,EAAEA,CAAA,KAAK;QACZzF,SAAS,CAACxB,SAAS,CAAC4H,GAAG,CAAC;MAC1B,CAAC;MACDlH,OAAO,EAAEsB,SAAS;MAClB,WAAW,EAAE;KACd,EACD;MACEoE,IAAI,EAAE3H,CAAC,CAAC,aAAa,CAAC;MACtBwI,OAAO,EAAE/F,gBAAgB;MACzByG,WAAW,EAAE;KACd,CACF;;EAGH,MAAME,OAAO,GAAYvJ,OAAO,CAC9B,MAAM;EACJ;IACEoH,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvBqJ,GAAG,EAAE,YAAY;IACjBnD,EAAE,EAAE,YAAY;IAChBoD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAEhJ,cAAc,CAACiJ;GAC1B;EACD;IACEvC,MAAM,EAAEjH,CAAC,CAAC,WAAW,CAAC;IACtBqJ,GAAG,EAAE,WAAW;IAChBnD,EAAE,EAAE,WAAW;IACfoD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAEhJ,cAAc,CAACiJ;GAC1B;EACD;IACEvC,MAAM,EAAEjH,CAAC,CAAC,UAAU,CAAC;IACrBqJ,GAAG,EAAE,UAAU;IACfnD,EAAE,EAAE,UAAU;IACdoD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAEhJ,cAAc,CAACiJ;GAC1B;EACD;IACEvC,MAAM,EAAEjH,CAAC,CAAC,OAAO,CAAC;IAClBqJ,GAAG,EAAE,OAAO;IACZnD,EAAE,EAAE,OAAO;IACXoD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAEhJ,cAAc,CAACiJ;GAC1B;EACD;IACEvC,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvBqJ,GAAG,EAAE,QAAQ;IACbnD,EAAE,EAAE,QAAQ;IACZoD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAEhJ,cAAc,CAACkJ,MAAM;IAC/BC,eAAe,EAAE1J,CAAC,CAAC,KAAK,CAAC;IACzB2J,OAAO,EAAEnI,eAAe,oBAAfA,eAAe,CAAEwC,GAAG,CAAC,CAAA4F,MAAM,MAAK;MACvCnI,KAAK,EAAEmI,MAAM,CAACnI,KAAK;MACnBC,KAAK,EAAEkI,MAAM,CAAClI;KACf,CAAC,CAAC;IACHO,OAAO,EAAEsB;GACV;EACD;IACE0D,MAAM,EAAEjH,CAAC,CAAC,OAAO,CAAC;IAClBqJ,GAAG,EAAE,OAAO;IACZnD,EAAE,EAAE,OAAO;IACXoD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAEhJ,cAAc,CAACsJ,gBAAgB;IACzCH,eAAe,EAAE1J,CAAC,CAAC,KAAK,CAAC;IACzB2J,OAAO,EAAElG,KAAK,oBAALA,KAAK,CAAEO,GAAG,CAAC,CAAA0D,IAAI,MAAK;MAC3BjG,KAAK,EAAEiG,IAAI,CAACC,IAAI;MAChBjG,KAAK,EAAEgG,IAAI,CAACxB;KACb,CAAC,CAAC;IACHjE,OAAO,EAAEsB;GACV;EACD;IACE0D,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvBqJ,GAAG,EAAE,YAAY;IACjBnD,EAAE,EAAE,YAAY;IAChBoD,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAEhJ,cAAc,CAACuJ,OAAO;IAChCC,mBAAmB,EAAE;GACtB;EACD;IACE9C,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvBqJ,GAAG,EAAE,YAAY;IACjBnD,EAAE,EAAE,YAAY;IAChBoD,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAEhJ,cAAc,CAACuJ,OAAO;IAChCC,mBAAmB,EAAE;GACtB;EACD;IACE9C,MAAM,EAAEjH,CAAC,CAAC,YAAY,CAAC;IACvBqJ,GAAG,EAAE,YAAY;IACjBnD,EAAE,EAAE,YAAY;IAChBoD,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAEhJ,cAAc,CAACuJ,OAAO;IAChCC,mBAAmB,EAAE;GACtB;EACD;IACE9C,MAAM,EAAEjH,CAAC,CAAC,aAAa,CAAC;IACxBqJ,GAAG,EAAE,aAAa;IAClBnD,EAAE,EAAE,aAAa;IACjBoD,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAEhJ,cAAc,CAACuJ,OAAO;IAChCjG,GAAG,EAAEF,eAAe,CAACE,GAAG;IACxBC,GAAG,EAAEH,eAAe,CAACG;GACtB;EACD;IACEmD,MAAM,EAAEjH,CAAC,CAAC,kBAAkB,CAAC;IAC7BqJ,GAAG,EAAE,kBAAkB;IACvBnD,EAAE,EAAE,kBAAkB;IACtBoD,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAEhJ,cAAc,CAACuJ;GAC1B,CACF;EACD,CAACvG,SAAS,EAAEE,KAAK,EAAEE,eAAe,EAAEQ,mBAAmB,CAAC,CACzD;EAED,MAAM6F,UAAU,GAAG;IACjBC,KAAK,EAAEjK,CAAC,CAAC,cAAc,CAAC;IACxBkK,KAAK,EAAE,oBAAoB;IAC3B,IAAI5F,OAAO,IAAI;MACb6F,YAAY,EAAEA,CAAA,KAAK;QACjBpH,SAAS,CAACxB,SAAS,CAAC4H,GAAG,CAAC;MAC1B,CAAC;MACDiB,UAAU,EACR/I,KAAA,CAAAF,SAAA,IAAAmG,QAAA;QACErG,IAAA,CAACN,KAAK,CAACgI,YAAY,IACjBC,SAAS,EAAE/G,KAAK,CAACgH,MAAM,CAACC,OAAO,CAACC,MAAO,EACvCC,QAAQ,EAAC,GAAG,EACZjJ,GAAG,EAAEA,GAAG;6BACS8B,KAAK,CAACoH,QAAQ,GAAG,CAAC;;aAEjC,GAEJ;QAACjJ,CAAC,CAAC,MAAM,CAAC;MACZ;KAEH;GACF;EAED,OACEqB,KAAA,CAAAF,SAAA,IAAAmG,QAAA;IACErG,IAAA,CAACb,OAAO,IAACuH,IAAI,EAAE3H,CAAC,CAAC,YAAY,CAAE,EAACqK,OAAO,EAAE3B,cAAe,GACxD;IAAAzH,IAAA,CAACL,gBAAgB,IACf0J,MAAM,EAAEA,CAAA,KAAMpH,UAAU,CAAC3B,SAAS,CAAC4H,GAAG,CAAE,EACxCoB,IAAI,EAAE7H,UAAU,CAACG,GAAI,EACrB2H,MAAM,EAAEA,CAAA,KAAK;QACXhI,WAAW,EAAE;QACbU,UAAU,CAAC3B,SAAS,CAAC4H,GAAG,CAAC;MAC3B,CAAE,EACF1F,KAAK,EAAEA,KAAM,GAEf;IAACf,UAAU,CAACE,IAAI,IAAIO,WAAW,IAC7BlC,IAAA,CAACJ,iBAAiB,IAChBe,IAAI,EAAEuB,WAAY,EAClBoH,IAAI,EAAE7H,UAAU,CAACE,IAAK,EACtB0H,MAAM,EAAEA,CAAA,KAAMpH,UAAU,CAAC3B,SAAS,CAAC2G,IAAI,CAAE,EACzCsC,MAAM,EAAEA,CAAA,KAAK;QACXhI,WAAW,EAAE;QACbU,UAAU,CAAC3B,SAAS,CAAC2G,IAAI,CAAC;MAC5B,CAAE,EACFzE,KAAK,EAAEA,KAAM,GAEhB;;IAEAJ,qBAAqB,IACpBpC,IAAA,CAACT,WAAW,IACViK,WAAW,EAAEzK,CAAC,CAAC,+CAA+C,CAAE,EAChE0K,SAAS,EAAEA,CAAA,KAAK;QACd,IAAIrH,qBAAqB,EAAE;UACzB4C,gBAAgB,CAAC5C,qBAAqB,CAAC;;MAE3C,CAAE,EACFiH,MAAM,EAAEA,CAAA,KAAMhH,wBAAwB,CAAC,IAAI,CAAE,EAC7CqH,IAAI,QACJV,KAAK,EAAEjK,CAAC,CAAC,cAAc,CAAE,GAE5B;IACDiB,IAAA,CAACR,mBAAmB,IAClBwJ,KAAK,EAAEjK,CAAC,CAAC,gBAAgB,CAAE,EAC3ByK,WAAW,EAAEzK,CAAC,CAAC,qDAAqD,CAAE,EACtE0K,SAAS,EAAErE,qBAAsB,EAAAiB,QAAA;MAEhCA,CAAAsD,aAAa,KAAG;QACf,MAAMC,WAAW,GAAiCvG,OAAO;QACrD;QACE;UACE+E,GAAG,EAAE,QAAQ;UACb1B,IAAI,EAAE3H,CAAC,CAAC,QAAQ,CAAC;UACjB8K,QAAQ,EAAEF,aAAa;UACvB5H,IAAI,EAAE;SACP,CACF;;QACD,EAAE;QAEN,OACE/B,IAAA,CAACX,QAAQ,IACPyK,SAAS,EAAC,gBAAgB,EAC1BhE,OAAO,EAAEA,OAAQ,EACjB9B,KAAK,EAAE9C,UAAW,EAClB6I,IAAI,EAAE3I,KAAM,EACZE,SAAS,EAAEA,SAAU,EACrB6G,OAAO,EAAEA,OAAQ,EACjBvC,WAAW,EAAEA,WAAY,EACzB5E,OAAO,EAAEA,OAAQ,EACjBuC,QAAQ,EAAElD,SAAU,EACpBuJ,WAAW,EAAEA,WAAY,EACzBvI,iBAAiB,EAAEA,iBAAkB,EACrC2I,iBAAiB,EAAExI,gBAAiB,EACpCX,cAAc,EAAEA,cAAe,EAC/BC,eAAe,EAAEA,eAAgB,EACjCiI,UAAU,EAAEA,UAAW,EACvBxH,WAAW,EAAEA,WAAY,GACzB;MAEN,CAAC;IACkB,CACvB;EAAA,CAAG;AAEP,CAAC0I,aAAA,CA1fQvJ,SAAS,urBACFzB,QAAQ,EACsBY,SAAS,EAWjDX,mBAAmB,SAAAgL,QAAA;AA+eVxJ,SAAS,CAAxB,eAAAwJ,QAAA,CAAyB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA7iBnBlK,SAAS,2FAAA8J,cAAA,CAAAI,QAAA,CAiCVjK,SAGJ,2FAAA6J,cAAA,CAAAI,QAAA,CAEKhK,eAAe,iGAAA4J,cAAA,CAAAI,QAAA,CAWZ7J,SAAS,2FAAAyJ,cAAA,CAAAI,QAAA,CAAAL,QAAA,iHAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}