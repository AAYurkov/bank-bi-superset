{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useMemo } from 'react';\nimport { Resizable } from 're-resizable';\nimport cx from 'classnames';\nimport { css, styled } from '@superset-ui/core';\nimport { RightResizeHandle, BottomResizeHandle, BottomRightResizeHandle } from './ResizableHandle';\nimport resizableConfig from '../../util/resizableConfig';\nimport { GRID_BASE_UNIT, GRID_GUTTER_SIZE } from '../../util/constants';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst proxyToInfinity = Number.MAX_VALUE;\n// because columns are not multiples of a single variable (width = n*cols + (n-1) * gutters)\n// we snap to the base unit and then snap to _actual_ column multiples on stop\nconst SNAP_TO_GRID = [GRID_BASE_UNIT, GRID_BASE_UNIT];\nconst HANDLE_CLASSES = {\n  right: 'resizable-container-handle--right',\n  bottom: 'resizable-container-handle--bottom'\n};\n// @ts-ignore\nconst StyledResizable = styled(Resizable)`\n  ${({ theme }) => css`\n    &.resizable-container {\n      background-color: transparent;\n      position: relative;\n\n      /* re-resizable sets an empty div to 100% width and height, which doesn't\n      play well with many 100% height containers we need */\n\n      & ~ div {\n        width: auto !important;\n        height: auto !important;\n      }\n    }\n\n    &.resizable-container--resizing {\n      /* after ensures border visibility on top of any children */\n\n      &:after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        box-shadow: inset 0 0 0 2px ${theme.colors.primary.base};\n      }\n\n      & > span .resize-handle {\n        border-color: ${theme.colors.primary.base};\n      }\n    }\n\n    .resize-handle {\n      opacity: 0;\n      z-index: 10;\n\n      &--bottom-right {\n        position: absolute;\n        border-right: 1px solid ${theme.colors.text.label};\n        border-bottom: 1px solid ${theme.colors.text.label};\n        right: ${theme.gridUnit * 4}px;\n        bottom: ${theme.gridUnit * 4}px;\n        width: ${theme.gridUnit * 2}px;\n        height: ${theme.gridUnit * 2}px;\n      }\n\n      &--right {\n        width: ${theme.gridUnit / 2}px;\n        height: ${theme.gridUnit * 5}px;\n        right: ${theme.gridUnit}px;\n        top: 50%;\n        transform: translate(0, -50%);\n        position: absolute;\n        border-left: 1px solid ${theme.colors.text.label};\n        border-right: 1px solid ${theme.colors.text.label};\n      }\n\n      &--bottom {\n        height: ${theme.gridUnit / 2}px;\n        width: ${theme.gridUnit * 5}px;\n        bottom: ${theme.gridUnit}px;\n        left: 50%;\n        transform: translate(-50%);\n        position: absolute;\n        border-top: 1px solid ${theme.colors.text.label};\n        border-bottom: 1px solid ${theme.colors.text.label};\n      }\n    }\n  `}\n\n  &.resizable-container:hover .resize-handle,\n  &.resizable-container--resizing .resize-handle {\n    opacity: 1;\n  }\n\n  .dragdroppable-column & .resizable-container-handle--right {\n    /* override the default because the inner column's handle's mouse target is very small */\n    right: 0 !important;\n  }\n\n  & .resizable-container-handle--bottom {\n    bottom: 0 !important;\n  }\n`;\nexport default function ResizableContainer({ id, children, widthMultiple, heightMultiple, staticHeight, staticHeightMultiple, staticWidth, staticWidthMultiple, onResizeStop, onResize, onResizeStart, editMode, adjustableWidth = true, adjustableHeight = true, gutterWidth = GRID_GUTTER_SIZE, widthStep = GRID_BASE_UNIT, heightStep = GRID_BASE_UNIT, minWidthMultiple = 1, maxWidthMultiple = proxyToInfinity, minHeightMultiple = 1, maxHeightMultiple = proxyToInfinity }) {\n  const [isResizing, setIsResizing] = useState(false);\n  const handleResize = useCallback((event, direction, elementRef, delta) => {\n    if (onResize)\n    onResize(event, direction, elementRef, delta);\n  }, [onResize]);\n  const handleResizeStart = useCallback((e, dir, elementRef) => {\n    if (onResizeStart)\n    onResizeStart(e, dir, elementRef);\n    setIsResizing(true);\n  }, [onResizeStart]);\n  const handleResizeStop = useCallback((event, direction, elementRef, delta) => {\n    if (onResizeStop) {\n      const nextWidthMultiple = widthMultiple + Math.round(delta.width / (widthStep + gutterWidth));\n      const nextHeightMultiple = heightMultiple + Math.round(delta.height / heightStep);\n      onResizeStop(event, direction, elementRef, {\n        width: adjustableWidth ? nextWidthMultiple : 0,\n        height: adjustableHeight ? nextHeightMultiple : 0\n      },\n      // @ts-ignore\n      id);\n    }\n    setIsResizing(false);\n  }, [\n  onResizeStop,\n  widthMultiple,\n  heightMultiple,\n  widthStep,\n  heightStep,\n  gutterWidth,\n  adjustableWidth,\n  adjustableHeight,\n  id]\n  );\n  const size = useMemo(() => ({\n    width: adjustableWidth ?\n    (widthStep + gutterWidth) * widthMultiple - gutterWidth :\n    staticWidthMultiple && staticWidthMultiple * widthStep ||\n    staticWidth ||\n    undefined,\n    height: adjustableHeight ?\n    heightStep * heightMultiple :\n    staticHeightMultiple && staticHeightMultiple * heightStep ||\n    staticHeight ||\n    undefined\n  }), [\n  adjustableWidth,\n  widthStep,\n  gutterWidth,\n  widthMultiple,\n  staticWidthMultiple,\n  staticWidth,\n  adjustableHeight,\n  heightStep,\n  heightMultiple,\n  staticHeightMultiple,\n  staticHeight]\n  );\n  const handleComponent = useMemo(() => ({\n    right: _jsx(RightResizeHandle, {}),\n    bottom: _jsx(BottomResizeHandle, {}),\n    bottomRight: _jsx(BottomRightResizeHandle, {})\n  }), []);\n  const enableConfig = useMemo(() => {\n    if (editMode && adjustableWidth && adjustableHeight) {\n      return resizableConfig.widthAndHeight;\n    }\n    if (editMode && adjustableWidth) {\n      return resizableConfig.widthOnly;\n    }\n    if (editMode && adjustableHeight) {\n      return resizableConfig.heightOnly;\n    }\n    return resizableConfig.notAdjustable;\n  }, [editMode, adjustableWidth, adjustableHeight]);\n  return _jsx(StyledResizable, { enable: enableConfig, grid: SNAP_TO_GRID, gridGap: undefined, minWidth: adjustableWidth ?\n    minWidthMultiple * (widthStep + gutterWidth) - gutterWidth :\n    undefined, minHeight: adjustableHeight ? minHeightMultiple * heightStep : undefined, maxWidth: adjustableWidth && size.width ?\n    Math.max(size.width, Math.min(proxyToInfinity, maxWidthMultiple * (widthStep + gutterWidth) - gutterWidth)) :\n    undefined, maxHeight: adjustableHeight && size.height ?\n    Math.max(size.height, Math.min(proxyToInfinity, maxHeightMultiple * heightStep)) :\n    undefined, size: size, onResizeStart: handleResizeStart, onResize: handleResize, onResizeStop: handleResizeStop, handleComponent: handleComponent, className: cx('resizable-container', isResizing && 'resizable-container--resizing'), handleClasses: HANDLE_CLASSES, children:\n    children }\n  );\n}__signature__(ResizableContainer, \"useState{[isResizing, setIsResizing](false)}\\nuseCallback{handleResize}\\nuseCallback{handleResizeStart}\\nuseCallback{handleResizeStop}\\nuseMemo{size}\\nuseMemo{handleComponent}\\nuseMemo{enableConfig}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(proxyToInfinity, \"proxyToInfinity\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/resizable/ResizableContainer.tsx\");reactHotLoader.register(SNAP_TO_GRID, \"SNAP_TO_GRID\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/resizable/ResizableContainer.tsx\");reactHotLoader.register(HANDLE_CLASSES, \"HANDLE_CLASSES\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/resizable/ResizableContainer.tsx\");reactHotLoader.register(StyledResizable, \"StyledResizable\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/resizable/ResizableContainer.tsx\");reactHotLoader.register(ResizableContainer, \"ResizableContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/resizable/ResizableContainer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useCallback","useMemo","Resizable","cx","css","styled","RightResizeHandle","BottomResizeHandle","BottomRightResizeHandle","resizableConfig","GRID_BASE_UNIT","GRID_GUTTER_SIZE","jsx","_jsx","proxyToInfinity","Number","MAX_VALUE","SNAP_TO_GRID","HANDLE_CLASSES","right","bottom","StyledResizable","theme","colors","primary","base","text","label","gridUnit","ResizableContainer","id","children","widthMultiple","heightMultiple","staticHeight","staticHeightMultiple","staticWidth","staticWidthMultiple","onResizeStop","onResize","onResizeStart","editMode","adjustableWidth","adjustableHeight","gutterWidth","widthStep","heightStep","minWidthMultiple","maxWidthMultiple","minHeightMultiple","maxHeightMultiple","isResizing","setIsResizing","handleResize","event","direction","elementRef","delta","handleResizeStart","e","dir","handleResizeStop","nextWidthMultiple","Math","round","width","nextHeightMultiple","height","size","undefined","handleComponent","bottomRight","enableConfig","widthAndHeight","widthOnly","heightOnly","notAdjustable","enable","grid","gridGap","minWidth","minHeight","maxWidth","max","min","maxHeight","className","handleClasses","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/resizable/ResizableContainer.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useMemo } from 'react';\nimport { ResizeCallback, ResizeStartCallback, Resizable } from 're-resizable';\nimport cx from 'classnames';\nimport { css, styled } from '@superset-ui/core';\n\nimport {\n  RightResizeHandle,\n  BottomResizeHandle,\n  BottomRightResizeHandle,\n} from './ResizableHandle';\nimport resizableConfig from '../../util/resizableConfig';\nimport { GRID_BASE_UNIT, GRID_GUTTER_SIZE } from '../../util/constants';\n\nconst proxyToInfinity = Number.MAX_VALUE;\n\nexport interface ResizableContainerProps {\n  id: string;\n  children?: object;\n  adjustableWidth?: boolean;\n  adjustableHeight?: boolean;\n  gutterWidth?: number;\n  widthStep?: number;\n  heightStep?: number;\n  widthMultiple: number;\n  heightMultiple: number;\n  minWidthMultiple?: number;\n  maxWidthMultiple?: number;\n  minHeightMultiple?: number;\n  maxHeightMultiple?: number;\n  staticHeight?: number;\n  staticHeightMultiple?: number;\n  staticWidth?: number;\n  staticWidthMultiple?: number;\n  onResizeStart?: ResizeStartCallback;\n  onResize?: ResizeCallback;\n  onResizeStop?: ResizeCallback;\n  editMode: boolean;\n}\n\n// because columns are not multiples of a single variable (width = n*cols + (n-1) * gutters)\n// we snap to the base unit and then snap to _actual_ column multiples on stop\nconst SNAP_TO_GRID: [number, number] = [GRID_BASE_UNIT, GRID_BASE_UNIT];\nconst HANDLE_CLASSES = {\n  right: 'resizable-container-handle--right',\n  bottom: 'resizable-container-handle--bottom',\n};\n// @ts-ignore\nconst StyledResizable = styled(Resizable)`\n  ${({ theme }) => css`\n    &.resizable-container {\n      background-color: transparent;\n      position: relative;\n\n      /* re-resizable sets an empty div to 100% width and height, which doesn't\n      play well with many 100% height containers we need */\n\n      & ~ div {\n        width: auto !important;\n        height: auto !important;\n      }\n    }\n\n    &.resizable-container--resizing {\n      /* after ensures border visibility on top of any children */\n\n      &:after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        box-shadow: inset 0 0 0 2px ${theme.colors.primary.base};\n      }\n\n      & > span .resize-handle {\n        border-color: ${theme.colors.primary.base};\n      }\n    }\n\n    .resize-handle {\n      opacity: 0;\n      z-index: 10;\n\n      &--bottom-right {\n        position: absolute;\n        border-right: 1px solid ${theme.colors.text.label};\n        border-bottom: 1px solid ${theme.colors.text.label};\n        right: ${theme.gridUnit * 4}px;\n        bottom: ${theme.gridUnit * 4}px;\n        width: ${theme.gridUnit * 2}px;\n        height: ${theme.gridUnit * 2}px;\n      }\n\n      &--right {\n        width: ${theme.gridUnit / 2}px;\n        height: ${theme.gridUnit * 5}px;\n        right: ${theme.gridUnit}px;\n        top: 50%;\n        transform: translate(0, -50%);\n        position: absolute;\n        border-left: 1px solid ${theme.colors.text.label};\n        border-right: 1px solid ${theme.colors.text.label};\n      }\n\n      &--bottom {\n        height: ${theme.gridUnit / 2}px;\n        width: ${theme.gridUnit * 5}px;\n        bottom: ${theme.gridUnit}px;\n        left: 50%;\n        transform: translate(-50%);\n        position: absolute;\n        border-top: 1px solid ${theme.colors.text.label};\n        border-bottom: 1px solid ${theme.colors.text.label};\n      }\n    }\n  `}\n\n  &.resizable-container:hover .resize-handle,\n  &.resizable-container--resizing .resize-handle {\n    opacity: 1;\n  }\n\n  .dragdroppable-column & .resizable-container-handle--right {\n    /* override the default because the inner column's handle's mouse target is very small */\n    right: 0 !important;\n  }\n\n  & .resizable-container-handle--bottom {\n    bottom: 0 !important;\n  }\n`;\n\nexport default function ResizableContainer({\n  id,\n  children,\n  widthMultiple,\n  heightMultiple,\n  staticHeight,\n  staticHeightMultiple,\n  staticWidth,\n  staticWidthMultiple,\n  onResizeStop,\n  onResize,\n  onResizeStart,\n  editMode,\n  adjustableWidth = true,\n  adjustableHeight = true,\n  gutterWidth = GRID_GUTTER_SIZE,\n  widthStep = GRID_BASE_UNIT,\n  heightStep = GRID_BASE_UNIT,\n  minWidthMultiple = 1,\n  maxWidthMultiple = proxyToInfinity,\n  minHeightMultiple = 1,\n  maxHeightMultiple = proxyToInfinity,\n}: ResizableContainerProps) {\n  const [isResizing, setIsResizing] = useState<boolean>(false);\n\n  const handleResize = useCallback<ResizeCallback>(\n    (event, direction, elementRef, delta) => {\n      if (onResize) onResize(event, direction, elementRef, delta);\n    },\n    [onResize],\n  );\n\n  const handleResizeStart = useCallback<ResizeStartCallback>(\n    (e, dir, elementRef) => {\n      if (onResizeStart) onResizeStart(e, dir, elementRef);\n      setIsResizing(true);\n    },\n    [onResizeStart],\n  );\n\n  const handleResizeStop = useCallback<ResizeCallback>(\n    (event, direction, elementRef, delta) => {\n      if (onResizeStop) {\n        const nextWidthMultiple =\n          widthMultiple + Math.round(delta.width / (widthStep + gutterWidth));\n        const nextHeightMultiple =\n          heightMultiple + Math.round(delta.height / heightStep);\n\n        onResizeStop(\n          event,\n          direction,\n          elementRef,\n          {\n            width: adjustableWidth ? nextWidthMultiple : 0,\n            height: adjustableHeight ? nextHeightMultiple : 0,\n          },\n          // @ts-ignore\n          id,\n        );\n      }\n      setIsResizing(false);\n    },\n    [\n      onResizeStop,\n      widthMultiple,\n      heightMultiple,\n      widthStep,\n      heightStep,\n      gutterWidth,\n      adjustableWidth,\n      adjustableHeight,\n      id,\n    ],\n  );\n\n  const size = useMemo(\n    () => ({\n      width: adjustableWidth\n        ? (widthStep + gutterWidth) * widthMultiple - gutterWidth\n        : (staticWidthMultiple && staticWidthMultiple * widthStep) ||\n          staticWidth ||\n          undefined,\n      height: adjustableHeight\n        ? heightStep * heightMultiple\n        : (staticHeightMultiple && staticHeightMultiple * heightStep) ||\n          staticHeight ||\n          undefined,\n    }),\n    [\n      adjustableWidth,\n      widthStep,\n      gutterWidth,\n      widthMultiple,\n      staticWidthMultiple,\n      staticWidth,\n      adjustableHeight,\n      heightStep,\n      heightMultiple,\n      staticHeightMultiple,\n      staticHeight,\n    ],\n  );\n\n  const handleComponent = useMemo(\n    () => ({\n      right: <RightResizeHandle />,\n      bottom: <BottomResizeHandle />,\n      bottomRight: <BottomRightResizeHandle />,\n    }),\n    [],\n  );\n\n  const enableConfig = useMemo(() => {\n    if (editMode && adjustableWidth && adjustableHeight) {\n      return resizableConfig.widthAndHeight;\n    }\n    if (editMode && adjustableWidth) {\n      return resizableConfig.widthOnly;\n    }\n    if (editMode && adjustableHeight) {\n      return resizableConfig.heightOnly;\n    }\n    return resizableConfig.notAdjustable;\n  }, [editMode, adjustableWidth, adjustableHeight]);\n\n  return (\n    <StyledResizable\n      enable={enableConfig}\n      grid={SNAP_TO_GRID}\n      gridGap={undefined}\n      minWidth={\n        adjustableWidth\n          ? minWidthMultiple * (widthStep + gutterWidth) - gutterWidth\n          : undefined\n      }\n      minHeight={adjustableHeight ? minHeightMultiple * heightStep : undefined}\n      maxWidth={\n        adjustableWidth && size.width\n          ? Math.max(\n              size.width,\n              Math.min(\n                proxyToInfinity,\n                maxWidthMultiple * (widthStep + gutterWidth) - gutterWidth,\n              ),\n            )\n          : undefined\n      }\n      maxHeight={\n        adjustableHeight && size.height\n          ? Math.max(\n              size.height,\n              Math.min(proxyToInfinity, maxHeightMultiple * heightStep),\n            )\n          : undefined\n      }\n      size={size}\n      onResizeStart={handleResizeStart}\n      onResize={handleResize}\n      onResizeStop={handleResizeStop}\n      handleComponent={handleComponent}\n      className={cx(\n        'resizable-container',\n        isResizing && 'resizable-container--resizing',\n      )}\n      handleClasses={HANDLE_CLASSES}\n    >\n      {children}\n    </StyledResizable>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}