{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, css } from '@superset-ui/core';\nimport cx from 'classnames';\nimport { Interweave } from 'interweave';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Icons } from 'src/components/Icons';\nimport { ToastType } from './types';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst ToastContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    span {\n      padding: 0 ${theme.gridUnit * 2}px;\n    }\n\n    .toast__close,\n    .toast__close span {\n      padding: 0;\n    }\n  `}\n`;\nconst notificationStyledIcon = (theme) => css`\n  min-width: ${theme.gridUnit * 5}px;\n  color: ${theme.colors.grayscale.base};\n  margin-right: 0;\n`;\nexport default function Toast({ toast, onCloseToast }) {\n  const hideTimer = useRef();\n  const [visible, setVisible] = useState(false);\n  const showToast = () => {\n    setVisible(true);\n  };\n  const handleClosePress = useCallback(() => {\n    if (hideTimer.current) {\n      clearTimeout(hideTimer.current);\n    }\n    // Wait for the transition\n    setVisible(() => {\n      setTimeout(() => {\n        onCloseToast(toast.id);\n      }, 150);\n      return false;\n    });\n  }, [onCloseToast, toast.id]);\n  useEffect(() => {\n    setTimeout(showToast);\n    if (toast.duration > 0) {\n      hideTimer.current = setTimeout(handleClosePress, toast.duration);\n    }\n    return () => {\n      if (hideTimer.current) {\n        clearTimeout(hideTimer.current);\n      }\n    };\n  }, [handleClosePress, toast.duration]);\n  let className = 'toast--success';\n  let icon = _jsx(Icons.CheckCircleFilled, { css: (theme) => notificationStyledIcon(theme) });\n  if (toast.toastType === ToastType.Warning) {\n    icon = _jsx(Icons.ExclamationCircleFilled, { css: notificationStyledIcon });\n    className = 'toast--warning';\n  } else\n  if (toast.toastType === ToastType.Danger) {\n    icon = _jsx(Icons.ExclamationCircleFilled, { css: notificationStyledIcon });\n    className = 'toast--danger';\n  } else\n  if (toast.toastType === ToastType.Info) {\n    icon = _jsx(Icons.InfoCircleFilled, { css: notificationStyledIcon });\n    className = 'toast--info';\n  }\n  return _jsxs(ToastContainer, { className: cx('alert', 'toast', visible && 'toast--visible', className), \"data-test\": \"toast-container\", role: \"alert\", children: [\n    icon,\n    _jsx(Interweave, { content: toast.text, noHtml: !toast.allowHtml }),\n    _jsx(Icons.CloseOutlined, { iconSize: \"m\", className: \"toast__close pointer\", role: \"button\", tabIndex: 0, onClick: handleClosePress, \"aria-label\": \"Close\", \"data-test\": \"close-button\" })] }\n  );\n}__signature__(Toast, \"useRef{hideTimer}\\nuseState{[visible, setVisible](false)}\\nuseCallback{handleClosePress}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ToastContainer, \"ToastContainer\", \"/Users/aryurkov/superset/superset-frontend/src/components/MessageToasts/Toast.tsx\");reactHotLoader.register(notificationStyledIcon, \"notificationStyledIcon\", \"/Users/aryurkov/superset/superset-frontend/src/components/MessageToasts/Toast.tsx\");reactHotLoader.register(Toast, \"Toast\", \"/Users/aryurkov/superset/superset-frontend/src/components/MessageToasts/Toast.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["styled","css","cx","Interweave","useCallback","useEffect","useRef","useState","Icons","ToastType","jsx","_jsx","jsxs","_jsxs","ToastContainer","div","theme","gridUnit","notificationStyledIcon","colors","grayscale","base","Toast","toast","onCloseToast","hideTimer","visible","setVisible","showToast","handleClosePress","current","clearTimeout","setTimeout","id","duration","className","icon","CheckCircleFilled","toastType","Warning","ExclamationCircleFilled","Danger","Info","InfoCircleFilled","role","children","content","text","noHtml","allowHtml","CloseOutlined","iconSize","tabIndex","onClick","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/MessageToasts/Toast.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, css, SupersetTheme } from '@superset-ui/core';\nimport cx from 'classnames';\nimport { Interweave } from 'interweave';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Icons } from 'src/components/Icons';\nimport { ToastType, ToastMeta } from './types';\n\nconst ToastContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    span {\n      padding: 0 ${theme.gridUnit * 2}px;\n    }\n\n    .toast__close,\n    .toast__close span {\n      padding: 0;\n    }\n  `}\n`;\n\nconst notificationStyledIcon = (theme: SupersetTheme) => css`\n  min-width: ${theme.gridUnit * 5}px;\n  color: ${theme.colors.grayscale.base};\n  margin-right: 0;\n`;\n\ninterface ToastPresenterProps {\n  toast: ToastMeta;\n  onCloseToast: (id: string) => void;\n}\n\nexport default function Toast({ toast, onCloseToast }: ToastPresenterProps) {\n  const hideTimer = useRef<ReturnType<typeof setTimeout>>();\n  const [visible, setVisible] = useState(false);\n  const showToast = () => {\n    setVisible(true);\n  };\n\n  const handleClosePress = useCallback(() => {\n    if (hideTimer.current) {\n      clearTimeout(hideTimer.current);\n    }\n    // Wait for the transition\n    setVisible(() => {\n      setTimeout(() => {\n        onCloseToast(toast.id);\n      }, 150);\n      return false;\n    });\n  }, [onCloseToast, toast.id]);\n\n  useEffect(() => {\n    setTimeout(showToast);\n\n    if (toast.duration > 0) {\n      hideTimer.current = setTimeout(handleClosePress, toast.duration);\n    }\n    return () => {\n      if (hideTimer.current) {\n        clearTimeout(hideTimer.current);\n      }\n    };\n  }, [handleClosePress, toast.duration]);\n\n  let className = 'toast--success';\n  let icon = (\n    <Icons.CheckCircleFilled css={theme => notificationStyledIcon(theme)} />\n  );\n\n  if (toast.toastType === ToastType.Warning) {\n    icon = <Icons.ExclamationCircleFilled css={notificationStyledIcon} />;\n    className = 'toast--warning';\n  } else if (toast.toastType === ToastType.Danger) {\n    icon = <Icons.ExclamationCircleFilled css={notificationStyledIcon} />;\n    className = 'toast--danger';\n  } else if (toast.toastType === ToastType.Info) {\n    icon = <Icons.InfoCircleFilled css={notificationStyledIcon} />;\n    className = 'toast--info';\n  }\n\n  return (\n    <ToastContainer\n      className={cx('alert', 'toast', visible && 'toast--visible', className)}\n      data-test=\"toast-container\"\n      role=\"alert\"\n    >\n      {icon}\n      <Interweave content={toast.text} noHtml={!toast.allowHtml} />\n      <Icons.CloseOutlined\n        iconSize=\"m\"\n        className=\"toast__close pointer\"\n        role=\"button\"\n        tabIndex={0}\n        onClick={handleClosePress}\n        aria-label=\"Close\"\n        data-test=\"close-button\"\n      />\n    </ToastContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}