{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { PublishedLabel } from 'src/components/Label';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst draftButtonTooltip = t('This dashboard is not published, it will not show up in the list of dashboards. ' +\n'Click here to publish this dashboard.');\nconst draftDivTooltip = t('This dashboard is not published which means it will not show up in the list of dashboards.' +\n' Favorite it to see it there or access it by using the URL directly.');\nconst publishedTooltip = t('This dashboard is published. Click to make it a draft.');\nexport default class PublishedStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.togglePublished = this.togglePublished.bind(this);\n  }\n  togglePublished() {\n    this.props.savePublished(this.props.dashboardId, !this.props.isPublished);\n  }\n  render() {\n    const { isPublished, userCanEdit, userCanSave } = this.props;\n    // Show everybody the draft badge\n    if (!isPublished) {\n      // if they can edit the dash, make the badge a button\n      if (userCanEdit && userCanSave) {\n        return _jsx(Tooltip, { id: \"unpublished-dashboard-tooltip\", placement: \"bottom\", title: draftButtonTooltip, children:\n          _jsx(\"div\", { children:\n            _jsx(PublishedLabel, { isPublished: isPublished, onClick: this.togglePublished }) }\n          ) }\n        );\n      }\n      return _jsx(Tooltip, { id: \"unpublished-dashboard-tooltip\", placement: \"bottom\", title: draftDivTooltip, children:\n        _jsx(\"div\", { children:\n          _jsx(PublishedLabel, { isPublished: isPublished }) }\n        ) }\n      );\n    }\n    // Show the published badge for the owner of the dashboard to toggle\n    if (userCanEdit && userCanSave) {\n      return _jsx(Tooltip, { id: \"published-dashboard-tooltip\", placement: \"bottom\", title: publishedTooltip, children:\n        _jsx(\"div\", { children:\n          _jsx(PublishedLabel, { isPublished: isPublished, onClick: this.togglePublished }) }\n        ) }\n      );\n    }\n    // Don't show anything if one doesn't own the dashboard and it is published\n    return null;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(draftButtonTooltip, \"draftButtonTooltip\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.tsx\");reactHotLoader.register(draftDivTooltip, \"draftDivTooltip\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.tsx\");reactHotLoader.register(publishedTooltip, \"publishedTooltip\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.tsx\");reactHotLoader.register(PublishedStatus, \"PublishedStatus\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Component","t","Tooltip","PublishedLabel","jsx","_jsx","draftButtonTooltip","draftDivTooltip","publishedTooltip","PublishedStatus","constructor","props","togglePublished","bind","savePublished","dashboardId","isPublished","render","userCanEdit","userCanSave","id","placement","title","children","onClick","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/PublishedStatus/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { PublishedLabel } from 'src/components/Label';\nimport { HeaderProps, HeaderDropdownProps } from '../Header/types';\n\nexport type DashboardPublishedStatusType = {\n  dashboardId: HeaderDropdownProps['dashboardId'];\n  userCanEdit: HeaderDropdownProps['userCanEdit'];\n  userCanSave: HeaderDropdownProps['userCanSave'];\n  isPublished: HeaderProps['isPublished'];\n  savePublished: HeaderProps['savePublished'];\n};\n\nconst draftButtonTooltip = t(\n  'This dashboard is not published, it will not show up in the list of dashboards. ' +\n    'Click here to publish this dashboard.',\n);\n\nconst draftDivTooltip = t(\n  'This dashboard is not published which means it will not show up in the list of dashboards.' +\n    ' Favorite it to see it there or access it by using the URL directly.',\n);\n\nconst publishedTooltip = t(\n  'This dashboard is published. Click to make it a draft.',\n);\n\nexport default class PublishedStatus extends Component<DashboardPublishedStatusType> {\n  constructor(props: DashboardPublishedStatusType) {\n    super(props);\n    this.togglePublished = this.togglePublished.bind(this);\n  }\n\n  togglePublished() {\n    this.props.savePublished(this.props.dashboardId, !this.props.isPublished);\n  }\n\n  render() {\n    const { isPublished, userCanEdit, userCanSave } = this.props;\n\n    // Show everybody the draft badge\n    if (!isPublished) {\n      // if they can edit the dash, make the badge a button\n      if (userCanEdit && userCanSave) {\n        return (\n          <Tooltip\n            id=\"unpublished-dashboard-tooltip\"\n            placement=\"bottom\"\n            title={draftButtonTooltip}\n          >\n            <div>\n              <PublishedLabel\n                isPublished={isPublished}\n                onClick={this.togglePublished}\n              />\n            </div>\n          </Tooltip>\n        );\n      }\n      return (\n        <Tooltip\n          id=\"unpublished-dashboard-tooltip\"\n          placement=\"bottom\"\n          title={draftDivTooltip}\n        >\n          <div>\n            <PublishedLabel isPublished={isPublished} />\n          </div>\n        </Tooltip>\n      );\n    }\n\n    // Show the published badge for the owner of the dashboard to toggle\n    if (userCanEdit && userCanSave) {\n      return (\n        <Tooltip\n          id=\"published-dashboard-tooltip\"\n          placement=\"bottom\"\n          title={publishedTooltip}\n        >\n          <div>\n            <PublishedLabel\n              isPublished={isPublished}\n              onClick={this.togglePublished}\n            />\n          </div>\n        </Tooltip>\n      );\n    }\n\n    // Don't show anything if one doesn't own the dashboard and it is published\n    return null;\n  }\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,CAAC,QAAQ,mBAAmB;AACrC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,sBAAsB,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAWtD,MAAMC,kBAAkB,GAAGL,CAAC,CAC1B,kFAAkF;AAChF,uCAAuC,CAC1C;AAED,MAAMM,eAAe,GAAGN,CAAC,CACvB,4FAA4F;AAC1F,sEAAsE,CACzE;AAED,MAAMO,gBAAgB,GAAGP,CAAC,CACxB,wDAAwD,CACzD;AAED,eAAc,MAAOQ,eAAgB,SAAQT,SAAuC;EAClFU,YAAYC,KAAmC;IAC7C,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,eAAe,GAAG,IAAI,CAACA,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;EACxD;EAEAD,eAAeA,CAAA;IACb,IAAI,CAACD,KAAK,CAACG,aAAa,CAAC,IAAI,CAACH,KAAK,CAACI,WAAW,EAAE,CAAC,IAAI,CAACJ,KAAK,CAACK,WAAW,CAAC;EAC3E;EAEAC,MAAMA,CAAA;IACJ,MAAM,EAAED,WAAW,EAAEE,WAAW,EAAEC,WAAW,EAAE,GAAG,IAAI,CAACR,KAAK;IAE5D;IACA,IAAI,CAACK,WAAW,EAAE;MAChB;MACA,IAAIE,WAAW,IAAIC,WAAW,EAAE;QAC9B,OACEd,IAAA,CAACH,OAAO,IACNkB,EAAE,EAAC,+BAA+B,EAClCC,SAAS,EAAC,QAAQ,EAClBC,KAAK,EAAEhB,kBAAmB,EAAAiB,QAAA;UAE1BlB,IAAA,UAAAkB,QAAA;YACElB,IAAA,CAACF,cAAc,IACba,WAAW,EAAEA,WAAY,EACzBQ,OAAO,EAAE,IAAI,CAACZ,eAAgB,GAElC;UAAK,CACP;QAAS,CAAC;;MAGd,OACEP,IAAA,CAACH,OAAO,IACNkB,EAAE,EAAC,+BAA+B,EAClCC,SAAS,EAAC,QAAQ,EAClBC,KAAK,EAAEf,eAAgB,EAAAgB,QAAA;QAEvBlB,IAAA,UAAAkB,QAAA;UACElB,IAAA,CAACF,cAAc,IAACa,WAAW,EAAEA,WAAY,GAC3C;QAAK,CACP;MAAS,CAAC;;IAId;IACA,IAAIE,WAAW,IAAIC,WAAW,EAAE;MAC9B,OACEd,IAAA,CAACH,OAAO,IACNkB,EAAE,EAAC,6BAA6B,EAChCC,SAAS,EAAC,QAAQ,EAClBC,KAAK,EAAEd,gBAAiB,EAAAe,QAAA;QAExBlB,IAAA,UAAAkB,QAAA;UACElB,IAAA,CAACF,cAAc,IACba,WAAW,EAAEA,WAAY,EACzBQ,OAAO,EAAE,IAAI,CAACZ,eAAgB,GAElC;QAAK,CACP;MAAS,CAAC;;IAId;IACA,OAAO,IAAI;EACb,CAAC;EAAAa,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CACF,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAhFK3B,kBAAkB,yHAAAuB,cAAA,CAAAI,QAAA,CAKlB1B,eAAe,sHAAAsB,cAAA,CAAAI,QAAA,CAKfzB,gBAAgB,uHAAAqB,cAAA,CAAAI,QAAA,CAIDxB,eAAgB,8IAAAyB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}