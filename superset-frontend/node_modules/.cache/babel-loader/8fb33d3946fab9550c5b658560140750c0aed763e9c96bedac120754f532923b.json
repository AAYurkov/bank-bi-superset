{"ast":null,"code":"import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport cx from 'classnames';\nimport { useCallback, useEffect, useRef, useMemo, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t, logging } from '@superset-ui/core';\n\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { exportChart, mountExploreUrl } from 'src/explore/exploreUtils';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  LOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\n  LOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\n  LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\n  LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART,\n  LOG_ACTIONS_FORCE_REFRESH_CHART } from\n'src/logger/LogUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport { URL_PARAMS } from 'src/constants';\nimport { enforceSharedLabelsColorsArray } from 'src/utils/colorScheme';\n\nimport SliceHeader from '../SliceHeader';\nimport MissingChart from '../MissingChart';\nimport {\n  addDangerToast,\n  addSuccessToast } from\n'../../../components/MessageToasts/actions';\nimport {\n  setFocusedFilterField,\n  toggleExpandSlice,\n  unsetFocusedFilterField } from\n'../../actions/dashboardState';\nimport { changeFilter } from '../../actions/dashboardFilters';\nimport { refreshChart } from '../../../components/Chart/chartAction';\nimport { logEvent } from '../../../logger/actions';\nimport {\n  getActiveFilters,\n  getAppliedFilterValues } from\n'../../util/activeDashboardFilters';\nimport getFormDataWithExtraFilters from '../../util/charts/getFormDataWithExtraFilters';\nimport { PLACEHOLDER_DATASOURCE } from '../../constants';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  updateSliceName: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool,\n  handleToggleFullSize: PropTypes.func.isRequired,\n  setControlValue: PropTypes.func,\n  sliceName: PropTypes.string.isRequired,\n  isFullSize: PropTypes.bool,\n  extraControls: PropTypes.object,\n  isInView: PropTypes.bool\n};\n\n// we use state + shouldComponentUpdate() logic to prevent perf-wrecking\n// resizing across all slices on a dashboard on every update\nconst RESIZE_TIMEOUT = 500;\nconst DEFAULT_HEADER_HEIGHT = 22;\n\nconst ChartWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n\n  &.dashboard-chart--overflowable {\n    overflow: visible;\n  }\n`;\n\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n`;\n\nconst SliceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n`;\n\nconst EMPTY_OBJECT = {};\n\nconst Chart = (props) => {var _chart$form_data, _dataMask$props$id, _dataMask$props$id2;\n  const dispatch = useDispatch();\n  const descriptionRef = useRef(null);\n  const headerRef = useRef(null);\n\n  const boundActionCreators = useMemo(\n    () =>\n    bindActionCreators(\n      {\n        addSuccessToast,\n        addDangerToast,\n        toggleExpandSlice,\n        changeFilter,\n        setFocusedFilterField,\n        unsetFocusedFilterField,\n        refreshChart,\n        logEvent\n      },\n      dispatch\n    ),\n    [dispatch]\n  );\n\n  const chart = useSelector((state) => state.charts[props.id] || EMPTY_OBJECT);\n  const slice = useSelector(\n    (state) => state.sliceEntities.slices[props.id] || EMPTY_OBJECT\n  );\n  const editMode = useSelector((state) => state.dashboardState.editMode);\n  const isExpanded = useSelector(\n    (state) => !!state.dashboardState.expandedSlices[props.id]\n  );\n  const supersetCanExplore = useSelector(\n    (state) => !!state.dashboardInfo.superset_can_explore\n  );\n  const supersetCanShare = useSelector(\n    (state) => !!state.dashboardInfo.superset_can_share\n  );\n  const supersetCanCSV = useSelector(\n    (state) => !!state.dashboardInfo.superset_can_csv\n  );\n  const timeout = useSelector(\n    (state) => state.dashboardInfo.common.conf.SUPERSET_WEBSERVER_TIMEOUT\n  );\n  const emitCrossFilters = useSelector(\n    (state) => !!state.dashboardInfo.crossFiltersEnabled\n  );\n  const maxRows = useSelector(\n    (state) => state.dashboardInfo.common.conf.SQL_MAX_ROW\n  );\n  const datasource = useSelector(\n    (state) =>\n    chart &&\n    chart.form_data &&\n    state.datasources[chart.form_data.datasource] ||\n    PLACEHOLDER_DATASOURCE\n  );\n  const dashboardInfo = useSelector((state) => state.dashboardInfo);\n\n  const [descriptionHeight, setDescriptionHeight] = useState(0);\n  const [height, setHeight] = useState(props.height);\n  const [width, setWidth] = useState(props.width);\n  const history = useHistory();\n  const resize = useCallback(\n    _debounce(() => {\n      const { width, height } = props;\n      setHeight(height);\n      setWidth(width);\n    }, RESIZE_TIMEOUT),\n    [props.width, props.height]\n  );\n\n  const ownColorScheme = (_chart$form_data = chart.form_data) == null ? void 0 : _chart$form_data.color_scheme;\n\n  const addFilter = useCallback(\n    (newSelectedValues = {}) => {\n      boundActionCreators.logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, {\n        id: chart.id,\n        columns: Object.keys(newSelectedValues).filter(\n          (key) => newSelectedValues[key] !== null\n        )\n      });\n      boundActionCreators.changeFilter(chart.id, newSelectedValues);\n    },\n    [boundActionCreators.logEvent, boundActionCreators.changeFilter, chart.id]\n  );\n\n  useEffect(() => {\n    if (isExpanded) {var _descriptionRef$curre;\n      const descriptionHeight =\n      isExpanded && descriptionRef.current ? (_descriptionRef$curre =\n      descriptionRef.current) == null ? void 0 : _descriptionRef$curre.offsetHeight :\n      0;\n      setDescriptionHeight(descriptionHeight);\n    }\n  }, [isExpanded]);\n\n  useEffect(\n    () => () => {\n      resize.cancel();\n    },\n    [resize]\n  );\n\n  useEffect(() => {\n    resize();\n  }, [resize, props.isFullSize]);\n\n  const getHeaderHeight = useCallback(() => {\n    if (headerRef.current) {\n      const computedStyle = getComputedStyle(\n        headerRef.current\n      ).getPropertyValue('margin-bottom');\n      const marginBottom = parseInt(computedStyle, 10) || 0;\n      return headerRef.current.offsetHeight + marginBottom;\n    }\n    return DEFAULT_HEADER_HEIGHT;\n  }, [headerRef]);\n\n  const getChartHeight = useCallback(() => {\n    const headerHeight = getHeaderHeight();\n    return Math.max(height - headerHeight - descriptionHeight, 20);\n  }, [getHeaderHeight, height, descriptionHeight]);\n\n  const handleFilterMenuOpen = useCallback(\n    (chartId, column) => {\n      boundActionCreators.setFocusedFilterField(chartId, column);\n    },\n    [boundActionCreators.setFocusedFilterField]\n  );\n\n  const handleFilterMenuClose = useCallback(\n    (chartId, column) => {\n      boundActionCreators.unsetFocusedFilterField(chartId, column);\n    },\n    [boundActionCreators.unsetFocusedFilterField]\n  );\n\n  const logExploreChart = useCallback(() => {\n    boundActionCreators.logEvent(LOG_ACTIONS_EXPLORE_DASHBOARD_CHART, {\n      slice_id: slice.slice_id,\n      is_cached: props.isCached\n    });\n  }, [boundActionCreators.logEvent, slice.slice_id, props.isCached]);\n\n  const chartConfiguration = useSelector(\n    (state) => {var _state$dashboardInfo$;return (_state$dashboardInfo$ = state.dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.chart_configuration;}\n  );\n  const colorScheme = useSelector((state) => state.dashboardState.colorScheme);\n  const colorNamespace = useSelector(\n    (state) => state.dashboardState.colorNamespace\n  );\n  const datasetsStatus = useSelector(\n    (state) => state.dashboardState.datasetsStatus\n  );\n  const allSliceIds = useSelector((state) => state.dashboardState.sliceIds);\n  const nativeFilters = useSelector((state) => {var _state$nativeFilters;return (_state$nativeFilters = state.nativeFilters) == null ? void 0 : _state$nativeFilters.filters;});\n  const dataMask = useSelector((state) => state.dataMask);\n  const labelsColor = useSelector(\n    (state) => {var _state$dashboardInfo, _state$dashboardInfo$2;return ((_state$dashboardInfo = state.dashboardInfo) == null ? void 0 : (_state$dashboardInfo$2 = _state$dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$2.label_colors) || EMPTY_OBJECT;}\n  );\n  const labelsColorMap = useSelector(\n    (state) => {var _state$dashboardInfo2, _state$dashboardInfo3;return ((_state$dashboardInfo2 = state.dashboardInfo) == null ? void 0 : (_state$dashboardInfo3 = _state$dashboardInfo2.metadata) == null ? void 0 : _state$dashboardInfo3.map_label_colors) || EMPTY_OBJECT;}\n  );\n  const sharedLabelsColors = useSelector((state) => {var _state$dashboardInfo4, _state$dashboardInfo5;return (\n      enforceSharedLabelsColorsArray((_state$dashboardInfo4 =\n      state.dashboardInfo) == null ? void 0 : (_state$dashboardInfo5 = _state$dashboardInfo4.metadata) == null ? void 0 : _state$dashboardInfo5.shared_label_colors\n      ));}\n  );\n\n  const formData = useMemo(\n    () =>\n    getFormDataWithExtraFilters({\n      chart,\n      chartConfiguration,\n      filters: getAppliedFilterValues(props.id),\n      colorScheme,\n      colorNamespace,\n      sliceId: props.id,\n      nativeFilters,\n      allSliceIds,\n      dataMask,\n      extraControls: props.extraControls,\n      labelsColor,\n      labelsColorMap,\n      sharedLabelsColors,\n      ownColorScheme\n    }),\n    [\n    chart,\n    chartConfiguration,\n    props.id,\n    props.extraControls,\n    colorScheme,\n    colorNamespace,\n    nativeFilters,\n    allSliceIds,\n    dataMask,\n    labelsColor,\n    labelsColorMap,\n    sharedLabelsColors,\n    ownColorScheme]\n\n  );\n\n  formData.dashboardId = dashboardInfo.id;\n\n  const onExploreChart = useCallback(\n    async (clickEvent) => {\n      const isOpenInNewTab =\n      clickEvent.shiftKey || clickEvent.ctrlKey || clickEvent.metaKey;\n      try {\n        const lastTabId = window.localStorage.getItem('last_tab_id');\n        const nextTabId = lastTabId ?\n        String(Number.parseInt(lastTabId, 10) + 1) :\n        undefined;\n        const key = await postFormData(\n          datasource.id,\n          datasource.type,\n          formData,\n          slice.slice_id,\n          nextTabId\n        );\n        const url = mountExploreUrl(null, {\n          [URL_PARAMS.formDataKey.name]: key,\n          [URL_PARAMS.sliceId.name]: slice.slice_id\n        });\n        if (isOpenInNewTab) {\n          window.open(url, '_blank', 'noreferrer');\n        } else {\n          history.push(url);\n        }\n      } catch (error) {\n        logging.error(error);\n        boundActionCreators.addDangerToast(\n          t('An error occurred while opening Explore')\n        );\n      }\n    },\n    [\n    datasource.id,\n    datasource.type,\n    formData,\n    slice.slice_id,\n    boundActionCreators.addDangerToast,\n    history]\n\n  );\n\n  const exportTable = useCallback(\n    (format, isFullCSV, isPivot = false) => {\n      const logAction =\n      format === 'csv' ?\n      LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART :\n      LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART;\n      boundActionCreators.logEvent(logAction, {\n        slice_id: slice.slice_id,\n        is_cached: props.isCached\n      });\n      exportChart({\n        formData: isFullCSV ? { ...formData, row_limit: maxRows } : formData,\n        resultType: isPivot ? 'post_processed' : 'full',\n        resultFormat: format,\n        force: true,\n        ownState: props.ownState\n      });\n    },\n    [\n    slice.slice_id,\n    props.isCached,\n    formData,\n    props.maxRows,\n    props.ownState,\n    boundActionCreators.logEvent]\n\n  );\n\n  const exportCSV = useCallback(() => {\n    exportTable('csv', false);\n  }, [exportTable]);\n\n  const exportFullCSV = useCallback(() => {\n    exportTable('csv', true);\n  }, [exportTable]);\n\n  const exportPivotCSV = useCallback(() => {\n    exportTable('csv', false, true);\n  }, [exportTable]);\n\n  const exportXLSX = useCallback(() => {\n    exportTable('xlsx', false);\n  }, [exportTable]);\n\n  const exportFullXLSX = useCallback(() => {\n    exportTable('xlsx', true);\n  }, [exportTable]);\n\n  const forceRefresh = useCallback(() => {\n    boundActionCreators.logEvent(LOG_ACTIONS_FORCE_REFRESH_CHART, {\n      slice_id: slice.slice_id,\n      is_cached: props.isCached\n    });\n    return boundActionCreators.refreshChart(chart.id, true, props.dashboardId);\n  }, [\n  boundActionCreators.refreshChart,\n  chart.id,\n  props.dashboardId,\n  slice.slice_id,\n  props.isCached,\n  boundActionCreators.logEvent]\n  );\n\n  if (chart === EMPTY_OBJECT || slice === EMPTY_OBJECT) {\n    return _jsx(MissingChart, { height: getChartHeight() });\n  }\n\n  const { queriesResponse, chartUpdateEndTime, chartStatus, annotationQuery } =\n  chart;\n  const isLoading = chartStatus === 'loading';\n  // eslint-disable-next-line camelcase\n  const isCached = (queriesResponse == null ? void 0 : queriesResponse.map(({ is_cached }) => is_cached)) || [];\n  const cachedDttm =\n  // eslint-disable-next-line camelcase\n  (queriesResponse == null ? void 0 : queriesResponse.map(({ cached_dttm }) => cached_dttm)) || [];\n\n  return (\n    _jsxs(SliceContainer, {\n      className: \"chart-slice\",\n      \"data-test\": \"chart-grid-component\",\n      \"data-test-chart-id\": props.id,\n      \"data-test-viz-type\": slice.viz_type,\n      \"data-test-chart-name\": slice.slice_name, children: [\n\n      _jsx(SliceHeader, {\n        ref: headerRef,\n        slice: slice,\n        isExpanded: isExpanded,\n        isCached: isCached,\n        cachedDttm: cachedDttm,\n        updatedDttm: chartUpdateEndTime,\n        toggleExpandSlice: boundActionCreators.toggleExpandSlice,\n        forceRefresh: forceRefresh,\n        editMode: editMode,\n        annotationQuery: annotationQuery,\n        logExploreChart: logExploreChart,\n        logEvent: boundActionCreators.logEvent,\n        onExploreChart: onExploreChart,\n        exportCSV: exportCSV,\n        exportPivotCSV: exportPivotCSV,\n        exportXLSX: exportXLSX,\n        exportFullCSV: exportFullCSV,\n        exportFullXLSX: exportFullXLSX,\n        updateSliceName: props.updateSliceName,\n        sliceName: props.sliceName,\n        supersetCanExplore: supersetCanExplore,\n        supersetCanShare: supersetCanShare,\n        supersetCanCSV: supersetCanCSV,\n        componentId: props.componentId,\n        dashboardId: props.dashboardId,\n        filters: getActiveFilters() || EMPTY_OBJECT,\n        addSuccessToast: boundActionCreators.addSuccessToast,\n        addDangerToast: boundActionCreators.addDangerToast,\n        handleToggleFullSize: props.handleToggleFullSize,\n        isFullSize: props.isFullSize,\n        chartStatus: chartStatus,\n        formData: formData,\n        width: width,\n        height: getHeaderHeight() }\n      ),\n\n\n\n\n\n\n\n\n      isExpanded && slice.description_markeddown &&\n      _jsx(\"div\", {\n        className: \"slice_description bs-callout bs-callout-default\",\n        ref: descriptionRef\n        // eslint-disable-next-line react/no-danger\n        , dangerouslySetInnerHTML: { __html: slice.description_markeddown },\n        role: \"complementary\" }\n      ),\n\n\n      _jsxs(ChartWrapper, {\n        className: cx('dashboard-chart'),\n        \"aria-label\": slice.description, children: [\n\n        isLoading &&\n        _jsx(ChartOverlay, {\n          style: {\n            width,\n            height: getChartHeight()\n          } }\n        ),\n\n\n        _jsx(ChartContainer, {\n          width: width,\n          height: getChartHeight(),\n          addFilter: addFilter,\n          onFilterMenuOpen: handleFilterMenuOpen,\n          onFilterMenuClose: handleFilterMenuClose,\n          annotationData: chart.annotationData,\n          chartAlert: chart.chartAlert,\n          chartId: props.id,\n          chartStatus: chartStatus,\n          datasource: datasource,\n          dashboardId: props.dashboardId,\n          initialValues: EMPTY_OBJECT,\n          formData: formData,\n          labelsColor: labelsColor,\n          labelsColorMap: labelsColorMap,\n          ownState: (_dataMask$props$id = dataMask[props.id]) == null ? void 0 : _dataMask$props$id.ownState,\n          filterState: (_dataMask$props$id2 = dataMask[props.id]) == null ? void 0 : _dataMask$props$id2.filterState,\n          queriesResponse: chart.queriesResponse,\n          timeout: timeout,\n          triggerQuery: chart.triggerQuery,\n          vizType: slice.viz_type,\n          setControlValue: props.setControlValue,\n          datasetsStatus: datasetsStatus,\n          isInView: props.isInView,\n          emitCrossFilters: emitCrossFilters }\n        )] }\n      )] }\n    ));\n\n};__signature__(Chart, \"useDispatch{dispatch}\\nuseRef{descriptionRef}\\nuseRef{headerRef}\\nuseMemo{boundActionCreators}\\nuseSelector{chart}\\nuseSelector{slice}\\nuseSelector{editMode}\\nuseSelector{isExpanded}\\nuseSelector{supersetCanExplore}\\nuseSelector{supersetCanShare}\\nuseSelector{supersetCanCSV}\\nuseSelector{timeout}\\nuseSelector{emitCrossFilters}\\nuseSelector{maxRows}\\nuseSelector{datasource}\\nuseSelector{dashboardInfo}\\nuseState{[descriptionHeight, setDescriptionHeight](0)}\\nuseState{[height, setHeight](props.height)}\\nuseState{[width, setWidth](props.width)}\\nuseHistory{history}\\nuseCallback{resize}\\nuseCallback{addFilter}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{getHeaderHeight}\\nuseCallback{getChartHeight}\\nuseCallback{handleFilterMenuOpen}\\nuseCallback{handleFilterMenuClose}\\nuseCallback{logExploreChart}\\nuseSelector{chartConfiguration}\\nuseSelector{colorScheme}\\nuseSelector{colorNamespace}\\nuseSelector{datasetsStatus}\\nuseSelector{allSliceIds}\\nuseSelector{nativeFilters}\\nuseSelector{dataMask}\\nuseSelector{labelsColor}\\nuseSelector{labelsColorMap}\\nuseSelector{sharedLabelsColors}\\nuseMemo{formData}\\nuseCallback{onExploreChart}\\nuseCallback{exportTable}\\nuseCallback{exportCSV}\\nuseCallback{exportFullCSV}\\nuseCallback{exportPivotCSV}\\nuseCallback{exportXLSX}\\nuseCallback{exportFullXLSX}\\nuseCallback{forceRefresh}\", () => [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector]);\n\nChart.propTypes = propTypes;const _default = /*#__PURE__*/\n\nmemo(Chart, (prevProps, nextProps) => {\n  if (prevProps.cacheBusterProp !== nextProps.cacheBusterProp) {\n    return false;\n  }\n  return (\n    !nextProps.isComponentVisible ||\n    prevProps.isInView === nextProps.isInView &&\n    prevProps.componentId === nextProps.componentId &&\n    prevProps.id === nextProps.id &&\n    prevProps.dashboardId === nextProps.dashboardId &&\n    prevProps.extraControls === nextProps.extraControls &&\n    prevProps.handleToggleFullSize === nextProps.handleToggleFullSize &&\n    prevProps.isFullSize === nextProps.isFullSize &&\n    prevProps.setControlValue === nextProps.setControlValue &&\n    prevProps.sliceName === nextProps.sliceName &&\n    prevProps.updateSliceName === nextProps.updateSliceName &&\n    prevProps.width === nextProps.width &&\n    prevProps.height === nextProps.height);\n\n});export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(RESIZE_TIMEOUT, \"RESIZE_TIMEOUT\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(DEFAULT_HEADER_HEIGHT, \"DEFAULT_HEADER_HEIGHT\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(ChartWrapper, \"ChartWrapper\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(ChartOverlay, \"ChartOverlay\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(SliceContainer, \"SliceContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(EMPTY_OBJECT, \"EMPTY_OBJECT\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(Chart, \"Chart\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["cx","useCallback","useEffect","useRef","useMemo","useState","memo","PropTypes","styled","t","logging","useHistory","bindActionCreators","useDispatch","useSelector","exportChart","mountExploreUrl","ChartContainer","LOG_ACTIONS_CHANGE_DASHBOARD_FILTER","LOG_ACTIONS_EXPLORE_DASHBOARD_CHART","LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART","LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART","LOG_ACTIONS_FORCE_REFRESH_CHART","postFormData","URL_PARAMS","enforceSharedLabelsColorsArray","SliceHeader","MissingChart","addDangerToast","addSuccessToast","setFocusedFilterField","toggleExpandSlice","unsetFocusedFilterField","changeFilter","refreshChart","logEvent","getActiveFilters","getAppliedFilterValues","getFormDataWithExtraFilters","PLACEHOLDER_DATASOURCE","jsx","_jsx","jsxs","_jsxs","propTypes","id","number","isRequired","componentId","string","dashboardId","width","height","updateSliceName","func","isComponentVisible","bool","handleToggleFullSize","setControlValue","sliceName","isFullSize","extraControls","object","isInView","RESIZE_TIMEOUT","DEFAULT_HEADER_HEIGHT","ChartWrapper","div","ChartOverlay","SliceContainer","EMPTY_OBJECT","Chart","props","_chart$form_data","_dataMask$props$id","_dataMask$props$id2","dispatch","descriptionRef","headerRef","boundActionCreators","chart","state","charts","slice","sliceEntities","slices","editMode","dashboardState","isExpanded","expandedSlices","supersetCanExplore","dashboardInfo","superset_can_explore","supersetCanShare","superset_can_share","supersetCanCSV","superset_can_csv","timeout","common","conf","SUPERSET_WEBSERVER_TIMEOUT","emitCrossFilters","crossFiltersEnabled","maxRows","SQL_MAX_ROW","datasource","form_data","datasources","descriptionHeight","setDescriptionHeight","setHeight","setWidth","history","resize","_debounce","ownColorScheme","color_scheme","addFilter","newSelectedValues","columns","Object","keys","filter","key","_descriptionRef$curre","current","offsetHeight","cancel","getHeaderHeight","computedStyle","getComputedStyle","getPropertyValue","marginBottom","parseInt","getChartHeight","headerHeight","Math","max","handleFilterMenuOpen","chartId","column","handleFilterMenuClose","logExploreChart","slice_id","is_cached","isCached","chartConfiguration","_state$dashboardInfo$","metadata","chart_configuration","colorScheme","colorNamespace","datasetsStatus","allSliceIds","sliceIds","nativeFilters","_state$nativeFilters","filters","dataMask","labelsColor","_state$dashboardInfo","_state$dashboardInfo$2","label_colors","labelsColorMap","_state$dashboardInfo2","_state$dashboardInfo3","map_label_colors","sharedLabelsColors","_state$dashboardInfo4","_state$dashboardInfo5","shared_label_colors","formData","sliceId","onExploreChart","clickEvent","isOpenInNewTab","shiftKey","ctrlKey","metaKey","lastTabId","window","localStorage","getItem","nextTabId","String","Number","undefined","type","url","formDataKey","name","open","push","error","exportTable","format","isFullCSV","isPivot","logAction","row_limit","resultType","resultFormat","force","ownState","exportCSV","exportFullCSV","exportPivotCSV","exportXLSX","exportFullXLSX","forceRefresh","queriesResponse","chartUpdateEndTime","chartStatus","annotationQuery","isLoading","map","cachedDttm","cached_dttm","className","viz_type","slice_name","children","ref","updatedDttm","description_markeddown","dangerouslySetInnerHTML","__html","role","description","style","onFilterMenuOpen","onFilterMenuClose","annotationData","chartAlert","initialValues","filterState","triggerQuery","vizType","__signature__","_default","prevProps","nextProps","cacheBusterProp","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Chart.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport cx from 'classnames';\nimport { useCallback, useEffect, useRef, useMemo, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t, logging } from '@superset-ui/core';\nimport { debounce } from 'lodash';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { exportChart, mountExploreUrl } from 'src/explore/exploreUtils';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  LOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\n  LOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\n  LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\n  LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART,\n  LOG_ACTIONS_FORCE_REFRESH_CHART,\n} from 'src/logger/LogUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport { URL_PARAMS } from 'src/constants';\nimport { enforceSharedLabelsColorsArray } from 'src/utils/colorScheme';\n\nimport SliceHeader from '../SliceHeader';\nimport MissingChart from '../MissingChart';\nimport {\n  addDangerToast,\n  addSuccessToast,\n} from '../../../components/MessageToasts/actions';\nimport {\n  setFocusedFilterField,\n  toggleExpandSlice,\n  unsetFocusedFilterField,\n} from '../../actions/dashboardState';\nimport { changeFilter } from '../../actions/dashboardFilters';\nimport { refreshChart } from '../../../components/Chart/chartAction';\nimport { logEvent } from '../../../logger/actions';\nimport {\n  getActiveFilters,\n  getAppliedFilterValues,\n} from '../../util/activeDashboardFilters';\nimport getFormDataWithExtraFilters from '../../util/charts/getFormDataWithExtraFilters';\nimport { PLACEHOLDER_DATASOURCE } from '../../constants';\n\nconst propTypes = {\n  id: PropTypes.number.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  updateSliceName: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool,\n  handleToggleFullSize: PropTypes.func.isRequired,\n  setControlValue: PropTypes.func,\n  sliceName: PropTypes.string.isRequired,\n  isFullSize: PropTypes.bool,\n  extraControls: PropTypes.object,\n  isInView: PropTypes.bool,\n};\n\n// we use state + shouldComponentUpdate() logic to prevent perf-wrecking\n// resizing across all slices on a dashboard on every update\nconst RESIZE_TIMEOUT = 500;\nconst DEFAULT_HEADER_HEIGHT = 22;\n\nconst ChartWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n\n  &.dashboard-chart--overflowable {\n    overflow: visible;\n  }\n`;\n\nconst ChartOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n`;\n\nconst SliceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100%;\n`;\n\nconst EMPTY_OBJECT = {};\n\nconst Chart = props => {\n  const dispatch = useDispatch();\n  const descriptionRef = useRef(null);\n  const headerRef = useRef(null);\n\n  const boundActionCreators = useMemo(\n    () =>\n      bindActionCreators(\n        {\n          addSuccessToast,\n          addDangerToast,\n          toggleExpandSlice,\n          changeFilter,\n          setFocusedFilterField,\n          unsetFocusedFilterField,\n          refreshChart,\n          logEvent,\n        },\n        dispatch,\n      ),\n    [dispatch],\n  );\n\n  const chart = useSelector(state => state.charts[props.id] || EMPTY_OBJECT);\n  const slice = useSelector(\n    state => state.sliceEntities.slices[props.id] || EMPTY_OBJECT,\n  );\n  const editMode = useSelector(state => state.dashboardState.editMode);\n  const isExpanded = useSelector(\n    state => !!state.dashboardState.expandedSlices[props.id],\n  );\n  const supersetCanExplore = useSelector(\n    state => !!state.dashboardInfo.superset_can_explore,\n  );\n  const supersetCanShare = useSelector(\n    state => !!state.dashboardInfo.superset_can_share,\n  );\n  const supersetCanCSV = useSelector(\n    state => !!state.dashboardInfo.superset_can_csv,\n  );\n  const timeout = useSelector(\n    state => state.dashboardInfo.common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n  );\n  const emitCrossFilters = useSelector(\n    state => !!state.dashboardInfo.crossFiltersEnabled,\n  );\n  const maxRows = useSelector(\n    state => state.dashboardInfo.common.conf.SQL_MAX_ROW,\n  );\n  const datasource = useSelector(\n    state =>\n      (chart &&\n        chart.form_data &&\n        state.datasources[chart.form_data.datasource]) ||\n      PLACEHOLDER_DATASOURCE,\n  );\n  const dashboardInfo = useSelector(state => state.dashboardInfo);\n\n  const [descriptionHeight, setDescriptionHeight] = useState(0);\n  const [height, setHeight] = useState(props.height);\n  const [width, setWidth] = useState(props.width);\n  const history = useHistory();\n  const resize = useCallback(\n    debounce(() => {\n      const { width, height } = props;\n      setHeight(height);\n      setWidth(width);\n    }, RESIZE_TIMEOUT),\n    [props.width, props.height],\n  );\n\n  const ownColorScheme = chart.form_data?.color_scheme;\n\n  const addFilter = useCallback(\n    (newSelectedValues = {}) => {\n      boundActionCreators.logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, {\n        id: chart.id,\n        columns: Object.keys(newSelectedValues).filter(\n          key => newSelectedValues[key] !== null,\n        ),\n      });\n      boundActionCreators.changeFilter(chart.id, newSelectedValues);\n    },\n    [boundActionCreators.logEvent, boundActionCreators.changeFilter, chart.id],\n  );\n\n  useEffect(() => {\n    if (isExpanded) {\n      const descriptionHeight =\n        isExpanded && descriptionRef.current\n          ? descriptionRef.current?.offsetHeight\n          : 0;\n      setDescriptionHeight(descriptionHeight);\n    }\n  }, [isExpanded]);\n\n  useEffect(\n    () => () => {\n      resize.cancel();\n    },\n    [resize],\n  );\n\n  useEffect(() => {\n    resize();\n  }, [resize, props.isFullSize]);\n\n  const getHeaderHeight = useCallback(() => {\n    if (headerRef.current) {\n      const computedStyle = getComputedStyle(\n        headerRef.current,\n      ).getPropertyValue('margin-bottom');\n      const marginBottom = parseInt(computedStyle, 10) || 0;\n      return headerRef.current.offsetHeight + marginBottom;\n    }\n    return DEFAULT_HEADER_HEIGHT;\n  }, [headerRef]);\n\n  const getChartHeight = useCallback(() => {\n    const headerHeight = getHeaderHeight();\n    return Math.max(height - headerHeight - descriptionHeight, 20);\n  }, [getHeaderHeight, height, descriptionHeight]);\n\n  const handleFilterMenuOpen = useCallback(\n    (chartId, column) => {\n      boundActionCreators.setFocusedFilterField(chartId, column);\n    },\n    [boundActionCreators.setFocusedFilterField],\n  );\n\n  const handleFilterMenuClose = useCallback(\n    (chartId, column) => {\n      boundActionCreators.unsetFocusedFilterField(chartId, column);\n    },\n    [boundActionCreators.unsetFocusedFilterField],\n  );\n\n  const logExploreChart = useCallback(() => {\n    boundActionCreators.logEvent(LOG_ACTIONS_EXPLORE_DASHBOARD_CHART, {\n      slice_id: slice.slice_id,\n      is_cached: props.isCached,\n    });\n  }, [boundActionCreators.logEvent, slice.slice_id, props.isCached]);\n\n  const chartConfiguration = useSelector(\n    state => state.dashboardInfo.metadata?.chart_configuration,\n  );\n  const colorScheme = useSelector(state => state.dashboardState.colorScheme);\n  const colorNamespace = useSelector(\n    state => state.dashboardState.colorNamespace,\n  );\n  const datasetsStatus = useSelector(\n    state => state.dashboardState.datasetsStatus,\n  );\n  const allSliceIds = useSelector(state => state.dashboardState.sliceIds);\n  const nativeFilters = useSelector(state => state.nativeFilters?.filters);\n  const dataMask = useSelector(state => state.dataMask);\n  const labelsColor = useSelector(\n    state => state.dashboardInfo?.metadata?.label_colors || EMPTY_OBJECT,\n  );\n  const labelsColorMap = useSelector(\n    state => state.dashboardInfo?.metadata?.map_label_colors || EMPTY_OBJECT,\n  );\n  const sharedLabelsColors = useSelector(state =>\n    enforceSharedLabelsColorsArray(\n      state.dashboardInfo?.metadata?.shared_label_colors,\n    ),\n  );\n\n  const formData = useMemo(\n    () =>\n      getFormDataWithExtraFilters({\n        chart,\n        chartConfiguration,\n        filters: getAppliedFilterValues(props.id),\n        colorScheme,\n        colorNamespace,\n        sliceId: props.id,\n        nativeFilters,\n        allSliceIds,\n        dataMask,\n        extraControls: props.extraControls,\n        labelsColor,\n        labelsColorMap,\n        sharedLabelsColors,\n        ownColorScheme,\n      }),\n    [\n      chart,\n      chartConfiguration,\n      props.id,\n      props.extraControls,\n      colorScheme,\n      colorNamespace,\n      nativeFilters,\n      allSliceIds,\n      dataMask,\n      labelsColor,\n      labelsColorMap,\n      sharedLabelsColors,\n      ownColorScheme,\n    ],\n  );\n\n  formData.dashboardId = dashboardInfo.id;\n\n  const onExploreChart = useCallback(\n    async clickEvent => {\n      const isOpenInNewTab =\n        clickEvent.shiftKey || clickEvent.ctrlKey || clickEvent.metaKey;\n      try {\n        const lastTabId = window.localStorage.getItem('last_tab_id');\n        const nextTabId = lastTabId\n          ? String(Number.parseInt(lastTabId, 10) + 1)\n          : undefined;\n        const key = await postFormData(\n          datasource.id,\n          datasource.type,\n          formData,\n          slice.slice_id,\n          nextTabId,\n        );\n        const url = mountExploreUrl(null, {\n          [URL_PARAMS.formDataKey.name]: key,\n          [URL_PARAMS.sliceId.name]: slice.slice_id,\n        });\n        if (isOpenInNewTab) {\n          window.open(url, '_blank', 'noreferrer');\n        } else {\n          history.push(url);\n        }\n      } catch (error) {\n        logging.error(error);\n        boundActionCreators.addDangerToast(\n          t('An error occurred while opening Explore'),\n        );\n      }\n    },\n    [\n      datasource.id,\n      datasource.type,\n      formData,\n      slice.slice_id,\n      boundActionCreators.addDangerToast,\n      history,\n    ],\n  );\n\n  const exportTable = useCallback(\n    (format, isFullCSV, isPivot = false) => {\n      const logAction =\n        format === 'csv'\n          ? LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART\n          : LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART;\n      boundActionCreators.logEvent(logAction, {\n        slice_id: slice.slice_id,\n        is_cached: props.isCached,\n      });\n      exportChart({\n        formData: isFullCSV ? { ...formData, row_limit: maxRows } : formData,\n        resultType: isPivot ? 'post_processed' : 'full',\n        resultFormat: format,\n        force: true,\n        ownState: props.ownState,\n      });\n    },\n    [\n      slice.slice_id,\n      props.isCached,\n      formData,\n      props.maxRows,\n      props.ownState,\n      boundActionCreators.logEvent,\n    ],\n  );\n\n  const exportCSV = useCallback(() => {\n    exportTable('csv', false);\n  }, [exportTable]);\n\n  const exportFullCSV = useCallback(() => {\n    exportTable('csv', true);\n  }, [exportTable]);\n\n  const exportPivotCSV = useCallback(() => {\n    exportTable('csv', false, true);\n  }, [exportTable]);\n\n  const exportXLSX = useCallback(() => {\n    exportTable('xlsx', false);\n  }, [exportTable]);\n\n  const exportFullXLSX = useCallback(() => {\n    exportTable('xlsx', true);\n  }, [exportTable]);\n\n  const forceRefresh = useCallback(() => {\n    boundActionCreators.logEvent(LOG_ACTIONS_FORCE_REFRESH_CHART, {\n      slice_id: slice.slice_id,\n      is_cached: props.isCached,\n    });\n    return boundActionCreators.refreshChart(chart.id, true, props.dashboardId);\n  }, [\n    boundActionCreators.refreshChart,\n    chart.id,\n    props.dashboardId,\n    slice.slice_id,\n    props.isCached,\n    boundActionCreators.logEvent,\n  ]);\n\n  if (chart === EMPTY_OBJECT || slice === EMPTY_OBJECT) {\n    return <MissingChart height={getChartHeight()} />;\n  }\n\n  const { queriesResponse, chartUpdateEndTime, chartStatus, annotationQuery } =\n    chart;\n  const isLoading = chartStatus === 'loading';\n  // eslint-disable-next-line camelcase\n  const isCached = queriesResponse?.map(({ is_cached }) => is_cached) || [];\n  const cachedDttm =\n    // eslint-disable-next-line camelcase\n    queriesResponse?.map(({ cached_dttm }) => cached_dttm) || [];\n\n  return (\n    <SliceContainer\n      className=\"chart-slice\"\n      data-test=\"chart-grid-component\"\n      data-test-chart-id={props.id}\n      data-test-viz-type={slice.viz_type}\n      data-test-chart-name={slice.slice_name}\n    >\n      <SliceHeader\n        ref={headerRef}\n        slice={slice}\n        isExpanded={isExpanded}\n        isCached={isCached}\n        cachedDttm={cachedDttm}\n        updatedDttm={chartUpdateEndTime}\n        toggleExpandSlice={boundActionCreators.toggleExpandSlice}\n        forceRefresh={forceRefresh}\n        editMode={editMode}\n        annotationQuery={annotationQuery}\n        logExploreChart={logExploreChart}\n        logEvent={boundActionCreators.logEvent}\n        onExploreChart={onExploreChart}\n        exportCSV={exportCSV}\n        exportPivotCSV={exportPivotCSV}\n        exportXLSX={exportXLSX}\n        exportFullCSV={exportFullCSV}\n        exportFullXLSX={exportFullXLSX}\n        updateSliceName={props.updateSliceName}\n        sliceName={props.sliceName}\n        supersetCanExplore={supersetCanExplore}\n        supersetCanShare={supersetCanShare}\n        supersetCanCSV={supersetCanCSV}\n        componentId={props.componentId}\n        dashboardId={props.dashboardId}\n        filters={getActiveFilters() || EMPTY_OBJECT}\n        addSuccessToast={boundActionCreators.addSuccessToast}\n        addDangerToast={boundActionCreators.addDangerToast}\n        handleToggleFullSize={props.handleToggleFullSize}\n        isFullSize={props.isFullSize}\n        chartStatus={chartStatus}\n        formData={formData}\n        width={width}\n        height={getHeaderHeight()}\n      />\n\n      {/*\n          This usage of dangerouslySetInnerHTML is safe since it is being used to render\n          markdown that is sanitized with nh3. See:\n             https://github.com/apache/superset/pull/4390\n          and\n             https://github.com/apache/superset/pull/23862\n        */}\n      {isExpanded && slice.description_markeddown && (\n        <div\n          className=\"slice_description bs-callout bs-callout-default\"\n          ref={descriptionRef}\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{ __html: slice.description_markeddown }}\n          role=\"complementary\"\n        />\n      )}\n\n      <ChartWrapper\n        className={cx('dashboard-chart')}\n        aria-label={slice.description}\n      >\n        {isLoading && (\n          <ChartOverlay\n            style={{\n              width,\n              height: getChartHeight(),\n            }}\n          />\n        )}\n\n        <ChartContainer\n          width={width}\n          height={getChartHeight()}\n          addFilter={addFilter}\n          onFilterMenuOpen={handleFilterMenuOpen}\n          onFilterMenuClose={handleFilterMenuClose}\n          annotationData={chart.annotationData}\n          chartAlert={chart.chartAlert}\n          chartId={props.id}\n          chartStatus={chartStatus}\n          datasource={datasource}\n          dashboardId={props.dashboardId}\n          initialValues={EMPTY_OBJECT}\n          formData={formData}\n          labelsColor={labelsColor}\n          labelsColorMap={labelsColorMap}\n          ownState={dataMask[props.id]?.ownState}\n          filterState={dataMask[props.id]?.filterState}\n          queriesResponse={chart.queriesResponse}\n          timeout={timeout}\n          triggerQuery={chart.triggerQuery}\n          vizType={slice.viz_type}\n          setControlValue={props.setControlValue}\n          datasetsStatus={datasetsStatus}\n          isInView={props.isInView}\n          emitCrossFilters={emitCrossFilters}\n        />\n      </ChartWrapper>\n    </SliceContainer>\n  );\n};\n\nChart.propTypes = propTypes;\n\nexport default memo(Chart, (prevProps, nextProps) => {\n  if (prevProps.cacheBusterProp !== nextProps.cacheBusterProp) {\n    return false;\n  }\n  return (\n    !nextProps.isComponentVisible ||\n    (prevProps.isInView === nextProps.isInView &&\n      prevProps.componentId === nextProps.componentId &&\n      prevProps.id === nextProps.id &&\n      prevProps.dashboardId === nextProps.dashboardId &&\n      prevProps.extraControls === nextProps.extraControls &&\n      prevProps.handleToggleFullSize === nextProps.handleToggleFullSize &&\n      prevProps.isFullSize === nextProps.isFullSize &&\n      prevProps.setControlValue === nextProps.setControlValue &&\n      prevProps.sliceName === nextProps.sliceName &&\n      prevProps.updateSliceName === nextProps.updateSliceName &&\n      prevProps.width === nextProps.width &&\n      prevProps.height === nextProps.height)\n  );\n});\n"],"mappings":"gVAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,EAAE,MAAM,YAAY;AAC3B,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,OAAO;AAC/E,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,EAAEC,CAAC,EAAEC,OAAO,QAAQ,mBAAmB;;AAEtD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,kBAAkB,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;;AAEtD,SAASC,WAAW,EAAEC,eAAe,QAAQ,0BAA0B;AACvE,OAAOC,cAAc,MAAM,qCAAqC;AAChE;EACEC,mCAAmC;EACnCC,mCAAmC;EACnCC,sCAAsC;EACtCC,uCAAuC;EACvCC,+BAA+B;AAC1B,qBAAqB;AAC5B,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,8BAA8B,QAAQ,uBAAuB;;AAEtE,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,YAAY,MAAM,iBAAiB;AAC1C;EACEC,cAAc;EACdC,eAAe;AACV,2CAA2C;AAClD;EACEC,qBAAqB;EACrBC,iBAAiB;EACjBC,uBAAuB;AAClB,8BAA8B;AACrC,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,QAAQ,QAAQ,yBAAyB;AAClD;EACEC,gBAAgB;EAChBC,sBAAsB;AACjB,mCAAmC;AAC1C,OAAOC,2BAA2B,MAAM,+CAA+C;AACvF,SAASC,sBAAsB,QAAQ,iBAAiB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;;AAEzD,MAAMC,SAAS,GAAG;EAChBC,EAAE,EAAEtC,SAAS,CAACuC,MAAM,CAACC,UAAU;EAC/BC,WAAW,EAAEzC,SAAS,CAAC0C,MAAM,CAACF,UAAU;EACxCG,WAAW,EAAE3C,SAAS,CAACuC,MAAM,CAACC,UAAU;EACxCI,KAAK,EAAE5C,SAAS,CAACuC,MAAM,CAACC,UAAU;EAClCK,MAAM,EAAE7C,SAAS,CAACuC,MAAM,CAACC,UAAU;EACnCM,eAAe,EAAE9C,SAAS,CAAC+C,IAAI,CAACP,UAAU;EAC1CQ,kBAAkB,EAAEhD,SAAS,CAACiD,IAAI;EAClCC,oBAAoB,EAAElD,SAAS,CAAC+C,IAAI,CAACP,UAAU;EAC/CW,eAAe,EAAEnD,SAAS,CAAC+C,IAAI;EAC/BK,SAAS,EAAEpD,SAAS,CAAC0C,MAAM,CAACF,UAAU;EACtCa,UAAU,EAAErD,SAAS,CAACiD,IAAI;EAC1BK,aAAa,EAAEtD,SAAS,CAACuD,MAAM;EAC/BC,QAAQ,EAAExD,SAAS,CAACiD;AACtB,CAAC;;AAED;AACA;AACA,MAAMQ,cAAc,GAAG,GAAG;AAC1B,MAAMC,qBAAqB,GAAG,EAAE;;AAEhC,MAAMC,YAAY,GAAG1D,MAAM,CAAC2D,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,MAAMC,YAAY,GAAG5D,MAAM,CAAC2D,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED,MAAME,cAAc,GAAG7D,MAAM,CAAC2D,GAAG;AACjC;AACA;AACA;AACA,CAAC;;AAED,MAAMG,YAAY,GAAG,CAAC,CAAC;;AAEvB,MAAMC,KAAK,GAAGA,CAAAC,KAAK,KAAI,KAAAC,gBAAA,EAAAC,kBAAA,EAAAC,mBAAA;EACrB,MAAMC,QAAQ,GAAG/D,WAAW,CAAC,CAAC;EAC9B,MAAMgE,cAAc,GAAG1E,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM2E,SAAS,GAAG3E,MAAM,CAAC,IAAI,CAAC;;EAE9B,MAAM4E,mBAAmB,GAAG3E,OAAO;IACjC;IACEQ,kBAAkB;MAChB;QACEiB,eAAe;QACfD,cAAc;QACdG,iBAAiB;QACjBE,YAAY;QACZH,qBAAqB;QACrBE,uBAAuB;QACvBE,YAAY;QACZC;MACF,CAAC;MACDyC;IACF,CAAC;IACH,CAACA,QAAQ;EACX,CAAC;;EAED,MAAMI,KAAK,GAAGlE,WAAW,CAAC,CAAAmE,KAAK,KAAIA,KAAK,CAACC,MAAM,CAACV,KAAK,CAAC3B,EAAE,CAAC,IAAIyB,YAAY,CAAC;EAC1E,MAAMa,KAAK,GAAGrE,WAAW;IACvB,CAAAmE,KAAK,KAAIA,KAAK,CAACG,aAAa,CAACC,MAAM,CAACb,KAAK,CAAC3B,EAAE,CAAC,IAAIyB;EACnD,CAAC;EACD,MAAMgB,QAAQ,GAAGxE,WAAW,CAAC,CAAAmE,KAAK,KAAIA,KAAK,CAACM,cAAc,CAACD,QAAQ,CAAC;EACpE,MAAME,UAAU,GAAG1E,WAAW;IAC5B,CAAAmE,KAAK,KAAI,CAAC,CAACA,KAAK,CAACM,cAAc,CAACE,cAAc,CAACjB,KAAK,CAAC3B,EAAE;EACzD,CAAC;EACD,MAAM6C,kBAAkB,GAAG5E,WAAW;IACpC,CAAAmE,KAAK,KAAI,CAAC,CAACA,KAAK,CAACU,aAAa,CAACC;EACjC,CAAC;EACD,MAAMC,gBAAgB,GAAG/E,WAAW;IAClC,CAAAmE,KAAK,KAAI,CAAC,CAACA,KAAK,CAACU,aAAa,CAACG;EACjC,CAAC;EACD,MAAMC,cAAc,GAAGjF,WAAW;IAChC,CAAAmE,KAAK,KAAI,CAAC,CAACA,KAAK,CAACU,aAAa,CAACK;EACjC,CAAC;EACD,MAAMC,OAAO,GAAGnF,WAAW;IACzB,CAAAmE,KAAK,KAAIA,KAAK,CAACU,aAAa,CAACO,MAAM,CAACC,IAAI,CAACC;EAC3C,CAAC;EACD,MAAMC,gBAAgB,GAAGvF,WAAW;IAClC,CAAAmE,KAAK,KAAI,CAAC,CAACA,KAAK,CAACU,aAAa,CAACW;EACjC,CAAC;EACD,MAAMC,OAAO,GAAGzF,WAAW;IACzB,CAAAmE,KAAK,KAAIA,KAAK,CAACU,aAAa,CAACO,MAAM,CAACC,IAAI,CAACK;EAC3C,CAAC;EACD,MAAMC,UAAU,GAAG3F,WAAW;IAC5B,CAAAmE,KAAK;IACFD,KAAK;IACJA,KAAK,CAAC0B,SAAS;IACfzB,KAAK,CAAC0B,WAAW,CAAC3B,KAAK,CAAC0B,SAAS,CAACD,UAAU,CAAC;IAC/ClE;EACJ,CAAC;EACD,MAAMoD,aAAa,GAAG7E,WAAW,CAAC,CAAAmE,KAAK,KAAIA,KAAK,CAACU,aAAa,CAAC;;EAE/D,MAAM,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxG,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC+C,MAAM,EAAE0D,SAAS,CAAC,GAAGzG,QAAQ,CAACmE,KAAK,CAACpB,MAAM,CAAC;EAClD,MAAM,CAACD,KAAK,EAAE4D,QAAQ,CAAC,GAAG1G,QAAQ,CAACmE,KAAK,CAACrB,KAAK,CAAC;EAC/C,MAAM6D,OAAO,GAAGrG,UAAU,CAAC,CAAC;EAC5B,MAAMsG,MAAM,GAAGhH,WAAW;IACxBiH,SAAA,CAAS,MAAM;MACb,MAAM,EAAE/D,KAAK,EAAEC,MAAM,CAAC,CAAC,GAAGoB,KAAK;MAC/BsC,SAAS,CAAC1D,MAAM,CAAC;MACjB2D,QAAQ,CAAC5D,KAAK,CAAC;IACjB,CAAC,EAAEa,cAAc,CAAC;IAClB,CAACQ,KAAK,CAACrB,KAAK,EAAEqB,KAAK,CAACpB,MAAM;EAC5B,CAAC;;EAED,MAAM+D,cAAc,IAAA1C,gBAAA,GAAGO,KAAK,CAAC0B,SAAS,qBAAfjC,gBAAA,CAAiB2C,YAAY;;EAEpD,MAAMC,SAAS,GAAGpH,WAAW;IAC3B,CAACqH,iBAAiB,GAAG,CAAC,CAAC,KAAK;MAC1BvC,mBAAmB,CAAC5C,QAAQ,CAACjB,mCAAmC,EAAE;QAChE2B,EAAE,EAAEmC,KAAK,CAACnC,EAAE;QACZ0E,OAAO,EAAEC,MAAM,CAACC,IAAI,CAACH,iBAAiB,CAAC,CAACI,MAAM;UAC5C,CAAAC,GAAG,KAAIL,iBAAiB,CAACK,GAAG,CAAC,KAAK;QACpC;MACF,CAAC,CAAC;MACF5C,mBAAmB,CAAC9C,YAAY,CAAC+C,KAAK,CAACnC,EAAE,EAAEyE,iBAAiB,CAAC;IAC/D,CAAC;IACD,CAACvC,mBAAmB,CAAC5C,QAAQ,EAAE4C,mBAAmB,CAAC9C,YAAY,EAAE+C,KAAK,CAACnC,EAAE;EAC3E,CAAC;;EAED3C,SAAS,CAAC,MAAM;IACd,IAAIsF,UAAU,EAAE,KAAAoC,qBAAA;MACd,MAAMhB,iBAAiB;MACrBpB,UAAU,IAAIX,cAAc,CAACgD,OAAO,IAAAD,qBAAA;MAChC/C,cAAc,CAACgD,OAAO,qBAAtBD,qBAAA,CAAwBE,YAAY;MACpC,CAAC;MACPjB,oBAAoB,CAACD,iBAAiB,CAAC;IACzC;EACF,CAAC,EAAE,CAACpB,UAAU,CAAC,CAAC;;EAEhBtF,SAAS;IACP,MAAM,MAAM;MACV+G,MAAM,CAACc,MAAM,CAAC,CAAC;IACjB,CAAC;IACD,CAACd,MAAM;EACT,CAAC;;EAED/G,SAAS,CAAC,MAAM;IACd+G,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,CAACA,MAAM,EAAEzC,KAAK,CAACZ,UAAU,CAAC,CAAC;;EAE9B,MAAMoE,eAAe,GAAG/H,WAAW,CAAC,MAAM;IACxC,IAAI6E,SAAS,CAAC+C,OAAO,EAAE;MACrB,MAAMI,aAAa,GAAGC,gBAAgB;QACpCpD,SAAS,CAAC+C;MACZ,CAAC,CAACM,gBAAgB,CAAC,eAAe,CAAC;MACnC,MAAMC,YAAY,GAAGC,QAAQ,CAACJ,aAAa,EAAE,EAAE,CAAC,IAAI,CAAC;MACrD,OAAOnD,SAAS,CAAC+C,OAAO,CAACC,YAAY,GAAGM,YAAY;IACtD;IACA,OAAOnE,qBAAqB;EAC9B,CAAC,EAAE,CAACa,SAAS,CAAC,CAAC;;EAEf,MAAMwD,cAAc,GAAGrI,WAAW,CAAC,MAAM;IACvC,MAAMsI,YAAY,GAAGP,eAAe,CAAC,CAAC;IACtC,OAAOQ,IAAI,CAACC,GAAG,CAACrF,MAAM,GAAGmF,YAAY,GAAG3B,iBAAiB,EAAE,EAAE,CAAC;EAChE,CAAC,EAAE,CAACoB,eAAe,EAAE5E,MAAM,EAAEwD,iBAAiB,CAAC,CAAC;;EAEhD,MAAM8B,oBAAoB,GAAGzI,WAAW;IACtC,CAAC0I,OAAO,EAAEC,MAAM,KAAK;MACnB7D,mBAAmB,CAACjD,qBAAqB,CAAC6G,OAAO,EAAEC,MAAM,CAAC;IAC5D,CAAC;IACD,CAAC7D,mBAAmB,CAACjD,qBAAqB;EAC5C,CAAC;;EAED,MAAM+G,qBAAqB,GAAG5I,WAAW;IACvC,CAAC0I,OAAO,EAAEC,MAAM,KAAK;MACnB7D,mBAAmB,CAAC/C,uBAAuB,CAAC2G,OAAO,EAAEC,MAAM,CAAC;IAC9D,CAAC;IACD,CAAC7D,mBAAmB,CAAC/C,uBAAuB;EAC9C,CAAC;;EAED,MAAM8G,eAAe,GAAG7I,WAAW,CAAC,MAAM;IACxC8E,mBAAmB,CAAC5C,QAAQ,CAAChB,mCAAmC,EAAE;MAChE4H,QAAQ,EAAE5D,KAAK,CAAC4D,QAAQ;MACxBC,SAAS,EAAExE,KAAK,CAACyE;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAClE,mBAAmB,CAAC5C,QAAQ,EAAEgD,KAAK,CAAC4D,QAAQ,EAAEvE,KAAK,CAACyE,QAAQ,CAAC,CAAC;;EAElE,MAAMC,kBAAkB,GAAGpI,WAAW;IACpC,CAAAmE,KAAK,UAAAkE,qBAAA,SAAAA,qBAAA,GAAIlE,KAAK,CAACU,aAAa,CAACyD,QAAQ,qBAA5BD,qBAAA,CAA8BE,mBAAmB;EAC5D,CAAC;EACD,MAAMC,WAAW,GAAGxI,WAAW,CAAC,CAAAmE,KAAK,KAAIA,KAAK,CAACM,cAAc,CAAC+D,WAAW,CAAC;EAC1E,MAAMC,cAAc,GAAGzI,WAAW;IAChC,CAAAmE,KAAK,KAAIA,KAAK,CAACM,cAAc,CAACgE;EAChC,CAAC;EACD,MAAMC,cAAc,GAAG1I,WAAW;IAChC,CAAAmE,KAAK,KAAIA,KAAK,CAACM,cAAc,CAACiE;EAChC,CAAC;EACD,MAAMC,WAAW,GAAG3I,WAAW,CAAC,CAAAmE,KAAK,KAAIA,KAAK,CAACM,cAAc,CAACmE,QAAQ,CAAC;EACvE,MAAMC,aAAa,GAAG7I,WAAW,CAAC,CAAAmE,KAAK,UAAA2E,oBAAA,SAAAA,oBAAA,GAAI3E,KAAK,CAAC0E,aAAa,qBAAnBC,oBAAA,CAAqBC,OAAO,GAAC;EACxE,MAAMC,QAAQ,GAAGhJ,WAAW,CAAC,CAAAmE,KAAK,KAAIA,KAAK,CAAC6E,QAAQ,CAAC;EACrD,MAAMC,WAAW,GAAGjJ,WAAW;IAC7B,CAAAmE,KAAK,UAAA+E,oBAAA,EAAAC,sBAAA,QAAI,EAAAD,oBAAA,GAAA/E,KAAK,CAACU,aAAa,sBAAAsE,sBAAA,GAAnBD,oBAAA,CAAqBZ,QAAQ,qBAA7Ba,sBAAA,CAA+BC,YAAY,KAAI5F,YAAY;EACtE,CAAC;EACD,MAAM6F,cAAc,GAAGrJ,WAAW;IAChC,CAAAmE,KAAK,UAAAmF,qBAAA,EAAAC,qBAAA,QAAI,EAAAD,qBAAA,GAAAnF,KAAK,CAACU,aAAa,sBAAA0E,qBAAA,GAAnBD,qBAAA,CAAqBhB,QAAQ,qBAA7BiB,qBAAA,CAA+BC,gBAAgB,KAAIhG,YAAY;EAC1E,CAAC;EACD,MAAMiG,kBAAkB,GAAGzJ,WAAW,CAAC,CAAAmE,KAAK,UAAAuF,qBAAA,EAAAC,qBAAA;MAC1ChJ,8BAA8B,EAAA+I,qBAAA;MAC5BvF,KAAK,CAACU,aAAa,sBAAA8E,qBAAA,GAAnBD,qBAAA,CAAqBpB,QAAQ,qBAA7BqB,qBAAA,CAA+BC;MACjC,CAAC;EACH,CAAC;;EAED,MAAMC,QAAQ,GAAGvK,OAAO;IACtB;IACEkC,2BAA2B,CAAC;MAC1B0C,KAAK;MACLkE,kBAAkB;MAClBW,OAAO,EAAExH,sBAAsB,CAACmC,KAAK,CAAC3B,EAAE,CAAC;MACzCyG,WAAW;MACXC,cAAc;MACdqB,OAAO,EAAEpG,KAAK,CAAC3B,EAAE;MACjB8G,aAAa;MACbF,WAAW;MACXK,QAAQ;MACRjG,aAAa,EAAEW,KAAK,CAACX,aAAa;MAClCkG,WAAW;MACXI,cAAc;MACdI,kBAAkB;MAClBpD;IACF,CAAC,CAAC;IACJ;IACEnC,KAAK;IACLkE,kBAAkB;IAClB1E,KAAK,CAAC3B,EAAE;IACR2B,KAAK,CAACX,aAAa;IACnByF,WAAW;IACXC,cAAc;IACdI,aAAa;IACbF,WAAW;IACXK,QAAQ;IACRC,WAAW;IACXI,cAAc;IACdI,kBAAkB;IAClBpD,cAAc;;EAElB,CAAC;;EAEDwD,QAAQ,CAACzH,WAAW,GAAGyC,aAAa,CAAC9C,EAAE;;EAEvC,MAAMgI,cAAc,GAAG5K,WAAW;IAChC,OAAM6K,UAAU,KAAI;MAClB,MAAMC,cAAc;MAClBD,UAAU,CAACE,QAAQ,IAAIF,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACI,OAAO;MACjE,IAAI;QACF,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QAC5D,MAAMC,SAAS,GAAGJ,SAAS;QACvBK,MAAM,CAACC,MAAM,CAACpD,QAAQ,CAAC8C,SAAS,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC1CO,SAAS;QACb,MAAM/D,GAAG,GAAG,MAAMpG,YAAY;UAC5BkF,UAAU,CAAC5D,EAAE;UACb4D,UAAU,CAACkF,IAAI;UACfhB,QAAQ;UACRxF,KAAK,CAAC4D,QAAQ;UACdwC;QACF,CAAC;QACD,MAAMK,GAAG,GAAG5K,eAAe,CAAC,IAAI,EAAE;UAChC,CAACQ,UAAU,CAACqK,WAAW,CAACC,IAAI,GAAGnE,GAAG;UAClC,CAACnG,UAAU,CAACoJ,OAAO,CAACkB,IAAI,GAAG3G,KAAK,CAAC4D;QACnC,CAAC,CAAC;QACF,IAAIgC,cAAc,EAAE;UAClBK,MAAM,CAACW,IAAI,CAACH,GAAG,EAAE,QAAQ,EAAE,YAAY,CAAC;QAC1C,CAAC,MAAM;UACL5E,OAAO,CAACgF,IAAI,CAACJ,GAAG,CAAC;QACnB;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdvL,OAAO,CAACuL,KAAK,CAACA,KAAK,CAAC;QACpBlH,mBAAmB,CAACnD,cAAc;UAChCnB,CAAC,CAAC,yCAAyC;QAC7C,CAAC;MACH;IACF,CAAC;IACD;IACEgG,UAAU,CAAC5D,EAAE;IACb4D,UAAU,CAACkF,IAAI;IACfhB,QAAQ;IACRxF,KAAK,CAAC4D,QAAQ;IACdhE,mBAAmB,CAACnD,cAAc;IAClCoF,OAAO;;EAEX,CAAC;;EAED,MAAMkF,WAAW,GAAGjM,WAAW;IAC7B,CAACkM,MAAM,EAAEC,SAAS,EAAEC,OAAO,GAAG,KAAK,KAAK;MACtC,MAAMC,SAAS;MACbH,MAAM,KAAK,KAAK;MACZ/K,sCAAsC;MACtCC,uCAAuC;MAC7C0D,mBAAmB,CAAC5C,QAAQ,CAACmK,SAAS,EAAE;QACtCvD,QAAQ,EAAE5D,KAAK,CAAC4D,QAAQ;QACxBC,SAAS,EAAExE,KAAK,CAACyE;MACnB,CAAC,CAAC;MACFlI,WAAW,CAAC;QACV4J,QAAQ,EAAEyB,SAAS,GAAG,EAAE,GAAGzB,QAAQ,EAAE4B,SAAS,EAAEhG,OAAO,CAAC,CAAC,GAAGoE,QAAQ;QACpE6B,UAAU,EAAEH,OAAO,GAAG,gBAAgB,GAAG,MAAM;QAC/CI,YAAY,EAAEN,MAAM;QACpBO,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAEnI,KAAK,CAACmI;MAClB,CAAC,CAAC;IACJ,CAAC;IACD;IACExH,KAAK,CAAC4D,QAAQ;IACdvE,KAAK,CAACyE,QAAQ;IACd0B,QAAQ;IACRnG,KAAK,CAAC+B,OAAO;IACb/B,KAAK,CAACmI,QAAQ;IACd5H,mBAAmB,CAAC5C,QAAQ;;EAEhC,CAAC;;EAED,MAAMyK,SAAS,GAAG3M,WAAW,CAAC,MAAM;IAClCiM,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB,MAAMW,aAAa,GAAG5M,WAAW,CAAC,MAAM;IACtCiM,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC;EAC1B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB,MAAMY,cAAc,GAAG7M,WAAW,CAAC,MAAM;IACvCiM,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;EACjC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB,MAAMa,UAAU,GAAG9M,WAAW,CAAC,MAAM;IACnCiM,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB,MAAMc,cAAc,GAAG/M,WAAW,CAAC,MAAM;IACvCiM,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC;EAC3B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB,MAAMe,YAAY,GAAGhN,WAAW,CAAC,MAAM;IACrC8E,mBAAmB,CAAC5C,QAAQ,CAACb,+BAA+B,EAAE;MAC5DyH,QAAQ,EAAE5D,KAAK,CAAC4D,QAAQ;MACxBC,SAAS,EAAExE,KAAK,CAACyE;IACnB,CAAC,CAAC;IACF,OAAOlE,mBAAmB,CAAC7C,YAAY,CAAC8C,KAAK,CAACnC,EAAE,EAAE,IAAI,EAAE2B,KAAK,CAACtB,WAAW,CAAC;EAC5E,CAAC,EAAE;EACD6B,mBAAmB,CAAC7C,YAAY;EAChC8C,KAAK,CAACnC,EAAE;EACR2B,KAAK,CAACtB,WAAW;EACjBiC,KAAK,CAAC4D,QAAQ;EACdvE,KAAK,CAACyE,QAAQ;EACdlE,mBAAmB,CAAC5C,QAAQ;EAC7B,CAAC;;EAEF,IAAI6C,KAAK,KAAKV,YAAY,IAAIa,KAAK,KAAKb,YAAY,EAAE;IACpD,OAAO7B,IAAA,CAACd,YAAY,IAACyB,MAAM,EAAEkF,cAAc,CAAC,CAAE,EAAE,CAAC;EACnD;;EAEA,MAAM,EAAE4E,eAAe,EAAEC,kBAAkB,EAAEC,WAAW,EAAEC,eAAe,CAAC,CAAC;EACzErI,KAAK;EACP,MAAMsI,SAAS,GAAGF,WAAW,KAAK,SAAS;EAC3C;EACA,MAAMnE,QAAQ,GAAG,CAAAiE,eAAe,oBAAfA,eAAe,CAAEK,GAAG,CAAC,CAAC,EAAEvE,SAAS,CAAC,CAAC,KAAKA,SAAS,CAAC,KAAI,EAAE;EACzE,MAAMwE,UAAU;EACd;EACA,CAAAN,eAAe,oBAAfA,eAAe,CAAEK,GAAG,CAAC,CAAC,EAAEE,WAAW,CAAC,CAAC,KAAKA,WAAW,CAAC,KAAI,EAAE;;EAE9D;IACE9K,KAAA,CAAC0B,cAAc;MACbqJ,SAAS,EAAC,aAAa;MACvB,aAAU,sBAAsB;MAChC,sBAAoBlJ,KAAK,CAAC3B,EAAG;MAC7B,sBAAoBsC,KAAK,CAACwI,QAAS;MACnC,wBAAsBxI,KAAK,CAACyI,UAAW,EAAAC,QAAA;;MAEvCpL,IAAA,CAACf,WAAW;QACVoM,GAAG,EAAEhJ,SAAU;QACfK,KAAK,EAAEA,KAAM;QACbK,UAAU,EAAEA,UAAW;QACvByD,QAAQ,EAAEA,QAAS;QACnBuE,UAAU,EAAEA,UAAW;QACvBO,WAAW,EAAEZ,kBAAmB;QAChCpL,iBAAiB,EAAEgD,mBAAmB,CAAChD,iBAAkB;QACzDkL,YAAY,EAAEA,YAAa;QAC3B3H,QAAQ,EAAEA,QAAS;QACnB+H,eAAe,EAAEA,eAAgB;QACjCvE,eAAe,EAAEA,eAAgB;QACjC3G,QAAQ,EAAE4C,mBAAmB,CAAC5C,QAAS;QACvC0I,cAAc,EAAEA,cAAe;QAC/B+B,SAAS,EAAEA,SAAU;QACrBE,cAAc,EAAEA,cAAe;QAC/BC,UAAU,EAAEA,UAAW;QACvBF,aAAa,EAAEA,aAAc;QAC7BG,cAAc,EAAEA,cAAe;QAC/B3J,eAAe,EAAEmB,KAAK,CAACnB,eAAgB;QACvCM,SAAS,EAAEa,KAAK,CAACb,SAAU;QAC3B+B,kBAAkB,EAAEA,kBAAmB;QACvCG,gBAAgB,EAAEA,gBAAiB;QACnCE,cAAc,EAAEA,cAAe;QAC/B/C,WAAW,EAAEwB,KAAK,CAACxB,WAAY;QAC/BE,WAAW,EAAEsB,KAAK,CAACtB,WAAY;QAC/B2G,OAAO,EAAEzH,gBAAgB,CAAC,CAAC,IAAIkC,YAAa;QAC5CzC,eAAe,EAAEkD,mBAAmB,CAAClD,eAAgB;QACrDD,cAAc,EAAEmD,mBAAmB,CAACnD,cAAe;QACnD6B,oBAAoB,EAAEe,KAAK,CAACf,oBAAqB;QACjDG,UAAU,EAAEY,KAAK,CAACZ,UAAW;QAC7BwJ,WAAW,EAAEA,WAAY;QACzBzC,QAAQ,EAAEA,QAAS;QACnBxH,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAE4E,eAAe,CAAC,CAAE;MAC3B,CAAC;;;;;;;;;MASDxC,UAAU,IAAIL,KAAK,CAAC6I,sBAAsB;MACzCvL,IAAA;QACEiL,SAAS,EAAC,iDAAiD;QAC3DI,GAAG,EAAEjJ;QACL;QAAA,EACAoJ,uBAAuB,EAAE,EAAEC,MAAM,EAAE/I,KAAK,CAAC6I,sBAAsB,CAAC,CAAE;QAClEG,IAAI,EAAC,eAAe;MACrB,CACF;;;MAEDxL,KAAA,CAACuB,YAAY;QACXwJ,SAAS,EAAE1N,EAAE,CAAC,iBAAiB,CAAE;QACjC,cAAYmF,KAAK,CAACiJ,WAAY,EAAAP,QAAA;;QAE7BP,SAAS;QACR7K,IAAA,CAAC2B,YAAY;UACXiK,KAAK,EAAE;YACLlL,KAAK;YACLC,MAAM,EAAEkF,cAAc,CAAC;UACzB,CAAE;QACH,CACF;;;QAED7F,IAAA,CAACxB,cAAc;UACbkC,KAAK,EAAEA,KAAM;UACbC,MAAM,EAAEkF,cAAc,CAAC,CAAE;UACzBjB,SAAS,EAAEA,SAAU;UACrBiH,gBAAgB,EAAE5F,oBAAqB;UACvC6F,iBAAiB,EAAE1F,qBAAsB;UACzC2F,cAAc,EAAExJ,KAAK,CAACwJ,cAAe;UACrCC,UAAU,EAAEzJ,KAAK,CAACyJ,UAAW;UAC7B9F,OAAO,EAAEnE,KAAK,CAAC3B,EAAG;UAClBuK,WAAW,EAAEA,WAAY;UACzB3G,UAAU,EAAEA,UAAW;UACvBvD,WAAW,EAAEsB,KAAK,CAACtB,WAAY;UAC/BwL,aAAa,EAAEpK,YAAa;UAC5BqG,QAAQ,EAAEA,QAAS;UACnBZ,WAAW,EAAEA,WAAY;UACzBI,cAAc,EAAEA,cAAe;UAC/BwC,QAAQ,GAAAjI,kBAAA,GAAEoF,QAAQ,CAACtF,KAAK,CAAC3B,EAAE,CAAC,qBAAlB6B,kBAAA,CAAoBiI,QAAS;UACvCgC,WAAW,GAAAhK,mBAAA,GAAEmF,QAAQ,CAACtF,KAAK,CAAC3B,EAAE,CAAC,qBAAlB8B,mBAAA,CAAoBgK,WAAY;UAC7CzB,eAAe,EAAElI,KAAK,CAACkI,eAAgB;UACvCjH,OAAO,EAAEA,OAAQ;UACjB2I,YAAY,EAAE5J,KAAK,CAAC4J,YAAa;UACjCC,OAAO,EAAE1J,KAAK,CAACwI,QAAS;UACxBjK,eAAe,EAAEc,KAAK,CAACd,eAAgB;UACvC8F,cAAc,EAAEA,cAAe;UAC/BzF,QAAQ,EAAES,KAAK,CAACT,QAAS;UACzBsC,gBAAgB,EAAEA,gBAAiB;QACpC,CAAC;MACU,CAAC;IACD,CAAC;;AAErB,CAAC,CAACyI,aAAA,CA7aIvK,KAAK,8zCACQ1D,WAAW,EAsBdC,WAAW,EACXA,WAAW,EAGRA,WAAW,EACTA,WAAW,EAGHA,WAAW,EAGbA,WAAW,EAGbA,WAAW,EAGlBA,WAAW,EAGFA,WAAW,EAGpBA,WAAW,EAGRA,WAAW,EAORA,WAAW,EAKjBH,UAAU,EAmFCG,WAAW,EAGlBA,WAAW,EACRA,WAAW,EAGXA,WAAW,EAGdA,WAAW,EACTA,WAAW,EAChBA,WAAW,EACRA,WAAW,EAGRA,WAAW,EAGPA,WAAW;;AA4QxCyD,KAAK,CAAC3B,SAAS,GAAGA,SAAS,CAAC,MAAAmM,QAAA;;AAEbzO,IAAI,CAACiE,KAAK,EAAE,CAACyK,SAAS,EAAEC,SAAS,KAAK;EACnD,IAAID,SAAS,CAACE,eAAe,KAAKD,SAAS,CAACC,eAAe,EAAE;IAC3D,OAAO,KAAK;EACd;EACA;IACE,CAACD,SAAS,CAAC1L,kBAAkB;IAC5ByL,SAAS,CAACjL,QAAQ,KAAKkL,SAAS,CAAClL,QAAQ;IACxCiL,SAAS,CAAChM,WAAW,KAAKiM,SAAS,CAACjM,WAAW;IAC/CgM,SAAS,CAACnM,EAAE,KAAKoM,SAAS,CAACpM,EAAE;IAC7BmM,SAAS,CAAC9L,WAAW,KAAK+L,SAAS,CAAC/L,WAAW;IAC/C8L,SAAS,CAACnL,aAAa,KAAKoL,SAAS,CAACpL,aAAa;IACnDmL,SAAS,CAACvL,oBAAoB,KAAKwL,SAAS,CAACxL,oBAAoB;IACjEuL,SAAS,CAACpL,UAAU,KAAKqL,SAAS,CAACrL,UAAU;IAC7CoL,SAAS,CAACtL,eAAe,KAAKuL,SAAS,CAACvL,eAAe;IACvDsL,SAAS,CAACrL,SAAS,KAAKsL,SAAS,CAACtL,SAAS;IAC3CqL,SAAS,CAAC3L,eAAe,KAAK4L,SAAS,CAAC5L,eAAe;IACvD2L,SAAS,CAAC7L,KAAK,KAAK8L,SAAS,CAAC9L,KAAK;IACnC6L,SAAS,CAAC5L,MAAM,KAAK6L,SAAS,CAAC7L,MAAO;;AAE5C,CAAC,CAAC,CAnBF,eAAA2L,QAAA,CAmBG,mBAAAI,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAA3D,SAAA,MAAAyD,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAjfG1M,SAAS,+GAAAuM,cAAA,CAAAG,QAAA,CAkBTtL,cAAc,oHAAAmL,cAAA,CAAAG,QAAA,CACdrL,qBAAqB,2HAAAkL,cAAA,CAAAG,QAAA,CAErBpL,YAAY,kHAAAiL,cAAA,CAAAG,QAAA,CASZlL,YAAY,kHAAA+K,cAAA,CAAAG,QAAA,CAOZjL,cAAc,oHAAA8K,cAAA,CAAAG,QAAA,CAMdhL,YAAY,kHAAA6K,cAAA,CAAAG,QAAA,CAEZ/K,KAAK,2GAAA4K,cAAA,CAAAG,QAAA,CAAAP,QAAA,qIAAAQ,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAA7D,SAAA,CAAA6D,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}