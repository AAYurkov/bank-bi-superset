{"ast":null,"code":"import _throttle from \"lodash/throttle\";import _kebabCase from \"lodash/kebabCase\"; /* eslint-disable react/sort-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport d3 from 'd3';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\n  CategoricalColorNamespace,\n  evalExpression,\n  getNumberFormatter,\n  getTimeFormatter,\n  isDefined,\n  NumberFormats,\n  SMART_DATE_VERBOSE_ID,\n  t,\n  VizType } from\n'@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\n  applyNativeColumns } from\n'./vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\n  cleanColorInput,\n  computeYDomain,\n  drawBarValues,\n  generateBubbleTooltipContent,\n  generateCompareTooltipContent,\n  generateTimePivotTooltip,\n  generateTooltipClassName,\n  getMaxLabelSize,\n  getTimeOrNumberFormatter,\n  hideTooltips,\n  tipFactory,\n  removeTooltip,\n  setAxisShowMaxMin,\n  stringifyTimeRange,\n  wrapTooltip } from\n'./utils';\nimport {\n  annotationLayerType,\n  boxPlotValueType,\n  bulletDataType,\n  categoryAndValueXYType,\n  rgbObjectType,\n  numericXYType,\n  numberOrAutoType,\n  stringOrObjectWithLabelType } from\n'./PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n{ text: 'No data', dy: '-.75em', class: 'header' },\n{\n  text: 'Adjust filters or check the Datasource.',\n  dy: '.75em',\n  class: 'body'\n}];\n\n\ndayjs.extend(utc);\n\nconst smartDateVerboseFormatter = getTimeFormatter(SMART_DATE_VERBOSE_ID);\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container.\n  selectAll('.nv-noData').\n  data(NO_DATA_RENDER_DATA);\n\n  noDataText.\n  enter().\n  append('text').\n  attr('class', (d) => `nvd3 nv-noData ${d.class}`).\n  attr('dy', (d) => d.dy).\n  style('text-anchor', 'middle');\n\n  noDataText.\n  attr('x', x).\n  attr('y', y).\n  text((d) => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340\n};\n\nconst TIMESERIES_VIZ_TYPES = [VizType.Compare, VizType.TimePivot];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n  PropTypes.arrayOf(\n    PropTypes.oneOfType([\n    // pie\n    categoryAndValueXYType,\n    // dist-bar\n    PropTypes.shape({\n      key: PropTypes.string,\n      values: PropTypes.arrayOf(categoryAndValueXYType)\n    }),\n    // area, line, compare, bar\n    PropTypes.shape({\n      key: PropTypes.arrayOf(PropTypes.string),\n      values: PropTypes.arrayOf(numericXYType)\n    }),\n    // dual-line\n    PropTypes.shape({\n      classed: PropTypes.string,\n      key: PropTypes.string,\n      type: PropTypes.string,\n      values: PropTypes.arrayOf(numericXYType),\n      yAxis: PropTypes.number\n    }),\n    // box-plot\n    PropTypes.shape({\n      label: PropTypes.string,\n      values: PropTypes.arrayOf(boxPlotValueType)\n    }),\n    // bubble\n    PropTypes.shape({\n      key: PropTypes.string,\n      values: PropTypes.arrayOf(PropTypes.object)\n    })]\n    )\n  ),\n  bulletDataType]\n  ),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n  VizType.BoxPlot,\n  'bubble',\n  VizType.Bullet,\n  VizType.Compare,\n  'column',\n  VizType.TimePivot,\n  'pie']\n  ),\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n  'key',\n  'value',\n  'percent',\n  'key_value',\n  'key_percent',\n  'key_value_percent']\n  ),\n  showLabels: PropTypes.bool,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType\n};\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    showBarValue,\n    showBrush,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxisBounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId\n  } = props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter((layer) => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  const width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return types.includes(vizType);\n  }\n\n  const drawGraph = function drawGraph() {\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${_kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height =\n    vizType === VizType.Bullet ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation = xTicksLayout === '45°' ? 45 : 0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n        t('You cannot use 45° tick layout along with the time range filter')\n      );\n\n      return null;\n    }\n\n    const canShowBrush =\n    isTruthy(showBrush) ||\n    showBrush === 'auto' &&\n    maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n    xTicksLayout !== '45°';\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case VizType.TimePivot:\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case VizType.Pie:\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (['key', 'value', 'percent'].includes(pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType((d) => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, (d) => d.y);\n          const percentFormatter = getNumberFormatter(\n            NumberFormats.PERCENT_2_POINT\n          );\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter((d) => percentFormatter(d));\n            chart.labelType(\n              (d) => `${d.data.x}: ${percentFormatter(d.data.y / total)}`\n            );\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n              (d) => `${numberFormatter(d)} (${percentFormatter(d / total)})`\n            );\n            chart.labelType(\n              (d) =>\n              `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n                d.data.y / total\n              )})`\n            );\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case VizType.Compare:\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case VizType.LegacyBubble:\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator((d) =>\n        generateBubbleTooltipContent({\n          point: d.point,\n          entity,\n          xField,\n          yField,\n          sizeField,\n          xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n          yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n          sizeFormatter: formatter\n        })\n        );\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n        0,\n        d3.max(data, (d) => d3.max(d.values, (v) => v.size))]\n        );\n        break;\n\n      case VizType.BoxPlot:\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x((d) => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case VizType.Bullet:\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);\n    }\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', (event) => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== VizType.Pie) {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes([VizType.BoxPlot]);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat((d) =>\n        d.length > MAX_NO_CHARACTERS_IN_LABEL ?\n        `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…` :\n        d\n        );\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n      (contribution || comparisonType === 'percentage') && (\n      !yAxisFormat ||\n      yAxisFormat === NumberFormats.SMART_NUMBER ||\n      yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED))\n      {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === VizType.TimePivot) {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color((d) => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter)\n      );\n    } else if (vizType !== VizType.Bullet) {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n        (d) => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId)\n      );\n    }\n\n    if (isVizTypes([VizType.Compare])) {\n      chart.interactiveLayer.tooltip.contentGenerator((d) =>\n      generateCompareTooltipContent(d, yAxisFormatter)\n      );\n    }\n\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg.\n    datum(data).\n    transition().\n    duration(500).\n    attr('height', height).\n    attr('width', width).\n    call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat((d) =>\n      d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : ''\n      );\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n      chart.yDomain &&\n      Array.isArray(yAxisBounds) &&\n      yAxisBounds.length === 2)\n      {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          const [trueMin, trueMax] = computeYDomain(data);\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    if (showMarkers) {\n      svg.\n      selectAll('.nv-point').\n      style('stroke-opacity', 1).\n      style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg.\n          selectAll('.nv-point').\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n        Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD)\n      );\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n        svg,\n        chart.yAxis2 ? 'nv-y1' : 'nv-y'\n      );\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n        maxXAxisLabelHeight * Math.sin(Math.PI * xLabelRotation / 180) +\n        marginPad +\n        30;\n        margins.right =\n        maxXAxisLabelHeight * Math.cos(Math.PI * xLabelRotation / 180) +\n        marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers.\n        filter(\n          (layer) => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES\n        ).\n        reduce(\n          (bushel, a) =>\n          bushel.concat(\n            (annotationData[a.name] || []).map((series) => {\n              if (!series) {\n                return {};\n              }\n              const key = Array.isArray(series.key) ?\n              `${a.name}, ${series.key.join(', ')}` :\n              `${a.name}, ${series.key}`;\n\n              return {\n                ...series,\n                key,\n                color: a.color,\n                strokeWidth: a.width,\n                classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}`\n              };\n            })\n          ),\n          []\n        );\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n          generateTooltipClassName(chartId)]\n          );\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg.\n      datum(data).\n      transition().\n      duration(500).\n      attr('width', width).\n      attr('height', height).\n      call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n        'scroll',\n        _throttle(() => hideTooltips(false), 250)\n      );\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n          (a) => a.annotationType === ANNOTATION_TYPES.FORMULA\n        );\n\n        const xMax = chart.xAxis.scale().domain()[1].valueOf();\n        const xMin = chart.xAxis.scale().domain()[0].valueOf();\n        let xScale;\n        if (chart.xScale) {\n          xScale = chart.xScale();\n        } else if (chart.xAxis.scale) {\n          xScale = chart.xAxis.scale();\n        } else {\n          xScale = d3.scale.linear();\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          let period = Math.min(\n            ...data.map((d) =>\n            Math.min(...d.values.slice(1).map((v, i) => v.x - d.values[i].x))\n            )\n          );\n          const dataPoints = (xMax - xMin) / (period || 1);\n          // make sure that there are enough data points and not too many\n          period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n          period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n          xValues.push(xMin);\n          for (let x = xMin; x < xMax; x += period) {\n            xValues.push(x);\n          }\n          xValues.push(xMax);\n\n          const formulaData = formulas.map((fo) => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map((x) => ({\n                x,\n                y: evalExpression(expression, x)\n              })),\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}`\n            };\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers.\n          filter(\n            (x) =>\n            x.annotationType === ANNOTATION_TYPES.EVENT &&\n            annotationData &&\n            annotationData[x.name]\n          ).\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add event annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-event-annotation-layer-${index}`);\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n            const tip = tipFactory({\n              ...e,\n              annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}`\n            });\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(dayjs.utc(r[e.timeColumn]));\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue\n              };\n            }).\n            filter(\n              (record) =>\n              !Number.isNaN(record[e.timeColumn].getMilliseconds())\n            );\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('line').\n              data(records).\n              enter().\n              append('line').\n              attr({\n                x1: (d) => xScale(new Date(d[e.timeColumn])),\n                y1: 0,\n                x2: (d) => xScale(new Date(d[e.timeColumn])),\n                y2: annotationHeight\n              }).\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke', aColor).\n              style('stroke-width', e.width).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                annotations.\n                selectAll('line').\n                data(records).\n                attr({\n                  x1: (d) => xScale(new Date(d[e.timeColumn])),\n                  y1: 0,\n                  x2: (d) => xScale(new Date(d[e.timeColumn])),\n                  y2: annotationHeight,\n                  opacity: (d) => {\n                    const x = xScale(new Date(d[e.timeColumn]));\n\n                    return x > 0 && x < chartWidth ? 1 : 0;\n                  }\n                });\n              });\n            }\n          });\n\n          // Interval annotations\n          activeAnnotationLayers.\n          filter(\n            (x) =>\n            x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n            annotationData &&\n            annotationData[x.name]\n          ).\n          forEach((config, index) => {\n            const e = applyNativeColumns(config);\n            // Add interval annotation layer\n            const annotations = d3.\n            select(element).\n            select('.nv-wrap').\n            append('g').\n            attr('class', `nv-interval-annotation-layer-${index}`);\n\n            const aColor =\n            e.color || getColor(cleanColorInput(e.name), colorScheme);\n            const tip = tipFactory(e);\n\n            const records = (annotationData[e.name].records || []).\n            map((r) => {\n              const timeValue = new Date(dayjs.utc(r[e.timeColumn]));\n              const intervalEndValue = new Date(\n                dayjs.utc(r[e.intervalEndColumn])\n              );\n\n              return {\n                ...r,\n                [e.timeColumn]: timeValue,\n                [e.intervalEndColumn]: intervalEndValue\n              };\n            }).\n            filter(\n              (record) =>\n              !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n              !Number.isNaN(\n                record[e.intervalEndColumn].getMilliseconds()\n              )\n            );\n\n            if (records.length > 0) {\n              annotations.\n              selectAll('rect').\n              data(records).\n              enter().\n              append('rect').\n              attr({\n                x: (d) =>\n                Math.min(\n                  xScale(new Date(d[e.timeColumn])),\n                  xScale(new Date(d[e.intervalEndColumn]))\n                ),\n                y: 0,\n                width: (d) =>\n                Math.max(\n                  Math.abs(\n                    xScale(new Date(d[e.intervalEndColumn])) -\n                    xScale(new Date(d[e.timeColumn]))\n                  ),\n                  1\n                ),\n                height: annotationHeight\n              }).\n              attr('class', `${e.opacity} ${e.style}`).\n              style('stroke-width', e.width).\n              style('stroke', aColor).\n              style('fill', aColor).\n              style('fill-opacity', 0.2).\n              on('mouseover', tip.show).\n              on('mouseout', tip.hide).\n              call(tip);\n            }\n\n            // update annotation positions on brush event\n            if (chart.focus) {\n              chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                annotations.\n                selectAll('rect').\n                data(records).\n                attr({\n                  x: (d) => xScale(new Date(d[e.timeColumn])),\n                  width: (d) => {\n                    const x1 = xScale(new Date(d[e.timeColumn]));\n                    const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                    return x2 - x1;\n                  }\n                });\n              });\n            }\n          });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point'\n          ).\n          style('stroke-opacity', 1).\n          style('fill-opacity', 1);\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.hideLinetrue'\n          ).style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  __signature__(drawGraph, \"useInteractiveGuideline{}\\nuseInteractiveGuideline{}\");if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;const _default =\nnvd3Vis;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(NO_DATA_RENDER_DATA, \"NO_DATA_RENDER_DATA\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(smartDateVerboseFormatter, \"smartDateVerboseFormatter\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(getColor, \"getColor\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(getScale, \"getScale\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MAX_MARGIN_PAD, \"MAX_MARGIN_PAD\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MIN_HEIGHT_FOR_BRUSH, \"MIN_HEIGHT_FOR_BRUSH\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(MAX_NO_CHARACTERS_IN_LABEL, \"MAX_NO_CHARACTERS_IN_LABEL\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(BREAKPOINTS, \"BREAKPOINTS\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(TIMESERIES_VIZ_TYPES, \"TIMESERIES_VIZ_TYPES\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(CHART_ID_PREFIX, \"CHART_ID_PREFIX\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(NOOP, \"NOOP\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(formatter, \"formatter\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(nvd3Vis, \"nvd3Vis\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","d3","dayjs","utc","nv","PropTypes","CategoricalColorNamespace","evalExpression","getNumberFormatter","getTimeFormatter","isDefined","NumberFormats","SMART_DATE_VERBOSE_ID","t","VizType","ANNOTATION_TYPES","applyNativeColumns","isTruthy","cleanColorInput","computeYDomain","drawBarValues","generateBubbleTooltipContent","generateCompareTooltipContent","generateTimePivotTooltip","generateTooltipClassName","getMaxLabelSize","getTimeOrNumberFormatter","hideTooltips","tipFactory","removeTooltip","setAxisShowMaxMin","stringifyTimeRange","wrapTooltip","annotationLayerType","boxPlotValueType","bulletDataType","categoryAndValueXYType","rgbObjectType","numericXYType","numberOrAutoType","stringOrObjectWithLabelType","NO_DATA_RENDER_DATA","text","dy","class","extend","smartDateVerboseFormatter","utils","noData","chart","container","opt","options","margin","height","availableHeight","width","availableWidth","x","left","y","top","selectAll","remove","noDataText","data","enter","append","attr","d","style","getColor","getScale","MAX_MARGIN_PAD","MIN_HEIGHT_FOR_BRUSH","MAX_NO_CHARACTERS_IN_LABEL","BREAKPOINTS","small","TIMESERIES_VIZ_TYPES","Compare","TimePivot","CHART_ID_PREFIX","propTypes","oneOfType","arrayOf","shape","key","string","values","classed","type","yAxis","number","label","object","annotationData","annotationLayers","bottomMargin","colorScheme","comparisonType","contribution","bool","leftMargin","onError","func","showLegend","showMarkers","vizType","oneOf","BoxPlot","Bullet","xAxisFormat","numberFormat","xAxisLabel","xAxisShowMinMax","xIsLogScale","xTicksLayout","yAxisFormat","yAxisBounds","yAxisLabel","yAxisShowMinMax","yIsLogScale","isBarStacked","showBarValue","showBrush","onBrushEnd","yAxis2Format","lineInterpolation","isDonut","isPieLabelOutside","pieLabelType","showLabels","entity","maxBubbleSize","xField","yField","sizeField","baseColor","NOOP","formatter","nvd3Vis","element","props","maxWidth","maxHeight","markerLabels","markerLines","markerLineLabels","markers","rangeLabels","ranges","yAxis2ShowMinMax","sliceId","isExplore","document","querySelector","innerHTML","activeAnnotationLayers","filter","layer","show","chartContainer","chartId","parentElement","id","startsWith","colorKey","isVizTypes","types","includes","drawGraph","d3Element","select","_kebabCase","svg","empty","Math","min","isTimeSeries","staggerLabels","xLabelRotation","canShowBrush","numberFormatter","models","lineChart","xScale","time","scale","interpolate","Pie","pieChart","valueFormat","donut","labelsOutside","labelThreshold","cornerRadius","labelType","total","sum","percentFormatter","PERCENT_2_POINT","tooltip","valueFormatter","multiBarChart","reduceXTicks","cumulativeLineChart","useInteractiveGuideline","xAxis","showMaxMin","LegacyBubble","scatterChart","showDistX","showDistY","contentGenerator","point","xFormatter","yFormatter","sizeFormatter","pointRange","pointDomain","max","v","size","boxPlotChart","maxBoxWidth","bulletChart","Error","bottom","dispatch","on","focus","event","timeRange","extent","brush","rotateLabels","x2Axis","yScale","log","xAxisFormatter","interactiveLayer","headerFormatter","tickFormat","isXAxisString","length","slice","yAxisFormatter","SMART_NUMBER","SMART_NUMBER_SIGNED","PERCENT_1_POINT","y2Axis","ticks","r","g","b","color","alpha","rank","perc","colorFn","datum","transition","duration","call","log10","xTicks","applyYAxisBounds","yDomain","Array","isArray","customMin","customMax","hasCustomMin","Number","isNaN","hasCustomMax","clipEdge","trueMin","trueMax","stateChange","setTimeout","yAxis2","marginPad","ceil","margins","maxYAxisLabelWidth","maxXAxisLabelHeight","right","sin","PI","cos","parseInt","distance","axisLabel","axisLabelDistance","timeSeriesAnnotations","annotationType","TIME_SERIES","reduce","bushel","concat","name","map","series","join","strokeWidth","opacity","hideLine","push","classes","window","addEventListener","_throttle","formulas","FORMULA","xMax","domain","valueOf","xMin","linear","clamp","xValues","period","i","dataPoints","formulaData","fo","value","expression","xAxis1","yAxis1","chartWidth","range","annotationHeight","EVENT","forEach","config","index","e","annotations","aColor","tip","annotationTipClass","sourceType","records","timeValue","Date","timeColumn","record","getMilliseconds","x1","y1","x2","y2","hide","INTERVAL","intervalEndValue","intervalEndColumn","abs","addGraph","displayName","_default","reactHotLoader","register","leaveModule"],"sources":["/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-nvd3/src/NVD3Vis.js"],"sourcesContent":["/* eslint-disable react/sort-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { kebabCase, throttle } from 'lodash';\nimport d3 from 'd3';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport nv from 'nvd3-fork';\nimport PropTypes from 'prop-types';\nimport {\n  CategoricalColorNamespace,\n  evalExpression,\n  getNumberFormatter,\n  getTimeFormatter,\n  isDefined,\n  NumberFormats,\n  SMART_DATE_VERBOSE_ID,\n  t,\n  VizType,\n} from '@superset-ui/core';\n\nimport 'nvd3-fork/build/nv.d3.css';\n\n/* eslint-disable-next-line */\nimport ANNOTATION_TYPES, {\n  applyNativeColumns,\n} from './vendor/superset/AnnotationTypes';\nimport isTruthy from './utils/isTruthy';\nimport {\n  cleanColorInput,\n  computeYDomain,\n  drawBarValues,\n  generateBubbleTooltipContent,\n  generateCompareTooltipContent,\n  generateTimePivotTooltip,\n  generateTooltipClassName,\n  getMaxLabelSize,\n  getTimeOrNumberFormatter,\n  hideTooltips,\n  tipFactory,\n  removeTooltip,\n  setAxisShowMaxMin,\n  stringifyTimeRange,\n  wrapTooltip,\n} from './utils';\nimport {\n  annotationLayerType,\n  boxPlotValueType,\n  bulletDataType,\n  categoryAndValueXYType,\n  rgbObjectType,\n  numericXYType,\n  numberOrAutoType,\n  stringOrObjectWithLabelType,\n} from './PropTypes';\n\nconst NO_DATA_RENDER_DATA = [\n  { text: 'No data', dy: '-.75em', class: 'header' },\n  {\n    text: 'Adjust filters or check the Datasource.',\n    dy: '.75em',\n    class: 'body',\n  },\n];\n\ndayjs.extend(utc);\n\nconst smartDateVerboseFormatter = getTimeFormatter(SMART_DATE_VERBOSE_ID);\n\n// Override the noData render function to make a prettier UX\n// Code adapted from https://github.com/novus/nvd3/blob/master/src/utils.js#L653\nnv.utils.noData = function noData(chart, container) {\n  const opt = chart.options();\n  const margin = opt.margin();\n  const height = nv.utils.availableHeight(null, container, margin);\n  const width = nv.utils.availableWidth(null, container, margin);\n  const x = margin.left + width / 2;\n  const y = margin.top + height / 2;\n\n  // Remove any previously created chart components\n  container.selectAll('g').remove();\n\n  const noDataText = container\n    .selectAll('.nv-noData')\n    .data(NO_DATA_RENDER_DATA);\n\n  noDataText\n    .enter()\n    .append('text')\n    .attr('class', d => `nvd3 nv-noData ${d.class}`)\n    .attr('dy', d => d.dy)\n    .style('text-anchor', 'middle');\n\n  noDataText\n    .attr('x', x)\n    .attr('y', y)\n    .text(d => d.text);\n};\n\nconst { getColor, getScale } = CategoricalColorNamespace;\n\n// Limit on how large axes margins can grow as the chart window is resized\nconst MAX_MARGIN_PAD = 30;\nconst MIN_HEIGHT_FOR_BRUSH = 480;\nconst MAX_NO_CHARACTERS_IN_LABEL = 40;\n\nconst BREAKPOINTS = {\n  small: 340,\n};\n\nconst TIMESERIES_VIZ_TYPES = [VizType.Compare, VizType.TimePivot];\n\nconst CHART_ID_PREFIX = 'chart-id-';\n\nconst propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        // pie\n        categoryAndValueXYType,\n        // dist-bar\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(categoryAndValueXYType),\n        }),\n        // area, line, compare, bar\n        PropTypes.shape({\n          key: PropTypes.arrayOf(PropTypes.string),\n          values: PropTypes.arrayOf(numericXYType),\n        }),\n        // dual-line\n        PropTypes.shape({\n          classed: PropTypes.string,\n          key: PropTypes.string,\n          type: PropTypes.string,\n          values: PropTypes.arrayOf(numericXYType),\n          yAxis: PropTypes.number,\n        }),\n        // box-plot\n        PropTypes.shape({\n          label: PropTypes.string,\n          values: PropTypes.arrayOf(boxPlotValueType),\n        }),\n        // bubble\n        PropTypes.shape({\n          key: PropTypes.string,\n          values: PropTypes.arrayOf(PropTypes.object),\n        }),\n      ]),\n    ),\n    bulletDataType,\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  annotationData: PropTypes.object,\n  annotationLayers: PropTypes.arrayOf(annotationLayerType),\n  bottomMargin: numberOrAutoType,\n  colorScheme: PropTypes.string,\n  comparisonType: PropTypes.string,\n  contribution: PropTypes.bool,\n  leftMargin: numberOrAutoType,\n  onError: PropTypes.func,\n  showLegend: PropTypes.bool,\n  showMarkers: PropTypes.bool,\n  vizType: PropTypes.oneOf([\n    VizType.BoxPlot,\n    'bubble',\n    VizType.Bullet,\n    VizType.Compare,\n    'column',\n    VizType.TimePivot,\n    'pie',\n  ]),\n  xAxisFormat: PropTypes.string,\n  numberFormat: PropTypes.string,\n  xAxisLabel: PropTypes.string,\n  xAxisShowMinMax: PropTypes.bool,\n  xIsLogScale: PropTypes.bool,\n  xTicksLayout: PropTypes.oneOf(['auto', 'staggered', '45°']),\n  yAxisFormat: PropTypes.string,\n  yAxisBounds: PropTypes.arrayOf(PropTypes.number),\n  yAxisLabel: PropTypes.string,\n  yAxisShowMinMax: PropTypes.bool,\n  yIsLogScale: PropTypes.bool,\n  // 'bar' or 'dist-bar'\n  isBarStacked: PropTypes.bool,\n  showBarValue: PropTypes.bool,\n  // 'line' only\n  showBrush: PropTypes.oneOf([true, 'yes', false, 'no', 'auto']),\n  onBrushEnd: PropTypes.func,\n  // 'line-multi' or 'dual-line'\n  yAxis2Format: PropTypes.string,\n  // 'line', 'time-pivot', 'dual-line' or 'line-multi'\n  lineInterpolation: PropTypes.string,\n  // 'pie' only\n  isDonut: PropTypes.bool,\n  isPieLabelOutside: PropTypes.bool,\n  pieLabelType: PropTypes.oneOf([\n    'key',\n    'value',\n    'percent',\n    'key_value',\n    'key_percent',\n    'key_value_percent',\n  ]),\n  showLabels: PropTypes.bool,\n  // 'bubble' only\n  entity: PropTypes.string,\n  maxBubbleSize: PropTypes.number,\n  xField: stringOrObjectWithLabelType,\n  yField: stringOrObjectWithLabelType,\n  sizeField: stringOrObjectWithLabelType,\n  // time-pivot only\n  baseColor: rgbObjectType,\n};\n\nconst NOOP = () => {};\nconst formatter = getNumberFormatter();\n\nfunction nvd3Vis(element, props) {\n  const {\n    data,\n    width: maxWidth,\n    height: maxHeight,\n    annotationData,\n    annotationLayers = [],\n    baseColor,\n    bottomMargin,\n    colorScheme,\n    comparisonType,\n    contribution,\n    entity,\n    isBarStacked,\n    isDonut,\n    isPieLabelOutside,\n    leftMargin,\n    lineInterpolation = 'linear',\n    markerLabels,\n    markerLines,\n    markerLineLabels,\n    markers,\n    maxBubbleSize,\n    onBrushEnd = NOOP,\n    onError = NOOP,\n    pieLabelType,\n    rangeLabels,\n    ranges,\n    showBarValue,\n    showBrush,\n    showLabels,\n    showLegend,\n    showMarkers,\n    sizeField,\n    vizType,\n    xAxisFormat,\n    numberFormat,\n    xAxisLabel,\n    xAxisShowMinMax = false,\n    xField,\n    xIsLogScale,\n    xTicksLayout,\n    yAxisFormat,\n    yAxisBounds,\n    yAxisLabel,\n    yAxisShowMinMax = false,\n    yAxis2ShowMinMax = false,\n    yField,\n    yIsLogScale,\n    sliceId,\n  } = props;\n\n  const isExplore = document.querySelector('#explorer-container') !== null;\n  const container = element;\n  container.innerHTML = '';\n  const activeAnnotationLayers = annotationLayers.filter(layer => layer.show);\n\n  // Search for the chart id in a parent div from the nvd3 chart\n  let chartContainer = container;\n  let chartId = null;\n  while (chartContainer.parentElement) {\n    if (chartContainer.parentElement.id.startsWith(CHART_ID_PREFIX)) {\n      chartId = chartContainer.parentElement.id;\n      break;\n    }\n\n    chartContainer = chartContainer.parentElement;\n  }\n\n  let chart;\n  const width = maxWidth;\n  let colorKey = 'key';\n\n  container.style.width = `${maxWidth}px`;\n  container.style.height = `${maxHeight}px`;\n\n  function isVizTypes(types) {\n    return types.includes(vizType);\n  }\n\n  const drawGraph = function drawGraph() {\n    const d3Element = d3.select(element);\n    d3Element.classed('superset-legacy-chart-nvd3', true);\n    d3Element.classed(`superset-legacy-chart-nvd3-${kebabCase(vizType)}`, true);\n    let svg = d3Element.select('svg');\n    if (svg.empty()) {\n      svg = d3Element.append('svg');\n    }\n    const height =\n      vizType === VizType.Bullet ? Math.min(maxHeight, 50) : maxHeight;\n    const isTimeSeries = isVizTypes(TIMESERIES_VIZ_TYPES);\n\n    // Handling xAxis ticks settings\n    const staggerLabels = xTicksLayout === 'staggered';\n    const xLabelRotation = xTicksLayout === '45°' ? 45 : 0;\n    if (xLabelRotation === 45 && isTruthy(showBrush)) {\n      onError(\n        t('You cannot use 45° tick layout along with the time range filter'),\n      );\n\n      return null;\n    }\n\n    const canShowBrush =\n      isTruthy(showBrush) ||\n      (showBrush === 'auto' &&\n        maxHeight >= MIN_HEIGHT_FOR_BRUSH &&\n        xTicksLayout !== '45°');\n    const numberFormatter = getNumberFormatter(numberFormat);\n\n    switch (vizType) {\n      case VizType.TimePivot:\n        chart = nv.models.lineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.interpolate(lineInterpolation);\n        break;\n\n      case VizType.Pie:\n        chart = nv.models.pieChart();\n        colorKey = 'x';\n        chart.valueFormat(numberFormatter);\n        if (isDonut) {\n          chart.donut(true);\n        }\n        chart.showLabels(showLabels);\n        chart.labelsOutside(isPieLabelOutside);\n        // Configure the minimum slice size for labels to show up\n        chart.labelThreshold(0.05);\n        chart.cornerRadius(true);\n\n        if (['key', 'value', 'percent'].includes(pieLabelType)) {\n          chart.labelType(pieLabelType);\n        } else if (pieLabelType === 'key_value') {\n          chart.labelType(d => `${d.data.x}: ${numberFormatter(d.data.y)}`);\n        } else {\n          // pieLabelType in ['key_percent', 'key_value_percent']\n          const total = d3.sum(data, d => d.y);\n          const percentFormatter = getNumberFormatter(\n            NumberFormats.PERCENT_2_POINT,\n          );\n          if (pieLabelType === 'key_percent') {\n            chart.tooltip.valueFormatter(d => percentFormatter(d));\n            chart.labelType(\n              d => `${d.data.x}: ${percentFormatter(d.data.y / total)}`,\n            );\n          } else {\n            // pieLabelType === 'key_value_percent'\n            chart.tooltip.valueFormatter(\n              d => `${numberFormatter(d)} (${percentFormatter(d / total)})`,\n            );\n            chart.labelType(\n              d =>\n                `${d.data.x}: ${numberFormatter(d.data.y)} (${percentFormatter(\n                  d.data.y / total,\n                )})`,\n            );\n          }\n        }\n        // Pie chart does not need top margin\n        chart.margin({ top: 0 });\n        break;\n\n      case 'column':\n        chart = nv.models.multiBarChart().reduceXTicks(false);\n        break;\n\n      case VizType.Compare:\n        chart = nv.models.cumulativeLineChart();\n        chart.xScale(d3.time.scale.utc());\n        chart.useInteractiveGuideline(true);\n        chart.xAxis.showMaxMin(false);\n        break;\n\n      case VizType.LegacyBubble:\n        chart = nv.models.scatterChart();\n        chart.showDistX(false);\n        chart.showDistY(false);\n        chart.tooltip.contentGenerator(d =>\n          generateBubbleTooltipContent({\n            point: d.point,\n            entity,\n            xField,\n            yField,\n            sizeField,\n            xFormatter: getTimeOrNumberFormatter(xAxisFormat),\n            yFormatter: getTimeOrNumberFormatter(yAxisFormat),\n            sizeFormatter: formatter,\n          }),\n        );\n        chart.pointRange([5, maxBubbleSize ** 2]);\n        chart.pointDomain([\n          0,\n          d3.max(data, d => d3.max(d.values, v => v.size)),\n        ]);\n        break;\n\n      case VizType.BoxPlot:\n        colorKey = 'label';\n        chart = nv.models.boxPlotChart();\n        chart.x(d => d.label);\n        chart.maxBoxWidth(75); // prevent boxes from being incredibly wide\n        break;\n\n      case VizType.Bullet:\n        chart = nv.models.bulletChart();\n        data.rangeLabels = rangeLabels;\n        data.ranges = ranges;\n        data.markerLabels = markerLabels;\n        data.markerLines = markerLines;\n        data.markerLineLabels = markerLineLabels;\n        data.markers = markers;\n        break;\n\n      default:\n        throw new Error(`Unrecognized visualization for nvd3${vizType}`);\n    }\n    // Assuming the container has padding already other than for top margin\n    chart.margin({ left: 0, bottom: 0 });\n\n    if (showBarValue) {\n      drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      chart.dispatch.on('stateChange.drawBarValues', () => {\n        drawBarValues(svg, data, isBarStacked, yAxisFormat);\n      });\n    }\n\n    if (canShowBrush && onBrushEnd !== NOOP) {\n      if (chart.focus) {\n        chart.focus.dispatch.on('brush', event => {\n          const timeRange = stringifyTimeRange(event.extent);\n          if (timeRange) {\n            event.brush.on('brushend', () => {\n              onBrushEnd(timeRange);\n            });\n          }\n        });\n      }\n    }\n\n    if (chart.xAxis && chart.xAxis.staggerLabels) {\n      chart.xAxis.staggerLabels(staggerLabels);\n    }\n    if (chart.xAxis && chart.xAxis.rotateLabels) {\n      chart.xAxis.rotateLabels(xLabelRotation);\n    }\n    if (chart.x2Axis && chart.x2Axis.staggerLabels) {\n      chart.x2Axis.staggerLabels(staggerLabels);\n    }\n    if (chart.x2Axis && chart.x2Axis.rotateLabels) {\n      chart.x2Axis.rotateLabels(xLabelRotation);\n    }\n\n    if ('showLegend' in chart && typeof showLegend !== 'undefined') {\n      if (width < BREAKPOINTS.small && vizType !== VizType.Pie) {\n        chart.showLegend(false);\n      } else {\n        chart.showLegend(showLegend);\n      }\n    }\n\n    if (yIsLogScale) {\n      chart.yScale(d3.scale.log());\n    }\n    if (xIsLogScale) {\n      chart.xScale(d3.scale.log());\n    }\n\n    let xAxisFormatter;\n    if (isTimeSeries) {\n      xAxisFormatter = getTimeFormatter(xAxisFormat);\n      // In tooltips, always use the verbose time format\n      chart.interactiveLayer.tooltip.headerFormatter(smartDateVerboseFormatter);\n    } else {\n      xAxisFormatter = getTimeOrNumberFormatter(xAxisFormat);\n    }\n    if (chart.x2Axis && chart.x2Axis.tickFormat) {\n      chart.x2Axis.tickFormat(xAxisFormatter);\n    }\n    if (chart.xAxis && chart.xAxis.tickFormat) {\n      const isXAxisString = isVizTypes([VizType.BoxPlot]);\n      if (isXAxisString) {\n        chart.xAxis.tickFormat(d =>\n          d.length > MAX_NO_CHARACTERS_IN_LABEL\n            ? `${d.slice(0, Math.max(0, MAX_NO_CHARACTERS_IN_LABEL))}…`\n            : d,\n        );\n      } else {\n        chart.xAxis.tickFormat(xAxisFormatter);\n      }\n    }\n\n    let yAxisFormatter = getTimeOrNumberFormatter(yAxisFormat);\n    if (chart.yAxis && chart.yAxis.tickFormat) {\n      if (\n        (contribution || comparisonType === 'percentage') &&\n        (!yAxisFormat ||\n          yAxisFormat === NumberFormats.SMART_NUMBER ||\n          yAxisFormat === NumberFormats.SMART_NUMBER_SIGNED)\n      ) {\n        // When computing a \"Percentage\" or \"Contribution\" selected,\n        // force a percentage format if no custom formatting set\n        yAxisFormatter = getNumberFormatter(NumberFormats.PERCENT_1_POINT);\n      }\n      chart.yAxis.tickFormat(yAxisFormatter);\n    }\n    if (chart.y2Axis && chart.y2Axis.tickFormat) {\n      chart.y2Axis.tickFormat(yAxisFormatter);\n    }\n\n    if (chart.yAxis) {\n      chart.yAxis.ticks(5);\n    }\n    if (chart.y2Axis) {\n      chart.y2Axis.ticks(5);\n    }\n\n    // Set showMaxMin for all axis\n    setAxisShowMaxMin(chart.xAxis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.x2Axis, xAxisShowMinMax);\n    setAxisShowMaxMin(chart.yAxis, yAxisShowMinMax);\n    setAxisShowMaxMin(chart.y2Axis, yAxis2ShowMinMax || yAxisShowMinMax);\n\n    if (vizType === VizType.TimePivot) {\n      if (baseColor) {\n        const { r, g, b } = baseColor;\n        chart.color(d => {\n          const alpha = d.rank > 0 ? d.perc * 0.5 : 1;\n\n          return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        });\n      }\n\n      chart.useInteractiveGuideline(true);\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateTimePivotTooltip(d, xAxisFormatter, yAxisFormatter),\n      );\n    } else if (vizType !== VizType.Bullet) {\n      const colorFn = getScale(colorScheme);\n      chart.color(\n        d => d.color || colorFn(cleanColorInput(d[colorKey]), sliceId),\n      );\n    }\n\n    if (isVizTypes([VizType.Compare])) {\n      chart.interactiveLayer.tooltip.contentGenerator(d =>\n        generateCompareTooltipContent(d, yAxisFormatter),\n      );\n    }\n\n    // This is needed for correct chart dimensions if a chart is rendered in a hidden container\n    chart.width(width);\n    chart.height(height);\n\n    svg\n      .datum(data)\n      .transition()\n      .duration(500)\n      .attr('height', height)\n      .attr('width', width)\n      .call(chart);\n\n    // For log scale, only show 1, 10, 100, 1000, ...\n    if (yIsLogScale) {\n      chart.yAxis.tickFormat(d =>\n        d !== 0 && Math.log10(d) % 1 === 0 ? yAxisFormatter(d) : '',\n      );\n    }\n\n    if (xLabelRotation > 0) {\n      // shift labels to the left so they look better\n      const xTicks = svg.select('.nv-x.nv-axis > g').selectAll('g');\n      xTicks.selectAll('text').attr('dx', -6.5);\n    }\n\n    const applyYAxisBounds = () => {\n      if (\n        chart.yDomain &&\n        Array.isArray(yAxisBounds) &&\n        yAxisBounds.length === 2\n      ) {\n        const [customMin, customMax] = yAxisBounds;\n        const hasCustomMin = isDefined(customMin) && !Number.isNaN(customMin);\n        const hasCustomMax = isDefined(customMax) && !Number.isNaN(customMax);\n\n        if (hasCustomMin && hasCustomMax) {\n          // Override the y domain if there's both a custom min and max\n          chart.yDomain([customMin, customMax]);\n          chart.clipEdge(true);\n        } else if (hasCustomMin || hasCustomMax) {\n          // Only one of the bounds has been set, so we need to manually calculate the other one\n          const [trueMin, trueMax] = computeYDomain(data);\n          const min = hasCustomMin ? customMin : trueMin;\n          const max = hasCustomMax ? customMax : trueMax;\n          chart.yDomain([min, max]);\n          chart.clipEdge(true);\n        }\n      }\n    };\n    applyYAxisBounds();\n\n    // Also reapply on each state change to account for enabled/disabled series\n    if (chart.dispatch && chart.dispatch.stateChange) {\n      chart.dispatch.on('stateChange.applyYAxisBounds', applyYAxisBounds);\n    }\n\n    if (showMarkers) {\n      svg\n        .selectAll('.nv-point')\n        .style('stroke-opacity', 1)\n        .style('fill-opacity', 1);\n\n      // redo on legend toggle; nvd3 calls the callback *before* the line is\n      // drawn, so we need to add a small delay here\n      chart.dispatch.on('stateChange.showMarkers', () => {\n        setTimeout(() => {\n          svg\n            .selectAll('.nv-point')\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n        }, 10);\n      });\n    }\n\n    if (chart.yAxis !== undefined || chart.yAxis2 !== undefined) {\n      // Hack to adjust y axis left margin to accommodate long numbers\n      const marginPad = Math.ceil(\n        Math.min(maxWidth * (isExplore ? 0.01 : 0.03), MAX_MARGIN_PAD),\n      );\n      // Hack to adjust margins to accommodate long axis tick labels.\n      // - has to be done only after the chart has been rendered once\n      // - measure the width or height of the labels\n      // ---- (x axis labels are rotated 45 degrees so we use height),\n      // - adjust margins based on these measures and render again\n      const margins = chart.margin();\n      if (chart.xAxis) {\n        margins.bottom = 28;\n      }\n      const maxYAxisLabelWidth = getMaxLabelSize(\n        svg,\n        chart.yAxis2 ? 'nv-y1' : 'nv-y',\n      );\n      const maxXAxisLabelHeight = getMaxLabelSize(svg, 'nv-x');\n      margins.left = maxYAxisLabelWidth + marginPad;\n\n      if (yAxisLabel && yAxisLabel !== '') {\n        margins.left += 25;\n      }\n      if (showBarValue) {\n        // Add more margin to avoid label colliding with legend.\n        margins.top += 24;\n      }\n      if (xAxisShowMinMax) {\n        // If x bounds are shown, we need a right margin\n        margins.right = Math.max(20, maxXAxisLabelHeight / 2) + marginPad;\n      }\n      if (xLabelRotation === 45) {\n        margins.bottom =\n          maxXAxisLabelHeight * Math.sin((Math.PI * xLabelRotation) / 180) +\n          marginPad +\n          30;\n        margins.right =\n          maxXAxisLabelHeight * Math.cos((Math.PI * xLabelRotation) / 180) +\n          marginPad;\n      } else if (staggerLabels) {\n        margins.bottom = 40;\n      }\n\n      if (bottomMargin && bottomMargin !== 'auto') {\n        margins.bottom = parseInt(bottomMargin, 10);\n      }\n      if (leftMargin && leftMargin !== 'auto') {\n        margins.left = leftMargin;\n      }\n\n      if (xAxisLabel && xAxisLabel !== '' && chart.xAxis) {\n        margins.bottom += 25;\n        let distance = 0;\n        if (margins.bottom && !Number.isNaN(margins.bottom)) {\n          distance = margins.bottom - 45;\n        }\n        // nvd3 bug axisLabelDistance is disregarded on xAxis\n        // https://github.com/krispo/angular-nvd3/issues/90\n        chart.xAxis.axisLabel(xAxisLabel).axisLabelDistance(distance);\n      }\n\n      if (yAxisLabel && yAxisLabel !== '' && chart.yAxis) {\n        let distance = 0;\n        if (margins.left && !Number.isNaN(margins.left)) {\n          distance = margins.left - 70;\n        }\n        chart.yAxis.axisLabel(yAxisLabel).axisLabelDistance(distance);\n      }\n      if (isTimeSeries && annotationData && activeAnnotationLayers.length > 0) {\n        // Time series annotations add additional data\n        const timeSeriesAnnotations = activeAnnotationLayers\n          .filter(\n            layer => layer.annotationType === ANNOTATION_TYPES.TIME_SERIES,\n          )\n          .reduce(\n            (bushel, a) =>\n              bushel.concat(\n                (annotationData[a.name] || []).map(series => {\n                  if (!series) {\n                    return {};\n                  }\n                  const key = Array.isArray(series.key)\n                    ? `${a.name}, ${series.key.join(', ')}`\n                    : `${a.name}, ${series.key}`;\n\n                  return {\n                    ...series,\n                    key,\n                    color: a.color,\n                    strokeWidth: a.width,\n                    classed: `${a.opacity} ${a.style} nv-timeseries-annotation-layer showMarkers${a.showMarkers} hideLine${a.hideLine}`,\n                  };\n                }),\n              ),\n            [],\n          );\n        data.push(...timeSeriesAnnotations);\n      }\n\n      // Uniquely identify tooltips based on chartId so this chart instance only\n      // controls its own tooltips\n      if (chartId) {\n        if (chart && chart.interactiveLayer && chart.interactiveLayer.tooltip) {\n          chart.interactiveLayer.tooltip.classes([\n            generateTooltipClassName(chartId),\n          ]);\n        }\n\n        if (chart && chart.tooltip) {\n          chart.tooltip.classes([generateTooltipClassName(chartId)]);\n        }\n      }\n\n      // render chart\n      chart.margin(margins);\n      svg\n        .datum(data)\n        .transition()\n        .duration(500)\n        .attr('width', width)\n        .attr('height', height)\n        .call(chart);\n\n      // On scroll, hide (not remove) tooltips so they can reappear on hover.\n      // Throttle to only 4x/second.\n      window.addEventListener(\n        'scroll',\n        throttle(() => hideTooltips(false), 250),\n      );\n\n      // The below code should be run AFTER rendering because chart is updated in call()\n      if (isTimeSeries && activeAnnotationLayers.length > 0) {\n        // Formula annotations\n        const formulas = activeAnnotationLayers.filter(\n          a => a.annotationType === ANNOTATION_TYPES.FORMULA,\n        );\n\n        const xMax = chart.xAxis.scale().domain()[1].valueOf();\n        const xMin = chart.xAxis.scale().domain()[0].valueOf();\n        let xScale;\n        if (chart.xScale) {\n          xScale = chart.xScale();\n        } else if (chart.xAxis.scale) {\n          xScale = chart.xAxis.scale();\n        } else {\n          xScale = d3.scale.linear();\n        }\n        if (xScale && xScale.clamp) {\n          xScale.clamp(true);\n        }\n\n        if (formulas.length > 0) {\n          const xValues = [];\n          let period = Math.min(\n            ...data.map(d =>\n              Math.min(...d.values.slice(1).map((v, i) => v.x - d.values[i].x)),\n            ),\n          );\n          const dataPoints = (xMax - xMin) / (period || 1);\n          // make sure that there are enough data points and not too many\n          period = dataPoints < 100 ? (xMax - xMin) / 100 : period;\n          period = dataPoints > 500 ? (xMax - xMin) / 500 : period;\n          xValues.push(xMin);\n          for (let x = xMin; x < xMax; x += period) {\n            xValues.push(x);\n          }\n          xValues.push(xMax);\n\n          const formulaData = formulas.map(fo => {\n            const { value: expression } = fo;\n            return {\n              key: fo.name,\n              values: xValues.map(x => ({\n                x,\n                y: evalExpression(expression, x),\n              })),\n              color: fo.color,\n              strokeWidth: fo.width,\n              classed: `${fo.opacity} ${fo.style}`,\n            };\n          });\n          data.push(...formulaData);\n        }\n        const xAxis = chart.xAxis1 ? chart.xAxis1 : chart.xAxis;\n        const yAxis = chart.yAxis1 ? chart.yAxis1 : chart.yAxis;\n        const chartWidth = xAxis.scale().range()[1];\n        const annotationHeight = yAxis.scale().range()[0];\n\n        if (annotationData) {\n          // Event annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.EVENT &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add event annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-event-annotation-layer-${index}`);\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n\n              const tip = tipFactory({\n                ...e,\n                annotationTipClass: `arrow-down nv-event-annotation-layer-${config.sourceType}`,\n              });\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(dayjs.utc(r[e.timeColumn]));\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('line')\n                  .data(records)\n                  .enter()\n                  .append('line')\n                  .attr({\n                    x1: d => xScale(new Date(d[e.timeColumn])),\n                    y1: 0,\n                    x2: d => xScale(new Date(d[e.timeColumn])),\n                    y2: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke', aColor)\n                  .style('stroke-width', e.width)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.event-annotation', () => {\n                  annotations\n                    .selectAll('line')\n                    .data(records)\n                    .attr({\n                      x1: d => xScale(new Date(d[e.timeColumn])),\n                      y1: 0,\n                      x2: d => xScale(new Date(d[e.timeColumn])),\n                      y2: annotationHeight,\n                      opacity: d => {\n                        const x = xScale(new Date(d[e.timeColumn]));\n\n                        return x > 0 && x < chartWidth ? 1 : 0;\n                      },\n                    });\n                });\n              }\n            });\n\n          // Interval annotations\n          activeAnnotationLayers\n            .filter(\n              x =>\n                x.annotationType === ANNOTATION_TYPES.INTERVAL &&\n                annotationData &&\n                annotationData[x.name],\n            )\n            .forEach((config, index) => {\n              const e = applyNativeColumns(config);\n              // Add interval annotation layer\n              const annotations = d3\n                .select(element)\n                .select('.nv-wrap')\n                .append('g')\n                .attr('class', `nv-interval-annotation-layer-${index}`);\n\n              const aColor =\n                e.color || getColor(cleanColorInput(e.name), colorScheme);\n              const tip = tipFactory(e);\n\n              const records = (annotationData[e.name].records || [])\n                .map(r => {\n                  const timeValue = new Date(dayjs.utc(r[e.timeColumn]));\n                  const intervalEndValue = new Date(\n                    dayjs.utc(r[e.intervalEndColumn]),\n                  );\n\n                  return {\n                    ...r,\n                    [e.timeColumn]: timeValue,\n                    [e.intervalEndColumn]: intervalEndValue,\n                  };\n                })\n                .filter(\n                  record =>\n                    !Number.isNaN(record[e.timeColumn].getMilliseconds()) &&\n                    !Number.isNaN(\n                      record[e.intervalEndColumn].getMilliseconds(),\n                    ),\n                );\n\n              if (records.length > 0) {\n                annotations\n                  .selectAll('rect')\n                  .data(records)\n                  .enter()\n                  .append('rect')\n                  .attr({\n                    x: d =>\n                      Math.min(\n                        xScale(new Date(d[e.timeColumn])),\n                        xScale(new Date(d[e.intervalEndColumn])),\n                      ),\n                    y: 0,\n                    width: d =>\n                      Math.max(\n                        Math.abs(\n                          xScale(new Date(d[e.intervalEndColumn])) -\n                            xScale(new Date(d[e.timeColumn])),\n                        ),\n                        1,\n                      ),\n                    height: annotationHeight,\n                  })\n                  .attr('class', `${e.opacity} ${e.style}`)\n                  .style('stroke-width', e.width)\n                  .style('stroke', aColor)\n                  .style('fill', aColor)\n                  .style('fill-opacity', 0.2)\n                  .on('mouseover', tip.show)\n                  .on('mouseout', tip.hide)\n                  .call(tip);\n              }\n\n              // update annotation positions on brush event\n              if (chart.focus) {\n                chart.focus.dispatch.on('onBrush.interval-annotation', () => {\n                  annotations\n                    .selectAll('rect')\n                    .data(records)\n                    .attr({\n                      x: d => xScale(new Date(d[e.timeColumn])),\n                      width: d => {\n                        const x1 = xScale(new Date(d[e.timeColumn]));\n                        const x2 = xScale(new Date(d[e.intervalEndColumn]));\n\n                        return x2 - x1;\n                      },\n                    });\n                });\n              }\n            });\n        }\n\n        // rerender chart appended with annotation layer\n        svg.datum(data).attr('height', height).attr('width', width).call(chart);\n\n        // Display styles for Time Series Annotations\n        chart.dispatch.on('renderEnd.timeseries-annotation', () => {\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.showMarkerstrue .nv-point',\n          )\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 1);\n          d3.selectAll(\n            '.slice_container .nv-timeseries-annotation-layer.hideLinetrue',\n          ).style('stroke-width', 0);\n        });\n      }\n    }\n\n    wrapTooltip(chart);\n\n    return chart;\n  };\n\n  // Remove tooltips before rendering chart, if the chart is being re-rendered sometimes\n  // there are left over tooltips in the dom,\n  // this will clear them before rendering the chart again.\n  if (chartId) {\n    removeTooltip(chartId);\n  } else {\n    hideTooltips(true);\n  }\n\n  nv.addGraph(drawGraph);\n}\n\nnvd3Vis.displayName = 'NVD3';\nnvd3Vis.propTypes = propTypes;\nexport default nvd3Vis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}