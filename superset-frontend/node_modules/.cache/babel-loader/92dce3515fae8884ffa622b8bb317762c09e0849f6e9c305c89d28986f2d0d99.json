{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import copyTextToClipboard from 'src/utils/copy';\nimport { t, logging } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { MenuKeys } from 'src/dashboard/types';\nimport { shallowEqual, useSelector } from 'react-redux';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst ShareMenuItems = (props) => {\n  const { copyMenuItemTitle, emailMenuItemTitle, emailSubject, emailBody, addDangerToast, addSuccessToast, dashboardId, dashboardComponentId, title, disabled, ...rest } = props;\n  const { dataMask, activeTabs } = useSelector((state) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs\n  }), shallowEqual);\n  async function generateUrl() {\n    return getDashboardPermalink({\n      dashboardId,\n      dataMask,\n      activeTabs,\n      anchor: dashboardComponentId\n    });\n  }\n  async function onCopyLink() {\n    try {\n      await copyTextToClipboard(generateUrl);\n      addSuccessToast(t('Copied to clipboard!'));\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  async function onShareByEmail() {\n    try {\n      const encodedBody = encodeURIComponent(`${emailBody}${await generateUrl()}`);\n      const encodedSubject = encodeURIComponent(emailSubject);\n      window.location.href = `mailto:?Subject=${encodedSubject}%20&Body=${encodedBody}`;\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  return _jsxs(Menu.SubMenu, { title: title, disabled: disabled, ...rest, children: [\n    _jsx(Menu.Item, { onClick: () => onCopyLink(), children:\n      copyMenuItemTitle }, MenuKeys.CopyLink\n    ),\n    _jsx(Menu.Item, { onClick: () => onShareByEmail(), children:\n      emailMenuItemTitle }, MenuKeys.ShareByEmail\n    )] }, MenuKeys.Share\n  );\n};__signature__(ShareMenuItems, \"useSelector{{ dataMask, activeTabs }}\", () => [useSelector]);const _default =\nShareMenuItems;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ShareMenuItems, \"ShareMenuItems\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["copyTextToClipboard","t","logging","Menu","getDashboardPermalink","MenuKeys","shallowEqual","useSelector","jsx","_jsx","jsxs","_jsxs","ShareMenuItems","props","copyMenuItemTitle","emailMenuItemTitle","emailSubject","emailBody","addDangerToast","addSuccessToast","dashboardId","dashboardComponentId","title","disabled","rest","dataMask","activeTabs","state","dashboardState","generateUrl","anchor","onCopyLink","error","onShareByEmail","encodedBody","encodeURIComponent","encodedSubject","window","location","href","SubMenu","children","Item","onClick","CopyLink","ShareByEmail","Share","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ComponentProps, RefObject } from 'react';\nimport copyTextToClipboard from 'src/utils/copy';\nimport { t, logging } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { MenuKeys, RootState } from 'src/dashboard/types';\nimport { shallowEqual, useSelector } from 'react-redux';\n\ninterface ShareMenuItemProps extends ComponentProps<typeof Menu.SubMenu> {\n  url?: string;\n  copyMenuItemTitle: string;\n  emailMenuItemTitle: string;\n  emailSubject: string;\n  emailBody: string;\n  addDangerToast: Function;\n  addSuccessToast: Function;\n  dashboardId: string | number;\n  dashboardComponentId?: string;\n  copyMenuItemRef?: RefObject<any>;\n  shareByEmailMenuItemRef?: RefObject<any>;\n  selectedKeys?: string[];\n  setOpenKeys?: Function;\n  title: string;\n  disabled?: boolean;\n}\n\nconst ShareMenuItems = (props: ShareMenuItemProps) => {\n  const {\n    copyMenuItemTitle,\n    emailMenuItemTitle,\n    emailSubject,\n    emailBody,\n    addDangerToast,\n    addSuccessToast,\n    dashboardId,\n    dashboardComponentId,\n    title,\n    disabled,\n    ...rest\n  } = props;\n  const { dataMask, activeTabs } = useSelector(\n    (state: RootState) => ({\n      dataMask: state.dataMask,\n      activeTabs: state.dashboardState.activeTabs,\n    }),\n    shallowEqual,\n  );\n\n  async function generateUrl() {\n    return getDashboardPermalink({\n      dashboardId,\n      dataMask,\n      activeTabs,\n      anchor: dashboardComponentId,\n    });\n  }\n\n  async function onCopyLink() {\n    try {\n      await copyTextToClipboard(generateUrl);\n      addSuccessToast(t('Copied to clipboard!'));\n    } catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n\n  async function onShareByEmail() {\n    try {\n      const encodedBody = encodeURIComponent(\n        `${emailBody}${await generateUrl()}`,\n      );\n      const encodedSubject = encodeURIComponent(emailSubject);\n      window.location.href = `mailto:?Subject=${encodedSubject}%20&Body=${encodedBody}`;\n    } catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n\n  return (\n    <Menu.SubMenu\n      title={title}\n      key={MenuKeys.Share}\n      disabled={disabled}\n      {...rest}\n    >\n      <Menu.Item key={MenuKeys.CopyLink} onClick={() => onCopyLink()}>\n        {copyMenuItemTitle}\n      </Menu.Item>\n      <Menu.Item key={MenuKeys.ShareByEmail} onClick={() => onShareByEmail()}>\n        {emailMenuItemTitle}\n      </Menu.Item>\n    </Menu.SubMenu>\n  );\n};\nexport default ShareMenuItems;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}