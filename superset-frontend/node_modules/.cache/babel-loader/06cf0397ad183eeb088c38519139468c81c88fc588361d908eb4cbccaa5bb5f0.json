{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Fragment, useCallback, useState, useMemo, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { css, styled, t } from '@superset-ui/core';\nimport { Icons } from 'src/components/Icons';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport {\n  Draggable,\n  Droppable } from\n'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired\n};\n\nconst defaultProps = {};\n\nconst ColumnStyles = styled.div`\n  ${({ theme, editMode }) => css`\n    &.grid-column {\n      width: 100%;\n      position: relative;\n\n      & > :not(.hover-menu):not(:last-child) {\n        ${!editMode && `margin-bottom: ${theme.gridUnit * 4}px;`}\n      }\n    }\n\n    .dashboard--editing &:after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n      z-index: 1;\n      pointer-events: none;\n      border: 1px dashed ${theme.colors.grayscale.light2};\n    }\n    .dashboard--editing .resizable-container--resizing:hover > &:after,\n    .dashboard--editing .hover-menu:hover + &:after {\n      border: 1px dashed ${theme.colors.primary.base};\n      z-index: 2;\n    }\n\n    & .empty-droptarget {\n      &.droptarget-edge {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        &:first-child {\n          inset-block-start: 0;\n        }\n      }\n      &:first-child:not(.droptarget-edge) {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        width: 100%;\n        height: 100%;\n      }\n    }\n  `}\n`;\n\nconst emptyColumnContentStyles = (theme) => css`\n  min-height: ${theme.gridUnit * 25}px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nconst Column = (props) => {\n  const {\n    component: columnComponent,\n    parentComponent,\n    index,\n    availableColumnCount,\n    columnWidth,\n    minColumnWidth,\n    depth,\n    onResizeStart,\n    onResize,\n    onResizeStop,\n    handleComponentDrop,\n    editMode,\n    onChangeTab,\n    isComponentVisible,\n    deleteComponent,\n    id,\n    parentId,\n    updateComponents\n  } = props;\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(id, parentId);\n  }, [deleteComponent, id, parentId]);\n\n  const handleChangeFocus = useCallback((nextFocus) => {\n    setIsFocused(Boolean(nextFocus));\n  }, []);\n\n  const handleChangeBackground = useCallback(\n    (nextValue) => {\n      const metaKey = 'background';\n      if (nextValue && columnComponent.meta[metaKey] !== nextValue) {\n        updateComponents({\n          [columnComponent.id]: {\n            ...columnComponent,\n            meta: {\n              ...columnComponent.meta,\n              [metaKey]: nextValue\n            }\n          }\n        });\n      }\n    },\n    [columnComponent, updateComponents]\n  );\n\n  const columnItems = useMemo(\n    () => columnComponent.children || [],\n    [columnComponent.children]\n  );\n\n  const backgroundStyle = backgroundStyleOptions.find(\n    (opt) =>\n    opt.value === (columnComponent.meta.background || BACKGROUND_TRANSPARENT)\n  );\n\n  const renderChild = useCallback(\n    ({ dragSourceRef }) =>\n    _jsx(ResizableContainer, {\n      id: columnComponent.id,\n      adjustableWidth: true,\n      adjustableHeight: false,\n      widthStep: columnWidth,\n      widthMultiple: columnComponent.meta.width,\n      minWidthMultiple: minColumnWidth,\n      maxWidthMultiple:\n      availableColumnCount + (columnComponent.meta.width || 0),\n\n      onResizeStart: onResizeStart,\n      onResize: onResize,\n      onResizeStop: onResizeStop,\n      editMode: editMode, children:\n\n      _jsxs(WithPopoverMenu, {\n        isFocused: isFocused,\n        onChangeFocus: handleChangeFocus,\n        disableClick: true,\n        menuItems: [\n        _jsx(BackgroundStyleDropdown, {\n          id: `${columnComponent.id}-background`,\n          value: columnComponent.meta.background,\n          onChange: handleChangeBackground }\n        )],\n\n        editMode: editMode, children: [\n\n        editMode &&\n        _jsxs(HoverMenu, { innerRef: dragSourceRef, position: \"top\", children: [\n          _jsx(DragHandle, { position: \"top\" }),\n          _jsx(DeleteComponentButton, { onDelete: handleDeleteComponent }),\n          _jsx(IconButton, {\n            onClick: handleChangeFocus,\n            icon: _jsx(Icons.SettingOutlined, { iconSize: \"xl\" }) }\n          )] }\n        ),\n\n        _jsxs(ColumnStyles, {\n          className: cx('grid-column', backgroundStyle.className),\n          editMode: editMode, children: [\n\n          editMode &&\n          _jsx(Droppable, {\n            component: columnComponent,\n            parentComponent: columnComponent, ...(\n            columnItems.length === 0 ?\n            {\n              dropToChild: true\n            } :\n            {\n              component: columnItems[0]\n            }),\n            depth: depth,\n            index: 0,\n            orientation: \"column\",\n            onDrop: handleComponentDrop,\n            className: cx(\n              'empty-droptarget',\n              columnItems.length > 0 && 'droptarget-edge'\n            ),\n            editMode: true, children:\n\n            ({ dropIndicatorProps }) =>\n            dropIndicatorProps && _jsx(\"div\", { ...dropIndicatorProps }) }\n\n          ),\n\n          columnItems.length === 0 ?\n          _jsx(\"div\", { css: emptyColumnContentStyles, children: t('Empty column') }) :\n\n          columnItems.map((componentId, itemIndex) =>\n          _jsxs(Fragment, { children: [\n            _jsx(DashboardComponent, {\n              id: componentId,\n              parentId: columnComponent.id,\n              depth: depth + 1,\n              index: itemIndex,\n              availableColumnCount: columnComponent.meta.width,\n              columnWidth: columnWidth,\n              onResizeStart: onResizeStart,\n              onResize: onResize,\n              onResizeStop: onResizeStop,\n              isComponentVisible: isComponentVisible,\n              onChangeTab: onChangeTab }\n            ),\n            editMode &&\n            _jsx(Droppable, {\n              component: columnItems,\n              parentComponent: columnComponent,\n              depth: depth,\n              index: itemIndex + 1,\n              orientation: \"column\",\n              onDrop: handleComponentDrop,\n              className: cx(\n                'empty-droptarget',\n                itemIndex === columnItems.length - 1 &&\n                'droptarget-edge'\n              ),\n              editMode: true, children:\n\n              ({ dropIndicatorProps }) =>\n              dropIndicatorProps && _jsx(\"div\", { ...dropIndicatorProps }) }\n\n            )] }, componentId\n\n          )\n          )] }\n\n        )] }\n      ) }\n    ),\n\n    [\n    availableColumnCount,\n    backgroundStyle.className,\n    columnComponent,\n    columnItems,\n    columnWidth,\n    depth,\n    editMode,\n    handleChangeBackground,\n    handleChangeFocus,\n    handleComponentDrop,\n    handleDeleteComponent,\n    isComponentVisible,\n    isFocused,\n    minColumnWidth,\n    onChangeTab,\n    onResize,\n    onResizeStart,\n    onResizeStop]\n\n  );\n\n  return (\n    _jsx(Draggable, {\n      component: columnComponent,\n      parentComponent: parentComponent,\n      orientation: \"column\",\n      index: index,\n      depth: depth,\n      onDrop: handleComponentDrop,\n      editMode: editMode, children:\n\n      renderChild }\n    ));\n\n};__signature__(Column, \"useState{[isFocused, setIsFocused](false)}\\nuseCallback{handleDeleteComponent}\\nuseCallback{handleChangeFocus}\\nuseCallback{handleChangeBackground}\\nuseMemo{columnItems}\\nuseCallback{renderChild}\");\n\nColumn.propTypes = propTypes;\nColumn.defaultProps = defaultProps;const _default = /*#__PURE__*/\n\nmemo(Column);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(ColumnStyles, \"ColumnStyles\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(emptyColumnContentStyles, \"emptyColumnContentStyles\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(Column, \"Column\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Fragment","useCallback","useState","useMemo","memo","PropTypes","cx","css","styled","t","Icons","DashboardComponent","DeleteComponentButton","Draggable","Droppable","DragHandle","HoverMenu","IconButton","ResizableContainer","BackgroundStyleDropdown","WithPopoverMenu","backgroundStyleOptions","componentShape","BACKGROUND_TRANSPARENT","EMPTY_CONTAINER_Z_INDEX","jsx","_jsx","jsxs","_jsxs","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","editMode","bool","availableColumnCount","columnWidth","minColumnWidth","onResizeStart","func","onResize","onResizeStop","deleteComponent","handleComponentDrop","updateComponents","defaultProps","ColumnStyles","div","theme","gridUnit","colors","grayscale","light2","primary","base","emptyColumnContentStyles","text","label","Column","props","columnComponent","onChangeTab","isComponentVisible","isFocused","setIsFocused","handleDeleteComponent","handleChangeFocus","nextFocus","Boolean","handleChangeBackground","nextValue","metaKey","meta","columnItems","children","backgroundStyle","find","opt","value","background","renderChild","dragSourceRef","adjustableWidth","adjustableHeight","widthStep","widthMultiple","width","minWidthMultiple","maxWidthMultiple","onChangeFocus","disableClick","menuItems","onChange","innerRef","position","onDelete","onClick","icon","SettingOutlined","iconSize","className","length","dropToChild","orientation","onDrop","dropIndicatorProps","map","componentId","itemIndex","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Column.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Fragment, useCallback, useState, useMemo, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { css, styled, t } from '@superset-ui/core';\nimport { Icons } from 'src/components/Icons';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport {\n  Draggable,\n  Droppable,\n} from 'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {};\n\nconst ColumnStyles = styled.div`\n  ${({ theme, editMode }) => css`\n    &.grid-column {\n      width: 100%;\n      position: relative;\n\n      & > :not(.hover-menu):not(:last-child) {\n        ${!editMode && `margin-bottom: ${theme.gridUnit * 4}px;`}\n      }\n    }\n\n    .dashboard--editing &:after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n      z-index: 1;\n      pointer-events: none;\n      border: 1px dashed ${theme.colors.grayscale.light2};\n    }\n    .dashboard--editing .resizable-container--resizing:hover > &:after,\n    .dashboard--editing .hover-menu:hover + &:after {\n      border: 1px dashed ${theme.colors.primary.base};\n      z-index: 2;\n    }\n\n    & .empty-droptarget {\n      &.droptarget-edge {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        &:first-child {\n          inset-block-start: 0;\n        }\n      }\n      &:first-child:not(.droptarget-edge) {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        width: 100%;\n        height: 100%;\n      }\n    }\n  `}\n`;\n\nconst emptyColumnContentStyles = theme => css`\n  min-height: ${theme.gridUnit * 25}px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nconst Column = props => {\n  const {\n    component: columnComponent,\n    parentComponent,\n    index,\n    availableColumnCount,\n    columnWidth,\n    minColumnWidth,\n    depth,\n    onResizeStart,\n    onResize,\n    onResizeStop,\n    handleComponentDrop,\n    editMode,\n    onChangeTab,\n    isComponentVisible,\n    deleteComponent,\n    id,\n    parentId,\n    updateComponents,\n  } = props;\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(id, parentId);\n  }, [deleteComponent, id, parentId]);\n\n  const handleChangeFocus = useCallback(nextFocus => {\n    setIsFocused(Boolean(nextFocus));\n  }, []);\n\n  const handleChangeBackground = useCallback(\n    nextValue => {\n      const metaKey = 'background';\n      if (nextValue && columnComponent.meta[metaKey] !== nextValue) {\n        updateComponents({\n          [columnComponent.id]: {\n            ...columnComponent,\n            meta: {\n              ...columnComponent.meta,\n              [metaKey]: nextValue,\n            },\n          },\n        });\n      }\n    },\n    [columnComponent, updateComponents],\n  );\n\n  const columnItems = useMemo(\n    () => columnComponent.children || [],\n    [columnComponent.children],\n  );\n\n  const backgroundStyle = backgroundStyleOptions.find(\n    opt =>\n      opt.value === (columnComponent.meta.background || BACKGROUND_TRANSPARENT),\n  );\n\n  const renderChild = useCallback(\n    ({ dragSourceRef }) => (\n      <ResizableContainer\n        id={columnComponent.id}\n        adjustableWidth\n        adjustableHeight={false}\n        widthStep={columnWidth}\n        widthMultiple={columnComponent.meta.width}\n        minWidthMultiple={minColumnWidth}\n        maxWidthMultiple={\n          availableColumnCount + (columnComponent.meta.width || 0)\n        }\n        onResizeStart={onResizeStart}\n        onResize={onResize}\n        onResizeStop={onResizeStop}\n        editMode={editMode}\n      >\n        <WithPopoverMenu\n          isFocused={isFocused}\n          onChangeFocus={handleChangeFocus}\n          disableClick\n          menuItems={[\n            <BackgroundStyleDropdown\n              id={`${columnComponent.id}-background`}\n              value={columnComponent.meta.background}\n              onChange={handleChangeBackground}\n            />,\n          ]}\n          editMode={editMode}\n        >\n          {editMode && (\n            <HoverMenu innerRef={dragSourceRef} position=\"top\">\n              <DragHandle position=\"top\" />\n              <DeleteComponentButton onDelete={handleDeleteComponent} />\n              <IconButton\n                onClick={handleChangeFocus}\n                icon={<Icons.SettingOutlined iconSize=\"xl\" />}\n              />\n            </HoverMenu>\n          )}\n          <ColumnStyles\n            className={cx('grid-column', backgroundStyle.className)}\n            editMode={editMode}\n          >\n            {editMode && (\n              <Droppable\n                component={columnComponent}\n                parentComponent={columnComponent}\n                {...(columnItems.length === 0\n                  ? {\n                      dropToChild: true,\n                    }\n                  : {\n                      component: columnItems[0],\n                    })}\n                depth={depth}\n                index={0}\n                orientation=\"column\"\n                onDrop={handleComponentDrop}\n                className={cx(\n                  'empty-droptarget',\n                  columnItems.length > 0 && 'droptarget-edge',\n                )}\n                editMode\n              >\n                {({ dropIndicatorProps }) =>\n                  dropIndicatorProps && <div {...dropIndicatorProps} />\n                }\n              </Droppable>\n            )}\n            {columnItems.length === 0 ? (\n              <div css={emptyColumnContentStyles}>{t('Empty column')}</div>\n            ) : (\n              columnItems.map((componentId, itemIndex) => (\n                <Fragment key={componentId}>\n                  <DashboardComponent\n                    id={componentId}\n                    parentId={columnComponent.id}\n                    depth={depth + 1}\n                    index={itemIndex}\n                    availableColumnCount={columnComponent.meta.width}\n                    columnWidth={columnWidth}\n                    onResizeStart={onResizeStart}\n                    onResize={onResize}\n                    onResizeStop={onResizeStop}\n                    isComponentVisible={isComponentVisible}\n                    onChangeTab={onChangeTab}\n                  />\n                  {editMode && (\n                    <Droppable\n                      component={columnItems}\n                      parentComponent={columnComponent}\n                      depth={depth}\n                      index={itemIndex + 1}\n                      orientation=\"column\"\n                      onDrop={handleComponentDrop}\n                      className={cx(\n                        'empty-droptarget',\n                        itemIndex === columnItems.length - 1 &&\n                          'droptarget-edge',\n                      )}\n                      editMode\n                    >\n                      {({ dropIndicatorProps }) =>\n                        dropIndicatorProps && <div {...dropIndicatorProps} />\n                      }\n                    </Droppable>\n                  )}\n                </Fragment>\n              ))\n            )}\n          </ColumnStyles>\n        </WithPopoverMenu>\n      </ResizableContainer>\n    ),\n    [\n      availableColumnCount,\n      backgroundStyle.className,\n      columnComponent,\n      columnItems,\n      columnWidth,\n      depth,\n      editMode,\n      handleChangeBackground,\n      handleChangeFocus,\n      handleComponentDrop,\n      handleDeleteComponent,\n      isComponentVisible,\n      isFocused,\n      minColumnWidth,\n      onChangeTab,\n      onResize,\n      onResizeStart,\n      onResizeStop,\n    ],\n  );\n\n  return (\n    <Draggable\n      component={columnComponent}\n      parentComponent={parentComponent}\n      orientation=\"column\"\n      index={index}\n      depth={depth}\n      onDrop={handleComponentDrop}\n      editMode={editMode}\n    >\n      {renderChild}\n    </Draggable>\n  );\n};\n\nColumn.propTypes = propTypes;\nColumn.defaultProps = defaultProps;\n\nexport default memo(Column);\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,QAAQ,OAAO;AACtE,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,EAAEC,MAAM,EAAEC,CAAC,QAAQ,mBAAmB;AAClD,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,OAAOC,kBAAkB,MAAM,6CAA6C;AAC5E,OAAOC,qBAAqB,MAAM,gDAAgD;AAClF;EACEC,SAAS;EACTC,SAAS;AACJ,4CAA4C;AACnD,OAAOC,UAAU,MAAM,yCAAyC;AAChE,OAAOC,SAAS,MAAM,yCAAyC;AAC/D,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,kBAAkB,MAAM,uDAAuD;AACtF,OAAOC,uBAAuB,MAAM,uDAAuD;AAC3F,OAAOC,eAAe,MAAM,+CAA+C;AAC3E,OAAOC,sBAAsB,MAAM,2CAA2C;AAC9E,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,SAASC,uBAAuB,QAAQ,yBAAyB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;;AAElE,MAAMC,SAAS,GAAG;EAChBC,EAAE,EAAEzB,SAAS,CAAC0B,MAAM,CAACC,UAAU;EAC/BC,QAAQ,EAAE5B,SAAS,CAAC0B,MAAM,CAACC,UAAU;EACrCE,SAAS,EAAEZ,cAAc,CAACU,UAAU;EACpCG,eAAe,EAAEb,cAAc,CAACU,UAAU;EAC1CI,KAAK,EAAE/B,SAAS,CAACgC,MAAM,CAACL,UAAU;EAClCM,KAAK,EAAEjC,SAAS,CAACgC,MAAM,CAACL,UAAU;EAClCO,QAAQ,EAAElC,SAAS,CAACmC,IAAI,CAACR,UAAU;;EAEnC;EACAS,oBAAoB,EAAEpC,SAAS,CAACgC,MAAM,CAACL,UAAU;EACjDU,WAAW,EAAErC,SAAS,CAACgC,MAAM,CAACL,UAAU;EACxCW,cAAc,EAAEtC,SAAS,CAACgC,MAAM,CAACL,UAAU;EAC3CY,aAAa,EAAEvC,SAAS,CAACwC,IAAI,CAACb,UAAU;EACxCc,QAAQ,EAAEzC,SAAS,CAACwC,IAAI,CAACb,UAAU;EACnCe,YAAY,EAAE1C,SAAS,CAACwC,IAAI,CAACb,UAAU;;EAEvC;EACAgB,eAAe,EAAE3C,SAAS,CAACwC,IAAI,CAACb,UAAU;EAC1CiB,mBAAmB,EAAE5C,SAAS,CAACwC,IAAI,CAACb,UAAU;EAC9CkB,gBAAgB,EAAE7C,SAAS,CAACwC,IAAI,CAACb;AACnC,CAAC;;AAED,MAAMmB,YAAY,GAAG,CAAC,CAAC;;AAEvB,MAAMC,YAAY,GAAG5C,MAAM,CAAC6C,GAAG;AAC/B,IAAI,CAAC,EAAEC,KAAK,EAAEf,QAAQ,CAAC,CAAC,KAAKhC,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,UAAU,CAACgC,QAAQ,IAAI,kBAAkBe,KAAK,CAACC,QAAQ,GAAG,CAAC,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2BD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,MAAM;AACxD;AACA;AACA;AACA,2BAA2BJ,KAAK,CAACE,MAAM,CAACG,OAAO,CAACC,IAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBpC,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBA,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED,MAAMqC,wBAAwB,GAAGA,CAAAP,KAAK,KAAI/C,GAAG;AAC7C,gBAAgB+C,KAAK,CAACC,QAAQ,GAAG,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA,WAAWD,KAAK,CAACE,MAAM,CAACM,IAAI,CAACC,KAAK;AAClC,CAAC;;AAED,MAAMC,MAAM,GAAGA,CAAAC,KAAK,KAAI;EACtB,MAAM;IACJ/B,SAAS,EAAEgC,eAAe;IAC1B/B,eAAe;IACfC,KAAK;IACLK,oBAAoB;IACpBC,WAAW;IACXC,cAAc;IACdL,KAAK;IACLM,aAAa;IACbE,QAAQ;IACRC,YAAY;IACZE,mBAAmB;IACnBV,QAAQ;IACR4B,WAAW;IACXC,kBAAkB;IAClBpB,eAAe;IACflB,EAAE;IACFG,QAAQ;IACRiB;EACF,CAAC,GAAGe,KAAK;;EAET,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;;EAEjD,MAAMqE,qBAAqB,GAAGtE,WAAW,CAAC,MAAM;IAC9C+C,eAAe,CAAClB,EAAE,EAAEG,QAAQ,CAAC;EAC/B,CAAC,EAAE,CAACe,eAAe,EAAElB,EAAE,EAAEG,QAAQ,CAAC,CAAC;;EAEnC,MAAMuC,iBAAiB,GAAGvE,WAAW,CAAC,CAAAwE,SAAS,KAAI;IACjDH,YAAY,CAACI,OAAO,CAACD,SAAS,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAME,sBAAsB,GAAG1E,WAAW;IACxC,CAAA2E,SAAS,KAAI;MACX,MAAMC,OAAO,GAAG,YAAY;MAC5B,IAAID,SAAS,IAAIV,eAAe,CAACY,IAAI,CAACD,OAAO,CAAC,KAAKD,SAAS,EAAE;QAC5D1B,gBAAgB,CAAC;UACf,CAACgB,eAAe,CAACpC,EAAE,GAAG;YACpB,GAAGoC,eAAe;YAClBY,IAAI,EAAE;cACJ,GAAGZ,eAAe,CAACY,IAAI;cACvB,CAACD,OAAO,GAAGD;YACb;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACD,CAACV,eAAe,EAAEhB,gBAAgB;EACpC,CAAC;;EAED,MAAM6B,WAAW,GAAG5E,OAAO;IACzB,MAAM+D,eAAe,CAACc,QAAQ,IAAI,EAAE;IACpC,CAACd,eAAe,CAACc,QAAQ;EAC3B,CAAC;;EAED,MAAMC,eAAe,GAAG5D,sBAAsB,CAAC6D,IAAI;IACjD,CAAAC,GAAG;IACDA,GAAG,CAACC,KAAK,MAAMlB,eAAe,CAACY,IAAI,CAACO,UAAU,IAAI9D,sBAAsB;EAC5E,CAAC;;EAED,MAAM+D,WAAW,GAAGrF,WAAW;IAC7B,CAAC,EAAEsF,aAAa,CAAC,CAAC;IAChB7D,IAAA,CAACR,kBAAkB;MACjBY,EAAE,EAAEoC,eAAe,CAACpC,EAAG;MACvB0D,eAAe;MACfC,gBAAgB,EAAE,KAAM;MACxBC,SAAS,EAAEhD,WAAY;MACvBiD,aAAa,EAAEzB,eAAe,CAACY,IAAI,CAACc,KAAM;MAC1CC,gBAAgB,EAAElD,cAAe;MACjCmD,gBAAgB;MACdrD,oBAAoB,IAAIyB,eAAe,CAACY,IAAI,CAACc,KAAK,IAAI,CAAC,CACxD;;MACDhD,aAAa,EAAEA,aAAc;MAC7BE,QAAQ,EAAEA,QAAS;MACnBC,YAAY,EAAEA,YAAa;MAC3BR,QAAQ,EAAEA,QAAS,EAAAyC,QAAA;;MAEnBpD,KAAA,CAACR,eAAe;QACdiD,SAAS,EAAEA,SAAU;QACrB0B,aAAa,EAAEvB,iBAAkB;QACjCwB,YAAY;QACZC,SAAS,EAAE;QACTvE,IAAA,CAACP,uBAAuB;UACtBW,EAAE,EAAE,GAAGoC,eAAe,CAACpC,EAAE,aAAc;UACvCsD,KAAK,EAAElB,eAAe,CAACY,IAAI,CAACO,UAAW;UACvCa,QAAQ,EAAEvB,sBAAuB;QAClC,CAAC,CACF;;QACFpC,QAAQ,EAAEA,QAAS,EAAAyC,QAAA;;QAElBzC,QAAQ;QACPX,KAAA,CAACZ,SAAS,IAACmF,QAAQ,EAAEZ,aAAc,EAACa,QAAQ,EAAC,KAAK,EAAApB,QAAA;UAChDtD,IAAA,CAACX,UAAU,IAACqF,QAAQ,EAAC,KAAK,EAAE,CAAC;UAC7B1E,IAAA,CAACd,qBAAqB,IAACyF,QAAQ,EAAE9B,qBAAsB,EAAE,CAAC;UAC1D7C,IAAA,CAACT,UAAU;YACTqF,OAAO,EAAE9B,iBAAkB;YAC3B+B,IAAI,EAAE7E,IAAA,CAAChB,KAAK,CAAC8F,eAAe,IAACC,QAAQ,EAAC,IAAI,EAAE,CAAE;UAC/C,CAAC;QACO,CACZ;;QACD7E,KAAA,CAACwB,YAAY;UACXsD,SAAS,EAAEpG,EAAE,CAAC,aAAa,EAAE2E,eAAe,CAACyB,SAAS,CAAE;UACxDnE,QAAQ,EAAEA,QAAS,EAAAyC,QAAA;;UAElBzC,QAAQ;UACPb,IAAA,CAACZ,SAAS;YACRoB,SAAS,EAAEgC,eAAgB;YAC3B/B,eAAe,EAAE+B,eAAgB;YAC5Ba,WAAW,CAAC4B,MAAM,KAAK,CAAC;YACzB;cACEC,WAAW,EAAE;YACf,CAAC;YACD;cACE1E,SAAS,EAAE6C,WAAW,CAAC,CAAC;YAC1B,CAAC;YACLzC,KAAK,EAAEA,KAAM;YACbF,KAAK,EAAE,CAAE;YACTyE,WAAW,EAAC,QAAQ;YACpBC,MAAM,EAAE7D,mBAAoB;YAC5ByD,SAAS,EAAEpG,EAAE;cACX,kBAAkB;cAClByE,WAAW,CAAC4B,MAAM,GAAG,CAAC,IAAI;YAC5B,CAAE;YACFpE,QAAQ,QAAAyC,QAAA;;YAEPA,CAAC,EAAE+B,kBAAkB,CAAC,CAAC;YACtBA,kBAAkB,IAAIrF,IAAA,aAASqF,kBAAkB,EAAG,CAAC;;UAE9C,CACZ;;UACAhC,WAAW,CAAC4B,MAAM,KAAK,CAAC;UACvBjF,IAAA,UAAKnB,GAAG,EAAEsD,wBAAyB,EAAAmB,QAAA,EAAEvE,CAAC,CAAC,cAAc,CAAC,EAAM,CAAC;;UAE7DsE,WAAW,CAACiC,GAAG,CAAC,CAACC,WAAW,EAAEC,SAAS;UACrCtF,KAAA,CAAC5B,QAAQ,IAAAgF,QAAA;YACPtD,IAAA,CAACf,kBAAkB;cACjBmB,EAAE,EAAEmF,WAAY;cAChBhF,QAAQ,EAAEiC,eAAe,CAACpC,EAAG;cAC7BQ,KAAK,EAAEA,KAAK,GAAG,CAAE;cACjBF,KAAK,EAAE8E,SAAU;cACjBzE,oBAAoB,EAAEyB,eAAe,CAACY,IAAI,CAACc,KAAM;cACjDlD,WAAW,EAAEA,WAAY;cACzBE,aAAa,EAAEA,aAAc;cAC7BE,QAAQ,EAAEA,QAAS;cACnBC,YAAY,EAAEA,YAAa;cAC3BqB,kBAAkB,EAAEA,kBAAmB;cACvCD,WAAW,EAAEA,WAAY;YAC1B,CAAC;YACD5B,QAAQ;YACPb,IAAA,CAACZ,SAAS;cACRoB,SAAS,EAAE6C,WAAY;cACvB5C,eAAe,EAAE+B,eAAgB;cACjC5B,KAAK,EAAEA,KAAM;cACbF,KAAK,EAAE8E,SAAS,GAAG,CAAE;cACrBL,WAAW,EAAC,QAAQ;cACpBC,MAAM,EAAE7D,mBAAoB;cAC5ByD,SAAS,EAAEpG,EAAE;gBACX,kBAAkB;gBAClB4G,SAAS,KAAKnC,WAAW,CAAC4B,MAAM,GAAG,CAAC;gBAClC;cACJ,CAAE;cACFpE,QAAQ,QAAAyC,QAAA;;cAEPA,CAAC,EAAE+B,kBAAkB,CAAC,CAAC;cACtBA,kBAAkB,IAAIrF,IAAA,aAASqF,kBAAkB,EAAG,CAAC;;YAE9C,CACZ,KAjCYE;;UAkCL;UACX,CACF;;QACW,CAAC;MACA,CAAC;IACA,CACrB;;IACD;IACExE,oBAAoB;IACpBwC,eAAe,CAACyB,SAAS;IACzBxC,eAAe;IACfa,WAAW;IACXrC,WAAW;IACXJ,KAAK;IACLC,QAAQ;IACRoC,sBAAsB;IACtBH,iBAAiB;IACjBvB,mBAAmB;IACnBsB,qBAAqB;IACrBH,kBAAkB;IAClBC,SAAS;IACT1B,cAAc;IACdwB,WAAW;IACXrB,QAAQ;IACRF,aAAa;IACbG,YAAY;;EAEhB,CAAC;;EAED;IACErB,IAAA,CAACb,SAAS;MACRqB,SAAS,EAAEgC,eAAgB;MAC3B/B,eAAe,EAAEA,eAAgB;MACjC0E,WAAW,EAAC,QAAQ;MACpBzE,KAAK,EAAEA,KAAM;MACbE,KAAK,EAAEA,KAAM;MACbwE,MAAM,EAAE7D,mBAAoB;MAC5BV,QAAQ,EAAEA,QAAS,EAAAyC,QAAA;;MAElBM,WAAW;IACH,CAAC;;AAEhB,CAAC,CAAC6B,aAAA,CAlNInD,MAAM;;AAoNZA,MAAM,CAACnC,SAAS,GAAGA,SAAS;AAC5BmC,MAAM,CAACb,YAAY,GAAGA,YAAY,CAAC,MAAAiE,QAAA;;AAEpBhH,IAAI,CAAC4D,MAAM,CAAC,CAA3B,eAAAoD,QAAA,CAA4B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxStB5F,SAAS,gHAAAwF,cAAA,CAAAI,QAAA,CAuBTtE,YAAY,mHAAAkE,cAAA,CAAAI,QAAA,CAEZrE,YAAY,mHAAAiE,cAAA,CAAAI,QAAA,CA8CZ5D,wBAAwB,+HAAAwD,cAAA,CAAAI,QAAA,CAUxBzD,MAAM,6GAAAqD,cAAA,CAAAI,QAAA,CAAAL,QAAA,sIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}