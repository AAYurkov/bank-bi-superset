{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TABS_TYPE } from './componentTypes';\nimport { DROP_LEFT, DROP_RIGHT } from './getDropPosition';\n\nexport function reorder(list, startIndex, endIndex) {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\nexport default function reorderItem({\n  entitiesMap,\n  source,\n  destination,\n  position\n}) {\n  const current = [...entitiesMap[source.id].children];\n  const next = [...entitiesMap[destination.id].children];\n  const target = current[source.index];\n\n  const isSameSource = source.id === destination.id;\n  const isTabsType = source.type && destination.type === TABS_TYPE;\n\n  // moving to same list\n  let dropIndex = destination.index;\n\n  if (isSameSource) {\n    if (isTabsType) {\n      if (position === DROP_LEFT) {\n        dropIndex = Math.max(dropIndex, 0);\n      } else if (position === DROP_RIGHT) {\n        dropIndex += 1;\n      }\n\n      const isRightPosition =\n      position === DROP_RIGHT && source.index === destination.index + 1;\n      const isLeftPosition =\n      position === DROP_LEFT && source.index === destination.index - 1;\n\n      const sameTabSourceIndex = isRightPosition || isLeftPosition;\n\n      if (sameTabSourceIndex) {\n        // If the source tab is dropped to be the same index as the source\n        // tab, no change is needed in entitiesMap\n        return entitiesMap;\n      }\n\n      // Adjust dropIndex to account for the source tab being removed\n      if (dropIndex > source.index) {\n        dropIndex -= 1;\n      }\n    }\n    const reordered = reorder(current, source.index, dropIndex);\n\n    const result = {\n      ...entitiesMap,\n      [source.id]: {\n        ...entitiesMap[source.id],\n        children: reordered\n      }\n    };\n\n    return result;\n  }\n\n  if (isTabsType) {\n    // Ensure the dropIndex is within the bounds of the destination children\n    if (position === DROP_LEFT) {\n      dropIndex = Math.max(dropIndex, 0);\n    } else if (position === DROP_RIGHT) {\n      dropIndex = Math.min(dropIndex + 1, current.length - 1);\n    }\n  }\n\n  // moving to different list\n  current.splice(source.index, 1); // remove from original\n  next.splice(dropIndex, 0, target); // insert into next\n\n  const result = {\n    ...entitiesMap,\n    [source.id]: {\n      ...entitiesMap[source.id],\n      children: current\n    },\n    [destination.id]: {\n      ...entitiesMap[destination.id],\n      children: next\n    }\n  };\n\n  return result;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(reorder, \"reorder\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/dnd-reorder.js\");reactHotLoader.register(reorderItem, \"reorderItem\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/dnd-reorder.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["TABS_TYPE","DROP_LEFT","DROP_RIGHT","reorder","list","startIndex","endIndex","result","removed","splice","reorderItem","entitiesMap","source","destination","position","current","id","children","next","target","index","isSameSource","isTabsType","type","dropIndex","Math","max","isRightPosition","isLeftPosition","sameTabSourceIndex","reordered","min","length","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/util/dnd-reorder.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { TABS_TYPE } from './componentTypes';\nimport { DROP_LEFT, DROP_RIGHT } from './getDropPosition';\n\nexport function reorder(list, startIndex, endIndex) {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n}\n\nexport default function reorderItem({\n  entitiesMap,\n  source,\n  destination,\n  position,\n}) {\n  const current = [...entitiesMap[source.id].children];\n  const next = [...entitiesMap[destination.id].children];\n  const target = current[source.index];\n\n  const isSameSource = source.id === destination.id;\n  const isTabsType = source.type && destination.type === TABS_TYPE;\n\n  // moving to same list\n  let dropIndex = destination.index;\n\n  if (isSameSource) {\n    if (isTabsType) {\n      if (position === DROP_LEFT) {\n        dropIndex = Math.max(dropIndex, 0);\n      } else if (position === DROP_RIGHT) {\n        dropIndex += 1;\n      }\n\n      const isRightPosition =\n        position === DROP_RIGHT && source.index === destination.index + 1;\n      const isLeftPosition =\n        position === DROP_LEFT && source.index === destination.index - 1;\n\n      const sameTabSourceIndex = isRightPosition || isLeftPosition;\n\n      if (sameTabSourceIndex) {\n        // If the source tab is dropped to be the same index as the source\n        // tab, no change is needed in entitiesMap\n        return entitiesMap;\n      }\n\n      // Adjust dropIndex to account for the source tab being removed\n      if (dropIndex > source.index) {\n        dropIndex -= 1;\n      }\n    }\n    const reordered = reorder(current, source.index, dropIndex);\n\n    const result = {\n      ...entitiesMap,\n      [source.id]: {\n        ...entitiesMap[source.id],\n        children: reordered,\n      },\n    };\n\n    return result;\n  }\n\n  if (isTabsType) {\n    // Ensure the dropIndex is within the bounds of the destination children\n    if (position === DROP_LEFT) {\n      dropIndex = Math.max(dropIndex, 0);\n    } else if (position === DROP_RIGHT) {\n      dropIndex = Math.min(dropIndex + 1, current.length - 1);\n    }\n  }\n\n  // moving to different list\n  current.splice(source.index, 1); // remove from original\n  next.splice(dropIndex, 0, target); // insert into next\n\n  const result = {\n    ...entitiesMap,\n    [source.id]: {\n      ...entitiesMap[source.id],\n      children: current,\n    },\n    [destination.id]: {\n      ...entitiesMap[destination.id],\n      children: next,\n    },\n  };\n\n  return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}