{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getColorFormatters } from '@superset-ui/chart-controls';\nimport { GenericDataType, getMetricLabel, extractTimegrain, getValueFormatter } from '@superset-ui/core';\nimport { getDateFormatter, parseMetricValue } from '../utils';\nexport default function transformProps(chartProps) {var _chartProps$datasourc, _metricEntry, _getColorFormatters;\n  const { width, height, queriesData, formData, rawFormData, hooks, datasource: { currencyFormats = {}, columnFormats = {} } } = chartProps;\n  const { headerFontSize, metric = 'value', subtitle, subtitleFontSize, forceTimestampFormatting, timeFormat, yAxisFormat, conditionalFormatting, currencyFormat, subheader, subheaderFontSize } = formData;\n  const refs = {};\n  const { data = [], coltypes = [] } = queriesData[0];\n  const granularity = extractTimegrain(rawFormData);\n  const metricName = getMetricLabel(metric);\n  const formattedSubtitle = subtitle != null && subtitle.trim() ? subtitle : subheader || '';\n  const formattedSubtitleFontSize = subtitle != null && subtitle.trim() ?\n  subtitleFontSize != null ? subtitleFontSize : 1 :\n  subheaderFontSize != null ? subheaderFontSize : 1;\n  const bigNumber = data.length === 0 ? null : parseMetricValue(data[0][metricName]);\n  let metricEntry;\n  if ((_chartProps$datasourc = chartProps.datasource) != null && _chartProps$datasourc.metrics) {\n    metricEntry = chartProps.datasource.metrics.find((metricItem) => metricItem.metric_name === metric);\n  }\n  const formatTime = getDateFormatter(timeFormat, granularity, (_metricEntry = metricEntry) == null ? void 0 : _metricEntry.d3format);\n  const numberFormatter = getValueFormatter(metric, currencyFormats, columnFormats, yAxisFormat, currencyFormat);\n  const headerFormatter = coltypes[0] === GenericDataType.Temporal ||\n  coltypes[0] === GenericDataType.String ||\n  forceTimestampFormatting ?\n  formatTime :\n  numberFormatter;\n  const { onContextMenu } = hooks;\n  const defaultColorFormatters = [];\n  const colorThresholdFormatters = (_getColorFormatters = getColorFormatters(conditionalFormatting, data, false)) != null ? _getColorFormatters :\n  defaultColorFormatters;\n  return {\n    width,\n    height,\n    bigNumber,\n    headerFormatter,\n    headerFontSize,\n    subheaderFontSize,\n    subtitleFontSize: formattedSubtitleFontSize,\n    subtitle: formattedSubtitle,\n    onContextMenu,\n    refs,\n    colorThresholdFormatters\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(transformProps, \"transformProps\", \"/Users/aryurkov/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberTotal/transformProps.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getColorFormatters","GenericDataType","getMetricLabel","extractTimegrain","getValueFormatter","getDateFormatter","parseMetricValue","transformProps","chartProps","_chartProps$datasourc","_metricEntry","_getColorFormatters","width","height","queriesData","formData","rawFormData","hooks","datasource","currencyFormats","columnFormats","headerFontSize","metric","subtitle","subtitleFontSize","forceTimestampFormatting","timeFormat","yAxisFormat","conditionalFormatting","currencyFormat","subheader","subheaderFontSize","refs","data","coltypes","granularity","metricName","formattedSubtitle","trim","formattedSubtitleFontSize","bigNumber","length","metricEntry","metrics","find","metricItem","metric_name","formatTime","d3format","numberFormatter","headerFormatter","Temporal","String","onContextMenu","defaultColorFormatters","colorThresholdFormatters","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberTotal/transformProps.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ColorFormatters,\n  getColorFormatters,\n  Metric,\n} from '@superset-ui/chart-controls';\nimport {\n  GenericDataType,\n  getMetricLabel,\n  extractTimegrain,\n  QueryFormData,\n  getValueFormatter,\n} from '@superset-ui/core';\nimport { BigNumberTotalChartProps, BigNumberVizProps } from '../types';\nimport { getDateFormatter, parseMetricValue } from '../utils';\nimport { Refs } from '../../types';\n\nexport default function transformProps(\n  chartProps: BigNumberTotalChartProps,\n): BigNumberVizProps {\n  const {\n    width,\n    height,\n    queriesData,\n    formData,\n    rawFormData,\n    hooks,\n    datasource: { currencyFormats = {}, columnFormats = {} },\n  } = chartProps;\n  const {\n    headerFontSize,\n    metric = 'value',\n    subtitle,\n    subtitleFontSize,\n    forceTimestampFormatting,\n    timeFormat,\n    yAxisFormat,\n    conditionalFormatting,\n    currencyFormat,\n    subheader,\n    subheaderFontSize,\n  } = formData;\n  const refs: Refs = {};\n  const { data = [], coltypes = [] } = queriesData[0];\n  const granularity = extractTimegrain(rawFormData as QueryFormData);\n  const metricName = getMetricLabel(metric);\n  const formattedSubtitle = subtitle?.trim() ? subtitle : subheader || '';\n  const formattedSubtitleFontSize = subtitle?.trim()\n    ? (subtitleFontSize ?? 1)\n    : (subheaderFontSize ?? 1);\n  const bigNumber =\n    data.length === 0 ? null : parseMetricValue(data[0][metricName]);\n\n  let metricEntry: Metric | undefined;\n  if (chartProps.datasource?.metrics) {\n    metricEntry = chartProps.datasource.metrics.find(\n      metricItem => metricItem.metric_name === metric,\n    );\n  }\n\n  const formatTime = getDateFormatter(\n    timeFormat,\n    granularity,\n    metricEntry?.d3format,\n  );\n\n  const numberFormatter = getValueFormatter(\n    metric,\n    currencyFormats,\n    columnFormats,\n    yAxisFormat,\n    currencyFormat,\n  );\n\n  const headerFormatter =\n    coltypes[0] === GenericDataType.Temporal ||\n    coltypes[0] === GenericDataType.String ||\n    forceTimestampFormatting\n      ? formatTime\n      : numberFormatter;\n\n  const { onContextMenu } = hooks;\n\n  const defaultColorFormatters = [] as ColorFormatters;\n\n  const colorThresholdFormatters =\n    getColorFormatters(conditionalFormatting, data, false) ??\n    defaultColorFormatters;\n\n  return {\n    width,\n    height,\n    bigNumber,\n    headerFormatter,\n    headerFontSize,\n    subheaderFontSize,\n    subtitleFontSize: formattedSubtitleFontSize,\n    subtitle: formattedSubtitle,\n    onContextMenu,\n    refs,\n    colorThresholdFormatters,\n  };\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAEEA,kBAAkB,QAEb,6BAA6B;AACpC,SACEC,eAAe,EACfC,cAAc,EACdC,gBAAgB,EAEhBC,iBAAiB,QACZ,mBAAmB;AAE1B,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,UAAU;AAG7D,eAAc,SAAUC,cAAcA,CACpCC,UAAoC,OAAAC,qBAAA,EAAAC,YAAA,EAAAC,mBAAA;EAEpC,MAAM,EACJC,KAAK,EACLC,MAAM,EACNC,WAAW,EACXC,QAAQ,EACRC,WAAW,EACXC,KAAK,EACLC,UAAU,EAAE,EAAEC,eAAe,GAAG,EAAE,EAAEC,aAAa,GAAG,EAAE,EAAE,EACzD,GAAGZ,UAAU;EACd,MAAM,EACJa,cAAc,EACdC,MAAM,GAAG,OAAO,EAChBC,QAAQ,EACRC,gBAAgB,EAChBC,wBAAwB,EACxBC,UAAU,EACVC,WAAW,EACXC,qBAAqB,EACrBC,cAAc,EACdC,SAAS,EACTC,iBAAiB,EAClB,GAAGhB,QAAQ;EACZ,MAAMiB,IAAI,GAAS,EAAE;EACrB,MAAM,EAAEC,IAAI,GAAG,EAAE,EAAEC,QAAQ,GAAG,EAAE,EAAE,GAAGpB,WAAW,CAAC,CAAC,CAAC;EACnD,MAAMqB,WAAW,GAAGhC,gBAAgB,CAACa,WAA4B,CAAC;EAClE,MAAMoB,UAAU,GAAGlC,cAAc,CAACoB,MAAM,CAAC;EACzC,MAAMe,iBAAiB,GAAGd,QAAQ,YAARA,QAAQ,CAAEe,IAAI,EAAE,GAAGf,QAAQ,GAAGO,SAAS,IAAI,EAAE;EACvE,MAAMS,yBAAyB,GAAGhB,QAAQ,YAARA,QAAQ,CAAEe,IAAI,EAAE;EAC7Cd,gBAAgB,WAAhBA,gBAAgB,GAAI,CAAC;EACrBO,iBAAiB,WAAjBA,iBAAiB,GAAI,CAAE;EAC5B,MAAMS,SAAS,GACbP,IAAI,CAACQ,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGnC,gBAAgB,CAAC2B,IAAI,CAAC,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC;EAElE,IAAIM,WAA+B;EACnC,KAAAjC,qBAAA,GAAID,UAAU,CAACU,UAAU,aAArBT,qBAAA,CAAuBkC,OAAO,EAAE;IAClCD,WAAW,GAAGlC,UAAU,CAACU,UAAU,CAACyB,OAAO,CAACC,IAAI,CAC9C,CAAAC,UAAU,KAAIA,UAAU,CAACC,WAAW,KAAKxB,MAAM,CAChD;;EAGH,MAAMyB,UAAU,GAAG1C,gBAAgB,CACjCqB,UAAU,EACVS,WAAW,GAAAzB,YAAA,GACXgC,WAAW,qBAAXhC,YAAA,CAAasC,QAAQ,CACtB;EAED,MAAMC,eAAe,GAAG7C,iBAAiB,CACvCkB,MAAM,EACNH,eAAe,EACfC,aAAa,EACbO,WAAW,EACXE,cAAc,CACf;EAED,MAAMqB,eAAe,GACnBhB,QAAQ,CAAC,CAAC,CAAC,KAAKjC,eAAe,CAACkD,QAAQ;EACxCjB,QAAQ,CAAC,CAAC,CAAC,KAAKjC,eAAe,CAACmD,MAAM;EACtC3B,wBAAwB;EACpBsB,UAAU;EACVE,eAAe;EAErB,MAAM,EAAEI,aAAa,EAAE,GAAGpC,KAAK;EAE/B,MAAMqC,sBAAsB,GAAG,EAAqB;EAEpD,MAAMC,wBAAwB,IAAA5C,mBAAA,GAC5BX,kBAAkB,CAAC4B,qBAAqB,EAAEK,IAAI,EAAE,KAAK,CAAC,YAAAtB,mBAAA;EACtD2C,sBAAsB;EAExB,OAAO;IACL1C,KAAK;IACLC,MAAM;IACN2B,SAAS;IACTU,eAAe;IACf7B,cAAc;IACdU,iBAAiB;IACjBP,gBAAgB,EAAEe,yBAAyB;IAC3ChB,QAAQ,EAAEc,iBAAiB;IAC3BgB,aAAa;IACbrB,IAAI;IACJuB;GACD;AACH,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CArFuBrD,cAAc,sKAAAsD,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}