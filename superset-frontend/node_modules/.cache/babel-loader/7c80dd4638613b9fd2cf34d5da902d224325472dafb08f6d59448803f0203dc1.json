{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { getTooltipHTML } from 'src/components/AsyncAceEditor';\nimport { COLUMN_AUTOCOMPLETE_SCORE } from 'src/SqlLab/constants';import { Fragment as _Fragment, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function getColumnKeywords(columns) {\n  return columns.map(({ column_name, verbose_name, is_certified, certified_by, description, type }) => ({\n    name: verbose_name || column_name,\n    value: column_name,\n    docHTML: getTooltipHTML({\n      title: column_name,\n      meta: type ? `column: ${type}` : 'column',\n      body: `${description != null ? description : ''}`,\n      footer: is_certified ? _jsx(_Fragment, { children: t('Certified by %s', certified_by) }) : undefined\n    }),\n    score: COLUMN_AUTOCOMPLETE_SCORE,\n    meta: 'column'\n  }));\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getColumnKeywords, \"getColumnKeywords\", \"/Users/aryurkov/superset/superset-frontend/src/explore/controlUtils/getColumnKeywords.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","getTooltipHTML","COLUMN_AUTOCOMPLETE_SCORE","Fragment","_Fragment","jsx","_jsx","getColumnKeywords","columns","map","column_name","verbose_name","is_certified","certified_by","description","type","name","value","docHTML","title","meta","body","footer","children","undefined","score","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/controlUtils/getColumnKeywords.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport { t } from '@superset-ui/core';\nimport { getTooltipHTML } from 'src/components/AsyncAceEditor';\nimport { COLUMN_AUTOCOMPLETE_SCORE } from 'src/SqlLab/constants';\n\nexport function getColumnKeywords(columns: ColumnMeta[]) {\n  return columns.map(\n    ({\n      column_name,\n      verbose_name,\n      is_certified,\n      certified_by,\n      description,\n      type,\n    }) => ({\n      name: verbose_name || column_name,\n      value: column_name,\n      docHTML: getTooltipHTML({\n        title: column_name,\n        meta: type ? `column: ${type}` : 'column',\n        body: `${description ?? ''}`,\n        footer: is_certified ? (\n          <>{t('Certified by %s', certified_by)}</>\n        ) : undefined,\n      }),\n      score: COLUMN_AUTOCOMPLETE_SCORE,\n      meta: 'column',\n    }),\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAoBA,SAASA,CAAC,QAAQ,mBAAmB;AACrC,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,yBAAyB,QAAQ,sBAAsB,CAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,GAAA,IAAAC,IAAA;AAEjE,OAAM,SAAUC,iBAAiBA,CAACC,OAAqB;EACrD,OAAOA,OAAO,CAACC,GAAG,CAChB,CAAC,EACCC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,IAAI,EACL,MAAM;IACLC,IAAI,EAAEL,YAAY,IAAID,WAAW;IACjCO,KAAK,EAAEP,WAAW;IAClBQ,OAAO,EAAEjB,cAAc,CAAC;MACtBkB,KAAK,EAAET,WAAW;MAClBU,IAAI,EAAEL,IAAI,GAAG,WAAWA,IAAI,EAAE,GAAG,QAAQ;MACzCM,IAAI,EAAE,GAAGP,WAAW,WAAXA,WAAW,GAAI,EAAE,EAAE;MAC5BQ,MAAM,EAAEV,YAAY,GAClBN,IAAA,CAAAF,SAAA,IAAAmB,QAAA,EAAGvB,CAAC,CAAC,iBAAiB,EAAEa,YAAY,CAAC,EAAC,CAAG,GACvCW;KACL,CAAC;IACFC,KAAK,EAAEvB,yBAAyB;IAChCkB,IAAI,EAAE;GACP,CAAC,CACH;AACH,CAAC,mBAAAM,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAJ,SAAA,MAAAE,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAxBetB,iBAAiB,4IAAAuB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAN,SAAA,CAAAM,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}