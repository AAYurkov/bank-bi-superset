{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  Fragment,\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n  useMemo,\n  memo } from\n'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  css,\n  FAST_DEBOUNCE,\n  FeatureFlag,\n  isFeatureEnabled,\n  styled,\n  t } from\n'@superset-ui/core';\n\nimport {\n  Draggable,\n  Droppable } from\n'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport { Icons } from 'src/components/Icons';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';\nimport { isCurrentUserBot } from 'src/utils/isBot';\nimport { useDebouncedEffect } from '../../../explore/exploreUtils';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  occupiedColumnCount: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n  maxChildrenHeight: PropTypes.number.isRequired,\n\n  // dnd\n  handleComponentDrop: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired\n};\n\nconst GridRow = styled.div`\n  ${({ theme, editMode }) => css`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: flex-start;\n    width: 100%;\n    height: fit-content;\n\n    & > :not(:last-child):not(.hover-menu) {\n      ${!editMode && `margin-right: ${theme.gridUnit * 4}px;`}\n    }\n\n    & .empty-droptarget {\n      position: relative;\n      align-self: center;\n      &.empty-droptarget--vertical {\n        min-width: ${theme.gridUnit * 4}px;\n        &:not(:last-child) {\n          width: ${theme.gridUnit * 4}px;\n        }\n        &:first-child:not(.droptarget-side) {\n          z-index: ${EMPTY_CONTAINER_Z_INDEX};\n          position: absolute;\n          width: 100%;\n          height: 100%;\n        }\n      }\n      &.droptarget-side {\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        position: absolute;\n        width: ${theme.gridUnit * 4}px;\n        &:first-child {\n          inset-inline-start: 0;\n        }\n      }\n    }\n\n    &.grid-row--empty {\n      min-height: ${theme.gridUnit * 25}px;\n    }\n  `}\n`;\n\nconst emptyRowContentStyles = (theme) => css`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nconst Row = (props) => {\n  const {\n    component: rowComponent,\n    parentComponent,\n    index,\n    availableColumnCount,\n    columnWidth,\n    occupiedColumnCount,\n    depth,\n    onResizeStart,\n    onResize,\n    onResizeStop,\n    handleComponentDrop,\n    editMode,\n    onChangeTab,\n    isComponentVisible,\n    updateComponents,\n    deleteComponent,\n    parentId\n  } = props;\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const [hoverMenuHovered, setHoverMenuHovered] = useState(false);\n  const [containerHeight, setContainerHeight] = useState(null);\n  const containerRef = useRef();\n  const isComponentVisibleRef = useRef(isComponentVisible);\n\n  useEffect(() => {\n    isComponentVisibleRef.current = isComponentVisible;\n  }, [isComponentVisible]);\n\n  // if chart not rendered - render it if it's less than 1 view height away from current viewport\n  // if chart rendered - remove it if it's more than 4 view heights away from current viewport\n  useEffect(() => {\n    let observerEnabler;\n    let observerDisabler;\n    if (\n    isFeatureEnabled(FeatureFlag.DashboardVirtualization) &&\n    !isCurrentUserBot())\n    {\n      observerEnabler = new IntersectionObserver(\n        ([entry]) => {\n          if (entry.isIntersecting && isComponentVisibleRef.current) {\n            setIsInView(true);\n          }\n        },\n        {\n          rootMargin: '100% 0px'\n        }\n      );\n      observerDisabler = new IntersectionObserver(\n        ([entry]) => {\n          if (!entry.isIntersecting && isComponentVisibleRef.current) {\n            setIsInView(false);\n          }\n        },\n        {\n          rootMargin: '400% 0px'\n        }\n      );\n      const element = containerRef.current;\n      if (element) {\n        observerEnabler.observe(element);\n        observerDisabler.observe(element);\n      }\n    }\n    return () => {var _observerEnabler, _observerDisabler;\n      (_observerEnabler = observerEnabler) == null ? void 0 : _observerEnabler.disconnect();\n      (_observerDisabler = observerDisabler) == null ? void 0 : _observerDisabler.disconnect();\n    };\n  }, []);\n\n  useDebouncedEffect(\n    () => {var _containerRef$current;\n      const updatedHeight = (_containerRef$current = containerRef.current) == null ? void 0 : _containerRef$current.clientHeight;\n      if (\n      editMode &&\n      containerRef.current &&\n      updatedHeight !== containerHeight)\n      {\n        setContainerHeight(updatedHeight);\n      }\n    },\n    FAST_DEBOUNCE,\n    [editMode, containerHeight]\n  );\n\n  const handleChangeFocus = useCallback((nextFocus) => {\n    setIsFocused(Boolean(nextFocus));\n  }, []);\n\n  const handleChangeBackground = useCallback(\n    (nextValue) => {\n      const metaKey = 'background';\n      if (nextValue && rowComponent.meta[metaKey] !== nextValue) {\n        updateComponents({\n          [rowComponent.id]: {\n            ...rowComponent,\n            meta: {\n              ...rowComponent.meta,\n              [metaKey]: nextValue\n            }\n          }\n        });\n      }\n    },\n    [updateComponents, rowComponent]\n  );\n\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(rowComponent.id, parentId);\n  }, [deleteComponent, rowComponent, parentId]);\n\n  const handleMenuHover = useCallback((hovered) => {\n    const { isHovered } = hovered;\n    setHoverMenuHovered(isHovered);\n  }, []);\n\n  const rowItems = useMemo(\n    () => rowComponent.children || [],\n    [rowComponent.children]\n  );\n\n  const backgroundStyle = backgroundStyleOptions.find(\n    (opt) =>\n    opt.value === (rowComponent.meta.background || BACKGROUND_TRANSPARENT)\n  );\n  const remainColumnCount = availableColumnCount - occupiedColumnCount;\n  const renderChild = useCallback(\n    ({ dragSourceRef }) =>\n    _jsxs(WithPopoverMenu, {\n      isFocused: isFocused,\n      onChangeFocus: handleChangeFocus,\n      disableClick: true,\n      menuItems: [\n      _jsx(BackgroundStyleDropdown, {\n        id: `${rowComponent.id}-background`,\n        value: backgroundStyle.value,\n        onChange: handleChangeBackground }\n      )],\n\n      editMode: editMode, children: [\n\n      editMode &&\n      _jsxs(HoverMenu, {\n        onHover: handleMenuHover,\n        innerRef: dragSourceRef,\n        position: \"left\", children: [\n\n        _jsx(DragHandle, { position: \"left\" }),\n        _jsx(DeleteComponentButton, { onDelete: handleDeleteComponent }),\n        _jsx(IconButton, {\n          onClick: handleChangeFocus,\n          icon: _jsx(Icons.SettingOutlined, { iconSize: \"xl\" }) }\n        )] }\n      ),\n\n      _jsxs(GridRow, {\n        className: cx(\n          'grid-row',\n          rowItems.length === 0 && 'grid-row--empty',\n          hoverMenuHovered && 'grid-row--hovered',\n          backgroundStyle.className\n        ),\n        \"data-test\": `grid-row-${backgroundStyle.className}`,\n        ref: containerRef,\n        editMode: editMode, children: [\n\n        editMode &&\n        _jsx(Droppable, { ...(\n          rowItems.length === 0 ?\n          {\n            component: rowComponent,\n            parentComponent: rowComponent,\n            dropToChild: true\n          } :\n          {\n            component: rowItems[0],\n            parentComponent: rowComponent\n          }),\n          depth: depth,\n          index: 0,\n          orientation: \"row\",\n          onDrop: handleComponentDrop,\n          className: cx(\n            'empty-droptarget',\n            'empty-droptarget--vertical',\n            rowItems.length > 0 && 'droptarget-side'\n          ),\n          editMode: true,\n          style: {\n            height: rowItems.length > 0 ? containerHeight : '100%',\n            ...(rowItems.length > 0 && { width: 16 })\n          }, children:\n\n          ({ dropIndicatorProps }) =>\n          dropIndicatorProps && _jsx(\"div\", { ...dropIndicatorProps }) }\n\n        ),\n\n        rowItems.length === 0 &&\n        _jsx(\"div\", { css: emptyRowContentStyles, children: t('Empty row') }),\n\n        rowItems.length > 0 &&\n        rowItems.map((componentId, itemIndex) =>\n        _jsxs(Fragment, { children: [\n          _jsx(DashboardComponent, {\n\n            id: componentId,\n            parentId: rowComponent.id,\n            depth: depth + 1,\n            index: itemIndex,\n            availableColumnCount: remainColumnCount,\n            columnWidth: columnWidth,\n            onResizeStart: onResizeStart,\n            onResize: onResize,\n            onResizeStop: onResizeStop,\n            isComponentVisible: isComponentVisible,\n            onChangeTab: onChangeTab,\n            isInView: isInView }, componentId\n          ),\n          editMode &&\n          _jsx(Droppable, {\n            component: rowItems,\n            parentComponent: rowComponent,\n            depth: depth,\n            index: itemIndex + 1,\n            orientation: \"row\",\n            onDrop: handleComponentDrop,\n            className: cx(\n              'empty-droptarget',\n              'empty-droptarget--vertical',\n              remainColumnCount === 0 &&\n              itemIndex === rowItems.length - 1 &&\n              'droptarget-side'\n            ),\n            editMode: true,\n            style: {\n              height: containerHeight,\n              ...(remainColumnCount === 0 &&\n              itemIndex === rowItems.length - 1 && { width: 16 })\n            }, children:\n\n            ({ dropIndicatorProps }) =>\n            dropIndicatorProps && _jsx(\"div\", { ...dropIndicatorProps }) }\n\n          )] }, componentId\n\n        )\n        )] }\n      )] }\n    ),\n\n    [\n    backgroundStyle.className,\n    backgroundStyle.value,\n    columnWidth,\n    containerHeight,\n    depth,\n    editMode,\n    handleChangeBackground,\n    handleChangeFocus,\n    handleComponentDrop,\n    handleDeleteComponent,\n    handleMenuHover,\n    hoverMenuHovered,\n    isComponentVisible,\n    isFocused,\n    isInView,\n    onChangeTab,\n    onResize,\n    onResizeStart,\n    onResizeStop,\n    remainColumnCount,\n    rowComponent,\n    rowItems]\n\n  );\n\n  return (\n    _jsx(Draggable, {\n      component: rowComponent,\n      parentComponent: parentComponent,\n      orientation: \"row\",\n      index: index,\n      depth: depth,\n      onDrop: handleComponentDrop,\n      editMode: editMode, children:\n\n      renderChild }\n    ));\n\n};__signature__(Row, \"useState{[isFocused, setIsFocused](false)}\\nuseState{[isInView, setIsInView](false)}\\nuseState{[hoverMenuHovered, setHoverMenuHovered](false)}\\nuseState{[containerHeight, setContainerHeight](null)}\\nuseRef{containerRef}\\nuseRef{isComponentVisibleRef}\\nuseEffect{}\\nuseEffect{}\\nuseDebouncedEffect{}\\nuseCallback{handleChangeFocus}\\nuseCallback{handleChangeBackground}\\nuseCallback{handleDeleteComponent}\\nuseCallback{handleMenuHover}\\nuseMemo{rowItems}\\nuseCallback{renderChild}\", () => [useDebouncedEffect]);\n\nRow.propTypes = propTypes;const _default = /*#__PURE__*/\n\nmemo(Row);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(GridRow, \"GridRow\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(emptyRowContentStyles, \"emptyRowContentStyles\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(Row, \"Row\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Fragment","useState","useCallback","useRef","useEffect","useMemo","memo","PropTypes","cx","css","FAST_DEBOUNCE","FeatureFlag","isFeatureEnabled","styled","t","Draggable","Droppable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","Icons","IconButton","BackgroundStyleDropdown","WithPopoverMenu","componentShape","backgroundStyleOptions","BACKGROUND_TRANSPARENT","EMPTY_CONTAINER_Z_INDEX","isCurrentUserBot","useDebouncedEffect","jsx","_jsx","jsxs","_jsxs","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","editMode","bool","availableColumnCount","columnWidth","occupiedColumnCount","onResizeStart","func","onResize","onResizeStop","maxChildrenHeight","handleComponentDrop","deleteComponent","updateComponents","GridRow","div","theme","gridUnit","emptyRowContentStyles","colors","text","label","Row","props","rowComponent","onChangeTab","isComponentVisible","isFocused","setIsFocused","isInView","setIsInView","hoverMenuHovered","setHoverMenuHovered","containerHeight","setContainerHeight","containerRef","isComponentVisibleRef","current","observerEnabler","observerDisabler","DashboardVirtualization","IntersectionObserver","entry","isIntersecting","rootMargin","element","observe","_observerEnabler","_observerDisabler","disconnect","_containerRef$current","updatedHeight","clientHeight","handleChangeFocus","nextFocus","Boolean","handleChangeBackground","nextValue","metaKey","meta","handleDeleteComponent","handleMenuHover","hovered","isHovered","rowItems","children","backgroundStyle","find","opt","value","background","remainColumnCount","renderChild","dragSourceRef","onChangeFocus","disableClick","menuItems","onChange","onHover","innerRef","position","onDelete","onClick","icon","SettingOutlined","iconSize","className","length","ref","dropToChild","orientation","onDrop","style","height","width","dropIndicatorProps","map","componentId","itemIndex","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/Row.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  Fragment,\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n  useMemo,\n  memo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  css,\n  FAST_DEBOUNCE,\n  FeatureFlag,\n  isFeatureEnabled,\n  styled,\n  t,\n} from '@superset-ui/core';\n\nimport {\n  Draggable,\n  Droppable,\n} from 'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport { Icons } from 'src/components/Icons';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';\nimport { isCurrentUserBot } from 'src/utils/isBot';\nimport { useDebouncedEffect } from '../../../explore/exploreUtils';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  occupiedColumnCount: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n  maxChildrenHeight: PropTypes.number.isRequired,\n\n  // dnd\n  handleComponentDrop: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst GridRow = styled.div`\n  ${({ theme, editMode }) => css`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: flex-start;\n    width: 100%;\n    height: fit-content;\n\n    & > :not(:last-child):not(.hover-menu) {\n      ${!editMode && `margin-right: ${theme.gridUnit * 4}px;`}\n    }\n\n    & .empty-droptarget {\n      position: relative;\n      align-self: center;\n      &.empty-droptarget--vertical {\n        min-width: ${theme.gridUnit * 4}px;\n        &:not(:last-child) {\n          width: ${theme.gridUnit * 4}px;\n        }\n        &:first-child:not(.droptarget-side) {\n          z-index: ${EMPTY_CONTAINER_Z_INDEX};\n          position: absolute;\n          width: 100%;\n          height: 100%;\n        }\n      }\n      &.droptarget-side {\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        position: absolute;\n        width: ${theme.gridUnit * 4}px;\n        &:first-child {\n          inset-inline-start: 0;\n        }\n      }\n    }\n\n    &.grid-row--empty {\n      min-height: ${theme.gridUnit * 25}px;\n    }\n  `}\n`;\n\nconst emptyRowContentStyles = theme => css`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nconst Row = props => {\n  const {\n    component: rowComponent,\n    parentComponent,\n    index,\n    availableColumnCount,\n    columnWidth,\n    occupiedColumnCount,\n    depth,\n    onResizeStart,\n    onResize,\n    onResizeStop,\n    handleComponentDrop,\n    editMode,\n    onChangeTab,\n    isComponentVisible,\n    updateComponents,\n    deleteComponent,\n    parentId,\n  } = props;\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const [hoverMenuHovered, setHoverMenuHovered] = useState(false);\n  const [containerHeight, setContainerHeight] = useState(null);\n  const containerRef = useRef();\n  const isComponentVisibleRef = useRef(isComponentVisible);\n\n  useEffect(() => {\n    isComponentVisibleRef.current = isComponentVisible;\n  }, [isComponentVisible]);\n\n  // if chart not rendered - render it if it's less than 1 view height away from current viewport\n  // if chart rendered - remove it if it's more than 4 view heights away from current viewport\n  useEffect(() => {\n    let observerEnabler;\n    let observerDisabler;\n    if (\n      isFeatureEnabled(FeatureFlag.DashboardVirtualization) &&\n      !isCurrentUserBot()\n    ) {\n      observerEnabler = new IntersectionObserver(\n        ([entry]) => {\n          if (entry.isIntersecting && isComponentVisibleRef.current) {\n            setIsInView(true);\n          }\n        },\n        {\n          rootMargin: '100% 0px',\n        },\n      );\n      observerDisabler = new IntersectionObserver(\n        ([entry]) => {\n          if (!entry.isIntersecting && isComponentVisibleRef.current) {\n            setIsInView(false);\n          }\n        },\n        {\n          rootMargin: '400% 0px',\n        },\n      );\n      const element = containerRef.current;\n      if (element) {\n        observerEnabler.observe(element);\n        observerDisabler.observe(element);\n      }\n    }\n    return () => {\n      observerEnabler?.disconnect();\n      observerDisabler?.disconnect();\n    };\n  }, []);\n\n  useDebouncedEffect(\n    () => {\n      const updatedHeight = containerRef.current?.clientHeight;\n      if (\n        editMode &&\n        containerRef.current &&\n        updatedHeight !== containerHeight\n      ) {\n        setContainerHeight(updatedHeight);\n      }\n    },\n    FAST_DEBOUNCE,\n    [editMode, containerHeight],\n  );\n\n  const handleChangeFocus = useCallback(nextFocus => {\n    setIsFocused(Boolean(nextFocus));\n  }, []);\n\n  const handleChangeBackground = useCallback(\n    nextValue => {\n      const metaKey = 'background';\n      if (nextValue && rowComponent.meta[metaKey] !== nextValue) {\n        updateComponents({\n          [rowComponent.id]: {\n            ...rowComponent,\n            meta: {\n              ...rowComponent.meta,\n              [metaKey]: nextValue,\n            },\n          },\n        });\n      }\n    },\n    [updateComponents, rowComponent],\n  );\n\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(rowComponent.id, parentId);\n  }, [deleteComponent, rowComponent, parentId]);\n\n  const handleMenuHover = useCallback(hovered => {\n    const { isHovered } = hovered;\n    setHoverMenuHovered(isHovered);\n  }, []);\n\n  const rowItems = useMemo(\n    () => rowComponent.children || [],\n    [rowComponent.children],\n  );\n\n  const backgroundStyle = backgroundStyleOptions.find(\n    opt =>\n      opt.value === (rowComponent.meta.background || BACKGROUND_TRANSPARENT),\n  );\n  const remainColumnCount = availableColumnCount - occupiedColumnCount;\n  const renderChild = useCallback(\n    ({ dragSourceRef }) => (\n      <WithPopoverMenu\n        isFocused={isFocused}\n        onChangeFocus={handleChangeFocus}\n        disableClick\n        menuItems={[\n          <BackgroundStyleDropdown\n            id={`${rowComponent.id}-background`}\n            value={backgroundStyle.value}\n            onChange={handleChangeBackground}\n          />,\n        ]}\n        editMode={editMode}\n      >\n        {editMode && (\n          <HoverMenu\n            onHover={handleMenuHover}\n            innerRef={dragSourceRef}\n            position=\"left\"\n          >\n            <DragHandle position=\"left\" />\n            <DeleteComponentButton onDelete={handleDeleteComponent} />\n            <IconButton\n              onClick={handleChangeFocus}\n              icon={<Icons.SettingOutlined iconSize=\"xl\" />}\n            />\n          </HoverMenu>\n        )}\n        <GridRow\n          className={cx(\n            'grid-row',\n            rowItems.length === 0 && 'grid-row--empty',\n            hoverMenuHovered && 'grid-row--hovered',\n            backgroundStyle.className,\n          )}\n          data-test={`grid-row-${backgroundStyle.className}`}\n          ref={containerRef}\n          editMode={editMode}\n        >\n          {editMode && (\n            <Droppable\n              {...(rowItems.length === 0\n                ? {\n                    component: rowComponent,\n                    parentComponent: rowComponent,\n                    dropToChild: true,\n                  }\n                : {\n                    component: rowItems[0],\n                    parentComponent: rowComponent,\n                  })}\n              depth={depth}\n              index={0}\n              orientation=\"row\"\n              onDrop={handleComponentDrop}\n              className={cx(\n                'empty-droptarget',\n                'empty-droptarget--vertical',\n                rowItems.length > 0 && 'droptarget-side',\n              )}\n              editMode\n              style={{\n                height: rowItems.length > 0 ? containerHeight : '100%',\n                ...(rowItems.length > 0 && { width: 16 }),\n              }}\n            >\n              {({ dropIndicatorProps }) =>\n                dropIndicatorProps && <div {...dropIndicatorProps} />\n              }\n            </Droppable>\n          )}\n          {rowItems.length === 0 && (\n            <div css={emptyRowContentStyles}>{t('Empty row')}</div>\n          )}\n          {rowItems.length > 0 &&\n            rowItems.map((componentId, itemIndex) => (\n              <Fragment key={componentId}>\n                <DashboardComponent\n                  key={componentId}\n                  id={componentId}\n                  parentId={rowComponent.id}\n                  depth={depth + 1}\n                  index={itemIndex}\n                  availableColumnCount={remainColumnCount}\n                  columnWidth={columnWidth}\n                  onResizeStart={onResizeStart}\n                  onResize={onResize}\n                  onResizeStop={onResizeStop}\n                  isComponentVisible={isComponentVisible}\n                  onChangeTab={onChangeTab}\n                  isInView={isInView}\n                />\n                {editMode && (\n                  <Droppable\n                    component={rowItems}\n                    parentComponent={rowComponent}\n                    depth={depth}\n                    index={itemIndex + 1}\n                    orientation=\"row\"\n                    onDrop={handleComponentDrop}\n                    className={cx(\n                      'empty-droptarget',\n                      'empty-droptarget--vertical',\n                      remainColumnCount === 0 &&\n                        itemIndex === rowItems.length - 1 &&\n                        'droptarget-side',\n                    )}\n                    editMode\n                    style={{\n                      height: containerHeight,\n                      ...(remainColumnCount === 0 &&\n                        itemIndex === rowItems.length - 1 && { width: 16 }),\n                    }}\n                  >\n                    {({ dropIndicatorProps }) =>\n                      dropIndicatorProps && <div {...dropIndicatorProps} />\n                    }\n                  </Droppable>\n                )}\n              </Fragment>\n            ))}\n        </GridRow>\n      </WithPopoverMenu>\n    ),\n    [\n      backgroundStyle.className,\n      backgroundStyle.value,\n      columnWidth,\n      containerHeight,\n      depth,\n      editMode,\n      handleChangeBackground,\n      handleChangeFocus,\n      handleComponentDrop,\n      handleDeleteComponent,\n      handleMenuHover,\n      hoverMenuHovered,\n      isComponentVisible,\n      isFocused,\n      isInView,\n      onChangeTab,\n      onResize,\n      onResizeStart,\n      onResizeStop,\n      remainColumnCount,\n      rowComponent,\n      rowItems,\n    ],\n  );\n\n  return (\n    <Draggable\n      component={rowComponent}\n      parentComponent={parentComponent}\n      orientation=\"row\"\n      index={index}\n      depth={depth}\n      onDrop={handleComponentDrop}\n      editMode={editMode}\n    >\n      {renderChild}\n    </Draggable>\n  );\n};\n\nRow.propTypes = propTypes;\n\nexport default memo(Row);\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEA,QAAQ;EACRC,QAAQ;EACRC,WAAW;EACXC,MAAM;EACNC,SAAS;EACTC,OAAO;EACPC,IAAI;AACC,OAAO;AACd,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B;EACEC,GAAG;EACHC,aAAa;EACbC,WAAW;EACXC,gBAAgB;EAChBC,MAAM;EACNC,CAAC;AACI,mBAAmB;;AAE1B;EACEC,SAAS;EACTC,SAAS;AACJ,4CAA4C;AACnD,OAAOC,UAAU,MAAM,yCAAyC;AAChE,OAAOC,kBAAkB,MAAM,6CAA6C;AAC5E,OAAOC,qBAAqB,MAAM,gDAAgD;AAClF,OAAOC,SAAS,MAAM,yCAAyC;AAC/D,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,uBAAuB,MAAM,uDAAuD;AAC3F,OAAOC,eAAe,MAAM,+CAA+C;AAC3E,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,OAAOC,sBAAsB,MAAM,2CAA2C;AAC9E,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,SAASC,uBAAuB,QAAQ,yBAAyB;AACjE,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,kBAAkB,QAAQ,+BAA+B,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;;AAEnE,MAAMC,SAAS,GAAG;EAChBC,EAAE,EAAE7B,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAC/BC,QAAQ,EAAEhC,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACrCE,SAAS,EAAEf,cAAc,CAACa,UAAU;EACpCG,eAAe,EAAEhB,cAAc,CAACa,UAAU;EAC1CI,KAAK,EAAEnC,SAAS,CAACoC,MAAM,CAACL,UAAU;EAClCM,KAAK,EAAErC,SAAS,CAACoC,MAAM,CAACL,UAAU;EAClCO,QAAQ,EAAEtC,SAAS,CAACuC,IAAI,CAACR,UAAU;;EAEnC;EACAS,oBAAoB,EAAExC,SAAS,CAACoC,MAAM,CAACL,UAAU;EACjDU,WAAW,EAAEzC,SAAS,CAACoC,MAAM,CAACL,UAAU;EACxCW,mBAAmB,EAAE1C,SAAS,CAACoC,MAAM,CAACL,UAAU;EAChDY,aAAa,EAAE3C,SAAS,CAAC4C,IAAI,CAACb,UAAU;EACxCc,QAAQ,EAAE7C,SAAS,CAAC4C,IAAI,CAACb,UAAU;EACnCe,YAAY,EAAE9C,SAAS,CAAC4C,IAAI,CAACb,UAAU;EACvCgB,iBAAiB,EAAE/C,SAAS,CAACoC,MAAM,CAACL,UAAU;;EAE9C;EACAiB,mBAAmB,EAAEhD,SAAS,CAAC4C,IAAI,CAACb,UAAU;EAC9CkB,eAAe,EAAEjD,SAAS,CAAC4C,IAAI,CAACb,UAAU;EAC1CmB,gBAAgB,EAAElD,SAAS,CAAC4C,IAAI,CAACb;AACnC,CAAC;;AAED,MAAMoB,OAAO,GAAG7C,MAAM,CAAC8C,GAAG;AAC1B,IAAI,CAAC,EAAEC,KAAK,EAAEf,QAAQ,CAAC,CAAC,KAAKpC,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAACoC,QAAQ,IAAI,iBAAiBe,KAAK,CAACC,QAAQ,GAAG,CAAC,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqBD,KAAK,CAACC,QAAQ,GAAG,CAAC;AACvC;AACA,mBAAmBD,KAAK,CAACC,QAAQ,GAAG,CAAC;AACrC;AACA;AACA,qBAAqBjC,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBA,uBAAuB;AAC1C;AACA,iBAAiBgC,KAAK,CAACC,QAAQ,GAAG,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBD,KAAK,CAACC,QAAQ,GAAG,EAAE;AACvC;AACA,GAAG;AACH,CAAC;;AAED,MAAMC,qBAAqB,GAAGA,CAAAF,KAAK,KAAInD,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAWmD,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK;AAClC,CAAC;;AAED,MAAMC,GAAG,GAAGA,CAAAC,KAAK,KAAI;EACnB,MAAM;IACJ3B,SAAS,EAAE4B,YAAY;IACvB3B,eAAe;IACfC,KAAK;IACLK,oBAAoB;IACpBC,WAAW;IACXC,mBAAmB;IACnBL,KAAK;IACLM,aAAa;IACbE,QAAQ;IACRC,YAAY;IACZE,mBAAmB;IACnBV,QAAQ;IACRwB,WAAW;IACXC,kBAAkB;IAClBb,gBAAgB;IAChBD,eAAe;IACfjB;EACF,CAAC,GAAG4B,KAAK;;EAET,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwE,QAAQ,EAAEC,WAAW,CAAC,GAAGzE,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0E,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3E,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC4E,eAAe,EAAEC,kBAAkB,CAAC,GAAG7E,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM8E,YAAY,GAAG5E,MAAM,CAAC,CAAC;EAC7B,MAAM6E,qBAAqB,GAAG7E,MAAM,CAACmE,kBAAkB,CAAC;;EAExDlE,SAAS,CAAC,MAAM;IACd4E,qBAAqB,CAACC,OAAO,GAAGX,kBAAkB;EACpD,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;;EAExB;EACA;EACAlE,SAAS,CAAC,MAAM;IACd,IAAI8E,eAAe;IACnB,IAAIC,gBAAgB;IACpB;IACEvE,gBAAgB,CAACD,WAAW,CAACyE,uBAAuB,CAAC;IACrD,CAACvD,gBAAgB,CAAC,CAAC;IACnB;MACAqD,eAAe,GAAG,IAAIG,oBAAoB;QACxC,CAAC,CAACC,KAAK,CAAC,KAAK;UACX,IAAIA,KAAK,CAACC,cAAc,IAAIP,qBAAqB,CAACC,OAAO,EAAE;YACzDP,WAAW,CAAC,IAAI,CAAC;UACnB;QACF,CAAC;QACD;UACEc,UAAU,EAAE;QACd;MACF,CAAC;MACDL,gBAAgB,GAAG,IAAIE,oBAAoB;QACzC,CAAC,CAACC,KAAK,CAAC,KAAK;UACX,IAAI,CAACA,KAAK,CAACC,cAAc,IAAIP,qBAAqB,CAACC,OAAO,EAAE;YAC1DP,WAAW,CAAC,KAAK,CAAC;UACpB;QACF,CAAC;QACD;UACEc,UAAU,EAAE;QACd;MACF,CAAC;MACD,MAAMC,OAAO,GAAGV,YAAY,CAACE,OAAO;MACpC,IAAIQ,OAAO,EAAE;QACXP,eAAe,CAACQ,OAAO,CAACD,OAAO,CAAC;QAChCN,gBAAgB,CAACO,OAAO,CAACD,OAAO,CAAC;MACnC;IACF;IACA,OAAO,MAAM,KAAAE,gBAAA,EAAAC,iBAAA;MACX,CAAAD,gBAAA,GAAAT,eAAe,qBAAfS,gBAAA,CAAiBE,UAAU,CAAC,CAAC;MAC7B,CAAAD,iBAAA,GAAAT,gBAAgB,qBAAhBS,iBAAA,CAAkBC,UAAU,CAAC,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN/D,kBAAkB;IAChB,MAAM,KAAAgE,qBAAA;MACJ,MAAMC,aAAa,IAAAD,qBAAA,GAAGf,YAAY,CAACE,OAAO,qBAApBa,qBAAA,CAAsBE,YAAY;MACxD;MACEnD,QAAQ;MACRkC,YAAY,CAACE,OAAO;MACpBc,aAAa,KAAKlB,eAAe;MACjC;QACAC,kBAAkB,CAACiB,aAAa,CAAC;MACnC;IACF,CAAC;IACDrF,aAAa;IACb,CAACmC,QAAQ,EAAEgC,eAAe;EAC5B,CAAC;;EAED,MAAMoB,iBAAiB,GAAG/F,WAAW,CAAC,CAAAgG,SAAS,KAAI;IACjD1B,YAAY,CAAC2B,OAAO,CAACD,SAAS,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAME,sBAAsB,GAAGlG,WAAW;IACxC,CAAAmG,SAAS,KAAI;MACX,MAAMC,OAAO,GAAG,YAAY;MAC5B,IAAID,SAAS,IAAIjC,YAAY,CAACmC,IAAI,CAACD,OAAO,CAAC,KAAKD,SAAS,EAAE;QACzD5C,gBAAgB,CAAC;UACf,CAACW,YAAY,CAAChC,EAAE,GAAG;YACjB,GAAGgC,YAAY;YACfmC,IAAI,EAAE;cACJ,GAAGnC,YAAY,CAACmC,IAAI;cACpB,CAACD,OAAO,GAAGD;YACb;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACD,CAAC5C,gBAAgB,EAAEW,YAAY;EACjC,CAAC;;EAED,MAAMoC,qBAAqB,GAAGtG,WAAW,CAAC,MAAM;IAC9CsD,eAAe,CAACY,YAAY,CAAChC,EAAE,EAAEG,QAAQ,CAAC;EAC5C,CAAC,EAAE,CAACiB,eAAe,EAAEY,YAAY,EAAE7B,QAAQ,CAAC,CAAC;;EAE7C,MAAMkE,eAAe,GAAGvG,WAAW,CAAC,CAAAwG,OAAO,KAAI;IAC7C,MAAM,EAAEC,SAAS,CAAC,CAAC,GAAGD,OAAO;IAC7B9B,mBAAmB,CAAC+B,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAMC,QAAQ,GAAGvG,OAAO;IACtB,MAAM+D,YAAY,CAACyC,QAAQ,IAAI,EAAE;IACjC,CAACzC,YAAY,CAACyC,QAAQ;EACxB,CAAC;;EAED,MAAMC,eAAe,GAAGpF,sBAAsB,CAACqF,IAAI;IACjD,CAAAC,GAAG;IACDA,GAAG,CAACC,KAAK,MAAM7C,YAAY,CAACmC,IAAI,CAACW,UAAU,IAAIvF,sBAAsB;EACzE,CAAC;EACD,MAAMwF,iBAAiB,GAAGpE,oBAAoB,GAAGE,mBAAmB;EACpE,MAAMmE,WAAW,GAAGlH,WAAW;IAC7B,CAAC,EAAEmH,aAAa,CAAC,CAAC;IAChBnF,KAAA,CAACV,eAAe;MACd+C,SAAS,EAAEA,SAAU;MACrB+C,aAAa,EAAErB,iBAAkB;MACjCsB,YAAY;MACZC,SAAS,EAAE;MACTxF,IAAA,CAACT,uBAAuB;QACtBa,EAAE,EAAE,GAAGgC,YAAY,CAAChC,EAAE,aAAc;QACpC6E,KAAK,EAAEH,eAAe,CAACG,KAAM;QAC7BQ,QAAQ,EAAErB,sBAAuB;MAClC,CAAC,CACF;;MACFvD,QAAQ,EAAEA,QAAS,EAAAgE,QAAA;;MAElBhE,QAAQ;MACPX,KAAA,CAACd,SAAS;QACRsG,OAAO,EAAEjB,eAAgB;QACzBkB,QAAQ,EAAEN,aAAc;QACxBO,QAAQ,EAAC,MAAM,EAAAf,QAAA;;QAEf7E,IAAA,CAACf,UAAU,IAAC2G,QAAQ,EAAC,MAAM,EAAE,CAAC;QAC9B5F,IAAA,CAACb,qBAAqB,IAAC0G,QAAQ,EAAErB,qBAAsB,EAAE,CAAC;QAC1DxE,IAAA,CAACV,UAAU;UACTwG,OAAO,EAAE7B,iBAAkB;UAC3B8B,IAAI,EAAE/F,IAAA,CAACX,KAAK,CAAC2G,eAAe,IAACC,QAAQ,EAAC,IAAI,EAAE,CAAE;QAC/C,CAAC;MACO,CACZ;;MACD/F,KAAA,CAACwB,OAAO;QACNwE,SAAS,EAAE1H,EAAE;UACX,UAAU;UACVoG,QAAQ,CAACuB,MAAM,KAAK,CAAC,IAAI,iBAAiB;UAC1CxD,gBAAgB,IAAI,mBAAmB;UACvCmC,eAAe,CAACoB;QAClB,CAAE;QACF,aAAW,YAAYpB,eAAe,CAACoB,SAAS,EAAG;QACnDE,GAAG,EAAErD,YAAa;QAClBlC,QAAQ,EAAEA,QAAS,EAAAgE,QAAA;;QAElBhE,QAAQ;QACPb,IAAA,CAAChB,SAAS;UACH4F,QAAQ,CAACuB,MAAM,KAAK,CAAC;UACtB;YACE3F,SAAS,EAAE4B,YAAY;YACvB3B,eAAe,EAAE2B,YAAY;YAC7BiE,WAAW,EAAE;UACf,CAAC;UACD;YACE7F,SAAS,EAAEoE,QAAQ,CAAC,CAAC,CAAC;YACtBnE,eAAe,EAAE2B;UACnB,CAAC;UACLxB,KAAK,EAAEA,KAAM;UACbF,KAAK,EAAE,CAAE;UACT4F,WAAW,EAAC,KAAK;UACjBC,MAAM,EAAEhF,mBAAoB;UAC5B2E,SAAS,EAAE1H,EAAE;YACX,kBAAkB;YAClB,4BAA4B;YAC5BoG,QAAQ,CAACuB,MAAM,GAAG,CAAC,IAAI;UACzB,CAAE;UACFtF,QAAQ;UACR2F,KAAK,EAAE;YACLC,MAAM,EAAE7B,QAAQ,CAACuB,MAAM,GAAG,CAAC,GAAGtD,eAAe,GAAG,MAAM;YACtD,IAAI+B,QAAQ,CAACuB,MAAM,GAAG,CAAC,IAAI,EAAEO,KAAK,EAAE,EAAE,CAAC,CAAC;UAC1C,CAAE,EAAA7B,QAAA;;UAEDA,CAAC,EAAE8B,kBAAkB,CAAC,CAAC;UACtBA,kBAAkB,IAAI3G,IAAA,aAAS2G,kBAAkB,EAAG,CAAC;;QAE9C,CACZ;;QACA/B,QAAQ,CAACuB,MAAM,KAAK,CAAC;QACpBnG,IAAA,UAAKvB,GAAG,EAAEqD,qBAAsB,EAAA+C,QAAA,EAAE/F,CAAC,CAAC,WAAW,CAAC,EAAM,CACvD;;QACA8F,QAAQ,CAACuB,MAAM,GAAG,CAAC;QAClBvB,QAAQ,CAACgC,GAAG,CAAC,CAACC,WAAW,EAAEC,SAAS;QAClC5G,KAAA,CAAClC,QAAQ,IAAA6G,QAAA;UACP7E,IAAA,CAACd,kBAAkB;;YAEjBkB,EAAE,EAAEyG,WAAY;YAChBtG,QAAQ,EAAE6B,YAAY,CAAChC,EAAG;YAC1BQ,KAAK,EAAEA,KAAK,GAAG,CAAE;YACjBF,KAAK,EAAEoG,SAAU;YACjB/F,oBAAoB,EAAEoE,iBAAkB;YACxCnE,WAAW,EAAEA,WAAY;YACzBE,aAAa,EAAEA,aAAc;YAC7BE,QAAQ,EAAEA,QAAS;YACnBC,YAAY,EAAEA,YAAa;YAC3BiB,kBAAkB,EAAEA,kBAAmB;YACvCD,WAAW,EAAEA,WAAY;YACzBI,QAAQ,EAAEA,QAAS,IAZdoE;UAaN,CAAC;UACDhG,QAAQ;UACPb,IAAA,CAAChB,SAAS;YACRwB,SAAS,EAAEoE,QAAS;YACpBnE,eAAe,EAAE2B,YAAa;YAC9BxB,KAAK,EAAEA,KAAM;YACbF,KAAK,EAAEoG,SAAS,GAAG,CAAE;YACrBR,WAAW,EAAC,KAAK;YACjBC,MAAM,EAAEhF,mBAAoB;YAC5B2E,SAAS,EAAE1H,EAAE;cACX,kBAAkB;cAClB,4BAA4B;cAC5B2G,iBAAiB,KAAK,CAAC;cACrB2B,SAAS,KAAKlC,QAAQ,CAACuB,MAAM,GAAG,CAAC;cACjC;YACJ,CAAE;YACFtF,QAAQ;YACR2F,KAAK,EAAE;cACLC,MAAM,EAAE5D,eAAe;cACvB,IAAIsC,iBAAiB,KAAK,CAAC;cACzB2B,SAAS,KAAKlC,QAAQ,CAACuB,MAAM,GAAG,CAAC,IAAI,EAAEO,KAAK,EAAE,EAAE,CAAC,CAAC;YACtD,CAAE,EAAA7B,QAAA;;YAEDA,CAAC,EAAE8B,kBAAkB,CAAC,CAAC;YACtBA,kBAAkB,IAAI3G,IAAA,aAAS2G,kBAAkB,EAAG,CAAC;;UAE9C,CACZ,KA1CYE;;QA2CL;QACX,CAAC;MACG,CAAC;IACK,CAClB;;IACD;IACE/B,eAAe,CAACoB,SAAS;IACzBpB,eAAe,CAACG,KAAK;IACrBjE,WAAW;IACX6B,eAAe;IACfjC,KAAK;IACLC,QAAQ;IACRuD,sBAAsB;IACtBH,iBAAiB;IACjB1C,mBAAmB;IACnBiD,qBAAqB;IACrBC,eAAe;IACf9B,gBAAgB;IAChBL,kBAAkB;IAClBC,SAAS;IACTE,QAAQ;IACRJ,WAAW;IACXjB,QAAQ;IACRF,aAAa;IACbG,YAAY;IACZ8D,iBAAiB;IACjB/C,YAAY;IACZwC,QAAQ;;EAEZ,CAAC;;EAED;IACE5E,IAAA,CAACjB,SAAS;MACRyB,SAAS,EAAE4B,YAAa;MACxB3B,eAAe,EAAEA,eAAgB;MACjC6F,WAAW,EAAC,KAAK;MACjB5F,KAAK,EAAEA,KAAM;MACbE,KAAK,EAAEA,KAAM;MACb2F,MAAM,EAAEhF,mBAAoB;MAC5BV,QAAQ,EAAEA,QAAS,EAAAgE,QAAA;;MAElBO,WAAW;IACH,CAAC;;AAEhB,CAAC,CAAC2B,aAAA,CArSI7E,GAAG,2eAyEPpC,kBAAkB;;AA8NpBoC,GAAG,CAAC/B,SAAS,GAAGA,SAAS,CAAC,MAAA6G,QAAA;;AAEX1I,IAAI,CAAC4D,GAAG,CAAC,CAAxB,eAAA8E,QAAA,CAAyB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxXnBlH,SAAS,6GAAA8G,cAAA,CAAAI,QAAA,CAwBT3F,OAAO,2GAAAuF,cAAA,CAAAI,QAAA,CA6CPvF,qBAAqB,yHAAAmF,cAAA,CAAAI,QAAA,CAUrBnF,GAAG,uGAAA+E,cAAA,CAAAI,QAAA,CAAAL,QAAA,mIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}