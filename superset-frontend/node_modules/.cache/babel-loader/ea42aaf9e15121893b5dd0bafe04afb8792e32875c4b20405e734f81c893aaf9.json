{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { getExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { areObjectsEqual } from 'src/reduxUtils';\n\nimport getEffectiveExtraFilters from './getEffectiveExtraFilters';\nimport { getAllActiveFilters } from '../activeAllDashboardFilters';\n// We cache formData objects so that our connected container components don't always trigger\n// render cascades. we cannot leverage the reselect library because our cache size is >1\nconst cachedFiltersByChart = {};\nconst cachedFormdataByChart = {};\n// this function merge chart's formData with dashboard filters value,\n// and generate a new formData which will be used in the new query.\n// filters param only contains those applicable to this chart.\nexport default function getFormDataWithExtraFilters({ chart, filters, nativeFilters, chartConfiguration, colorScheme, ownColorScheme, colorNamespace, sliceId, dataMask, extraControls, labelsColor, labelsColorMap, sharedLabelsColors, allSliceIds }) {\n  // if dashboard metadata + filters have not changed, use cache if possible\n  const cachedFormData = cachedFormdataByChart[sliceId];\n  if (cachedFiltersByChart[sliceId] === filters &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.own_color_scheme, ownColorScheme) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.color_scheme, colorScheme) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.color_namespace, colorNamespace, {\n    ignoreUndefined: true\n  }) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.label_colors, labelsColor, {\n    ignoreUndefined: true\n  }) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.map_label_colors, labelsColorMap, {\n    ignoreUndefined: true\n  }) &&\n  _isEqual(cachedFormData == null ? void 0 : cachedFormData.shared_label_colors, sharedLabelsColors) &&\n  !!cachedFormData &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.dataMask, dataMask, {\n    ignoreUndefined: true\n  }) &&\n  areObjectsEqual(cachedFormData == null ? void 0 : cachedFormData.extraControls, extraControls, {\n    ignoreUndefined: true\n  })) {\n    return cachedFormData;\n  }\n  let extraData = {};\n  const activeFilters = getAllActiveFilters({\n    chartConfiguration,\n    dataMask,\n    nativeFilters,\n    allSliceIds\n  });\n  const filterIdsAppliedOnChart = Object.entries(activeFilters).\n  filter(([, { scope }]) => scope.includes(chart.id)).\n  map(([filterId]) => filterId);\n  if (filterIdsAppliedOnChart.length) {\n    extraData = {\n      extra_form_data: getExtraFormData(dataMask, filterIdsAppliedOnChart)\n    };\n  }\n  const formData = {\n    ...chart.form_data,\n    chart_id: chart.id,\n    label_colors: labelsColor,\n    shared_label_colors: sharedLabelsColors,\n    map_label_colors: labelsColorMap,\n    ...(colorScheme && { color_scheme: colorScheme }),\n    ...(ownColorScheme && {\n      own_color_scheme: ownColorScheme\n    }),\n    extra_filters: getEffectiveExtraFilters(filters),\n    ...extraData,\n    ...extraControls\n  };\n  cachedFiltersByChart[sliceId] = filters;\n  cachedFormdataByChart[sliceId] = { ...formData, dataMask, extraControls };\n  return formData;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(cachedFiltersByChart, \"cachedFiltersByChart\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts\");reactHotLoader.register(cachedFormdataByChart, \"cachedFormdataByChart\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts\");reactHotLoader.register(getFormDataWithExtraFilters, \"getFormDataWithExtraFilters\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getExtraFormData","areObjectsEqual","getEffectiveExtraFilters","getAllActiveFilters","cachedFiltersByChart","cachedFormdataByChart","getFormDataWithExtraFilters","chart","filters","nativeFilters","chartConfiguration","colorScheme","ownColorScheme","colorNamespace","sliceId","dataMask","extraControls","labelsColor","labelsColorMap","sharedLabelsColors","allSliceIds","cachedFormData","own_color_scheme","color_scheme","color_namespace","ignoreUndefined","label_colors","map_label_colors","_isEqual","shared_label_colors","extraData","activeFilters","filterIdsAppliedOnChart","Object","entries","filter","scope","includes","id","map","filterId","length","extra_form_data","formData","form_data","chart_id","extra_filters","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/util/charts/getFormDataWithExtraFilters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataMask,\n  DataMaskStateWithId,\n  DataRecordFilters,\n  DataRecordValue,\n  JsonObject,\n  PartialFilters,\n} from '@superset-ui/core';\nimport { ChartConfiguration, ChartQueryPayload } from 'src/dashboard/types';\nimport { getExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { isEqual } from 'lodash';\nimport getEffectiveExtraFilters from './getEffectiveExtraFilters';\nimport { getAllActiveFilters } from '../activeAllDashboardFilters';\n\ninterface CachedFormData {\n  extra_form_data?: JsonObject;\n  extra_filters: {\n    col: string;\n    op: string;\n    val: DataRecordValue[];\n  }[];\n  own_color_scheme?: string;\n  color_scheme?: string;\n  color_namespace?: string;\n  chart_id: number;\n  label_colors?: Record<string, string>;\n  shared_label_colors?: string[];\n  map_label_colors?: Record<string, string>;\n}\n\nexport type CachedFormDataWithExtraControls = CachedFormData & {\n  [key: string]: any;\n};\n\n// We cache formData objects so that our connected container components don't always trigger\n// render cascades. we cannot leverage the reselect library because our cache size is >1\nconst cachedFiltersByChart: Record<number, DataRecordFilters> = {};\nconst cachedFormdataByChart: Record<\n  number,\n  CachedFormData & {\n    dataMask: DataMask;\n    extraControls: Record<string, string | boolean | null>;\n  }\n> = {};\n\nexport interface GetFormDataWithExtraFiltersArguments {\n  chartConfiguration: ChartConfiguration;\n  chart: ChartQueryPayload;\n  filters: DataRecordFilters;\n  colorScheme?: string;\n  ownColorScheme?: string;\n  colorNamespace?: string;\n  sliceId: number;\n  dataMask: DataMaskStateWithId;\n  nativeFilters: PartialFilters;\n  extraControls: Record<string, string | boolean | null>;\n  labelsColor?: Record<string, string>;\n  labelsColorMap?: Record<string, string>;\n  sharedLabelsColors?: string[];\n  allSliceIds: number[];\n}\n\n// this function merge chart's formData with dashboard filters value,\n// and generate a new formData which will be used in the new query.\n// filters param only contains those applicable to this chart.\nexport default function getFormDataWithExtraFilters({\n  chart,\n  filters,\n  nativeFilters,\n  chartConfiguration,\n  colorScheme,\n  ownColorScheme,\n  colorNamespace,\n  sliceId,\n  dataMask,\n  extraControls,\n  labelsColor,\n  labelsColorMap,\n  sharedLabelsColors,\n  allSliceIds,\n}: GetFormDataWithExtraFiltersArguments) {\n  // if dashboard metadata + filters have not changed, use cache if possible\n  const cachedFormData = cachedFormdataByChart[sliceId];\n  if (\n    cachedFiltersByChart[sliceId] === filters &&\n    areObjectsEqual(cachedFormData?.own_color_scheme, ownColorScheme) &&\n    areObjectsEqual(cachedFormData?.color_scheme, colorScheme) &&\n    areObjectsEqual(cachedFormData?.color_namespace, colorNamespace, {\n      ignoreUndefined: true,\n    }) &&\n    areObjectsEqual(cachedFormData?.label_colors, labelsColor, {\n      ignoreUndefined: true,\n    }) &&\n    areObjectsEqual(cachedFormData?.map_label_colors, labelsColorMap, {\n      ignoreUndefined: true,\n    }) &&\n    isEqual(cachedFormData?.shared_label_colors, sharedLabelsColors) &&\n    !!cachedFormData &&\n    areObjectsEqual(cachedFormData?.dataMask, dataMask, {\n      ignoreUndefined: true,\n    }) &&\n    areObjectsEqual(cachedFormData?.extraControls, extraControls, {\n      ignoreUndefined: true,\n    })\n  ) {\n    return cachedFormData;\n  }\n\n  let extraData: { extra_form_data?: JsonObject } = {};\n  const activeFilters = getAllActiveFilters({\n    chartConfiguration,\n    dataMask,\n    nativeFilters,\n    allSliceIds,\n  });\n  const filterIdsAppliedOnChart = Object.entries(activeFilters)\n    .filter(([, { scope }]) => scope.includes(chart.id))\n    .map(([filterId]) => filterId);\n  if (filterIdsAppliedOnChart.length) {\n    extraData = {\n      extra_form_data: getExtraFormData(dataMask, filterIdsAppliedOnChart),\n    };\n  }\n\n  const formData: CachedFormDataWithExtraControls = {\n    ...chart.form_data,\n    chart_id: chart.id,\n    label_colors: labelsColor,\n    shared_label_colors: sharedLabelsColors,\n    map_label_colors: labelsColorMap,\n    ...(colorScheme && { color_scheme: colorScheme }),\n    ...(ownColorScheme && {\n      own_color_scheme: ownColorScheme,\n    }),\n    extra_filters: getEffectiveExtraFilters(filters),\n    ...extraData,\n    ...extraControls,\n  };\n\n  cachedFiltersByChart[sliceId] = filters;\n  cachedFormdataByChart[sliceId] = { ...formData, dataMask, extraControls };\n\n  return formData;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}