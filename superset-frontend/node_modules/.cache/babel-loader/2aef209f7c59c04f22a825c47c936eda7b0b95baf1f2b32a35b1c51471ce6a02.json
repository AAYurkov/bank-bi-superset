{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, memo, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logEvent } from 'src/logger/actions';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { componentLookup } from 'src/dashboard/components/gridComponents';\nimport getDetailedComponentWidth from 'src/dashboard/util/getDetailedComponentWidth';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { COLUMN_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  createComponent,\n  deleteComponent,\n  updateComponents,\n  handleComponentDrop } from\n'src/dashboard/actions/dashboardLayout';\nimport {\n  setDirectPathToChild,\n  setActiveTab,\n  setFullSizeChartId } from\n'src/dashboard/actions/dashboardState';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.string,\n  parentId: PropTypes.string,\n  depth: PropTypes.number,\n  index: PropTypes.number,\n  renderHoverMenu: PropTypes.bool,\n  renderTabContent: PropTypes.bool,\n  onChangeTab: PropTypes.func,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  isComponentVisible: PropTypes.bool\n};\n\nconst DashboardComponent = (props) => {\n  const dispatch = useDispatch();\n  const dashboardLayout = useSelector((state) => state.dashboardLayout.present);\n  const dashboardInfo = useSelector((state) => state.dashboardInfo);\n  const editMode = useSelector((state) => state.dashboardState.editMode);\n  const fullSizeChartId = useSelector(\n    (state) => state.dashboardState.fullSizeChartId\n  );\n  const dashboardId = dashboardInfo.id;\n  const component = dashboardLayout[props.id];\n  const parentComponent = dashboardLayout[props.parentId];\n  const getComponentById = useCallback(\n    (id) => dashboardLayout[id],\n    [dashboardLayout]\n  );\n  const { isComponentVisible = true } = props;\n  const filters = getActiveFilters();\n  const embeddedMode = !dashboardInfo.userId;\n\n  const boundActionCreators = useMemo(\n    () =>\n    bindActionCreators(\n      {\n        addDangerToast,\n        createComponent,\n        deleteComponent,\n        updateComponents,\n        handleComponentDrop,\n        setDirectPathToChild,\n        setFullSizeChartId,\n        setActiveTab,\n        logEvent\n      },\n      dispatch\n    ),\n    [dispatch]\n  );\n\n  // rows and columns need more data about their child dimensions\n  // doing this allows us to not pass the entire component lookup to all Components\n  const { occupiedColumnCount, minColumnWidth } = useMemo(() => {\n    if (component) {\n      const componentType = component.type;\n      if (componentType === ROW_TYPE || componentType === COLUMN_TYPE) {\n        const { occupiedWidth, minimumWidth } = getDetailedComponentWidth({\n          id: props.id,\n          components: dashboardLayout\n        });\n\n        if (componentType === ROW_TYPE) {\n          return { occupiedColumnCount: occupiedWidth };\n        }\n        if (componentType === COLUMN_TYPE) {\n          return { minColumnWidth: minimumWidth };\n        }\n      }\n      return {};\n    }\n    return {};\n  }, [component, dashboardLayout, props.id]);\n\n  const Component = component ? componentLookup[component.type] : null;\n  return Component ?\n  _jsx(Component, { ...\n    props, ...\n    boundActionCreators,\n    component: component,\n    getComponentById: getComponentById,\n    parentComponent: parentComponent,\n    editMode: editMode,\n    filters: filters,\n    dashboardId: dashboardId,\n    dashboardInfo: dashboardInfo,\n    fullSizeChartId: fullSizeChartId,\n    occupiedColumnCount: occupiedColumnCount,\n    minColumnWidth: minColumnWidth,\n    isComponentVisible: isComponentVisible,\n    embeddedMode: embeddedMode }\n  ) :\n  null;\n};__signature__(DashboardComponent, \"useDispatch{dispatch}\\nuseSelector{dashboardLayout}\\nuseSelector{dashboardInfo}\\nuseSelector{editMode}\\nuseSelector{fullSizeChartId}\\nuseCallback{getComponentById}\\nuseMemo{boundActionCreators}\\nuseMemo{{ occupiedColumnCount, minColumnWidth }}\", () => [useDispatch, useSelector, useSelector, useSelector, useSelector]);\n\nDashboardComponent.propTypes = propTypes;const _default = /*#__PURE__*/\n\nmemo(DashboardComponent);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(DashboardComponent, \"DashboardComponent\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","memo","useMemo","PropTypes","bindActionCreators","useSelector","useDispatch","logEvent","addDangerToast","componentLookup","getDetailedComponentWidth","getActiveFilters","COLUMN_TYPE","ROW_TYPE","createComponent","deleteComponent","updateComponents","handleComponentDrop","setDirectPathToChild","setActiveTab","setFullSizeChartId","jsx","_jsx","propTypes","id","string","parentId","depth","number","index","renderHoverMenu","bool","renderTabContent","onChangeTab","func","directPathToChild","arrayOf","directPathLastUpdated","isComponentVisible","DashboardComponent","props","dispatch","dashboardLayout","state","present","dashboardInfo","editMode","dashboardState","fullSizeChartId","dashboardId","component","parentComponent","getComponentById","filters","embeddedMode","userId","boundActionCreators","occupiedColumnCount","minColumnWidth","componentType","type","occupiedWidth","minimumWidth","components","Component","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/containers/DashboardComponent.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, memo, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logEvent } from 'src/logger/actions';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { componentLookup } from 'src/dashboard/components/gridComponents';\nimport getDetailedComponentWidth from 'src/dashboard/util/getDetailedComponentWidth';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport { COLUMN_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  createComponent,\n  deleteComponent,\n  updateComponents,\n  handleComponentDrop,\n} from 'src/dashboard/actions/dashboardLayout';\nimport {\n  setDirectPathToChild,\n  setActiveTab,\n  setFullSizeChartId,\n} from 'src/dashboard/actions/dashboardState';\n\nconst propTypes = {\n  id: PropTypes.string,\n  parentId: PropTypes.string,\n  depth: PropTypes.number,\n  index: PropTypes.number,\n  renderHoverMenu: PropTypes.bool,\n  renderTabContent: PropTypes.bool,\n  onChangeTab: PropTypes.func,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  isComponentVisible: PropTypes.bool,\n};\n\nconst DashboardComponent = props => {\n  const dispatch = useDispatch();\n  const dashboardLayout = useSelector(state => state.dashboardLayout.present);\n  const dashboardInfo = useSelector(state => state.dashboardInfo);\n  const editMode = useSelector(state => state.dashboardState.editMode);\n  const fullSizeChartId = useSelector(\n    state => state.dashboardState.fullSizeChartId,\n  );\n  const dashboardId = dashboardInfo.id;\n  const component = dashboardLayout[props.id];\n  const parentComponent = dashboardLayout[props.parentId];\n  const getComponentById = useCallback(\n    id => dashboardLayout[id],\n    [dashboardLayout],\n  );\n  const { isComponentVisible = true } = props;\n  const filters = getActiveFilters();\n  const embeddedMode = !dashboardInfo.userId;\n\n  const boundActionCreators = useMemo(\n    () =>\n      bindActionCreators(\n        {\n          addDangerToast,\n          createComponent,\n          deleteComponent,\n          updateComponents,\n          handleComponentDrop,\n          setDirectPathToChild,\n          setFullSizeChartId,\n          setActiveTab,\n          logEvent,\n        },\n        dispatch,\n      ),\n    [dispatch],\n  );\n\n  // rows and columns need more data about their child dimensions\n  // doing this allows us to not pass the entire component lookup to all Components\n  const { occupiedColumnCount, minColumnWidth } = useMemo(() => {\n    if (component) {\n      const componentType = component.type;\n      if (componentType === ROW_TYPE || componentType === COLUMN_TYPE) {\n        const { occupiedWidth, minimumWidth } = getDetailedComponentWidth({\n          id: props.id,\n          components: dashboardLayout,\n        });\n\n        if (componentType === ROW_TYPE) {\n          return { occupiedColumnCount: occupiedWidth };\n        }\n        if (componentType === COLUMN_TYPE) {\n          return { minColumnWidth: minimumWidth };\n        }\n      }\n      return {};\n    }\n    return {};\n  }, [component, dashboardLayout, props.id]);\n\n  const Component = component ? componentLookup[component.type] : null;\n  return Component ? (\n    <Component\n      {...props}\n      {...boundActionCreators}\n      component={component}\n      getComponentById={getComponentById}\n      parentComponent={parentComponent}\n      editMode={editMode}\n      filters={filters}\n      dashboardId={dashboardId}\n      dashboardInfo={dashboardInfo}\n      fullSizeChartId={fullSizeChartId}\n      occupiedColumnCount={occupiedColumnCount}\n      minColumnWidth={minColumnWidth}\n      isComponentVisible={isComponentVisible}\n      embeddedMode={embeddedMode}\n    />\n  ) : null;\n};\n\nDashboardComponent.propTypes = propTypes;\n\nexport default memo(DashboardComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}