{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// eslint-disable-next-line no-restricted-syntax -- whole React import is required for `ControlPopover.test.tsx` Jest test passing.\nimport React, { useCallback, useRef, useEffect, useState } from 'react';\nimport Popover from 'src/components/Popover';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst sectionContainerId = 'controlSections';\nexport const getSectionContainerElement = () => {var _document$getElementB;return (_document$getElementB = document.getElementById(sectionContainerId)) == null ? void 0 : _document$getElementB.lastElementChild;};\nconst getElementVisibilityRatio = (node) => {var _window, _window2;\n  const containerHeight = (_window = window) == null ? void 0 : _window.innerHeight;\n  const containerWidth = (_window2 = window) == null ? void 0 : _window2.innerWidth;\n  const rect = node == null ? void 0 : node.getBoundingClientRect();\n  if (!containerHeight || !containerWidth || !(rect != null && rect.top)) {\n    return { yRatio: 0, xRatio: 0 };\n  }\n  const yRatio = rect.top / containerHeight;\n  const xRatio = rect.left / containerWidth;\n  return { yRatio, xRatio };\n};\nconst ControlPopover = ({ getPopupContainer, getVisibilityRatio = getElementVisibilityRatio, open: visibleProp, destroyTooltipOnHide = false, placement: initialPlacement = 'right', ...props }) => {\n  const triggerElementRef = useRef();\n  const [visible, setVisible] = useState(visibleProp === undefined ? props.defaultOpen : visibleProp);\n  const [placement, setPlacement] = React.useState(initialPlacement);\n  const calculatePlacement = useCallback(() => {\n    if (!triggerElementRef.current)\n    return;\n    const { yRatio, xRatio } = getVisibilityRatio(triggerElementRef.current);\n    const horizontalPlacement = xRatio < 0.35 ? 'right' : xRatio > 0.65 ? 'left' : '';\n    const verticalPlacement = (() => {\n      if (yRatio < 0.35)\n      return horizontalPlacement ? 'top' : 'bottom';\n      if (yRatio > 0.65)\n      return horizontalPlacement ? 'bottom' : 'top';\n      return '';\n    })();\n    const newPlacement = (horizontalPlacement ?\n    horizontalPlacement +\n    verticalPlacement.charAt(0).toUpperCase() +\n    verticalPlacement.slice(1) :\n    verticalPlacement) || 'left';\n    if (newPlacement !== placement) {\n      setPlacement(newPlacement);\n    }\n  }, [getVisibilityRatio]);\n  const changeContainerScrollStatus = useCallback((visible) => {\n    const element = getSectionContainerElement();\n    if (element) {\n      element.style.setProperty('overflow-y', visible ? 'hidden' : 'auto', 'important');\n    }\n  }, [calculatePlacement]);\n  const handleGetPopupContainer = useCallback((triggerNode) => {\n    triggerElementRef.current = triggerNode;\n    return (getPopupContainer == null ? void 0 : getPopupContainer(triggerNode)) || document.body;\n  }, [calculatePlacement, getPopupContainer]);\n  const handleOnVisibleChange = useCallback((visible) => {\n    if (visible === undefined) {\n      changeContainerScrollStatus(visible);\n    }\n    setVisible(!!visible);\n    props.onOpenChange == null ? void 0 : props.onOpenChange(!!visible);\n  }, [props, changeContainerScrollStatus]);\n  const handleDocumentKeyDownListener = useCallback((event) => {\n    if (event.key === 'Escape') {\n      setVisible(false);\n      props.onOpenChange == null ? void 0 : props.onOpenChange(false);\n    }\n  }, [props]);\n  useEffect(() => {\n    if (visibleProp !== undefined) {\n      setVisible(!!visibleProp);\n    }\n  }, [visibleProp]);\n  useEffect(() => {\n    if (visible !== undefined) {\n      changeContainerScrollStatus(visible);\n    }\n  }, [visible, changeContainerScrollStatus]);\n  useEffect(() => {\n    if (visible) {\n      document.addEventListener('keydown', handleDocumentKeyDownListener);\n    }\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDownListener);\n    };\n  }, [handleDocumentKeyDownListener, visible]);\n  useEffect(() => {\n    if (visible) {\n      calculatePlacement();\n    }\n  }, [visible, calculatePlacement]);\n  return _jsx(Popover, { ...props, open: visible, arrow: { pointAtCenter: true }, placement: placement, onOpenChange: handleOnVisibleChange, getPopupContainer: handleGetPopupContainer, destroyTooltipOnHide: destroyTooltipOnHide });\n};__signature__(ControlPopover, \"useRef{triggerElementRef}\\nuseState{[visible, setVisible](visibleProp === undefined ? props.defaultOpen : visibleProp)}\\nuseState{[placement, setPlacement](initialPlacement)}\\nuseCallback{calculatePlacement}\\nuseCallback{changeContainerScrollStatus}\\nuseCallback{handleGetPopupContainer}\\nuseCallback{handleOnVisibleChange}\\nuseCallback{handleDocumentKeyDownListener}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\");const _default =\nControlPopover;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(sectionContainerId, \"sectionContainerId\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ControlPopover/ControlPopover.tsx\");reactHotLoader.register(getSectionContainerElement, \"getSectionContainerElement\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ControlPopover/ControlPopover.tsx\");reactHotLoader.register(getElementVisibilityRatio, \"getElementVisibilityRatio\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ControlPopover/ControlPopover.tsx\");reactHotLoader.register(ControlPopover, \"ControlPopover\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ControlPopover/ControlPopover.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ControlPopover/ControlPopover.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["React","useCallback","useRef","useEffect","useState","Popover","jsx","_jsx","sectionContainerId","getSectionContainerElement","_document$getElementB","document","getElementById","lastElementChild","getElementVisibilityRatio","node","_window","_window2","containerHeight","window","innerHeight","containerWidth","innerWidth","rect","getBoundingClientRect","top","yRatio","xRatio","left","ControlPopover","getPopupContainer","getVisibilityRatio","open","visibleProp","destroyTooltipOnHide","placement","initialPlacement","props","triggerElementRef","visible","setVisible","undefined","defaultOpen","setPlacement","calculatePlacement","current","horizontalPlacement","verticalPlacement","newPlacement","charAt","toUpperCase","slice","changeContainerScrollStatus","element","style","setProperty","handleGetPopupContainer","triggerNode","body","handleOnVisibleChange","onOpenChange","handleDocumentKeyDownListener","event","key","addEventListener","removeEventListener","arrow","pointAtCenter","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/ControlPopover/ControlPopover.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// eslint-disable-next-line no-restricted-syntax -- whole React import is required for `ControlPopover.test.tsx` Jest test passing.\nimport React, { FC, useCallback, useRef, useEffect, useState } from 'react';\n\nimport Popover, {\n  PopoverProps as BasePopoverProps,\n} from 'src/components/Popover';\n\nimport { TooltipPlacement } from 'src/components/Tooltip';\n\nconst sectionContainerId = 'controlSections';\nexport const getSectionContainerElement = () =>\n  document.getElementById(sectionContainerId)?.lastElementChild as HTMLElement;\n\nconst getElementVisibilityRatio = (node?: HTMLElement) => {\n  const containerHeight = window?.innerHeight;\n  const containerWidth = window?.innerWidth;\n\n  const rect = node?.getBoundingClientRect();\n  if (!containerHeight || !containerWidth || !rect?.top) {\n    return { yRatio: 0, xRatio: 0 };\n  }\n\n  const yRatio = rect.top / containerHeight;\n  const xRatio = rect.left / containerWidth;\n  return { yRatio, xRatio };\n};\n\nexport type PopoverProps = BasePopoverProps & {\n  getVisibilityRatio?: typeof getElementVisibilityRatio;\n};\n\nconst ControlPopover: FC<PopoverProps> = ({\n  getPopupContainer,\n  getVisibilityRatio = getElementVisibilityRatio,\n  open: visibleProp,\n  destroyTooltipOnHide = false,\n  placement: initialPlacement = 'right',\n  ...props\n}) => {\n  const triggerElementRef = useRef<HTMLElement>();\n\n  const [visible, setVisible] = useState(\n    visibleProp === undefined ? props.defaultOpen : visibleProp,\n  );\n  const [placement, setPlacement] =\n    React.useState<TooltipPlacement>(initialPlacement);\n\n  const calculatePlacement = useCallback(() => {\n    if (!triggerElementRef.current) return;\n\n    const { yRatio, xRatio } = getVisibilityRatio(triggerElementRef.current);\n\n    const horizontalPlacement =\n      xRatio < 0.35 ? 'right' : xRatio > 0.65 ? 'left' : '';\n\n    const verticalPlacement = (() => {\n      if (yRatio < 0.35) return horizontalPlacement ? 'top' : 'bottom';\n      if (yRatio > 0.65) return horizontalPlacement ? 'bottom' : 'top';\n      return '';\n    })();\n\n    const newPlacement =\n      ((horizontalPlacement\n        ? horizontalPlacement +\n          verticalPlacement.charAt(0).toUpperCase() +\n          verticalPlacement.slice(1)\n        : verticalPlacement) as TooltipPlacement) || 'left';\n    if (newPlacement !== placement) {\n      setPlacement(newPlacement);\n    }\n  }, [getVisibilityRatio]);\n\n  const changeContainerScrollStatus = useCallback(\n    visible => {\n      const element = getSectionContainerElement();\n      if (element) {\n        element.style.setProperty(\n          'overflow-y',\n          visible ? 'hidden' : 'auto',\n          'important',\n        );\n      }\n    },\n    [calculatePlacement],\n  );\n\n  const handleGetPopupContainer = useCallback(\n    (triggerNode: HTMLElement) => {\n      triggerElementRef.current = triggerNode;\n\n      return getPopupContainer?.(triggerNode) || document.body;\n    },\n    [calculatePlacement, getPopupContainer],\n  );\n\n  const handleOnVisibleChange = useCallback(\n    (visible: boolean | undefined) => {\n      if (visible === undefined) {\n        changeContainerScrollStatus(visible);\n      }\n\n      setVisible(!!visible);\n      props.onOpenChange?.(!!visible);\n    },\n    [props, changeContainerScrollStatus],\n  );\n\n  const handleDocumentKeyDownListener = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setVisible(false);\n        props.onOpenChange?.(false);\n      }\n    },\n    [props],\n  );\n\n  useEffect(() => {\n    if (visibleProp !== undefined) {\n      setVisible(!!visibleProp);\n    }\n  }, [visibleProp]);\n\n  useEffect(() => {\n    if (visible !== undefined) {\n      changeContainerScrollStatus(visible);\n    }\n  }, [visible, changeContainerScrollStatus]);\n\n  useEffect(() => {\n    if (visible) {\n      document.addEventListener('keydown', handleDocumentKeyDownListener);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDownListener);\n    };\n  }, [handleDocumentKeyDownListener, visible]);\n\n  useEffect(() => {\n    if (visible) {\n      calculatePlacement();\n    }\n  }, [visible, calculatePlacement]);\n\n  return (\n    <Popover\n      {...props}\n      open={visible}\n      arrow={{ pointAtCenter: true }}\n      placement={placement}\n      onOpenChange={handleOnVisibleChange}\n      getPopupContainer={handleGetPopupContainer}\n      destroyTooltipOnHide={destroyTooltipOnHide}\n    />\n  );\n};\n\nexport default ControlPopover;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}