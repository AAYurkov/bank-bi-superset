{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * Get the available versions of WFS and WMS.\n *\n * @returns the versions\n */\nexport const getServiceVersions = () => ({\n  WMS: ['1.3.0', '1.1.1'],\n  WFS: ['2.0.2', '2.0.0', '1.1.0']\n});\n/**\n * Checks if all required WFS params are provided.\n *\n * @param layerConf The config to check\n * @returns True, if all required params are provided. False, otherwise.\n */\nexport const hasAllRequiredWfsParams = (layerConf) => layerConf.url && layerConf.version && layerConf.typeName;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getServiceVersions, \"getServiceVersions\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/serviceUtil.ts\");reactHotLoader.register(hasAllRequiredWfsParams, \"hasAllRequiredWfsParams\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/serviceUtil.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getServiceVersions","WMS","WFS","hasAllRequiredWfsParams","layerConf","url","version","typeName","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/serviceUtil.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { WfsLayerConf } from './types';\n\n/**\n * Get the available versions of WFS and WMS.\n *\n * @returns the versions\n */\nexport const getServiceVersions = () => ({\n  WMS: ['1.3.0', '1.1.1'],\n  WFS: ['2.0.2', '2.0.0', '1.1.0'],\n});\n\n/**\n * Checks if all required WFS params are provided.\n *\n * @param layerConf The config to check\n * @returns True, if all required params are provided. False, otherwise.\n */\nexport const hasAllRequiredWfsParams = (layerConf: WfsLayerConf) =>\n  layerConf.url && layerConf.version && layerConf.typeName;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA;;;;;AAKA,OAAO,MAAMA,kBAAkB,GAAGA,CAAA,MAAO;EACvCC,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;EACvBC,GAAG,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;CAChC,CAAC;AAEF;;;;;;AAMA,OAAO,MAAMC,uBAAuB,GAAGA,CAACC,SAAuB,KAC7DA,SAAS,CAACC,GAAG,IAAID,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACG,QAAQ,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAZ9CZ,kBAAkB,yIAAAQ,cAAA,CAAAI,QAAA,CAWlBT,uBAAuB,sKAAAU,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}