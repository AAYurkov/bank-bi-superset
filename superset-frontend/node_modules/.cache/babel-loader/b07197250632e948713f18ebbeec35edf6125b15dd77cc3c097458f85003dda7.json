{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\n// <- When we work with Immer, we need reassign, so disabling lint\nimport { produce } from 'immer';\nimport { NATIVE_FILTER_PREFIX } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/utils';\nimport { HYDRATE_DASHBOARD } from 'src/dashboard/actions/hydrate';\nimport { CLEAR_DATA_MASK_STATE, SET_DATA_MASK_FOR_FILTER_CHANGES_COMPLETE, UPDATE_DATA_MASK } from './actions';\nimport { areObjectsEqual } from '../reduxUtils';\nexport function getInitialDataMask(id, moreProps = {}) {\n  return {\n    ...(id !== undefined ? { id } : {}),\n    extraFormData: {},\n    filterState: {},\n    ownState: {},\n    ...moreProps\n  };\n}\nfunction fillNativeFilters(filterConfig, mergedDataMask, draftDataMask, initialDataMask, currentFilters) {\n  filterConfig.forEach((filter) => {var _currentFilters$filte;\n    const dataMask = initialDataMask || {};\n    mergedDataMask[filter.id] = {\n      ...getInitialDataMask(filter.id),\n      ...filter.defaultDataMask,\n      ...dataMask[filter.id]\n    };\n    if (currentFilters &&\n    !areObjectsEqual(filter.defaultDataMask, (_currentFilters$filte = currentFilters[filter.id]) == null ? void 0 : _currentFilters$filte.defaultDataMask, { ignoreUndefined: true })) {\n      mergedDataMask[filter.id] = {\n        ...mergedDataMask[filter.id],\n        ...filter.defaultDataMask\n      };\n    }\n  });\n  // Get back all other non-native filters\n  Object.values(draftDataMask).forEach((filter) => {\n    if (!String(filter == null ? void 0 : filter.id).startsWith(NATIVE_FILTER_PREFIX)) {\n      mergedDataMask[filter == null ? void 0 : filter.id] = filter;\n    }\n  });\n}\nfunction updateDataMaskForFilterChanges(filterChanges, mergedDataMask, draftDataMask, initialDataMask) {\n  const dataMask = initialDataMask || {};\n  Object.entries(dataMask).forEach(([key, value]) => {\n    mergedDataMask[key] = { ...value, ...value.defaultDataMask };\n  });\n  filterChanges.deleted.forEach((filterId) => {\n    delete mergedDataMask[filterId];\n  });\n  filterChanges.modified.forEach((filter) => {\n    mergedDataMask[filter.id] = {\n      ...getInitialDataMask(filter.id),\n      ...filter.defaultDataMask,\n      ...filter\n    };\n  });\n  Object.values(draftDataMask).forEach((filter) => {\n    if (!String(filter == null ? void 0 : filter.id).startsWith(NATIVE_FILTER_PREFIX)) {\n      mergedDataMask[filter == null ? void 0 : filter.id] = filter;\n    }\n  });\n}\nconst dataMaskReducer = produce((draft, action) => {var _action$data$dashboar, _action$data$dashboar2, _action$data$dashboar3, _action$data$dashboar4, _action$data$dashboar5;\n  const cleanState = {};\n  switch (action.type) {\n    case CLEAR_DATA_MASK_STATE:\n      return cleanState;\n    case UPDATE_DATA_MASK:\n      draft[action.filterId] = {\n        ...getInitialDataMask(action.filterId),\n        ...draft[action.filterId],\n        ...action.dataMask\n      };\n      return draft;\n    // TODO: update hydrate to .ts\n    // @ts-ignore\n    case HYDRATE_DASHBOARD:\n      Object.keys(\n      // @ts-ignore\n      (_action$data$dashboar = action.data.dashboardInfo) == null ? void 0 : (_action$data$dashboar2 = _action$data$dashboar.metadata) == null ? void 0 : _action$data$dashboar2.chart_configuration).forEach((id) => {\n        cleanState[id] = {\n          ...getInitialDataMask(id) // take initial data\n        };\n      });\n      fillNativeFilters(\n      // @ts-ignore\n      (_action$data$dashboar3 = (_action$data$dashboar4 = action.data.dashboardInfo) == null ? void 0 : (_action$data$dashboar5 = _action$data$dashboar4.metadata) == null ? void 0 : _action$data$dashboar5.native_filter_configuration) != null ? _action$data$dashboar3 :\n      [], cleanState, draft,\n      // @ts-ignore\n      action.data.dataMask);\n      return cleanState;\n    case SET_DATA_MASK_FOR_FILTER_CHANGES_COMPLETE:\n      updateDataMaskForFilterChanges(action.filterChanges, cleanState, draft, action.filters);\n      return cleanState;\n    default:\n      return draft;\n  }\n}, {});const _default =\ndataMaskReducer;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getInitialDataMask, \"getInitialDataMask\", \"/Users/aryurkov/superset/superset-frontend/src/dataMask/reducer.ts\");reactHotLoader.register(fillNativeFilters, \"fillNativeFilters\", \"/Users/aryurkov/superset/superset-frontend/src/dataMask/reducer.ts\");reactHotLoader.register(updateDataMaskForFilterChanges, \"updateDataMaskForFilterChanges\", \"/Users/aryurkov/superset/superset-frontend/src/dataMask/reducer.ts\");reactHotLoader.register(dataMaskReducer, \"dataMaskReducer\", \"/Users/aryurkov/superset/superset-frontend/src/dataMask/reducer.ts\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dataMask/reducer.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["produce","NATIVE_FILTER_PREFIX","HYDRATE_DASHBOARD","CLEAR_DATA_MASK_STATE","SET_DATA_MASK_FOR_FILTER_CHANGES_COMPLETE","UPDATE_DATA_MASK","areObjectsEqual","getInitialDataMask","id","moreProps","undefined","extraFormData","filterState","ownState","fillNativeFilters","filterConfig","mergedDataMask","draftDataMask","initialDataMask","currentFilters","forEach","filter","_currentFilters$filte","dataMask","defaultDataMask","ignoreUndefined","Object","values","String","startsWith","updateDataMaskForFilterChanges","filterChanges","entries","key","value","deleted","filterId","modified","dataMaskReducer","draft","action","_action$data$dashboar","_action$data$dashboar2","_action$data$dashboar3","_action$data$dashboar4","_action$data$dashboar5","cleanState","type","keys","data","dashboardInfo","metadata","chart_configuration","native_filter_configuration","filters","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dataMask/reducer.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable no-param-reassign */\n// <- When we work with Immer, we need reassign, so disabling lint\nimport { produce } from 'immer';\nimport {\n  DataMask,\n  DataMaskStateWithId,\n  DataMaskWithId,\n  Filter,\n  FilterConfiguration,\n  Filters,\n} from '@superset-ui/core';\nimport { NATIVE_FILTER_PREFIX } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/utils';\nimport { HYDRATE_DASHBOARD } from 'src/dashboard/actions/hydrate';\nimport { SaveFilterChangesType } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/types';\nimport {\n  AnyDataMaskAction,\n  CLEAR_DATA_MASK_STATE,\n  SET_DATA_MASK_FOR_FILTER_CHANGES_COMPLETE,\n  UPDATE_DATA_MASK,\n} from './actions';\nimport { areObjectsEqual } from '../reduxUtils';\n\nexport function getInitialDataMask(\n  id?: string | number,\n  moreProps: DataMask = {},\n): DataMask | DataMaskWithId {\n  return {\n    ...(id !== undefined ? { id } : {}),\n    extraFormData: {},\n    filterState: {},\n    ownState: {},\n    ...moreProps,\n  } as DataMask | DataMaskWithId;\n}\n\nfunction fillNativeFilters(\n  filterConfig: FilterConfiguration,\n  mergedDataMask: DataMaskStateWithId,\n  draftDataMask: DataMaskStateWithId,\n  initialDataMask?: DataMaskStateWithId,\n  currentFilters?: Filters,\n) {\n  filterConfig.forEach((filter: Filter) => {\n    const dataMask = initialDataMask || {};\n    mergedDataMask[filter.id] = {\n      ...getInitialDataMask(filter.id), // take initial data\n      ...filter.defaultDataMask, // if something new came from BE - take it\n      ...dataMask[filter.id],\n    };\n    if (\n      currentFilters &&\n      !areObjectsEqual(\n        filter.defaultDataMask,\n        currentFilters[filter.id]?.defaultDataMask,\n        { ignoreUndefined: true },\n      )\n    ) {\n      mergedDataMask[filter.id] = {\n        ...mergedDataMask[filter.id],\n        ...filter.defaultDataMask,\n      };\n    }\n  });\n\n  // Get back all other non-native filters\n  Object.values(draftDataMask).forEach(filter => {\n    if (!String(filter?.id).startsWith(NATIVE_FILTER_PREFIX)) {\n      mergedDataMask[filter?.id] = filter;\n    }\n  });\n}\n\nfunction updateDataMaskForFilterChanges(\n  filterChanges: SaveFilterChangesType,\n  mergedDataMask: DataMaskStateWithId,\n  draftDataMask: DataMaskStateWithId,\n  initialDataMask?: Filters,\n) {\n  const dataMask = initialDataMask || {};\n\n  Object.entries(dataMask).forEach(([key, value]) => {\n    mergedDataMask[key] = { ...value, ...value.defaultDataMask };\n  });\n\n  filterChanges.deleted.forEach((filterId: string) => {\n    delete mergedDataMask[filterId];\n  });\n\n  filterChanges.modified.forEach((filter: Filter) => {\n    mergedDataMask[filter.id] = {\n      ...getInitialDataMask(filter.id),\n      ...filter.defaultDataMask,\n      ...filter,\n    };\n  });\n\n  Object.values(draftDataMask).forEach(filter => {\n    if (!String(filter?.id).startsWith(NATIVE_FILTER_PREFIX)) {\n      mergedDataMask[filter?.id] = filter;\n    }\n  });\n}\n\nconst dataMaskReducer = produce(\n  (draft: DataMaskStateWithId, action: AnyDataMaskAction) => {\n    const cleanState: DataMaskStateWithId = {};\n    switch (action.type) {\n      case CLEAR_DATA_MASK_STATE:\n        return cleanState;\n      case UPDATE_DATA_MASK:\n        draft[action.filterId] = {\n          ...getInitialDataMask(action.filterId),\n          ...draft[action.filterId],\n          ...action.dataMask,\n        };\n        return draft;\n      // TODO: update hydrate to .ts\n      // @ts-ignore\n      case HYDRATE_DASHBOARD:\n        Object.keys(\n          // @ts-ignore\n          action.data.dashboardInfo?.metadata?.chart_configuration,\n        ).forEach(id => {\n          cleanState[id] = {\n            ...(getInitialDataMask(id) as DataMaskWithId), // take initial data\n          };\n        });\n        fillNativeFilters(\n          // @ts-ignore\n          action.data.dashboardInfo?.metadata?.native_filter_configuration ??\n            [],\n          cleanState,\n          draft,\n          // @ts-ignore\n          action.data.dataMask,\n        );\n        return cleanState;\n      case SET_DATA_MASK_FOR_FILTER_CHANGES_COMPLETE:\n        updateDataMaskForFilterChanges(\n          action.filterChanges,\n          cleanState,\n          draft,\n          action.filters,\n        );\n        return cleanState;\n      default:\n        return draft;\n    }\n  },\n  {},\n);\n\nexport default dataMaskReducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}