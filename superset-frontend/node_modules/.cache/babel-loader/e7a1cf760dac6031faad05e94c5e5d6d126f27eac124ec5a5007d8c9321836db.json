{"ast":null,"code":"import _merge from \"lodash/merge\";var _bootstrapData$common, _bootstrapData$user;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { setConfig as setHotLoaderConfig } from 'react-hot-loader';\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport dayjs from 'dayjs';\n// eslint-disable-next-line no-restricted-imports\nimport { configure, makeApi,\n// eslint-disable-next-line no-restricted-imports\nsupersetTheme, // TODO: DO not import theme directly\ninitFeatureFlags } from '@superset-ui/core';\n\nimport setupClient from './setup/setupClient';\nimport setupColors from './setup/setupColors';\nimport setupFormatters from './setup/setupFormatters';\nimport setupDashboardComponents from './setup/setupDashboardComponents';\nimport getBootstrapData, { applicationRoot } from './utils/getBootstrapData';\nif (process.env.WEBPACK_MODE === 'development') {\n  setHotLoaderConfig({ logLevel: 'debug', trackTailUpdates: false });\n}\n// eslint-disable-next-line import/no-mutable-exports\nconst bootstrapData = getBootstrapData();\n// Configure translation\nif (typeof window !== 'undefined') {\n  configure({ languagePack: bootstrapData.common.language_pack });\n  dayjs.locale(bootstrapData.common.locale);\n} else\n{\n  configure();\n}\n// Configure feature flags\ninitFeatureFlags(bootstrapData.common.feature_flags);\n// Setup SupersetClient\nsetupClient({ appRoot: applicationRoot() });\nsetupColors(bootstrapData.common.extra_categorical_color_schemes, bootstrapData.common.extra_sequential_color_schemes);\n// Setup number formatters\nsetupFormatters(bootstrapData.common.d3_format, bootstrapData.common.d3_time_format);\nsetupDashboardComponents();\nexport const theme = _merge(supersetTheme, (_bootstrapData$common = bootstrapData.common.theme_overrides) != null ? _bootstrapData$common : {});\nconst getMe = makeApi({\n  method: 'GET',\n  endpoint: '/api/v1/me/'\n});\n/**\n * When you re-open the window, we check if you are still logged in.\n * If your session expired or you signed out, we'll redirect to login.\n * If you aren't logged in in the first place (!isActive), then we shouldn't do this.\n */\nif ((_bootstrapData$user = bootstrapData.user) != null && _bootstrapData$user.isActive) {\n  document.addEventListener('visibilitychange', () => {\n    // we only care about the tab becoming visible, not vice versa\n    if (document.visibilityState !== 'visible')\n    return;\n    getMe().catch(() => {\n\n      // ignore error, SupersetClient will redirect to login on a 401\n    });});\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(bootstrapData, \"bootstrapData\", \"/Users/aryurkov/superset/superset-frontend/src/preamble.ts\");reactHotLoader.register(theme, \"theme\", \"/Users/aryurkov/superset/superset-frontend/src/preamble.ts\");reactHotLoader.register(getMe, \"getMe\", \"/Users/aryurkov/superset/superset-frontend/src/preamble.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["setConfig","setHotLoaderConfig","dayjs","configure","makeApi","supersetTheme","initFeatureFlags","setupClient","setupColors","setupFormatters","setupDashboardComponents","getBootstrapData","applicationRoot","process","env","WEBPACK_MODE","logLevel","trackTailUpdates","bootstrapData","window","languagePack","common","language_pack","locale","feature_flags","appRoot","extra_categorical_color_schemes","extra_sequential_color_schemes","d3_format","d3_time_format","theme","_merge","_bootstrapData$common","theme_overrides","getMe","method","endpoint","_bootstrapData$user","user","isActive","document","addEventListener","visibilityState","catch","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/preamble.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { setConfig as setHotLoaderConfig } from 'react-hot-loader';\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\nimport dayjs from 'dayjs';\n// eslint-disable-next-line no-restricted-imports\nimport {\n  configure,\n  makeApi,\n  // eslint-disable-next-line no-restricted-imports\n  supersetTheme, // TODO: DO not import theme directly\n  initFeatureFlags,\n} from '@superset-ui/core';\nimport { merge } from 'lodash';\nimport setupClient from './setup/setupClient';\nimport setupColors from './setup/setupColors';\nimport setupFormatters from './setup/setupFormatters';\nimport setupDashboardComponents from './setup/setupDashboardComponents';\nimport { User } from './types/bootstrapTypes';\nimport getBootstrapData, { applicationRoot } from './utils/getBootstrapData';\n\nif (process.env.WEBPACK_MODE === 'development') {\n  setHotLoaderConfig({ logLevel: 'debug', trackTailUpdates: false });\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nconst bootstrapData = getBootstrapData();\n\n// Configure translation\nif (typeof window !== 'undefined') {\n  configure({ languagePack: bootstrapData.common.language_pack });\n  dayjs.locale(bootstrapData.common.locale);\n} else {\n  configure();\n}\n\n// Configure feature flags\ninitFeatureFlags(bootstrapData.common.feature_flags);\n\n// Setup SupersetClient\nsetupClient({ appRoot: applicationRoot() });\n\nsetupColors(\n  bootstrapData.common.extra_categorical_color_schemes,\n  bootstrapData.common.extra_sequential_color_schemes,\n);\n\n// Setup number formatters\nsetupFormatters(\n  bootstrapData.common.d3_format,\n  bootstrapData.common.d3_time_format,\n);\n\nsetupDashboardComponents();\n\nexport const theme = merge(\n  supersetTheme,\n  bootstrapData.common.theme_overrides ?? {},\n);\n\nconst getMe = makeApi<void, User>({\n  method: 'GET',\n  endpoint: '/api/v1/me/',\n});\n\n/**\n * When you re-open the window, we check if you are still logged in.\n * If your session expired or you signed out, we'll redirect to login.\n * If you aren't logged in in the first place (!isActive), then we shouldn't do this.\n */\nif (bootstrapData.user?.isActive) {\n  document.addEventListener('visibilitychange', () => {\n    // we only care about the tab becoming visible, not vice versa\n    if (document.visibilityState !== 'visible') return;\n\n    getMe().catch(() => {\n      // ignore error, SupersetClient will redirect to login on a 401\n    });\n  });\n}\n"],"mappings":"yXAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,IAAIC,kBAAkB,QAAQ,kBAAkB;AAClE,OAAO,6DAA6D;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,SACEC,SAAS,EACTC,OAAO;AACP;AACAC,aAAa,EAAE;AACfC,gBAAgB,QACX,mBAAmB;;AAE1B,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,wBAAwB,MAAM,kCAAkC;AAEvE,OAAOC,gBAAgB,IAAIC,eAAe,QAAQ,0BAA0B;AAE5E,IAAIC,OAAO,CAACC,GAAG,CAACC,YAAY,KAAK,aAAa,EAAE;EAC9Cd,kBAAkB,CAAC,EAAEe,QAAQ,EAAE,OAAO,EAAEC,gBAAgB,EAAE,KAAK,EAAE,CAAC;;AAGpE;AACA,MAAMC,aAAa,GAAGP,gBAAgB,EAAE;AAExC;AACA,IAAI,OAAOQ,MAAM,KAAK,WAAW,EAAE;EACjChB,SAAS,CAAC,EAAEiB,YAAY,EAAEF,aAAa,CAACG,MAAM,CAACC,aAAa,EAAE,CAAC;EAC/DpB,KAAK,CAACqB,MAAM,CAACL,aAAa,CAACG,MAAM,CAACE,MAAM,CAAC;CAC1C;AAAM;EACLpB,SAAS,EAAE;;AAGb;AACAG,gBAAgB,CAACY,aAAa,CAACG,MAAM,CAACG,aAAa,CAAC;AAEpD;AACAjB,WAAW,CAAC,EAAEkB,OAAO,EAAEb,eAAe,EAAE,EAAE,CAAC;AAE3CJ,WAAW,CACTU,aAAa,CAACG,MAAM,CAACK,+BAA+B,EACpDR,aAAa,CAACG,MAAM,CAACM,8BAA8B,CACpD;AAED;AACAlB,eAAe,CACbS,aAAa,CAACG,MAAM,CAACO,SAAS,EAC9BV,aAAa,CAACG,MAAM,CAACQ,cAAc,CACpC;AAEDnB,wBAAwB,EAAE;AAE1B,OAAO,MAAMoB,KAAK,GAAGC,MAAA,CACnB1B,aAAa,GAAA2B,qBAAA,GACbd,aAAa,CAACG,MAAM,CAACY,eAAe,YAAAD,qBAAA,GAAI,EAAE,CAC3C;AAED,MAAME,KAAK,GAAG9B,OAAO,CAAa;EAChC+B,MAAM,EAAE,KAAK;EACbC,QAAQ,EAAE;CACX,CAAC;AAEF;;;;;AAKA,KAAAC,mBAAA,GAAInB,aAAa,CAACoB,IAAI,aAAlBD,mBAAA,CAAoBE,QAAQ,EAAE;EAChCC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAK;IACjD;IACA,IAAID,QAAQ,CAACE,eAAe,KAAK,SAAS;IAAE;IAE5CR,KAAK,EAAE,CAACS,KAAK,CAAC,MAAK;;MACjB;IAAA,CACD,CAAC,CACJ,CAAC,CAAC;CACH,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CArDK9B,aAAa,iFAAA0B,cAAA,CAAAI,QAAA,CA6BNlB,KAAK,yEAAAc,cAAA,CAAAI,QAAA,CAKZd,KAAK,iGAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}