{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, useTheme } from '@superset-ui/core';\nimport { Icons } from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport Button from 'src/components/Button';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst SaveDatasetActionButton = ({ setShowSave, overlayMenu }) => {\n  const theme = useTheme();\n  return !overlayMenu ? _jsx(Button, { onClick: () => setShowSave(true), buttonStyle: \"primary\", children:\n    t('Save') }\n  ) : _jsx(DropdownButton, { onClick: () => setShowSave(true), dropdownRender: () => overlayMenu, icon: _jsx(Icons.DownOutlined, { iconSize: \"xs\", iconColor: theme.colors.primary.dark2 }), trigger: ['click'], children:\n    t('Save') }\n  );\n};__signature__(SaveDatasetActionButton, \"useTheme{theme}\", () => [useTheme]);const _default =\nSaveDatasetActionButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SaveDatasetActionButton, \"SaveDatasetActionButton\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/SaveDatasetActionButton/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/SaveDatasetActionButton/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","useTheme","Icons","DropdownButton","Button","jsx","_jsx","SaveDatasetActionButton","setShowSave","overlayMenu","theme","onClick","buttonStyle","children","dropdownRender","icon","DownOutlined","iconSize","iconColor","colors","primary","dark2","trigger","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/SqlLab/components/SaveDatasetActionButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, useTheme } from '@superset-ui/core';\nimport { Icons } from 'src/components/Icons';\nimport { DropdownButton } from 'src/components/DropdownButton';\nimport Button from 'src/components/Button';\n\ninterface SaveDatasetActionButtonProps {\n  setShowSave: (arg0: boolean) => void;\n  overlayMenu: JSX.Element | null;\n}\n\nconst SaveDatasetActionButton = ({\n  setShowSave,\n  overlayMenu,\n}: SaveDatasetActionButtonProps) => {\n  const theme = useTheme();\n\n  return !overlayMenu ? (\n    <Button onClick={() => setShowSave(true)} buttonStyle=\"primary\">\n      {t('Save')}\n    </Button>\n  ) : (\n    <DropdownButton\n      onClick={() => setShowSave(true)}\n      dropdownRender={() => overlayMenu}\n      icon={\n        <Icons.DownOutlined\n          iconSize=\"xs\"\n          iconColor={theme.colors.primary.dark2}\n        />\n      }\n      trigger={['click']}\n    >\n      {t('Save')}\n    </DropdownButton>\n  );\n};\n\nexport default SaveDatasetActionButton;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAC,EAAEC,QAAQ,QAAQ,mBAAmB;AAC/C,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,OAAOC,MAAM,MAAM,uBAAuB,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAO3C,MAAMC,uBAAuB,GAAGA,CAAC,EAC/BC,WAAW,EACXC,WAAW,EACkB,KAAI;EACjC,MAAMC,KAAK,GAAGT,QAAQ,EAAE;EAExB,OAAO,CAACQ,WAAW,GACjBH,IAAA,CAACF,MAAM,IAACO,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,IAAI,CAAE,EAACI,WAAW,EAAC,SAAS,EAAAC,QAAA;IAC5Db,CAAC,CAAC,MAAM,CAAC;EACJ,CAAC,GAETM,IAAA,CAACH,cAAc,IACbQ,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAAC,IAAI,CAAE,EACjCM,cAAc,EAAEA,CAAA,KAAML,WAAY,EAClCM,IAAI,EACFT,IAAA,CAACJ,KAAK,CAACc,YAAY,IACjBC,QAAQ,EAAC,IAAI,EACbC,SAAS,EAAER,KAAK,CAACS,MAAM,CAACC,OAAO,CAACC,KAAM,GAEzC,EACDC,OAAO,EAAE,CAAC,OAAO,CAAE,EAAAT,QAAA;IAElBb,CAAC,CAAC,MAAM,CAAC;EACI,CACjB;AACH,CAAC,CAACuB,aAAA,CAzBIhB,uBAAuB,4BAIbN,QAAQ,SAAAuB,QAAA;AAuBTjB,uBAAuB,CAAtC,eAAAiB,QAAA,CAAuC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA3BjCtB,uBAAuB,mIAAAkB,cAAA,CAAAI,QAAA,CAAAL,QAAA,2IAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}