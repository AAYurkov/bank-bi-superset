{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TAB_TYPE } from 'src/dashboard/util/componentTypes';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport cx from 'classnames';\nimport { css, styled } from '@superset-ui/core';\n\nimport { componentShape } from '../../util/propShapes';\nimport { dragConfig, dropConfig } from './dragDroppableConfig';\nimport { DROP_FORBIDDEN } from '../../util/getDropPosition';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  children: PropTypes.func,\n  className: PropTypes.string,\n  component: componentShape,\n  parentComponent: componentShape,\n  depth: PropTypes.number.isRequired,\n  disableDragDrop: PropTypes.bool,\n  dropToChild: PropTypes.bool,\n  orientation: PropTypes.oneOf(['row', 'column']),\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  onDrop: PropTypes.func,\n  onHover: PropTypes.func,\n  onDropIndicatorChange: PropTypes.func,\n  onDragTab: PropTypes.func,\n  editMode: PropTypes.bool,\n  useEmptyDragPreview: PropTypes.bool,\n\n  // from react-dnd\n  isDragging: PropTypes.bool,\n  isDraggingOver: PropTypes.bool,\n  isDraggingOverShallow: PropTypes.bool,\n  dragComponentType: PropTypes.string,\n  dragComponentId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  droppableRef: PropTypes.func,\n  dragSourceRef: PropTypes.func,\n  dragPreviewRef: PropTypes.func\n};\n\nconst defaultProps = {\n  className: null,\n  style: null,\n  parentComponent: null,\n  disableDragDrop: false,\n  dropToChild: false,\n  children() {},\n  onDrop() {},\n  onHover() {},\n  onDropIndicatorChange() {},\n  onDragTab() {},\n  orientation: 'row',\n  useEmptyDragPreview: false,\n  isDragging: false,\n  isDraggingOver: false,\n  isDraggingOverShallow: false,\n  droppableRef() {},\n  dragSourceRef() {},\n  dragPreviewRef() {}\n};\n\nconst DragDroppableStyles = styled.div`\n  ${({ theme }) => css`\n    position: relative;\n    /*\n      Next line is a workaround for a bug in react-dnd where the drag\n      preview expands outside of the bounds of the drag source card, see:\n      https://github.com/react-dnd/react-dnd/issues/832#issuecomment-442071628\n    */\n    &.dragdroppable--edit-mode {\n      transform: translate3d(0, 0, 0);\n    }\n\n    &.dragdroppable--dragging {\n      opacity: 0.2;\n    }\n\n    &.dragdroppable-row {\n      width: 100%;\n    }\n\n    &.dragdroppable-column .resizable-container span div {\n      z-index: 10;\n    }\n\n    & {\n      .drop-indicator {\n        display: block;\n        background-color: ${theme.colors.primary.base};\n        position: absolute;\n        z-index: 10;\n        opacity: 0.3;\n        width: 100%;\n        height: 100%;\n        &.drop-indicator--forbidden {\n          background-color: ${theme.colors.error.light1};\n        }\n      }\n    }\n  `};\n`;\n// export unwrapped component for testing\nexport class UnwrappedDragDroppable extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropIndicator: null // this gets set/modified by the react-dnd HOCs\n    };\n    this.setRef = this.setRef.bind(this);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      onDropIndicatorChange,\n      isDraggingOver,\n      component,\n      index,\n      dragComponentId,\n      onDragTab\n    } = this.props;\n    const { dropIndicator } = this.state;\n    const isTabsType = component.type === TAB_TYPE;\n    const validStateChange =\n    dropIndicator !== prevState.dropIndicator ||\n    isDraggingOver !== prevProps.isDraggingOver ||\n    index !== prevProps.index;\n\n    if (onDropIndicatorChange && isTabsType && validStateChange) {\n      onDropIndicatorChange({ dropIndicator, isDraggingOver, index });\n    }\n\n    if (dragComponentId !== prevProps.dragComponentId) {\n      setTimeout(() => {\n        /**\n         * This timeout ensures the dargSourceRef and dragPreviewRef are set\n         * before the component is removed in Tabs.jsx. Otherwise react-dnd\n         * will not render the drag preview.\n         */\n        onDragTab(dragComponentId);\n      });\n    }\n  }\n\n  setRef(ref) {var _this$props$droppable, _this$props;\n    this.ref = ref;\n    // this is needed for a custom drag preview\n    if (this.props.useEmptyDragPreview) {\n      this.props.dragPreviewRef(getEmptyImage(), {\n        // IE fallback: specify that we'd rather screenshot the node\n        // when it already knows it's being dragged so we can hide it with CSS.\n        captureDraggingState: true\n      });\n    } else {\n      this.props.dragPreviewRef(ref);\n    }\n    (_this$props$droppable = (_this$props = this.props).droppableRef) == null ? void 0 : _this$props$droppable.call(_this$props, ref);\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      orientation,\n      dragSourceRef,\n      disableDragDrop,\n      isDragging,\n      isDraggingOver,\n      style,\n      editMode,\n      component,\n      dragComponentType\n    } = this.props;\n\n    const { dropIndicator } = this.state;\n    const dropIndicatorProps =\n    isDraggingOver && dropIndicator && !disableDragDrop ?\n    {\n      className: cx(\n        'drop-indicator',\n        dropIndicator === DROP_FORBIDDEN && 'drop-indicator--forbidden'\n      )\n    } :\n    null;\n\n    const draggingTabOnTab =\n    component.type === TAB_TYPE && dragComponentType === TAB_TYPE;\n\n    const childProps = editMode ?\n    {\n      dragSourceRef,\n      dropIndicatorProps,\n      draggingTabOnTab,\n      'data-test': 'dragdroppable-content'\n    } :\n    {\n      'data-test': 'dragdroppable-content'\n    };\n\n    return (\n      _jsx(DragDroppableStyles, {\n        style: style,\n        ref: this.setRef,\n        \"data-test\": \"dragdroppable-object\",\n        className: cx(\n          'dragdroppable',\n          editMode && 'dragdroppable--edit-mode',\n          orientation === 'row' && 'dragdroppable-row',\n          orientation === 'column' && 'dragdroppable-column',\n          isDragging && 'dragdroppable--dragging',\n          className\n        ), children:\n\n        children(childProps) }\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nUnwrappedDragDroppable.propTypes = propTypes;\nUnwrappedDragDroppable.defaultProps = defaultProps;\n\nexport const Draggable = DragSource(...dragConfig)(UnwrappedDragDroppable);\nexport const Droppable = DropTarget(...dropConfig)(UnwrappedDragDroppable);\n\n// note that the composition order here determines using\n// component.method() vs decoratedComponentInstance.method() in the drag/drop config\nexport const DragDroppable = DragSource(...dragConfig)(\n  DropTarget(...dropConfig)(UnwrappedDragDroppable)\n);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx\");reactHotLoader.register(DragDroppableStyles, \"DragDroppableStyles\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx\");reactHotLoader.register(UnwrappedDragDroppable, \"UnwrappedDragDroppable\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx\");reactHotLoader.register(Draggable, \"Draggable\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx\");reactHotLoader.register(Droppable, \"Droppable\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx\");reactHotLoader.register(DragDroppable, \"DragDroppable\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getEmptyImage","PureComponent","PropTypes","TAB_TYPE","DragSource","DropTarget","cx","css","styled","componentShape","dragConfig","dropConfig","DROP_FORBIDDEN","jsx","_jsx","propTypes","children","func","className","string","component","parentComponent","depth","number","isRequired","disableDragDrop","bool","dropToChild","orientation","oneOf","index","style","object","onDrop","onHover","onDropIndicatorChange","onDragTab","editMode","useEmptyDragPreview","isDragging","isDraggingOver","isDraggingOverShallow","dragComponentType","dragComponentId","oneOfType","droppableRef","dragSourceRef","dragPreviewRef","defaultProps","DragDroppableStyles","div","theme","colors","primary","base","error","light1","UnwrappedDragDroppable","constructor","props","state","dropIndicator","setRef","bind","componentDidMount","mounted","componentWillUnmount","componentDidUpdate","prevProps","prevState","isTabsType","type","validStateChange","setTimeout","ref","_this$props$droppable","_this$props","captureDraggingState","call","render","dropIndicatorProps","draggingTabOnTab","childProps","__reactstandin__regenerateByEval","key","code","eval","Draggable","Droppable","DragDroppable","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/DragDroppable.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TAB_TYPE } from 'src/dashboard/util/componentTypes';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport cx from 'classnames';\nimport { css, styled } from '@superset-ui/core';\n\nimport { componentShape } from '../../util/propShapes';\nimport { dragConfig, dropConfig } from './dragDroppableConfig';\nimport { DROP_FORBIDDEN } from '../../util/getDropPosition';\n\nconst propTypes = {\n  children: PropTypes.func,\n  className: PropTypes.string,\n  component: componentShape,\n  parentComponent: componentShape,\n  depth: PropTypes.number.isRequired,\n  disableDragDrop: PropTypes.bool,\n  dropToChild: PropTypes.bool,\n  orientation: PropTypes.oneOf(['row', 'column']),\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  onDrop: PropTypes.func,\n  onHover: PropTypes.func,\n  onDropIndicatorChange: PropTypes.func,\n  onDragTab: PropTypes.func,\n  editMode: PropTypes.bool,\n  useEmptyDragPreview: PropTypes.bool,\n\n  // from react-dnd\n  isDragging: PropTypes.bool,\n  isDraggingOver: PropTypes.bool,\n  isDraggingOverShallow: PropTypes.bool,\n  dragComponentType: PropTypes.string,\n  dragComponentId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  droppableRef: PropTypes.func,\n  dragSourceRef: PropTypes.func,\n  dragPreviewRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  className: null,\n  style: null,\n  parentComponent: null,\n  disableDragDrop: false,\n  dropToChild: false,\n  children() {},\n  onDrop() {},\n  onHover() {},\n  onDropIndicatorChange() {},\n  onDragTab() {},\n  orientation: 'row',\n  useEmptyDragPreview: false,\n  isDragging: false,\n  isDraggingOver: false,\n  isDraggingOverShallow: false,\n  droppableRef() {},\n  dragSourceRef() {},\n  dragPreviewRef() {},\n};\n\nconst DragDroppableStyles = styled.div`\n  ${({ theme }) => css`\n    position: relative;\n    /*\n      Next line is a workaround for a bug in react-dnd where the drag\n      preview expands outside of the bounds of the drag source card, see:\n      https://github.com/react-dnd/react-dnd/issues/832#issuecomment-442071628\n    */\n    &.dragdroppable--edit-mode {\n      transform: translate3d(0, 0, 0);\n    }\n\n    &.dragdroppable--dragging {\n      opacity: 0.2;\n    }\n\n    &.dragdroppable-row {\n      width: 100%;\n    }\n\n    &.dragdroppable-column .resizable-container span div {\n      z-index: 10;\n    }\n\n    & {\n      .drop-indicator {\n        display: block;\n        background-color: ${theme.colors.primary.base};\n        position: absolute;\n        z-index: 10;\n        opacity: 0.3;\n        width: 100%;\n        height: 100%;\n        &.drop-indicator--forbidden {\n          background-color: ${theme.colors.error.light1};\n        }\n      }\n    }\n  `};\n`;\n// export unwrapped component for testing\nexport class UnwrappedDragDroppable extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropIndicator: null, // this gets set/modified by the react-dnd HOCs\n    };\n    this.setRef = this.setRef.bind(this);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      onDropIndicatorChange,\n      isDraggingOver,\n      component,\n      index,\n      dragComponentId,\n      onDragTab,\n    } = this.props;\n    const { dropIndicator } = this.state;\n    const isTabsType = component.type === TAB_TYPE;\n    const validStateChange =\n      dropIndicator !== prevState.dropIndicator ||\n      isDraggingOver !== prevProps.isDraggingOver ||\n      index !== prevProps.index;\n\n    if (onDropIndicatorChange && isTabsType && validStateChange) {\n      onDropIndicatorChange({ dropIndicator, isDraggingOver, index });\n    }\n\n    if (dragComponentId !== prevProps.dragComponentId) {\n      setTimeout(() => {\n        /**\n         * This timeout ensures the dargSourceRef and dragPreviewRef are set\n         * before the component is removed in Tabs.jsx. Otherwise react-dnd\n         * will not render the drag preview.\n         */\n        onDragTab(dragComponentId);\n      });\n    }\n  }\n\n  setRef(ref) {\n    this.ref = ref;\n    // this is needed for a custom drag preview\n    if (this.props.useEmptyDragPreview) {\n      this.props.dragPreviewRef(getEmptyImage(), {\n        // IE fallback: specify that we'd rather screenshot the node\n        // when it already knows it's being dragged so we can hide it with CSS.\n        captureDraggingState: true,\n      });\n    } else {\n      this.props.dragPreviewRef(ref);\n    }\n    this.props.droppableRef?.(ref);\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      orientation,\n      dragSourceRef,\n      disableDragDrop,\n      isDragging,\n      isDraggingOver,\n      style,\n      editMode,\n      component,\n      dragComponentType,\n    } = this.props;\n\n    const { dropIndicator } = this.state;\n    const dropIndicatorProps =\n      isDraggingOver && dropIndicator && !disableDragDrop\n        ? {\n            className: cx(\n              'drop-indicator',\n              dropIndicator === DROP_FORBIDDEN && 'drop-indicator--forbidden',\n            ),\n          }\n        : null;\n\n    const draggingTabOnTab =\n      component.type === TAB_TYPE && dragComponentType === TAB_TYPE;\n\n    const childProps = editMode\n      ? {\n          dragSourceRef,\n          dropIndicatorProps,\n          draggingTabOnTab,\n          'data-test': 'dragdroppable-content',\n        }\n      : {\n          'data-test': 'dragdroppable-content',\n        };\n\n    return (\n      <DragDroppableStyles\n        style={style}\n        ref={this.setRef}\n        data-test=\"dragdroppable-object\"\n        className={cx(\n          'dragdroppable',\n          editMode && 'dragdroppable--edit-mode',\n          orientation === 'row' && 'dragdroppable-row',\n          orientation === 'column' && 'dragdroppable-column',\n          isDragging && 'dragdroppable--dragging',\n          className,\n        )}\n      >\n        {children(childProps)}\n      </DragDroppableStyles>\n    );\n  }\n}\n\nUnwrappedDragDroppable.propTypes = propTypes;\nUnwrappedDragDroppable.defaultProps = defaultProps;\n\nexport const Draggable = DragSource(...dragConfig)(UnwrappedDragDroppable);\nexport const Droppable = DropTarget(...dropConfig)(UnwrappedDragDroppable);\n\n// note that the composition order here determines using\n// component.method() vs decoratedComponentInstance.method() in the drag/drop config\nexport const DragDroppable = DragSource(...dragConfig)(\n  DropTarget(...dropConfig)(UnwrappedDragDroppable),\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}