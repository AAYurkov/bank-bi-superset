{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Radio as Antd5Radio } from 'antd-v5';\nimport { Space } from 'src/components/Space';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst RadioGroup = ({ spaceConfig, options, ...props }) => {\n  const content = options.map((option) => _jsx(Radio, { value: option.value, children:\n    option.label }, option.value\n  ));\n  return _jsx(Radio.Group, { ...props, children:\n    spaceConfig ? _jsx(Space, { ...spaceConfig, children: content }) : content }\n  );\n};\nexport const Radio = Object.assign(Antd5Radio, {\n  GroupWrapper: RadioGroup,\n  Button: Antd5Radio.Button\n});;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RadioGroup, \"RadioGroup\", \"/Users/aryurkov/superset/superset-frontend/src/components/Radio/index.tsx\");reactHotLoader.register(Radio, \"Radio\", \"/Users/aryurkov/superset/superset-frontend/src/components/Radio/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Radio","Antd5Radio","Space","jsx","_jsx","RadioGroup","spaceConfig","options","props","content","map","option","value","children","label","Group","Object","assign","GroupWrapper","Button","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/Radio/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Radio as Antd5Radio, CheckboxOptionType } from 'antd-v5';\nimport type {\n  RadioChangeEvent,\n  RadioProps,\n  RadioGroupProps,\n} from 'antd-v5/lib/radio';\n\nimport { Space, SpaceProps } from 'src/components/Space';\n\nexport type RadioGroupWrapperProps = RadioGroupProps & {\n  spaceConfig?: {\n    direction?: SpaceProps['direction'];\n    size?: SpaceProps['size'];\n    align?: SpaceProps['align'];\n    wrap?: SpaceProps['wrap'];\n  };\n  options: CheckboxOptionType[];\n};\n\nconst RadioGroup = ({\n  spaceConfig,\n  options,\n  ...props\n}: RadioGroupWrapperProps) => {\n  const content = options.map((option: CheckboxOptionType) => (\n    <Radio key={option.value} value={option.value}>\n      {option.label}\n    </Radio>\n  ));\n  return (\n    <Radio.Group {...props}>\n      {spaceConfig ? <Space {...spaceConfig}>{content}</Space> : content}\n    </Radio.Group>\n  );\n};\nexport type {\n  RadioChangeEvent,\n  RadioGroupProps,\n  RadioProps,\n  CheckboxOptionType,\n};\nexport const Radio = Object.assign(Antd5Radio, {\n  GroupWrapper: RadioGroup,\n  Button: Antd5Radio.Button,\n});\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,KAAK,IAAIC,UAAU,QAA4B,SAAS;AAOjE,SAASC,KAAK,QAAoB,sBAAsB,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAYzD,MAAMC,UAAU,GAAGA,CAAC,EAClBC,WAAW,EACXC,OAAO,EACP,GAAGC,KAAK,EACe,KAAI;EAC3B,MAAMC,OAAO,GAAGF,OAAO,CAACG,GAAG,CAAC,CAACC,MAA0B,KACrDP,IAAA,CAACJ,KAAK,IAAoBY,KAAK,EAAED,MAAM,CAACC,KAAM,EAAAC,QAAA;IAC3CF,MAAM,CAACG,KAAK,IADHH,MAAM,CAACC;EAEZ,CACR,CAAC;EACF,OACER,IAAA,CAACJ,KAAK,CAACe,KAAK,OAAKP,KAAK,EAAAK,QAAA;IACnBP,WAAW,GAAGF,IAAA,CAACF,KAAK,OAAKI,WAAW,EAAAO,QAAA,EAAGJ,OAAO,EAAQ,CAAC,GAAGA,OAAO;EACvD,CAAC;AAElB,CAAC;AAOD,OAAO,MAAMT,KAAK,GAAGgB,MAAM,CAACC,MAAM,CAAChB,UAAU,EAAE;EAC7CiB,YAAY,EAAEb,UAAU;EACxBc,MAAM,EAAElB,UAAU,CAACkB;CACpB,CAAC,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAzBGnB,UAAU,6FAAAe,cAAA,CAAAI,QAAA,CAsBHxB,KAAK,gHAAAyB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}