{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport FormModal from 'src/components/Modal/FormModal';\nimport { createRole, updateRolePermissions } from './utils';\nimport { PermissionsField, RoleNameField } from './RoleFormItems';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nfunction RoleListAddModal({ show, onHide, onSave, permissions }) {\n  const { addDangerToast, addSuccessToast } = useToasts();\n  const handleFormSubmit = async (values) => {\n    try {var _values$rolePermissio;\n      const { json: roleResponse } = await createRole(values.roleName);\n      if (((_values$rolePermissio = values.rolePermissions) == null ? void 0 : _values$rolePermissio.length) > 0) {\n        await updateRolePermissions(roleResponse.id, values.rolePermissions);\n      }\n      addSuccessToast(t('Role was successfully created!'));\n    }\n    catch (err) {\n      addDangerToast(t('Error while adding role!'));\n      throw err;\n    }\n  };\n  return _jsx(FormModal, { show: show, onHide: onHide, title: t('Add Role'), onSave: onSave, formSubmitHandler: handleFormSubmit, requiredFields: ['roleName'], initialValues: {}, children:\n    _jsxs(_Fragment, { children: [\n      _jsx(RoleNameField, {}),\n      _jsx(PermissionsField, { permissions: permissions })] }\n    ) }\n  );\n}__signature__(RoleListAddModal, \"useToasts{{ addDangerToast, addSuccessToast }}\", () => [useToasts]);const _default =\nRoleListAddModal;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RoleListAddModal, \"RoleListAddModal\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListAddModal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListAddModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","useToasts","FormModal","createRole","updateRolePermissions","PermissionsField","RoleNameField","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RoleListAddModal","show","onHide","onSave","permissions","addDangerToast","addSuccessToast","handleFormSubmit","values","_values$rolePermissio","json","roleResponse","roleName","rolePermissions","length","id","err","title","formSubmitHandler","requiredFields","initialValues","children","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/features/roles/RoleListAddModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport FormModal from 'src/components/Modal/FormModal';\nimport { createRole, updateRolePermissions } from './utils';\nimport { PermissionsField, RoleNameField } from './RoleFormItems';\nimport { BaseModalProps, FormattedPermission, RoleForm } from './types';\n\nexport interface RoleListAddModalProps extends BaseModalProps {\n  permissions: FormattedPermission[];\n}\n\nfunction RoleListAddModal({\n  show,\n  onHide,\n  onSave,\n  permissions,\n}: RoleListAddModalProps) {\n  const { addDangerToast, addSuccessToast } = useToasts();\n\n  const handleFormSubmit = async (values: RoleForm) => {\n    try {\n      const { json: roleResponse } = await createRole(values.roleName);\n\n      if (values.rolePermissions?.length > 0) {\n        await updateRolePermissions(roleResponse.id, values.rolePermissions);\n      }\n\n      addSuccessToast(t('Role was successfully created!'));\n    } catch (err) {\n      addDangerToast(t('Error while adding role!'));\n      throw err;\n    }\n  };\n\n  return (\n    <FormModal\n      show={show}\n      onHide={onHide}\n      title={t('Add Role')}\n      onSave={onSave}\n      formSubmitHandler={handleFormSubmit}\n      requiredFields={['roleName']}\n      initialValues={{}}\n    >\n      <>\n        <RoleNameField />\n        <PermissionsField permissions={permissions} />\n      </>\n    </FormModal>\n  );\n}\n\nexport default RoleListAddModal;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAC,QAAQ,mBAAmB;AACrC,SAASC,SAAS,QAAQ,yCAAyC;AACnE,OAAOC,SAAS,MAAM,gCAAgC;AACtD,SAASC,UAAU,EAAEC,qBAAqB,QAAQ,SAAS;AAC3D,SAASC,gBAAgB,EAAEC,aAAa,QAAQ,iBAAiB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAOlE,SAASC,gBAAgBA,CAAC,EACxBC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,WAAW,EACW;EACtB,MAAM,EAAEC,cAAc,EAAEC,eAAe,EAAE,GAAGlB,SAAS,EAAE;EAEvD,MAAMmB,gBAAgB,GAAG,MAAAA,CAAOC,MAAgB,KAAI;IAClD,IAAI,KAAAC,qBAAA;MACF,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAE,GAAG,MAAMrB,UAAU,CAACkB,MAAM,CAACI,QAAQ,CAAC;MAEhE,IAAI,EAAAH,qBAAA,GAAAD,MAAM,CAACK,eAAe,qBAAtBJ,qBAAA,CAAwBK,MAAM,IAAG,CAAC,EAAE;QACtC,MAAMvB,qBAAqB,CAACoB,YAAY,CAACI,EAAE,EAAEP,MAAM,CAACK,eAAe,CAAC;;MAGtEP,eAAe,CAACnB,CAAC,CAAC,gCAAgC,CAAC,CAAC;;IACpD,OAAO6B,GAAG,EAAE;MACZX,cAAc,CAAClB,CAAC,CAAC,0BAA0B,CAAC,CAAC;MAC7C,MAAM6B,GAAG;;EAEb,CAAC;EAED,OACErB,IAAA,CAACN,SAAS,IACRY,IAAI,EAAEA,IAAK,EACXC,MAAM,EAAEA,MAAO,EACfe,KAAK,EAAE9B,CAAC,CAAC,UAAU,CAAE,EACrBgB,MAAM,EAAEA,MAAO,EACfe,iBAAiB,EAAEX,gBAAiB,EACpCY,cAAc,EAAE,CAAC,UAAU,CAAE,EAC7BC,aAAa,EAAE,EAAG,EAAAC,QAAA;IAElBtB,KAAA,CAAAF,SAAA,IAAAwB,QAAA;MACE1B,IAAA,CAACF,aAAa,KACd;MAAAE,IAAA,CAACH,gBAAgB,IAACY,WAAW,EAAEA,WAAY,GAC7C;IAAA,CACF;EAAW,CAAC;AAEhB,CAACkB,aAAA,CAvCQtB,gBAAgB,2DAMqBZ,SAAS,SAAAmC,QAAA;AAmCxCvB,gBAAgB,CAA/B,eAAAuB,QAAA,CAAgC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAzCvB5B,gBAAgB,4GAAAwB,cAAA,CAAAI,QAAA,CAAAL,QAAA,2HAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}