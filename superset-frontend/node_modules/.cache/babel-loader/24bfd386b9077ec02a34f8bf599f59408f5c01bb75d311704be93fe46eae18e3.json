{"ast":null,"code":"import _debounce from \"lodash/debounce\";import _isEqual from \"lodash/isEqual\";import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { memo, useEffect, useState, useCallback, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SLOW_DEBOUNCE, isNativeFilter, usePrevious, styled } from '@superset-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { updateDataMask, clearDataMask } from 'src/dataMask/actions';\nimport { useImmer } from 'use-immer';\n\nimport { getInitialDataMask } from 'src/dataMask/reducer';\nimport { URL_PARAMS } from 'src/constants';\nimport { applicationRoot } from 'src/utils/getBootstrapData';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { useTabId } from 'src/hooks/useTabId';\nimport { logEvent } from 'src/logger/actions';\nimport { LOG_ACTIONS_CHANGE_DASHBOARD_FILTER } from 'src/logger/LogUtils';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { checkIsApplyDisabled } from './utils';\nimport { useNativeFiltersDataMask, useFilters, useFilterUpdates, useInitialization } from './state';\nimport { createFilterKey, updateFilterKey } from './keyValue';\nimport ActionButtons from './ActionButtons';\nimport Horizontal from './Horizontal';\nimport Vertical from './Vertical';\nimport { useSelectFiltersInScope } from '../state';\n// FilterBar is just being hidden as it must still\n// render fully due to encapsulated logics\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";const HiddenFilterBar = styled.div`\n  display: none;\n`;\nconst EXCLUDED_URL_PARAMS = [\nURL_PARAMS.nativeFilters.name,\nURL_PARAMS.permalinkKey.name];\n\nconst publishDataMask = _debounce(async (history, dashboardId, updateKey, dataMaskSelected, tabId) => {\n  const { location } = history;\n  const { search } = location;\n  const previousParams = new URLSearchParams(search);\n  const newParams = new URLSearchParams();\n  let dataMaskKey;\n  previousParams.forEach((value, key) => {\n    if (!EXCLUDED_URL_PARAMS.includes(key)) {\n      newParams.append(key, value);\n    }\n  });\n  const nativeFiltersCacheKey = getUrlParam(URL_PARAMS.nativeFiltersKey);\n  const dataMask = JSON.stringify(dataMaskSelected);\n  if (updateKey &&\n  nativeFiltersCacheKey && (\n  await updateFilterKey(dashboardId, dataMask, nativeFiltersCacheKey, tabId))) {\n    dataMaskKey = nativeFiltersCacheKey;\n  } else\n  {\n    dataMaskKey = await createFilterKey(dashboardId, dataMask, tabId);\n  }\n  if (dataMaskKey) {\n    newParams.set(URL_PARAMS.nativeFiltersKey.name, dataMaskKey);\n  }\n  // pathname could be updated somewhere else through window.history\n  // keep react router history in sync with window history\n  // replace params only when current page is /superset/dashboard\n  // this prevents a race condition between updating filters and navigating to Explore\n  if (window.location.pathname.includes('/superset/dashboard')) {\n    // The history API is part of React router and understands that a basename may exist.\n    // Internally it treats all paths as if they are relative to the root and appends\n    // it when necessary. We strip any prefix so that history.replace adds it back and doesn't\n    // double it up.\n    const appRoot = applicationRoot();\n    let replacement_pathname = window.location.pathname;\n    if (appRoot !== '/' && replacement_pathname.startsWith(appRoot)) {\n      replacement_pathname = replacement_pathname.substring(appRoot.length);\n    }\n    history.location.pathname = replacement_pathname;\n    history.replace({\n      search: newParams.toString()\n    });\n  }\n}, SLOW_DEBOUNCE);\nconst FilterBar = ({ orientation = FilterBarOrientation.Vertical, verticalConfig, hidden = false }) => {\n  const history = useHistory();\n  const dataMaskApplied = useNativeFiltersDataMask();\n  const [dataMaskSelected, setDataMaskSelected] = useImmer(dataMaskApplied);\n  const dispatch = useDispatch();\n  const [updateKey, setUpdateKey] = useState(0);\n  const tabId = useTabId();\n  const filters = useFilters();\n  const previousFilters = usePrevious(filters);\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const nativeFilterValues = useMemo(() => filterValues.filter(isNativeFilter), [filterValues]);\n  const dashboardId = useSelector(({ dashboardInfo }) => dashboardInfo == null ? void 0 : dashboardInfo.id);\n  const previousDashboardId = usePrevious(dashboardId);\n  const canEdit = useSelector(({ dashboardInfo }) => dashboardInfo.dash_edit_perm);\n  const user = useSelector((state) => state.user);\n  const [filtersInScope] = useSelectFiltersInScope(nativeFilterValues);\n  const dataMaskSelectedRef = useRef(dataMaskSelected);\n  dataMaskSelectedRef.current = dataMaskSelected;\n  const handleFilterSelectionChange = useCallback((filter, dataMask) => {\n    setDataMaskSelected((draft) => {var _dataMask$filterState, _dataMaskSelectedRef$, _dataMaskSelectedRef$2;\n      // force instant updating on initialization for filters with `requiredFirst` is true or instant filters\n      if (\n      // filterState.value === undefined - means that value not initialized\n      ((_dataMask$filterState = dataMask.filterState) == null ? void 0 : _dataMask$filterState.value) !== undefined &&\n      ((_dataMaskSelectedRef$ = dataMaskSelectedRef.current[filter.id]) == null ? void 0 : (_dataMaskSelectedRef$2 = _dataMaskSelectedRef$.filterState) == null ? void 0 : _dataMaskSelectedRef$2.value) ===\n      undefined &&\n      filter.requiredFirst) {\n        dispatch(updateDataMask(filter.id, dataMask));\n      }\n      draft[filter.id] = {\n        ...getInitialDataMask(filter.id),\n        ...dataMask\n      };\n    });\n  }, [dispatch, setDataMaskSelected]);\n  useEffect(() => {\n    if (previousFilters && dashboardId === previousDashboardId) {\n      const updates = {};\n      Object.values(filters).forEach((currentFilter) => {\n        const previousFilter = previousFilters == null ? void 0 : previousFilters[currentFilter.id];\n        if (!previousFilter) {\n          return;\n        }\n        const currentType = currentFilter.filterType;\n        const currentTargets = currentFilter.targets;\n        const currentDataMask = currentFilter.defaultDataMask;\n        const previousType = previousFilter == null ? void 0 : previousFilter.filterType;\n        const previousTargets = previousFilter == null ? void 0 : previousFilter.targets;\n        const previousDataMask = previousFilter == null ? void 0 : previousFilter.defaultDataMask;\n        const typeChanged = currentType !== previousType;\n        const targetsChanged = !_isEqual(currentTargets, previousTargets);\n        const dataMaskChanged = !_isEqual(currentDataMask, previousDataMask);\n        if (typeChanged || targetsChanged || dataMaskChanged) {\n          updates[currentFilter.id] = getInitialDataMask(currentFilter.id);\n        }\n      });\n      if (!_isEmpty(updates)) {\n        setDataMaskSelected((draft) => ({ ...draft, ...updates }));\n      }\n    }\n  }, [dashboardId, filters, previousDashboardId, setDataMaskSelected]);\n  const dataMaskAppliedText = JSON.stringify(dataMaskApplied);\n  useEffect(() => {\n    setDataMaskSelected(() => dataMaskApplied);\n  }, [dataMaskAppliedText, setDataMaskSelected]);\n  useEffect(() => {\n    // embedded users can't persist filter combinations\n    if (user != null && user.userId) {\n      publishDataMask(history, dashboardId, updateKey, dataMaskApplied, tabId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dashboardId, dataMaskAppliedText, history, updateKey, tabId]);\n  const handleApply = useCallback(() => {\n    dispatch(logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, {}));\n    const filterIds = Object.keys(dataMaskSelected);\n    setUpdateKey(1);\n    filterIds.forEach((filterId) => {\n      if (dataMaskSelected[filterId]) {\n        dispatch(updateDataMask(filterId, dataMaskSelected[filterId]));\n      }\n    });\n  }, [dataMaskSelected, dispatch]);\n  const handleClearAll = useCallback(() => {\n    const clearDataMaskIds = [];\n    let dispatchAllowed = false;\n    filtersInScope.filter(isNativeFilter).forEach((filter) => {\n      const { id } = filter;\n      if (dataMaskSelected[id]) {var _filter$controlValues;\n        if ((_filter$controlValues = filter.controlValues) != null && _filter$controlValues.enableEmptyFilter) {\n          dispatchAllowed = false;\n        }\n        clearDataMaskIds.push(id);\n        setDataMaskSelected((draft) => {var _draft$id$filterState;\n          if (((_draft$id$filterState = draft[id].filterState) == null ? void 0 : _draft$id$filterState.value) !== undefined) {\n            draft[id].filterState.value = undefined;\n          }\n        });\n      }\n    });\n    if (dispatchAllowed) {\n      clearDataMaskIds.forEach((id) => dispatch(clearDataMask(id)));\n    }\n  }, [dataMaskSelected, dispatch, filtersInScope, setDataMaskSelected]);\n  useFilterUpdates(dataMaskSelected, setDataMaskSelected);\n  const isApplyDisabled = checkIsApplyDisabled(dataMaskSelected, dataMaskApplied, filtersInScope.filter(isNativeFilter));\n  const isInitialized = useInitialization();\n  const actions = useMemo(() => _jsx(ActionButtons, { filterBarOrientation: orientation, width: verticalConfig == null ? void 0 : verticalConfig.width, onApply: handleApply, onClearAll: handleClearAll, dataMaskSelected: dataMaskSelected, dataMaskApplied: dataMaskApplied, isApplyDisabled: isApplyDisabled }), [\n  orientation,\n  verticalConfig == null ? void 0 : verticalConfig.width,\n  handleApply,\n  handleClearAll,\n  dataMaskSelected,\n  dataMaskAppliedText,\n  isApplyDisabled]\n  );\n  const filterBarComponent = orientation === FilterBarOrientation.Horizontal ? _jsx(Horizontal, { actions: actions, canEdit: canEdit, dashboardId: dashboardId, dataMaskSelected: dataMaskSelected, filterValues: filterValues, isInitialized: isInitialized, onSelectionChange: handleFilterSelectionChange }) : verticalConfig ? _jsx(Vertical, { actions: actions, canEdit: canEdit, dataMaskSelected: dataMaskSelected, filtersOpen: verticalConfig.filtersOpen, filterValues: filterValues, isInitialized: isInitialized, height: verticalConfig.height, offset: verticalConfig.offset, onSelectionChange: handleFilterSelectionChange, toggleFiltersBar: verticalConfig.toggleFiltersBar, width: verticalConfig.width }) : null;\n  return hidden ? _jsx(HiddenFilterBar, { children: filterBarComponent }) : filterBarComponent;\n};__signature__(FilterBar, \"useHistory{history}\\nuseNativeFiltersDataMask{dataMaskApplied}\\nuseImmer{[dataMaskSelected, setDataMaskSelected]}\\nuseDispatch{dispatch}\\nuseState{[updateKey, setUpdateKey](0)}\\nuseTabId{tabId}\\nuseFilters{filters}\\nusePrevious{previousFilters}\\nuseMemo{filterValues}\\nuseMemo{nativeFilterValues}\\nuseSelector{dashboardId}\\nusePrevious{previousDashboardId}\\nuseSelector{canEdit}\\nuseSelector{user}\\nuseSelectFiltersInScope{[filtersInScope]}\\nuseRef{dataMaskSelectedRef}\\nuseCallback{handleFilterSelectionChange}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{handleApply}\\nuseCallback{handleClearAll}\\nuseFilterUpdates{}\\nuseInitialization{isInitialized}\\nuseMemo{actions}\", () => [useHistory, useNativeFiltersDataMask, useImmer, useDispatch, useTabId, useFilters, usePrevious, useSelector, usePrevious, useSelector, useSelector, useSelectFiltersInScope, useFilterUpdates, useInitialization]);const _default = /*#__PURE__*/\nmemo(FilterBar);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(HiddenFilterBar, \"HiddenFilterBar\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/index.tsx\");reactHotLoader.register(EXCLUDED_URL_PARAMS, \"EXCLUDED_URL_PARAMS\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/index.tsx\");reactHotLoader.register(publishDataMask, \"publishDataMask\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/index.tsx\");reactHotLoader.register(FilterBar, \"FilterBar\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["memo","useEffect","useState","useCallback","useRef","useMemo","useDispatch","useSelector","SLOW_DEBOUNCE","isNativeFilter","usePrevious","styled","useHistory","updateDataMask","clearDataMask","useImmer","getInitialDataMask","URL_PARAMS","applicationRoot","getUrlParam","useTabId","logEvent","LOG_ACTIONS_CHANGE_DASHBOARD_FILTER","FilterBarOrientation","checkIsApplyDisabled","useNativeFiltersDataMask","useFilters","useFilterUpdates","useInitialization","createFilterKey","updateFilterKey","ActionButtons","Horizontal","Vertical","useSelectFiltersInScope","jsx","_jsx","HiddenFilterBar","div","EXCLUDED_URL_PARAMS","nativeFilters","name","permalinkKey","publishDataMask","_debounce","history","dashboardId","updateKey","dataMaskSelected","tabId","location","search","previousParams","URLSearchParams","newParams","dataMaskKey","forEach","value","key","includes","append","nativeFiltersCacheKey","nativeFiltersKey","dataMask","JSON","stringify","set","window","pathname","appRoot","replacement_pathname","startsWith","substring","length","replace","toString","FilterBar","orientation","verticalConfig","hidden","dataMaskApplied","setDataMaskSelected","dispatch","setUpdateKey","filters","previousFilters","filterValues","Object","values","nativeFilterValues","filter","dashboardInfo","id","previousDashboardId","canEdit","dash_edit_perm","user","state","filtersInScope","dataMaskSelectedRef","current","handleFilterSelectionChange","draft","_dataMask$filterState","_dataMaskSelectedRef$","_dataMaskSelectedRef$2","filterState","undefined","requiredFirst","updates","currentFilter","previousFilter","currentType","filterType","currentTargets","targets","currentDataMask","defaultDataMask","previousType","previousTargets","previousDataMask","typeChanged","targetsChanged","_isEqual","dataMaskChanged","_isEmpty","dataMaskAppliedText","userId","handleApply","filterIds","keys","filterId","handleClearAll","clearDataMaskIds","dispatchAllowed","_filter$controlValues","controlValues","enableEmptyFilter","push","_draft$id$filterState","isApplyDisabled","isInitialized","actions","filterBarOrientation","width","onApply","onClearAll","filterBarComponent","onSelectionChange","filtersOpen","height","offset","toggleFiltersBar","children","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable no-param-reassign */\nimport {\n  FC,\n  memo,\n  useEffect,\n  useState,\n  useCallback,\n  useRef,\n  useMemo,\n} from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataMaskStateWithId,\n  DataMaskWithId,\n  Filter,\n  DataMask,\n  SLOW_DEBOUNCE,\n  isNativeFilter,\n  usePrevious,\n  styled,\n} from '@superset-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { updateDataMask, clearDataMask } from 'src/dataMask/actions';\nimport { useImmer } from 'use-immer';\nimport { isEmpty, isEqual, debounce } from 'lodash';\nimport { getInitialDataMask } from 'src/dataMask/reducer';\nimport { URL_PARAMS } from 'src/constants';\nimport { applicationRoot } from 'src/utils/getBootstrapData';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { useTabId } from 'src/hooks/useTabId';\nimport { logEvent } from 'src/logger/actions';\nimport { LOG_ACTIONS_CHANGE_DASHBOARD_FILTER } from 'src/logger/LogUtils';\nimport { FilterBarOrientation, RootState } from 'src/dashboard/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { checkIsApplyDisabled } from './utils';\nimport { FiltersBarProps } from './types';\nimport {\n  useNativeFiltersDataMask,\n  useFilters,\n  useFilterUpdates,\n  useInitialization,\n} from './state';\nimport { createFilterKey, updateFilterKey } from './keyValue';\nimport ActionButtons from './ActionButtons';\nimport Horizontal from './Horizontal';\nimport Vertical from './Vertical';\nimport { useSelectFiltersInScope } from '../state';\n\n// FilterBar is just being hidden as it must still\n// render fully due to encapsulated logics\nconst HiddenFilterBar = styled.div`\n  display: none;\n`;\n\nconst EXCLUDED_URL_PARAMS: string[] = [\n  URL_PARAMS.nativeFilters.name,\n  URL_PARAMS.permalinkKey.name,\n];\n\nconst publishDataMask = debounce(\n  async (\n    history,\n    dashboardId,\n    updateKey,\n    dataMaskSelected: DataMaskStateWithId,\n    tabId,\n  ) => {\n    const { location } = history;\n    const { search } = location;\n    const previousParams = new URLSearchParams(search);\n    const newParams = new URLSearchParams();\n    let dataMaskKey: string | null;\n    previousParams.forEach((value, key) => {\n      if (!EXCLUDED_URL_PARAMS.includes(key)) {\n        newParams.append(key, value);\n      }\n    });\n\n    const nativeFiltersCacheKey = getUrlParam(URL_PARAMS.nativeFiltersKey);\n    const dataMask = JSON.stringify(dataMaskSelected);\n    if (\n      updateKey &&\n      nativeFiltersCacheKey &&\n      (await updateFilterKey(\n        dashboardId,\n        dataMask,\n        nativeFiltersCacheKey,\n        tabId,\n      ))\n    ) {\n      dataMaskKey = nativeFiltersCacheKey;\n    } else {\n      dataMaskKey = await createFilterKey(dashboardId, dataMask, tabId);\n    }\n    if (dataMaskKey) {\n      newParams.set(URL_PARAMS.nativeFiltersKey.name, dataMaskKey);\n    }\n\n    // pathname could be updated somewhere else through window.history\n    // keep react router history in sync with window history\n    // replace params only when current page is /superset/dashboard\n    // this prevents a race condition between updating filters and navigating to Explore\n    if (window.location.pathname.includes('/superset/dashboard')) {\n      // The history API is part of React router and understands that a basename may exist.\n      // Internally it treats all paths as if they are relative to the root and appends\n      // it when necessary. We strip any prefix so that history.replace adds it back and doesn't\n      // double it up.\n      const appRoot = applicationRoot();\n      let replacement_pathname = window.location.pathname;\n      if (appRoot !== '/' && replacement_pathname.startsWith(appRoot)) {\n        replacement_pathname = replacement_pathname.substring(appRoot.length);\n      }\n      history.location.pathname = replacement_pathname;\n      history.replace({\n        search: newParams.toString(),\n      });\n    }\n  },\n  SLOW_DEBOUNCE,\n);\n\nconst FilterBar: FC<FiltersBarProps> = ({\n  orientation = FilterBarOrientation.Vertical,\n  verticalConfig,\n  hidden = false,\n}) => {\n  const history = useHistory();\n  const dataMaskApplied: DataMaskStateWithId = useNativeFiltersDataMask();\n  const [dataMaskSelected, setDataMaskSelected] =\n    useImmer<DataMaskStateWithId>(dataMaskApplied);\n  const dispatch = useDispatch();\n  const [updateKey, setUpdateKey] = useState(0);\n  const tabId = useTabId();\n  const filters = useFilters();\n  const previousFilters = usePrevious(filters);\n  const filterValues = useMemo(() => Object.values(filters), [filters]);\n  const nativeFilterValues = useMemo(\n    () => filterValues.filter(isNativeFilter),\n    [filterValues],\n  );\n  const dashboardId = useSelector<any, number>(\n    ({ dashboardInfo }) => dashboardInfo?.id,\n  );\n  const previousDashboardId = usePrevious(dashboardId);\n  const canEdit = useSelector<RootState, boolean>(\n    ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n  );\n  const user: UserWithPermissionsAndRoles = useSelector<\n    RootState,\n    UserWithPermissionsAndRoles\n  >(state => state.user);\n\n  const [filtersInScope] = useSelectFiltersInScope(nativeFilterValues);\n\n  const dataMaskSelectedRef = useRef(dataMaskSelected);\n  dataMaskSelectedRef.current = dataMaskSelected;\n  const handleFilterSelectionChange = useCallback(\n    (\n      filter: Pick<Filter, 'id'> & Partial<Filter>,\n      dataMask: Partial<DataMask>,\n    ) => {\n      setDataMaskSelected(draft => {\n        // force instant updating on initialization for filters with `requiredFirst` is true or instant filters\n        if (\n          // filterState.value === undefined - means that value not initialized\n          dataMask.filterState?.value !== undefined &&\n          dataMaskSelectedRef.current[filter.id]?.filterState?.value ===\n            undefined &&\n          filter.requiredFirst\n        ) {\n          dispatch(updateDataMask(filter.id, dataMask));\n        }\n        draft[filter.id] = {\n          ...(getInitialDataMask(filter.id) as DataMaskWithId),\n          ...dataMask,\n        };\n      });\n    },\n    [dispatch, setDataMaskSelected],\n  );\n\n  useEffect(() => {\n    if (previousFilters && dashboardId === previousDashboardId) {\n      const updates: Record<string, DataMaskWithId> = {};\n      Object.values(filters).forEach(currentFilter => {\n        const previousFilter = previousFilters?.[currentFilter.id];\n        if (!previousFilter) {\n          return;\n        }\n        const currentType = currentFilter.filterType;\n        const currentTargets = currentFilter.targets;\n        const currentDataMask = currentFilter.defaultDataMask;\n        const previousType = previousFilter?.filterType;\n        const previousTargets = previousFilter?.targets;\n        const previousDataMask = previousFilter?.defaultDataMask;\n        const typeChanged = currentType !== previousType;\n        const targetsChanged = !isEqual(currentTargets, previousTargets);\n        const dataMaskChanged = !isEqual(currentDataMask, previousDataMask);\n\n        if (typeChanged || targetsChanged || dataMaskChanged) {\n          updates[currentFilter.id] = getInitialDataMask(\n            currentFilter.id,\n          ) as DataMaskWithId;\n        }\n      });\n\n      if (!isEmpty(updates)) {\n        setDataMaskSelected(draft => ({ ...draft, ...updates }));\n      }\n    }\n  }, [dashboardId, filters, previousDashboardId, setDataMaskSelected]);\n\n  const dataMaskAppliedText = JSON.stringify(dataMaskApplied);\n\n  useEffect(() => {\n    setDataMaskSelected(() => dataMaskApplied);\n  }, [dataMaskAppliedText, setDataMaskSelected]);\n\n  useEffect(() => {\n    // embedded users can't persist filter combinations\n    if (user?.userId) {\n      publishDataMask(history, dashboardId, updateKey, dataMaskApplied, tabId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dashboardId, dataMaskAppliedText, history, updateKey, tabId]);\n\n  const handleApply = useCallback(() => {\n    dispatch(logEvent(LOG_ACTIONS_CHANGE_DASHBOARD_FILTER, {}));\n    const filterIds = Object.keys(dataMaskSelected);\n    setUpdateKey(1);\n    filterIds.forEach(filterId => {\n      if (dataMaskSelected[filterId]) {\n        dispatch(updateDataMask(filterId, dataMaskSelected[filterId]));\n      }\n    });\n  }, [dataMaskSelected, dispatch]);\n\n  const handleClearAll = useCallback(() => {\n    const clearDataMaskIds: string[] = [];\n    let dispatchAllowed = false;\n    filtersInScope.filter(isNativeFilter).forEach(filter => {\n      const { id } = filter;\n      if (dataMaskSelected[id]) {\n        if (filter.controlValues?.enableEmptyFilter) {\n          dispatchAllowed = false;\n        }\n        clearDataMaskIds.push(id);\n        setDataMaskSelected(draft => {\n          if (draft[id].filterState?.value !== undefined) {\n            draft[id].filterState!.value = undefined;\n          }\n        });\n      }\n    });\n    if (dispatchAllowed) {\n      clearDataMaskIds.forEach(id => dispatch(clearDataMask(id)));\n    }\n  }, [dataMaskSelected, dispatch, filtersInScope, setDataMaskSelected]);\n\n  useFilterUpdates(dataMaskSelected, setDataMaskSelected);\n  const isApplyDisabled = checkIsApplyDisabled(\n    dataMaskSelected,\n    dataMaskApplied,\n    filtersInScope.filter(isNativeFilter),\n  );\n  const isInitialized = useInitialization();\n\n  const actions = useMemo(\n    () => (\n      <ActionButtons\n        filterBarOrientation={orientation}\n        width={verticalConfig?.width}\n        onApply={handleApply}\n        onClearAll={handleClearAll}\n        dataMaskSelected={dataMaskSelected}\n        dataMaskApplied={dataMaskApplied}\n        isApplyDisabled={isApplyDisabled}\n      />\n    ),\n    [\n      orientation,\n      verticalConfig?.width,\n      handleApply,\n      handleClearAll,\n      dataMaskSelected,\n      dataMaskAppliedText,\n      isApplyDisabled,\n    ],\n  );\n\n  const filterBarComponent =\n    orientation === FilterBarOrientation.Horizontal ? (\n      <Horizontal\n        actions={actions}\n        canEdit={canEdit}\n        dashboardId={dashboardId}\n        dataMaskSelected={dataMaskSelected}\n        filterValues={filterValues}\n        isInitialized={isInitialized}\n        onSelectionChange={handleFilterSelectionChange}\n      />\n    ) : verticalConfig ? (\n      <Vertical\n        actions={actions}\n        canEdit={canEdit}\n        dataMaskSelected={dataMaskSelected}\n        filtersOpen={verticalConfig.filtersOpen}\n        filterValues={filterValues}\n        isInitialized={isInitialized}\n        height={verticalConfig.height}\n        offset={verticalConfig.offset}\n        onSelectionChange={handleFilterSelectionChange}\n        toggleFiltersBar={verticalConfig.toggleFiltersBar}\n        width={verticalConfig.width}\n      />\n    ) : null;\n\n  return hidden ? (\n    <HiddenFilterBar>{filterBarComponent}</HiddenFilterBar>\n  ) : (\n    filterBarComponent\n  );\n};\nexport default memo(FilterBar);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}