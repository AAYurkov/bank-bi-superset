{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { t, tn } from '@superset-ui/core';\nimport MetadataBar, { MetadataType } from 'src/components/MetadataBar';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const useExploreMetadataBar = (metadata, slice) => useMemo(() => {\n  if (!metadata) {\n    return null;\n  }\n  const items = [];\n  if (metadata.dashboards) {\n    items.push({\n      type: MetadataType.Dashboards,\n      title: metadata.dashboards.length > 0 ?\n      tn('Added to 1 dashboard', 'Added to %s dashboards', metadata.dashboards.length, metadata.dashboards.length) :\n      t('Not added to any dashboard'),\n      description: metadata.dashboards.length > 0 ?\n      t('You can preview the list of dashboards in the chart settings dropdown.') :\n      undefined\n    });\n  }\n  items.push({\n    type: MetadataType.LastModified,\n    value: metadata.changed_on_humanized,\n    modifiedBy: metadata.changed_by || t('Not available')\n  });\n  items.push({\n    type: MetadataType.Owner,\n    createdBy: metadata.created_by || t('Not available'),\n    owners: metadata.owners.length > 0 ? metadata.owners : t('None'),\n    createdOn: metadata.created_on_humanized\n  });\n  if (slice != null && slice.description) {\n    items.push({\n      type: MetadataType.Description,\n      value: slice == null ? void 0 : slice.description\n    });\n  }\n  return _jsx(MetadataBar, { items: items, tooltipPlacement: \"bottom\" });\n}, [metadata, slice == null ? void 0 : slice.description]);__signature__(useExploreMetadataBar, \"useMemo{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useExploreMetadataBar, \"useExploreMetadataBar\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreChartHeader/useExploreMetadataBar.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","t","tn","MetadataBar","MetadataType","jsx","_jsx","useExploreMetadataBar","metadata","slice","items","dashboards","push","type","Dashboards","title","length","description","undefined","LastModified","value","changed_on_humanized","modifiedBy","changed_by","Owner","createdBy","created_by","owners","createdOn","created_on_humanized","Description","tooltipPlacement","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreChartHeader/useExploreMetadataBar.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { t, tn } from '@superset-ui/core';\nimport MetadataBar, { MetadataType } from 'src/components/MetadataBar';\nimport { ExplorePageInitialData } from 'src/explore/types';\n\nexport const useExploreMetadataBar = (\n  metadata: ExplorePageInitialData['metadata'],\n  slice: ExplorePageInitialData['slice'],\n) =>\n  useMemo(() => {\n    if (!metadata) {\n      return null;\n    }\n    const items = [];\n    if (metadata.dashboards) {\n      items.push({\n        type: MetadataType.Dashboards as const,\n        title:\n          metadata.dashboards.length > 0\n            ? tn(\n                'Added to 1 dashboard',\n                'Added to %s dashboards',\n                metadata.dashboards.length,\n                metadata.dashboards.length,\n              )\n            : t('Not added to any dashboard'),\n        description:\n          metadata.dashboards.length > 0\n            ? t(\n                'You can preview the list of dashboards in the chart settings dropdown.',\n              )\n            : undefined,\n      });\n    }\n    items.push({\n      type: MetadataType.LastModified as const,\n      value: metadata.changed_on_humanized,\n      modifiedBy: metadata.changed_by || t('Not available'),\n    });\n    items.push({\n      type: MetadataType.Owner as const,\n      createdBy: metadata.created_by || t('Not available'),\n      owners: metadata.owners.length > 0 ? metadata.owners : t('None'),\n      createdOn: metadata.created_on_humanized,\n    });\n    if (slice?.description) {\n      items.push({\n        type: MetadataType.Description as const,\n        value: slice?.description,\n      });\n    }\n    return <MetadataBar items={items} tooltipPlacement=\"bottom\" />;\n  }, [metadata, slice?.description]);\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,CAAC,EAAEC,EAAE,QAAQ,mBAAmB;AACzC,OAAOC,WAAW,IAAIC,YAAY,QAAQ,4BAA4B,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAGvE,OAAO,MAAMC,qBAAqB,GAAGA,CACnCC,QAA4C,EAC5CC,KAAsC,KAEtCT,OAAO,CAAC,MAAK;EACX,IAAI,CAACQ,QAAQ,EAAE;IACb,OAAO,IAAI;;EAEb,MAAME,KAAK,GAAG,EAAE;EAChB,IAAIF,QAAQ,CAACG,UAAU,EAAE;IACvBD,KAAK,CAACE,IAAI,CAAC;MACTC,IAAI,EAAET,YAAY,CAACU,UAAmB;MACtCC,KAAK,EACHP,QAAQ,CAACG,UAAU,CAACK,MAAM,GAAG,CAAC;MAC1Bd,EAAE,CACA,sBAAsB,EACtB,wBAAwB,EACxBM,QAAQ,CAACG,UAAU,CAACK,MAAM,EAC1BR,QAAQ,CAACG,UAAU,CAACK,MAAM,CAC3B;MACDf,CAAC,CAAC,4BAA4B,CAAC;MACrCgB,WAAW,EACTT,QAAQ,CAACG,UAAU,CAACK,MAAM,GAAG,CAAC;MAC1Bf,CAAC,CACC,wEAAwE,CACzE;MACDiB;KACP,CAAC;;EAEJR,KAAK,CAACE,IAAI,CAAC;IACTC,IAAI,EAAET,YAAY,CAACe,YAAqB;IACxCC,KAAK,EAAEZ,QAAQ,CAACa,oBAAoB;IACpCC,UAAU,EAAEd,QAAQ,CAACe,UAAU,IAAItB,CAAC,CAAC,eAAe;GACrD,CAAC;EACFS,KAAK,CAACE,IAAI,CAAC;IACTC,IAAI,EAAET,YAAY,CAACoB,KAAc;IACjCC,SAAS,EAAEjB,QAAQ,CAACkB,UAAU,IAAIzB,CAAC,CAAC,eAAe,CAAC;IACpD0B,MAAM,EAAEnB,QAAQ,CAACmB,MAAM,CAACX,MAAM,GAAG,CAAC,GAAGR,QAAQ,CAACmB,MAAM,GAAG1B,CAAC,CAAC,MAAM,CAAC;IAChE2B,SAAS,EAAEpB,QAAQ,CAACqB;GACrB,CAAC;EACF,IAAIpB,KAAK,YAALA,KAAK,CAAEQ,WAAW,EAAE;IACtBP,KAAK,CAACE,IAAI,CAAC;MACTC,IAAI,EAAET,YAAY,CAAC0B,WAAoB;MACvCV,KAAK,EAAEX,KAAK,oBAALA,KAAK,CAAEQ;KACf,CAAC;;EAEJ,OAAOX,IAAA,CAACH,WAAW,IAACO,KAAK,EAAEA,KAAM,EAACqB,gBAAgB,EAAC,QAAQ,GAAG;AAChE,CAAC,EAAE,CAACvB,QAAQ,EAAEC,KAAK,oBAALA,KAAK,CAAEQ,WAAW,CAAC,CAAC,CAACe,aAAA,CA/CxBzB,qBAAqB,kCAAA0B,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAjB,SAAA,MAAAe,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAArB7B,qBAAqB,qKAAA8B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAnB,SAAA,CAAAmB,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}