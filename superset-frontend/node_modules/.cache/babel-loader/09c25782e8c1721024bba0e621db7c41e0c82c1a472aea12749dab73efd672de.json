{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { extendedDayjs } from 'src/utils/dates';\nimport { Behavior, css, isFeatureEnabled, FeatureFlag, getChartMetadataRegistry, styled, t, VizType } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { Menu } from 'src/components/Menu';\nimport { NoAnimationDropdown } from 'src/components/Dropdown';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Icons } from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\nimport { ResultsPaneOnDashboard } from 'src/explore/components/DataTablesPane';\nimport { DrillDetailMenuItems } from 'src/components/Chart/DrillDetail';\nimport { LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE } from 'src/logger/LogUtils';\nimport { MenuKeys } from 'src/dashboard/types';\nimport DrillDetailModal from 'src/components/Chart/DrillDetail/DrillDetailModal';\nimport { usePermissions } from 'src/hooks/usePermissions';\nimport Button from 'src/components/Button';\nimport { useCrossFiltersScopingModal } from '../nativeFilters/FilterBar/CrossFilters/ScopingModal/useCrossFiltersScopingModal';\nimport { ViewResultsModalTrigger } from './ViewResultsModalTrigger';\n// TODO: replace 3 dots with an icon\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";const VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n\n    height: ${({ theme }) => theme.gridUnit}px;\n    width: ${({ theme }) => theme.gridUnit}px;\n    border-radius: 50%;\n    margin: ${({ theme }) => theme.gridUnit / 2}px 0;\n\n    background-color: ${({ theme }) => theme.colors.text.label};\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: 21px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\nconst getScreenshotNodeSelector = (chartId) => `.dashboard-chart-id-${chartId}`;\nconst VerticalDotsTrigger = () => _jsxs(VerticalDotsContainer, { children: [\n  _jsx(\"span\", { className: \"dot\" }),\n  _jsx(\"span\", { className: \"dot\" }),\n  _jsx(\"span\", { className: \"dot\" })] }\n);\nconst dropdownIconsStyles = css`\n  &&.anticon > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\nconst SliceHeaderControls = (props) => {var _getChartMetadataRegi, _getChartMetadataRegi2;\n  const [drillModalIsOpen, setDrillModalIsOpen] = useState(false);\n  // setting openKeys undefined falls back to uncontrolled behaviour\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal(props.slice.slice_id);\n  const history = useHistory();\n  const queryMenuRef = useRef(null);\n  const resultsMenuRef = useRef(null);\n  const [modalFilters, setFilters] = useState([]);\n  const canEditCrossFilters = useSelector(({ dashboardInfo }) => dashboardInfo.dash_edit_perm) && ((_getChartMetadataRegi =\n  getChartMetadataRegistry().\n  get(props.slice.viz_type)) == null ? void 0 : (_getChartMetadataRegi2 = _getChartMetadataRegi.\n  behaviors) == null ? void 0 : _getChartMetadataRegi2.includes(Behavior.InteractiveChart));\n  const canExplore = props.supersetCanExplore;\n  const { canDrillToDetail, canViewQuery, canViewTable } = usePermissions();\n  const refreshChart = () => {\n    if (props.updatedDttm) {\n      props.forceRefresh(props.slice.slice_id, props.dashboardId);\n    }\n  };\n  const handleMenuClick = ({ key, domEvent }) => {\n    switch (key) {\n      case MenuKeys.ForceRefresh:\n        refreshChart();\n        props.addSuccessToast(t('Data refreshed'));\n        break;\n      case MenuKeys.ToggleChartDescription:\n        // eslint-disable-next-line no-unused-expressions\n        props.toggleExpandSlice == null ? void 0 : props.toggleExpandSlice(props.slice.slice_id);\n        break;\n      case MenuKeys.ExploreChart:\n        // eslint-disable-next-line no-unused-expressions\n        props.logExploreChart == null ? void 0 : props.logExploreChart(props.slice.slice_id);\n        if (domEvent.metaKey || domEvent.ctrlKey) {\n          domEvent.preventDefault();\n          window.open(props.exploreUrl, '_blank');\n        } else\n        {\n          history.push(props.exploreUrl);\n        }\n        break;\n      case MenuKeys.ExportCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportCSV == null ? void 0 : props.exportCSV(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportPivotCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportPivotCSV == null ? void 0 : props.exportPivotCSV(props.slice.slice_id);\n        break;\n      case MenuKeys.Fullscreen:\n        props.handleToggleFullSize();\n        break;\n      case MenuKeys.ExportFullCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullCSV == null ? void 0 : props.exportFullCSV(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportFullXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullXLSX == null ? void 0 : props.exportFullXLSX(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportXLSX == null ? void 0 : props.exportXLSX(props.slice.slice_id);\n        break;\n      case MenuKeys.DownloadAsImage:{\n          // menu closes with a delay, we need to hide it manually,\n          // so that we don't capture it on the screenshot\n          const menu = document.querySelector('.antd5-dropdown:not(.antd5-dropdown-hidden)');\n          if (menu) {\n            menu.style.visibility = 'hidden';\n          }\n          downloadAsImage(getScreenshotNodeSelector(props.slice.slice_id), props.slice.slice_name, true)(domEvent).then(() => {\n            if (menu) {\n              menu.style.visibility = 'visible';\n            }\n          });\n          props.logEvent == null ? void 0 : props.logEvent(LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE, {\n            chartId: props.slice.slice_id\n          });\n          break;\n        }\n      case MenuKeys.CrossFilterScoping:{\n          openScopingModal();\n          break;\n        }\n      case MenuKeys.ViewResults:{\n          if (resultsMenuRef.current && !resultsMenuRef.current.showModal) {\n            resultsMenuRef.current.open(domEvent);\n          }\n          break;\n        }\n      case MenuKeys.DrillToDetail:{\n          setDrillModalIsOpen(!drillModalIsOpen);\n          break;\n        }\n      case MenuKeys.ViewQuery:{\n          if (queryMenuRef.current && !queryMenuRef.current.showModal) {\n            queryMenuRef.current.open(domEvent);\n          }\n          break;\n        }\n      default:\n        break;\n    }\n    setIsDropdownVisible(false);\n  };\n  const { componentId, dashboardId, slice, isFullSize, cachedDttm = [], updatedDttm = null, addSuccessToast = () => {}, addDangerToast = () => {}, supersetCanShare = false, isCached = [] } = props;\n  const isTable = slice.viz_type === VizType.Table;\n  const isPivotTable = slice.viz_type === VizType.PivotTable;\n  const cachedWhen = (cachedDttm || []).map((itemCachedDttm) => extendedDayjs.utc(itemCachedDttm).fromNow());\n  const updatedWhen = updatedDttm ?\n  extendedDayjs.utc(updatedDttm).fromNow() :\n  '';\n  const getCachedTitle = (itemCached) => {\n    if (itemCached) {\n      return t('Cached %s', cachedWhen);\n    }\n    if (updatedWhen) {\n      return t('Fetched %s', updatedWhen);\n    }\n    return '';\n  };\n  const refreshTooltipData = [...new Set(isCached.map(getCachedTitle) || '')];\n  // If all queries have same cache time we can unit them to one\n  const refreshTooltip = refreshTooltipData.map((item, index) => _jsx(\"div\", { children:\n    refreshTooltipData.length > 1 ?\n    t('Query %s: %s', index + 1, item) :\n    item }, `tooltip-${index}`\n  ));\n  const fullscreenLabel = isFullSize ?\n  t('Exit fullscreen') :\n  t('Enter fullscreen');\n  // @z-index-below-dashboard-header (100) - 1 = 99 for !isFullSize and 101 for isFullSize\n  const dropdownOverlayStyle = {\n    zIndex: isFullSize ? 101 : 99,\n    animationDuration: '0s'\n  };\n  const menu = _jsxs(Menu, { onClick: handleMenuClick, \"data-test\": `slice_${slice.slice_id}-menu`, id: `slice_${slice.slice_id}-menu`, selectable: false, children: [\n    _jsxs(Menu.Item, { disabled: props.chartStatus === 'loading', style: { height: 'auto', lineHeight: 'initial' }, \"data-test\": \"refresh-chart-menu-item\", children: [\n      t('Force refresh'),\n      _jsx(RefreshTooltip, { \"data-test\": \"dashboard-slice-refresh-tooltip\", children:\n        refreshTooltip }\n      )] }, MenuKeys.ForceRefresh\n    ),\n\n    _jsx(Menu.Item, { children: fullscreenLabel }, MenuKeys.Fullscreen),\n\n    _jsx(Menu.Divider, {}),\n\n    slice.description && _jsx(Menu.Item, { children:\n      props.isDescriptionExpanded ?\n      t('Hide chart description') :\n      t('Show chart description') }, MenuKeys.ToggleChartDescription\n    ),\n\n    canExplore && _jsx(Menu.Item, { \"data-test-edit-chart-name\": slice.slice_name, children:\n      _jsx(Tooltip, { title: getSliceHeaderTooltip(props.slice.slice_name), children:\n        t('Edit chart') }\n      ) }, MenuKeys.ExploreChart\n    ),\n\n    canEditCrossFilters && _jsx(Menu.Item, { children:\n      t('Cross-filtering scoping') }, MenuKeys.CrossFilterScoping\n    ),\n\n    (canExplore || canEditCrossFilters) && _jsx(Menu.Divider, {}),\n\n    (canExplore || canViewQuery) && _jsx(Menu.Item, { children:\n      _jsx(ModalTrigger, { triggerNode: _jsx(\"div\", { \"data-test\": \"view-query-menu-item\", children: t('View query') }), modalTitle: t('View query'), modalBody: _jsx(ViewQueryModal, { latestQueryFormData: props.formData }), draggable: true, resizable: true, responsive: true, ref: queryMenuRef }) }, MenuKeys.ViewQuery\n    ),\n\n    (canExplore || canViewTable) && _jsx(Menu.Item, { children:\n      _jsx(ViewResultsModalTrigger, { canExplore: props.supersetCanExplore, exploreUrl: props.exploreUrl, triggerNode: _jsx(\"div\", { \"data-test\": \"view-query-menu-item\", children: t('View as table') }), modalRef: resultsMenuRef, modalTitle: t('Chart Data: %s', slice.slice_name), modalBody: _jsx(ResultsPaneOnDashboard, { queryFormData: props.formData, queryForce: false, dataSize: 20, isRequest: true, isVisible: true, canDownload: !!props.supersetCanCSV }) }) }, MenuKeys.ViewResults\n    ),\n\n    isFeatureEnabled(FeatureFlag.DrillToDetail) && canDrillToDetail && _jsx(DrillDetailMenuItems, { setFilters: setFilters, filters: modalFilters, formData: props.formData, setShowModal: setDrillModalIsOpen }, MenuKeys.DrillToDetail),\n\n    (slice.description || canExplore) && _jsx(Menu.Divider, {}),\n\n    supersetCanShare && _jsx(ShareMenuItems, { dashboardId: dashboardId, dashboardComponentId: componentId, copyMenuItemTitle: t('Copy permalink to clipboard'), emailMenuItemTitle: t('Share chart by email'), emailSubject: t('Superset chart'), emailBody: t('Check out this chart: '), addSuccessToast: addSuccessToast, addDangerToast: addDangerToast, title: t('Share') }),\n\n    props.supersetCanCSV && _jsxs(Menu.SubMenu, { title: t('Download'), children: [\n      _jsx(Menu.Item, { icon: _jsx(Icons.FileOutlined, { css: dropdownIconsStyles }), children:\n        t('Export to .CSV') }, MenuKeys.ExportCsv\n      ),\n      isPivotTable && _jsx(Menu.Item, { icon: _jsx(Icons.FileOutlined, { css: dropdownIconsStyles }), children:\n        t('Export to Pivoted .CSV') }, MenuKeys.ExportPivotCsv\n      ),\n      _jsx(Menu.Item, { icon: _jsx(Icons.FileOutlined, { css: dropdownIconsStyles }), children:\n        t('Export to Excel') }, MenuKeys.ExportXlsx\n      ),\n\n      isFeatureEnabled(FeatureFlag.AllowFullCsvExport) &&\n      props.supersetCanCSV &&\n      isTable && _jsxs(_Fragment, { children: [\n        _jsx(Menu.Item, { icon: _jsx(Icons.FileOutlined, { css: dropdownIconsStyles }), children:\n          t('Export to full .CSV') }, MenuKeys.ExportFullCsv\n        ),\n        _jsx(Menu.Item, { icon: _jsx(Icons.FileOutlined, { css: dropdownIconsStyles }), children:\n          t('Export to full Excel') }, MenuKeys.ExportFullXlsx\n        )] }\n      ),\n\n      _jsx(Menu.Item, { icon: _jsx(Icons.FileImageOutlined, { css: dropdownIconsStyles }), children:\n        t('Download as image') }, MenuKeys.DownloadAsImage\n      )] }, MenuKeys.Download\n    )] }\n  );\n  return _jsxs(_Fragment, { children: [\n    isFullSize && _jsx(Icons.FullscreenExitOutlined, { style: { fontSize: 22 }, onClick: () => {\n        props.handleToggleFullSize();\n      } }),\n    _jsx(NoAnimationDropdown, { dropdownRender: () => menu, overlayStyle: dropdownOverlayStyle, trigger: ['click'], placement: \"bottomRight\", open: isDropdownVisible, onOpenChange: (visible) => setIsDropdownVisible(visible), children:\n      _jsx(Button, { type: \"link\", id: `slice_${slice.slice_id}-controls`, \"aria-label\": \"More Options\", \"aria-haspopup\": \"true\", children:\n        _jsx(VerticalDotsTrigger, {}) }\n      ) }\n    ),\n    _jsx(DrillDetailModal, { formData: props.formData, initialFilters: [], onHideModal: () => {\n        setDrillModalIsOpen(false);\n      }, chartId: slice.slice_id, showModal: drillModalIsOpen }),\n\n    canEditCrossFilters && scopingModal] }\n  );\n};__signature__(SliceHeaderControls, \"useState{[drillModalIsOpen, setDrillModalIsOpen](false)}\\nuseState{[isDropdownVisible, setIsDropdownVisible](false)}\\nuseCrossFiltersScopingModal{[openScopingModal, scopingModal]}\\nuseHistory{history}\\nuseRef{queryMenuRef}\\nuseRef{resultsMenuRef}\\nuseState{[modalFilters, setFilters]([])}\\nuseSelector{}\\nusePermissions{{ canDrillToDetail, canViewQuery, canViewTable }}\", () => [useCrossFiltersScopingModal, useHistory, useSelector, usePermissions]);const _default =\nSliceHeaderControls;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(VerticalDotsContainer, \"VerticalDotsContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(RefreshTooltip, \"RefreshTooltip\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(getScreenshotNodeSelector, \"getScreenshotNodeSelector\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(VerticalDotsTrigger, \"VerticalDotsTrigger\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(dropdownIconsStyles, \"dropdownIconsStyles\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(SliceHeaderControls, \"SliceHeaderControls\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useRef","useHistory","extendedDayjs","Behavior","css","isFeatureEnabled","FeatureFlag","getChartMetadataRegistry","styled","t","VizType","useSelector","Menu","NoAnimationDropdown","ShareMenuItems","downloadAsImage","getSliceHeaderTooltip","Tooltip","Icons","ModalTrigger","ViewQueryModal","ResultsPaneOnDashboard","DrillDetailMenuItems","LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE","MenuKeys","DrillDetailModal","usePermissions","Button","useCrossFiltersScopingModal","ViewResultsModalTrigger","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","VerticalDotsContainer","div","theme","gridUnit","colors","text","label","RefreshTooltip","grayscale","base","getScreenshotNodeSelector","chartId","VerticalDotsTrigger","children","className","dropdownIconsStyles","SliceHeaderControls","props","_getChartMetadataRegi","_getChartMetadataRegi2","drillModalIsOpen","setDrillModalIsOpen","isDropdownVisible","setIsDropdownVisible","openScopingModal","scopingModal","slice","slice_id","history","queryMenuRef","resultsMenuRef","modalFilters","setFilters","canEditCrossFilters","dashboardInfo","dash_edit_perm","get","viz_type","behaviors","includes","InteractiveChart","canExplore","supersetCanExplore","canDrillToDetail","canViewQuery","canViewTable","refreshChart","updatedDttm","forceRefresh","dashboardId","handleMenuClick","key","domEvent","ForceRefresh","addSuccessToast","ToggleChartDescription","toggleExpandSlice","ExploreChart","logExploreChart","metaKey","ctrlKey","preventDefault","window","open","exploreUrl","push","ExportCsv","exportCSV","ExportPivotCsv","exportPivotCSV","Fullscreen","handleToggleFullSize","ExportFullCsv","exportFullCSV","ExportFullXlsx","exportFullXLSX","ExportXlsx","exportXLSX","DownloadAsImage","menu","document","querySelector","style","visibility","slice_name","then","logEvent","CrossFilterScoping","ViewResults","current","showModal","DrillToDetail","ViewQuery","componentId","isFullSize","cachedDttm","addDangerToast","supersetCanShare","isCached","isTable","Table","isPivotTable","PivotTable","cachedWhen","map","itemCachedDttm","utc","fromNow","updatedWhen","getCachedTitle","itemCached","refreshTooltipData","Set","refreshTooltip","item","index","length","fullscreenLabel","dropdownOverlayStyle","zIndex","animationDuration","onClick","id","selectable","Item","disabled","chartStatus","height","lineHeight","Divider","description","isDescriptionExpanded","title","triggerNode","modalTitle","modalBody","latestQueryFormData","formData","draggable","resizable","responsive","ref","modalRef","queryFormData","queryForce","dataSize","isRequest","isVisible","canDownload","supersetCanCSV","filters","setShowModal","dashboardComponentId","copyMenuItemTitle","emailMenuItemTitle","emailSubject","emailBody","SubMenu","icon","FileOutlined","AllowFullCsvExport","FileImageOutlined","Download","FullscreenExitOutlined","fontSize","dropdownRender","overlayStyle","trigger","placement","onOpenChange","visible","type","initialFilters","onHideModal","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  MouseEvent,\n  Key,\n  KeyboardEvent,\n  useState,\n  useRef,\n  RefObject,\n} from 'react';\n\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { extendedDayjs } from 'src/utils/dates';\nimport {\n  Behavior,\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  styled,\n  t,\n  VizType,\n  BinaryQueryObjectFilterClause,\n  QueryFormData,\n} from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { Menu } from 'src/components/Menu';\nimport { NoAnimationDropdown } from 'src/components/Dropdown';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from 'src/utils/downloadAsImage';\nimport { getSliceHeaderTooltip } from 'src/dashboard/util/getSliceHeaderTooltip';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Icons } from 'src/components/Icons';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\nimport { ResultsPaneOnDashboard } from 'src/explore/components/DataTablesPane';\nimport { DrillDetailMenuItems } from 'src/components/Chart/DrillDetail';\nimport { LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE } from 'src/logger/LogUtils';\nimport { MenuKeys, RootState } from 'src/dashboard/types';\nimport DrillDetailModal from 'src/components/Chart/DrillDetail/DrillDetailModal';\nimport { usePermissions } from 'src/hooks/usePermissions';\nimport Button from 'src/components/Button';\nimport { useCrossFiltersScopingModal } from '../nativeFilters/FilterBar/CrossFilters/ScopingModal/useCrossFiltersScopingModal';\nimport { ViewResultsModalTrigger } from './ViewResultsModalTrigger';\n\n// TODO: replace 3 dots with an icon\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n\n    height: ${({ theme }) => theme.gridUnit}px;\n    width: ${({ theme }) => theme.gridUnit}px;\n    border-radius: 50%;\n    margin: ${({ theme }) => theme.gridUnit / 2}px 0;\n\n    background-color: ${({ theme }) => theme.colors.text.label};\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: 21px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst getScreenshotNodeSelector = (chartId: string | number) =>\n  `.dashboard-chart-id-${chartId}`;\n\nconst VerticalDotsTrigger = () => (\n  <VerticalDotsContainer>\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n  </VerticalDotsContainer>\n);\n\nexport interface SliceHeaderControlsProps {\n  slice: {\n    description: string;\n    viz_type: string;\n    slice_name: string;\n    slice_id: number;\n    slice_description: string;\n    datasource: string;\n  };\n\n  defaultOpen?: boolean;\n  componentId: string;\n  dashboardId: number;\n  chartStatus: string;\n  isCached: boolean[];\n  cachedDttm: string[] | null;\n  isExpanded?: boolean;\n  updatedDttm: number | null;\n  isFullSize?: boolean;\n  isDescriptionExpanded?: boolean;\n  formData: QueryFormData;\n  exploreUrl: string;\n\n  forceRefresh: (sliceId: number, dashboardId: number) => void;\n  logExploreChart?: (sliceId: number) => void;\n  logEvent?: (eventName: string, eventData?: object) => void;\n  toggleExpandSlice?: (sliceId: number) => void;\n  exportCSV?: (sliceId: number) => void;\n  exportPivotCSV?: (sliceId: number) => void;\n  exportFullCSV?: (sliceId: number) => void;\n  exportXLSX?: (sliceId: number) => void;\n  exportFullXLSX?: (sliceId: number) => void;\n  handleToggleFullSize: () => void;\n\n  addDangerToast: (message: string) => void;\n  addSuccessToast: (message: string) => void;\n\n  supersetCanExplore?: boolean;\n  supersetCanShare?: boolean;\n  supersetCanCSV?: boolean;\n\n  crossFiltersEnabled?: boolean;\n}\ntype SliceHeaderControlsPropsWithRouter = SliceHeaderControlsProps &\n  RouteComponentProps;\n\nconst dropdownIconsStyles = css`\n  &&.anticon > .anticon:first-child {\n    margin-right: 0;\n    vertical-align: 0;\n  }\n`;\n\nconst SliceHeaderControls = (\n  props: SliceHeaderControlsPropsWithRouter | SliceHeaderControlsProps,\n) => {\n  const [drillModalIsOpen, setDrillModalIsOpen] = useState(false);\n  // setting openKeys undefined falls back to uncontrolled behaviour\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  const [openScopingModal, scopingModal] = useCrossFiltersScopingModal(\n    props.slice.slice_id,\n  );\n  const history = useHistory();\n\n  const queryMenuRef: RefObject<any> = useRef(null);\n  const resultsMenuRef: RefObject<any> = useRef(null);\n\n  const [modalFilters, setFilters] = useState<BinaryQueryObjectFilterClause[]>(\n    [],\n  );\n\n  const canEditCrossFilters =\n    useSelector<RootState, boolean>(\n      ({ dashboardInfo }) => dashboardInfo.dash_edit_perm,\n    ) &&\n    getChartMetadataRegistry()\n      .get(props.slice.viz_type)\n      ?.behaviors?.includes(Behavior.InteractiveChart);\n  const canExplore = props.supersetCanExplore;\n  const { canDrillToDetail, canViewQuery, canViewTable } = usePermissions();\n  const refreshChart = () => {\n    if (props.updatedDttm) {\n      props.forceRefresh(props.slice.slice_id, props.dashboardId);\n    }\n  };\n\n  const handleMenuClick = ({\n    key,\n    domEvent,\n  }: {\n    key: Key;\n    domEvent: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>;\n  }) => {\n    switch (key) {\n      case MenuKeys.ForceRefresh:\n        refreshChart();\n        props.addSuccessToast(t('Data refreshed'));\n        break;\n      case MenuKeys.ToggleChartDescription:\n        // eslint-disable-next-line no-unused-expressions\n        props.toggleExpandSlice?.(props.slice.slice_id);\n        break;\n      case MenuKeys.ExploreChart:\n        // eslint-disable-next-line no-unused-expressions\n        props.logExploreChart?.(props.slice.slice_id);\n        if (domEvent.metaKey || domEvent.ctrlKey) {\n          domEvent.preventDefault();\n          window.open(props.exploreUrl, '_blank');\n        } else {\n          history.push(props.exploreUrl);\n        }\n        break;\n      case MenuKeys.ExportCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportCSV?.(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportPivotCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportPivotCSV?.(props.slice.slice_id);\n        break;\n      case MenuKeys.Fullscreen:\n        props.handleToggleFullSize();\n        break;\n      case MenuKeys.ExportFullCsv:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullCSV?.(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportFullXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportFullXLSX?.(props.slice.slice_id);\n        break;\n      case MenuKeys.ExportXlsx:\n        // eslint-disable-next-line no-unused-expressions\n        props.exportXLSX?.(props.slice.slice_id);\n        break;\n      case MenuKeys.DownloadAsImage: {\n        // menu closes with a delay, we need to hide it manually,\n        // so that we don't capture it on the screenshot\n        const menu = document.querySelector(\n          '.antd5-dropdown:not(.antd5-dropdown-hidden)',\n        ) as HTMLElement;\n        if (menu) {\n          menu.style.visibility = 'hidden';\n        }\n        downloadAsImage(\n          getScreenshotNodeSelector(props.slice.slice_id),\n          props.slice.slice_name,\n          true,\n          // @ts-ignore\n        )(domEvent).then(() => {\n          if (menu) {\n            menu.style.visibility = 'visible';\n          }\n        });\n        props.logEvent?.(LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE, {\n          chartId: props.slice.slice_id,\n        });\n        break;\n      }\n      case MenuKeys.CrossFilterScoping: {\n        openScopingModal();\n        break;\n      }\n      case MenuKeys.ViewResults: {\n        if (resultsMenuRef.current && !resultsMenuRef.current.showModal) {\n          resultsMenuRef.current.open(domEvent);\n        }\n        break;\n      }\n      case MenuKeys.DrillToDetail: {\n        setDrillModalIsOpen(!drillModalIsOpen);\n        break;\n      }\n      case MenuKeys.ViewQuery: {\n        if (queryMenuRef.current && !queryMenuRef.current.showModal) {\n          queryMenuRef.current.open(domEvent);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n    setIsDropdownVisible(false);\n  };\n\n  const {\n    componentId,\n    dashboardId,\n    slice,\n    isFullSize,\n    cachedDttm = [],\n    updatedDttm = null,\n    addSuccessToast = () => {},\n    addDangerToast = () => {},\n    supersetCanShare = false,\n    isCached = [],\n  } = props;\n  const isTable = slice.viz_type === VizType.Table;\n  const isPivotTable = slice.viz_type === VizType.PivotTable;\n  const cachedWhen = (cachedDttm || []).map(itemCachedDttm =>\n    extendedDayjs.utc(itemCachedDttm).fromNow(),\n  );\n  const updatedWhen = updatedDttm\n    ? extendedDayjs.utc(updatedDttm).fromNow()\n    : '';\n  const getCachedTitle = (itemCached: boolean) => {\n    if (itemCached) {\n      return t('Cached %s', cachedWhen);\n    }\n    if (updatedWhen) {\n      return t('Fetched %s', updatedWhen);\n    }\n    return '';\n  };\n  const refreshTooltipData = [...new Set(isCached.map(getCachedTitle) || '')];\n  // If all queries have same cache time we can unit them to one\n  const refreshTooltip = refreshTooltipData.map((item, index) => (\n    <div key={`tooltip-${index}`}>\n      {refreshTooltipData.length > 1\n        ? t('Query %s: %s', index + 1, item)\n        : item}\n    </div>\n  ));\n  const fullscreenLabel = isFullSize\n    ? t('Exit fullscreen')\n    : t('Enter fullscreen');\n\n  // @z-index-below-dashboard-header (100) - 1 = 99 for !isFullSize and 101 for isFullSize\n  const dropdownOverlayStyle = {\n    zIndex: isFullSize ? 101 : 99,\n    animationDuration: '0s',\n  };\n\n  const menu = (\n    <Menu\n      onClick={handleMenuClick}\n      data-test={`slice_${slice.slice_id}-menu`}\n      id={`slice_${slice.slice_id}-menu`}\n      selectable={false}\n    >\n      <Menu.Item\n        key={MenuKeys.ForceRefresh}\n        disabled={props.chartStatus === 'loading'}\n        style={{ height: 'auto', lineHeight: 'initial' }}\n        data-test=\"refresh-chart-menu-item\"\n      >\n        {t('Force refresh')}\n        <RefreshTooltip data-test=\"dashboard-slice-refresh-tooltip\">\n          {refreshTooltip}\n        </RefreshTooltip>\n      </Menu.Item>\n\n      <Menu.Item key={MenuKeys.Fullscreen}>{fullscreenLabel}</Menu.Item>\n\n      <Menu.Divider />\n\n      {slice.description && (\n        <Menu.Item key={MenuKeys.ToggleChartDescription}>\n          {props.isDescriptionExpanded\n            ? t('Hide chart description')\n            : t('Show chart description')}\n        </Menu.Item>\n      )}\n\n      {canExplore && (\n        <Menu.Item\n          key={MenuKeys.ExploreChart}\n          data-test-edit-chart-name={slice.slice_name}\n        >\n          <Tooltip title={getSliceHeaderTooltip(props.slice.slice_name)}>\n            {t('Edit chart')}\n          </Tooltip>\n        </Menu.Item>\n      )}\n\n      {canEditCrossFilters && (\n        <Menu.Item key={MenuKeys.CrossFilterScoping}>\n          {t('Cross-filtering scoping')}\n        </Menu.Item>\n      )}\n\n      {(canExplore || canEditCrossFilters) && <Menu.Divider />}\n\n      {(canExplore || canViewQuery) && (\n        <Menu.Item key={MenuKeys.ViewQuery}>\n          <ModalTrigger\n            triggerNode={\n              <div data-test=\"view-query-menu-item\">{t('View query')}</div>\n            }\n            modalTitle={t('View query')}\n            modalBody={<ViewQueryModal latestQueryFormData={props.formData} />}\n            draggable\n            resizable\n            responsive\n            ref={queryMenuRef}\n          />\n        </Menu.Item>\n      )}\n\n      {(canExplore || canViewTable) && (\n        <Menu.Item key={MenuKeys.ViewResults}>\n          <ViewResultsModalTrigger\n            canExplore={props.supersetCanExplore}\n            exploreUrl={props.exploreUrl}\n            triggerNode={\n              <div data-test=\"view-query-menu-item\">{t('View as table')}</div>\n            }\n            modalRef={resultsMenuRef}\n            modalTitle={t('Chart Data: %s', slice.slice_name)}\n            modalBody={\n              <ResultsPaneOnDashboard\n                queryFormData={props.formData}\n                queryForce={false}\n                dataSize={20}\n                isRequest\n                isVisible\n                canDownload={!!props.supersetCanCSV}\n              />\n            }\n          />\n        </Menu.Item>\n      )}\n\n      {isFeatureEnabled(FeatureFlag.DrillToDetail) && canDrillToDetail && (\n        <DrillDetailMenuItems\n          setFilters={setFilters}\n          filters={modalFilters}\n          formData={props.formData}\n          key={MenuKeys.DrillToDetail}\n          setShowModal={setDrillModalIsOpen}\n        />\n      )}\n\n      {(slice.description || canExplore) && <Menu.Divider />}\n\n      {supersetCanShare && (\n        <ShareMenuItems\n          dashboardId={dashboardId}\n          dashboardComponentId={componentId}\n          copyMenuItemTitle={t('Copy permalink to clipboard')}\n          emailMenuItemTitle={t('Share chart by email')}\n          emailSubject={t('Superset chart')}\n          emailBody={t('Check out this chart: ')}\n          addSuccessToast={addSuccessToast}\n          addDangerToast={addDangerToast}\n          title={t('Share')}\n        />\n      )}\n\n      {props.supersetCanCSV && (\n        <Menu.SubMenu title={t('Download')} key={MenuKeys.Download}>\n          <Menu.Item\n            key={MenuKeys.ExportCsv}\n            icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Export to .CSV')}\n          </Menu.Item>\n          {isPivotTable && (\n            <Menu.Item\n              key={MenuKeys.ExportPivotCsv}\n              icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n            >\n              {t('Export to Pivoted .CSV')}\n            </Menu.Item>\n          )}\n          <Menu.Item\n            key={MenuKeys.ExportXlsx}\n            icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Export to Excel')}\n          </Menu.Item>\n\n          {isFeatureEnabled(FeatureFlag.AllowFullCsvExport) &&\n            props.supersetCanCSV &&\n            isTable && (\n              <>\n                <Menu.Item\n                  key={MenuKeys.ExportFullCsv}\n                  icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n                >\n                  {t('Export to full .CSV')}\n                </Menu.Item>\n                <Menu.Item\n                  key={MenuKeys.ExportFullXlsx}\n                  icon={<Icons.FileOutlined css={dropdownIconsStyles} />}\n                >\n                  {t('Export to full Excel')}\n                </Menu.Item>\n              </>\n            )}\n\n          <Menu.Item\n            key={MenuKeys.DownloadAsImage}\n            icon={<Icons.FileImageOutlined css={dropdownIconsStyles} />}\n          >\n            {t('Download as image')}\n          </Menu.Item>\n        </Menu.SubMenu>\n      )}\n    </Menu>\n  );\n\n  return (\n    <>\n      {isFullSize && (\n        <Icons.FullscreenExitOutlined\n          style={{ fontSize: 22 }}\n          onClick={() => {\n            props.handleToggleFullSize();\n          }}\n        />\n      )}\n      <NoAnimationDropdown\n        dropdownRender={() => menu}\n        overlayStyle={dropdownOverlayStyle}\n        trigger={['click']}\n        placement=\"bottomRight\"\n        open={isDropdownVisible}\n        onOpenChange={visible => setIsDropdownVisible(visible)}\n      >\n        <Button\n          type=\"link\"\n          id={`slice_${slice.slice_id}-controls`}\n          aria-label=\"More Options\"\n          aria-haspopup=\"true\"\n        >\n          <VerticalDotsTrigger />\n        </Button>\n      </NoAnimationDropdown>\n      <DrillDetailModal\n        formData={props.formData}\n        initialFilters={[]}\n        onHideModal={() => {\n          setDrillModalIsOpen(false);\n        }}\n        chartId={slice.slice_id}\n        showModal={drillModalIsOpen}\n      />\n\n      {canEditCrossFilters && scopingModal}\n    </>\n  );\n};\n\nexport default SliceHeaderControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}