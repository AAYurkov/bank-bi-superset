{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _isEqual from \"lodash/isEqual\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Behavior, isFeatureEnabled, FeatureFlag, GenericDataType, getChartMetadataRegistry, NativeFilterType, styled, t, getClientErrorObject, SLOW_DEBOUNCE, useTheme, css } from '@superset-ui/core';\n\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useState, memo } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { Input, TextArea } from 'src/components/Input';\nimport { Select } from 'src/components';\nimport Collapse from 'src/components/Collapse';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { FormItem } from 'src/components/Form';\nimport { Icons } from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { Radio } from 'src/components/Radio';\nimport Tabs from 'src/components/Tabs';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { cachedSupersetGet } from 'src/utils/cachedSupersetGet';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport { SingleValueType } from 'src/filters/components/Range/SingleValueType';\nimport { getFormData, mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { DatasetSelectLabel } from 'src/features/datasets/DatasetSelectLabel';\nimport { ALLOW_DEPENDENCIES as TYPES_SUPPORT_DEPENDENCIES, getFiltersConfigModalTestId } from '../FiltersConfigModal';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { ColumnSelect } from './ColumnSelect';\nimport DatasetSelect from './DatasetSelect';\nimport DefaultValue from './DefaultValue';\nimport FilterScope from './FilterScope/FilterScope';\nimport getControlItemsMap from './getControlItemsMap';\nimport RemovedFilter from './RemovedFilter';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport { hasTemporalColumns, mostUsedDataset, setNativeFilterFieldValues, useForceUpdate } from './utils';\nimport { FILTER_SUPPORTED_TYPES, INPUT_WIDTH } from './constants';\nimport DependencyList from './DependencyList';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst FORM_ITEM_WIDTH = 260;\nconst TabPane = styled(Tabs.TabPane)`\n  padding: ${({ theme }) => theme.gridUnit * 4}px 0px;\n`;\nconst StyledContainer = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    padding: 0px ${theme.gridUnit * 4}px;\n  `}\n`;\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\nconst controlsOrder = [\n'enableEmptyFilter',\n'defaultToFirstItem',\n'creatable',\n'multiSelect',\n'searchAllOptions',\n'inverseSelection'];\n\nexport const StyledFormItem = styled(FormItem)`\n  width: ${({ expanded }) => expanded ? '49%' : `${FORM_ITEM_WIDTH}px`};\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledRowFormItem = styled(FormItem)`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: ${({ expanded }) => expanded ? '50%' : `${FORM_ITEM_WIDTH}px`};\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\nexport const StyledRowSubFormItem = styled(FormItem)`\n  min-width: ${({ expanded }) => expanded ? '50%' : `${FORM_ITEM_WIDTH}px`};\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst StyledCollapse = styled(Collapse)`\n  border-left: 0;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    top: 0;\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\nconst FilterTypeInfo = styled.div`\n  ${({ theme, expanded }) => `\n    width: ${expanded ? '49%' : `${FORM_ITEM_WIDTH}px`};\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin:\n      ${-theme.gridUnit * 2}px\n      0px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 4}px;\n  `}\n`;\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Settings')\n  },\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping')\n  }\n};\nexport const FilterPanels = {\n  configuration: {\n    key: 'configuration',\n    name: t('Filter Configuration')\n  },\n  settings: {\n    key: 'settings',\n    name: t('Filter Settings')\n  }\n};\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by')\n};\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = ({ expanded, filterId, filterToEdit, removedFilters, form, getAvailableFilters, activeFilterPanelKeys, restoreFilter, handleActiveFilterPanelChange, setErroredFilters, onModifyFilter, validateDependencies, getDependencySuggestion, isActive }, ref) => {var _formFilter$dataset2, _nativeFilterItems$fo, _nativeFilterItems$fo2, _ref, _formFilter$dataset$v, _formFilter$dataset3, _filterToEdit$targets, _nativeFilterItems$fo3, _nativeFilterItem$val, _formFilter$isDataDir, _formFilter$dataset6, _filterToEdit$adhoc_f, _formFilter$controlVa, _filterToEdit$control, _filterToEdit$control2, _formFilter$controlVa2, _formFilter$controlVa3, _filterToEdit$control3, _filterToEdit$control4, _formFilter$controlVa4, _formFilter$adhoc_fil, _formFilter$controlVa5, _formFilter$dataset9, _datasetDetails$colum, _error$errors;\n  const theme = useTheme();\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState();\n  const [metrics, setMetrics] = useState([]);\n  const [activeTabKey, setActiveTabKey] = useState(FilterTabs.configuration.key);\n  const dashboardId = useSelector((state) => state.dashboardInfo.id);\n  const [undoFormValues, setUndoFormValues] = useState(null);\n  const forceUpdate = useForceUpdate(isActive);\n  const [datasetDetails, setDatasetDetails] = useState();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const filters = form.getFieldValue('filters');\n  const formValues = filters == null ? void 0 : filters[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n  const handleModifyFilter = useCallback(() => {\n    if (onModifyFilter) {\n      onModifyFilter(filterId);\n    }\n  }, [onModifyFilter, filterId]);\n  const dependencies = (formFilter == null ? void 0 : formFilter.dependencies) || (filterToEdit == null ? void 0 : filterToEdit.cascadeParentIds) || [];\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n  // @ts-ignore\n  .filter(([, { value }]) => {var _value$behaviors;return (_value$behaviors = value.behaviors) == null ? void 0 : _value$behaviors.includes(Behavior.NativeFilter);}).\n  map(([key]) => key);\n  const loadedDatasets = useSelector(({ datasources }) => datasources);\n  const charts = useSelector(({ charts }) => charts);\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(() => Object.values(loadedDatasets).some((dataset) => hasTemporalColumns(dataset)), [loadedDatasets]);\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find((dataset) => {var _formFilter$dataset;return dataset.id === (formFilter == null ? void 0 : (_formFilter$dataset = formFilter.dataset) == null ? void 0 : _formFilter$dataset.value);});\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter == null ? void 0 : (_formFilter$dataset2 = formFilter.dataset) == null ? void 0 : _formFilter$dataset2.value, loadedDatasets]);\n  const hasDataset =\n  // @ts-ignore\n  !!((_nativeFilterItems$fo = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null && (_nativeFilterItems$fo2 = _nativeFilterItems$fo.value) != null && _nativeFilterItems$fo2.datasourceCount);\n  const datasetId = (_ref = (_formFilter$dataset$v = formFilter == null ? void 0 : (_formFilter$dataset3 = formFilter.dataset) == null ? void 0 : _formFilter$dataset3.value) != null ? _formFilter$dataset$v :\n  filterToEdit == null ? void 0 : (_filterToEdit$targets = filterToEdit.targets[0]) == null ? void 0 : _filterToEdit$targets.datasetId) != null ? _ref :\n  mostUsedDataset(loadedDatasets, charts);\n  const formChanged = useCallback(() => {\n    form.setFields([\n    {\n      name: 'changed',\n      value: true\n    }]\n    );\n    handleModifyFilter();\n  }, [form, handleModifyFilter]);\n  const debouncedFormChanged = useCallback(_debounce(formChanged, SLOW_DEBOUNCE), []);\n  const { controlItems = {}, mainControlItems = {} } = formFilter ?\n  getControlItemsMap({\n    expanded,\n    datasetId,\n    disabled: false,\n    forceUpdate,\n    formChanged,\n    form,\n    filterId,\n    filterType: formFilter == null ? void 0 : formFilter.filterType,\n    filterToEdit,\n    formFilter,\n    removed: isRemoved\n  }) :\n  {};\n  const hasColumn = !!mainControlItems.groupby;\n  const nativeFilterItem = (_nativeFilterItems$fo3 = nativeFilterItems[formFilter == null ? void 0 : formFilter.filterType]) != null ? _nativeFilterItems$fo3 : {};\n  // @ts-ignore\n  const enableNoResults = !!((_nativeFilterItem$val = nativeFilterItem.value) != null && _nativeFilterItem$val.enableNoResults);\n  const hasMetrics = hasColumn && !!metrics.length;\n  const hasFilledDataset = !hasDataset || datasetId && ((formFilter == null ? void 0 : formFilter.column) || !hasColumn);\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(formFilter == null ? void 0 : formFilter.filterType);\n  const canDependOnOtherFilters = TYPES_SUPPORT_DEPENDENCIES.includes(formFilter == null ? void 0 : formFilter.filterType);\n  const isDataDirty = (_formFilter$isDataDir = formFilter == null ? void 0 : formFilter.isDataDirty) != null ? _formFilter$isDataDir : true;\n  const setNativeFilterFieldValuesWrapper = (values) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError(undefined);\n    forceUpdate();\n  };\n  const setErrorWrapper = (error) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null\n    });\n    setError(error);\n    forceUpdate();\n  };\n  // Calculates the dependencies default values to be used\n  // to extract the available values to the filter\n  let dependenciesDefaultValues = {};\n  if (dependencies && dependencies.length > 0 && filters) {\n    dependencies.forEach((dependency) => {var _filters$dependency, _filters$dependency$d;\n      const extraFormData = (_filters$dependency = filters[dependency]) == null ? void 0 : (_filters$dependency$d = _filters$dependency.defaultDataMask) == null ? void 0 : _filters$dependency$d.extraFormData;\n      dependenciesDefaultValues = mergeExtraFormData(dependenciesDefaultValues, extraFormData);\n    });\n  }\n  const dependenciesText = JSON.stringify(dependenciesDefaultValues);\n  const refreshHandler = useCallback((force = false) => {var _formFilter$dataset4, _formFilter$dataset5;\n    if (!hasDataset || !(formFilter != null && (_formFilter$dataset4 = formFilter.dataset) != null && _formFilter$dataset4.value)) {\n      forceUpdate();\n      return;\n    }\n    const formData = getFormData({\n      datasetId: formFilter == null ? void 0 : (_formFilter$dataset5 = formFilter.dataset) == null ? void 0 : _formFilter$dataset5.value,\n      dashboardId,\n      groupby: formFilter == null ? void 0 : formFilter.column,\n      ...formFilter\n    });\n    formData.extra_form_data = dependenciesDefaultValues;\n    setNativeFilterFieldValuesWrapper({\n      defaultValueQueriesData: null,\n      isDataDirty: false\n    });\n    getChartDataRequest({\n      formData,\n      force\n    }).\n    then(({ response, json }) => {\n      if (isFeatureEnabled(FeatureFlag.GlobalAsyncQueries)) {\n        // deal with getChartDataRequest transforming the response data\n        const result = 'result' in json ? json.result[0] : json;\n        if (response.status === 200) {\n          setNativeFilterFieldValuesWrapper({\n            defaultValueQueriesData: [result]\n          });\n        } else\n        if (response.status === 202) {\n          waitForAsyncData(result).\n          then((asyncResult) => {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: asyncResult\n            });\n          }).\n          catch((error) => {\n            getClientErrorObject(error).then((clientErrorObject) => {\n              setErrorWrapper(clientErrorObject);\n            });\n          });\n        } else\n        {\n          throw new Error(`Received unexpected response status (${response.status}) while fetching chart data`);\n        }\n      } else\n      {\n        setNativeFilterFieldValuesWrapper({\n          defaultValueQueriesData: json.result\n        });\n      }\n    }).\n    catch((error) => {\n      getClientErrorObject(error).then((clientErrorObject) => {\n        setError(clientErrorObject);\n      });\n    });\n  }, [filterId, forceUpdate, form, formFilter, hasDataset, dependenciesText]);\n  // TODO: refreshHandler changes itself because of the dependencies. Needs refactor.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => refreshHandler(), [dependenciesText]);\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter == null ? void 0 : formFilter.column : undefined,\n    ...formFilter\n  });\n  newFormData.extra_form_data = dependenciesDefaultValues;\n  const [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue] = useDefaultValue(formFilter, filterToEdit);\n  const showDataset = !datasetId || datasetDetails || (formFilter == null ? void 0 : (_formFilter$dataset6 = formFilter.dataset) == null ? void 0 : _formFilter$dataset6.label);\n  const updateFormValues = useCallback((values, triggerFormChange = true) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    if (triggerFormChange)\n    formChanged();\n  }, [filterId, form, formChanged]);\n  const hasPreFilter = !!(formFilter != null && formFilter.adhoc_filters) ||\n  !!(formFilter != null && formFilter.time_range) ||\n  !!(filterToEdit != null && (_filterToEdit$adhoc_f = filterToEdit.adhoc_filters) != null && _filterToEdit$adhoc_f.length) ||\n  !!(filterToEdit != null && filterToEdit.time_range);\n  const hasEnableSingleValue = (formFilter == null ? void 0 : (_formFilter$controlVa = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa.enableSingleValue) !== undefined ||\n  (filterToEdit == null ? void 0 : (_filterToEdit$control = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control.enableSingleValue) !== undefined;\n  let enableSingleValue = filterToEdit == null ? void 0 : (_filterToEdit$control2 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control2.enableSingleValue;\n  if ((formFilter == null ? void 0 : (_formFilter$controlVa2 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa2.enableSingleMaxValue) !== undefined) {\n    ({ enableSingleValue } = formFilter.controlValues);\n  }\n  const hasSorting = typeof (formFilter == null ? void 0 : (_formFilter$controlVa3 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa3.sortAscending) === 'boolean' ||\n  typeof (filterToEdit == null ? void 0 : (_filterToEdit$control3 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control3.sortAscending) === 'boolean';\n  let sort = filterToEdit == null ? void 0 : (_filterToEdit$control4 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control4.sortAscending;\n  if (typeof (formFilter == null ? void 0 : (_formFilter$controlVa4 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa4.sortAscending) === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n  const showDefaultValue = !hasDataset ||\n  !isDataDirty && hasFilledDataset ||\n  !mainControlItems.groupby;\n  const onSortChanged = (value) => {var _form$getFieldValue;\n    const previous = (_form$getFieldValue = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value\n      }\n    });\n    forceUpdate();\n  };\n  const onEnableSingleValueChanged = (value) => {var _form$getFieldValue2;\n    const previous = (_form$getFieldValue2 = form.getFieldValue('filters')) == null ? void 0 : _form$getFieldValue2[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        enableSingleValue: value\n      }\n    });\n    forceUpdate();\n  };\n  const validatePreFilter = () => setTimeout(() => form.validateFields([\n  ['filters', filterId, 'adhoc_filters'],\n  ['filters', filterId, 'time_range']]\n  ), 0);\n  const hasTimeRange = (formFilter == null ? void 0 : formFilter.time_range) && formFilter.time_range !== 'No filter';\n  const hasAdhoc = (formFilter == null ? void 0 : (_formFilter$adhoc_fil = formFilter.adhoc_filters) == null ? void 0 : _formFilter$adhoc_fil.length) > 0;\n  const defaultToFirstItem = formFilter == null ? void 0 : (_formFilter$controlVa5 = formFilter.controlValues) == null ? void 0 : _formFilter$controlVa5.defaultToFirstItem;\n  const initialDefaultValue = (formFilter == null ? void 0 : formFilter.filterType) === (filterToEdit == null ? void 0 : filterToEdit.filterType) ?\n  filterToEdit == null ? void 0 : filterToEdit.defaultDataMask :\n  null;\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n  const availableFilters = getAvailableFilters(filterId);\n  const hasAvailableFilters = availableFilters.length > 0;\n  const hasTimeDependency = availableFilters.\n  filter((filter) => filter.type === 'filter_time').\n  some((filter) => dependencies == null ? void 0 : dependencies.includes(filter.value));\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}?q=${rison.encode({\n          columns: [\n          'columns.column_name',\n          'columns.expression',\n          'columns.filterable',\n          'columns.is_dttm',\n          'columns.type',\n          'columns.verbose_name',\n          'database.id',\n          'database.database_name',\n          'datasource_type',\n          'filter_select_enabled',\n          'id',\n          'is_sqllab_view',\n          'main_dttm_col',\n          'metrics.metric_name',\n          'metrics.verbose_name',\n          'schema',\n          'sql',\n          'table_name']\n\n        })}`\n      }).\n      then((response) => {var _response$json, _response$json$result, _response$json2;\n        setMetrics((_response$json = response.json) == null ? void 0 : (_response$json$result = _response$json.result) == null ? void 0 : _response$json$result.metrics);\n        const dataset = (_response$json2 = response.json) == null ? void 0 : _response$json2.result;\n        // modify the response to fit structure expected by AdhocFilterControl\n        dataset.type = dataset.datasource_type;\n        dataset.filter_select = true;\n        setDatasetDetails(dataset);\n      }).\n      catch((response) => {\n        addDangerToast(response.message);\n      });\n    }\n  }, [datasetId]);\n  useImperativeHandle(ref, () => ({\n    changeTab(tab) {\n      setActiveTabKey(tab);\n    }\n  }));\n  useBackendFormUpdate(form, filterId);\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n  hasDataset,\n  hasFilledDataset,\n  hasDefaultValue,\n  isDataDirty,\n  refreshHandler,\n  showDataset]\n  );\n  const initiallyExcludedCharts = useMemo(() => {var _formFilter$dataset7;\n    const excluded = [];\n    if ((formFilter == null ? void 0 : (_formFilter$dataset7 = formFilter.dataset) == null ? void 0 : _formFilter$dataset7.value) === undefined) {\n      return [];\n    }\n    Object.values(charts).forEach((chart) => {var _chart$form_data, _loadedDatasets$chart, _formFilter$dataset8;\n      const chartDatasetUid = (_chart$form_data = chart.form_data) == null ? void 0 : _chart$form_data.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (((_loadedDatasets$chart = loadedDatasets[chartDatasetUid]) == null ? void 0 : _loadedDatasets$chart.id) !== (formFilter == null ? void 0 : (_formFilter$dataset8 = formFilter.dataset) == null ? void 0 : _formFilter$dataset8.value)) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n  JSON.stringify(charts),\n  formFilter == null ? void 0 : (_formFilter$dataset9 = formFilter.dataset) == null ? void 0 : _formFilter$dataset9.value,\n  JSON.stringify(loadedDatasets)]\n  );\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n  if (isRemoved) {\n    return _jsx(RemovedFilter, { onClick: () => restoreFilter(filterId) });\n  }\n  const timeColumn = _jsx(StyledRowFormItem, { expanded: expanded, name: ['filters', filterId, 'granularity_sqla'], label: _jsxs(_Fragment, { children: [\n      _jsx(StyledLabel, { children: t('Time column') }), \"\\xA0\",\n      _jsx(InfoTooltipWithTrigger, { placement: \"top\", tooltip: hasTimeDependency ?\n        t('Time column to apply dependent temporal filter to') :\n        t('Time column to apply time range to') })] }\n    ), initialValue: filterToEdit == null ? void 0 : filterToEdit.granularity_sqla, children:\n    _jsx(ColumnSelect, { allowClear: true, form: form, formField: \"granularity_sqla\", filterId: filterId, filterValues: (column) => !!column.is_dttm, datasetId: datasetId, onChange: (column) => {\n        // We need reset default value when column changed\n        setNativeFilterFieldValues(form, filterId, {\n          granularity_sqla: column\n        });\n        forceUpdate();\n        formChanged();\n      } }) }\n  );\n  return _jsxs(StyledTabs, { activeKey: activeTabKey, onChange: (activeKey) => setActiveTabKey(activeKey), centered: true, children: [\n    _jsxs(TabPane, { tab: FilterTabs.configuration.name, forceRender: true, children: [\n      _jsxs(StyledContainer, { children: [\n        _jsx(StyledFormItem, { expanded: expanded, name: ['filters', filterId, 'type'], hidden: true, initialValue: NativeFilterType.NativeFilter, children:\n          _jsx(Input, { onChange: formChanged }) }\n        ),\n        _jsx(StyledFormItem, { expanded: expanded, name: ['filters', filterId, 'name'], label: _jsx(StyledLabel, { children: t('Filter name') }), initialValue: filterToEdit == null ? void 0 : filterToEdit.name, rules: [{ required: !isRemoved, message: t('Name is required') }], children:\n          _jsx(Input, { ...getFiltersConfigModalTestId('name-input'), onChange: debouncedFormChanged }) }\n        ),\n        _jsx(StyledFormItem, { expanded: expanded, name: ['filters', filterId, 'filterType'], rules: [{ required: !isRemoved, message: t('Name is required') }], initialValue: (filterToEdit == null ? void 0 : filterToEdit.filterType) || 'filter_select', label: _jsx(StyledLabel, { children: t('Filter Type') }), ...getFiltersConfigModalTestId('filter-type'), children:\n          _jsx(Select, { ariaLabel: t('Filter type'), options: nativeFilterVizTypes.map((filterType) => {var _nativeFilterItems$fi, _FILTER_SUPPORTED_TYP, _FILTER_SUPPORTED_TYP2;\n              // @ts-ignore\n              const name = (_nativeFilterItems$fi = nativeFilterItems[filterType]) == null ? void 0 : _nativeFilterItems$fi.value.name;\n              const mappedName = name ?\n              FILTER_TYPE_NAME_MAPPING[name] :\n              undefined;\n              const isDisabled = ((_FILTER_SUPPORTED_TYP = FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP.length) === 1 && ((_FILTER_SUPPORTED_TYP2 =\n              FILTER_SUPPORTED_TYPES[filterType]) == null ? void 0 : _FILTER_SUPPORTED_TYP2.includes(GenericDataType.Temporal)) &&\n              !doLoadedDatasetsHaveTemporalColumns;\n              return {\n                value: filterType,\n                label: mappedName || name,\n                customLabel: isDisabled ? _jsx(Tooltip, { title: t('Datasets do not contain a temporal column'), children:\n                  mappedName || name }\n                ) : undefined,\n                disabled: isDisabled\n              };\n            }), onChange: (value) => {\n              setNativeFilterFieldValues(form, filterId, {\n                filterType: value,\n                defaultDataMask: null,\n                column: null\n              });\n              forceUpdate();\n              formChanged();\n            } }) }\n        )] }\n      ),\n      (formFilter == null ? void 0 : formFilter.filterType) === 'filter_time' && _jsx(FilterTypeInfo, { expanded: expanded, children:\n        t(`Dashboard time range filters apply to temporal columns defined in\n          the filter section of each chart. Add temporal columns to the chart\n          filters to have this dashboard filter impact those charts.`) }\n      ),\n      hasDataset && _jsxs(StyledRowContainer, { children: [\n        showDataset ? _jsx(StyledFormItem, { expanded: expanded, name: ['filters', filterId, 'dataset'], label: _jsx(StyledLabel, { children: t('Dataset') }), initialValue: datasetDetails ?\n          {\n            label: DatasetSelectLabel({\n              id: datasetDetails.id,\n              table_name: datasetDetails.table_name,\n              schema: datasetDetails.schema,\n              database: {\n                database_name: datasetDetails.database.database_name\n              }\n            }),\n            value: datasetDetails.id\n          } :\n          undefined, rules: [\n          { required: !isRemoved, message: t('Dataset is required') }], ...\n          getFiltersConfigModalTestId('datasource-input'), children:\n          _jsx(DatasetSelect, { onChange: (value) => {\n              // We need to reset the column when the dataset has changed\n              if (value.value !== datasetId) {\n                setNativeFilterFieldValues(form, filterId, {\n                  dataset: value,\n                  defaultDataMask: null,\n                  column: null\n                });\n              }\n              forceUpdate();\n              formChanged();\n            } }) }\n        ) : _jsx(StyledFormItem, { expanded: expanded, label: _jsx(StyledLabel, { children: t('Dataset') }), children:\n          _jsx(Loading, { position: \"inline-centered\" }) }\n        ),\n        hasDataset &&\n        Object.keys(mainControlItems).map((key) => mainControlItems[key].element)] }\n      ),\n      _jsxs(StyledCollapse, { defaultActiveKey: activeFilterPanelKeys, onChange: (key) => {\n          handleActiveFilterPanelChange(key);\n        }, expandIconPosition: \"right\", children: [\n        (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_time' && _jsxs(Collapse.Panel, { forceRender: true, header: FilterPanels.configuration.name, children: [\n          canDependOnOtherFilters && hasAvailableFilters && _jsx(StyledRowFormItem, { expanded: expanded, name: ['filters', filterId, 'dependencies'], initialValue: dependencies, children:\n            _jsx(DependencyList, { availableFilters: availableFilters, dependencies: dependencies, onDependenciesChange: (dependencies) => {\n                setNativeFilterFieldValues(form, filterId, {\n                  dependencies\n                });\n                forceUpdate();\n                validateDependencies();\n                formChanged();\n              }, getDependencySuggestion: () => getDependencySuggestion(filterId), children:\n              hasTimeDependency ? timeColumn : undefined }\n            ) }\n          ),\n          hasDataset && hasAdditionalFilters && _jsx(CleanFormItem, { name: ['filters', filterId, 'preFilter'], children:\n            _jsxs(CollapsibleControl, { initialValue: hasPreFilter, title: t('Pre-filter available values'), tooltip: t(`Add filter clauses to control the filter's source query,\n                    though only in the context of the autocomplete i.e., these conditions\n                    do not impact how the filter is applied to the dashboard. This is useful\n                    when you want to improve the query's performance by only scanning a subset\n                    of the underlying data or limit the available values displayed in the filter.`), onChange: (checked) => {\n                formChanged();\n                if (checked) {\n                  validatePreFilter();\n                }\n              }, children: [\n              _jsx(StyledRowSubFormItem, { expanded: expanded, name: ['filters', filterId, 'adhoc_filters'], css: /*#__PURE__*/_css({ width: INPUT_WIDTH }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:FiltersConfigForm;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), initialValue: filterToEdit == null ? void 0 : filterToEdit.adhoc_filters, required: true, rules: [\n                {\n                  validator: preFilterValidator\n                }], children:\n\n                _jsx(AdhocFilterControl, { columns: (datasetDetails == null ? void 0 : (_datasetDetails$colum = datasetDetails.columns) == null ? void 0 : _datasetDetails$colum.filter((c) => c.filterable)) || [], savedMetrics: (datasetDetails == null ? void 0 : datasetDetails.metrics) || [], datasource: datasetDetails, onChange: (filters) => {\n                    setNativeFilterFieldValues(form, filterId, {\n                      adhoc_filters: filters\n                    });\n                    forceUpdate();\n                    formChanged();\n                    validatePreFilter();\n                  }, label: _jsxs(\"span\", { children: [\n                    _jsx(StyledLabel, { children: t('Pre-filter') }),\n                    !hasTimeRange && _jsx(StyledAsterisk, {})] }\n                  ) }) }\n              ),\n              showTimeRangePicker && _jsx(StyledRowFormItem, { expanded: expanded, name: ['filters', filterId, 'time_range'], label: _jsx(StyledLabel, { children: t('Time range') }), initialValue: (filterToEdit == null ? void 0 : filterToEdit.time_range) || t('No filter'), required: !hasAdhoc, rules: [\n                {\n                  validator: preFilterValidator\n                }], children:\n\n                _jsx(DateFilterControl, { name: \"time_range\", onChange: (timeRange) => {\n                    setNativeFilterFieldValues(form, filterId, {\n                      time_range: timeRange\n                    });\n                    forceUpdate();\n                    formChanged();\n                    validatePreFilter();\n                  } }) }\n              ),\n              hasTimeRange && !hasTimeDependency ?\n              timeColumn :\n              undefined] }\n            ) }\n          ),\n          (formFilter == null ? void 0 : formFilter.filterType) !== 'filter_range' ? _jsx(CleanFormItem, { name: ['filters', filterId, 'sortFilter'], children:\n            _jsxs(CollapsibleControl, { initialValue: hasSorting, title: t('Sort filter values'), onChange: (checked) => {\n                onSortChanged(checked || undefined);\n                formChanged();\n              }, children: [\n              _jsx(StyledRowFormItem, { expanded: expanded, name: [\n                'filters',\n                filterId,\n                'controlValues',\n                'sortAscending'],\n                initialValue: sort, label: _jsx(StyledLabel, { children: t('Sort type') }), children:\n                _jsx(Radio.GroupWrapper, { options: [\n                  { value: true, label: t('Sort ascending') },\n                  { value: false, label: t('Sort descending') }],\n                  onChange: (value) => {\n                    onSortChanged(value.target.value);\n                    formChanged();\n                  } }) }\n              ),\n              hasMetrics && _jsx(StyledRowSubFormItem, { expanded: expanded, name: ['filters', filterId, 'sortMetric'], initialValue: filterToEdit == null ? void 0 : filterToEdit.sortMetric, label: _jsxs(_Fragment, { children: [\n                  _jsx(StyledLabel, { children: t('Sort Metric') }), \"\\xA0\",\n                  _jsx(InfoTooltipWithTrigger, { placement: \"top\", tooltip: t('If a metric is specified, sorting will be done based on the metric value') })] }\n                ), \"data-test\": \"field-input\", children:\n                _jsx(Select, { allowClear: true, ariaLabel: t('Sort metric'), name: \"sortMetric\", options: metrics.map((metric) => {var _metric$verbose_name;return {\n                      value: metric.metric_name,\n                      label: (_metric$verbose_name = metric.verbose_name) != null ? _metric$verbose_name : metric.metric_name\n                    };}), onChange: (value) => {\n                    if (value !== undefined) {\n                      setNativeFilterFieldValues(form, filterId, {\n                        sortMetric: value\n                      });\n                      forceUpdate();\n                    }\n                    formChanged();\n                  } }) }\n              )] }\n            ) }\n          ) : _jsx(CleanFormItem, { name: ['filters', filterId, 'rangeFilter'], children:\n            _jsx(CollapsibleControl, { initialValue: hasEnableSingleValue, title: t('Single Value'), onChange: (checked) => {\n                onEnableSingleValueChanged(checked ? SingleValueType.Exact : undefined);\n                formChanged();\n              }, children:\n              _jsx(StyledRowFormItem, { expanded: expanded, name: [\n                'filters',\n                filterId,\n                'controlValues',\n                'enableSingleValue'],\n                initialValue: enableSingleValue, label: _jsx(StyledLabel, { children: t('Single value type') }), children:\n                _jsx(Radio.GroupWrapper, { onChange: (value) => {\n                    onEnableSingleValueChanged(value.target.value);\n                    formChanged();\n                  }, options: [\n                  {\n                    label: t('Minimum'),\n                    value: SingleValueType.Minimum\n                  },\n                  { label: t('Exact'), value: SingleValueType.Exact },\n                  {\n                    label: t('Maximum'),\n                    value: SingleValueType.Maximum\n                  }] }\n                ) }\n              ) }\n            ) }\n          )] }, `${filterId}-${FilterPanels.configuration.key}`\n        ),\n        _jsxs(Collapse.Panel, { forceRender: true, header: FilterPanels.settings.name, children: [\n          _jsx(StyledFormItem, { expanded: expanded, name: ['filters', filterId, 'description'], initialValue: filterToEdit == null ? void 0 : filterToEdit.description, label: _jsx(StyledLabel, { children: t('Description') }), children:\n            _jsx(TextArea, { onChange: debouncedFormChanged }) }\n          ),\n          _jsx(CleanFormItem, { name: ['filters', filterId, 'defaultValueQueriesData'], hidden: true, initialValue: null }),\n          _jsx(CleanFormItem, { name: ['filters', filterId, 'defaultValue'], children:\n            _jsx(CollapsibleControl, { checked: hasDefaultValue, disabled: isRequired || defaultToFirstItem, initialValue: hasDefaultValue, title: t('Filter has default value'), tooltip: defaultValueTooltip, onChange: (value) => {\n                setHasDefaultValue(value);\n                if (!value) {\n                  setNativeFilterFieldValues(form, filterId, {\n                    defaultDataMask: null\n                  });\n                }\n                formChanged();\n              }, children:\n              !isRemoved && _jsx(StyledRowSubFormItem, { expanded: expanded, name: ['filters', filterId, 'defaultDataMask'], initialValue: initialDefaultValue, \"data-test\": \"default-input\", label: _jsx(StyledLabel, { children: t('Default Value') }), required: hasDefaultValue, rules: [\n                {\n                  validator: () => {var _formFilter$defaultDa, _formFilter$defaultDa2;\n                    if (formFilter != null && (_formFilter$defaultDa = formFilter.defaultDataMask) != null && (_formFilter$defaultDa2 = _formFilter$defaultDa.filterState) != null && _formFilter$defaultDa2.value) {\n                      // requires managing the error as the DefaultValue\n                      // component does not use an Antdesign compatible input\n                      const formValidationFields = form.getFieldsError();\n                      setErroredFilters((prevErroredFilters) => {\n                        if (prevErroredFilters.length &&\n                        !formValidationFields.find((f) => f.errors.length > 0)) {\n                          return [];\n                        }\n                        return prevErroredFilters;\n                      });\n                      return Promise.resolve();\n                    }\n                    setErroredFilters((prevErroredFilters) => {\n                      if (prevErroredFilters.includes(filterId)) {\n                        return prevErroredFilters;\n                      }\n                      return [...prevErroredFilters, filterId];\n                    });\n                    return Promise.reject(new Error(t('Please choose a valid value')));\n                  }\n                }], children:\n\n                error || showDefaultValue ? _jsxs(DefaultValueContainer, { children: [\n                  error ? _jsx(ErrorMessageWithStackTrace, { error: (_error$errors = error.errors) == null ? void 0 : _error$errors[0], fallback: _jsx(BasicErrorAlert, { title: t('Cannot load filter'), body: error.error, level: \"error\" }) }) : _jsx(DefaultValue, { setDataMask: (dataMask) => {var _initialDefaultValue$, _dataMask$filterState;\n                      if (!_isEqual(initialDefaultValue == null ? void 0 : (_initialDefaultValue$ = initialDefaultValue.filterState) == null ? void 0 : _initialDefaultValue$.value, dataMask == null ? void 0 : (_dataMask$filterState = dataMask.filterState) == null ? void 0 : _dataMask$filterState.value)) {\n                        formChanged();\n                      }\n                      setNativeFilterFieldValues(form, filterId, {\n                        defaultDataMask: dataMask\n                      });\n                      form.validateFields([\n                      ['filters', filterId, 'defaultDataMask']]\n                      );\n                      forceUpdate();\n                    }, hasDefaultValue: hasDefaultValue, filterId: filterId, hasDataset: hasDataset, form: form, formData: newFormData, enableNoResults: enableNoResults }),\n                  hasDataset && datasetId && _jsx(Tooltip, { title: t('Refresh the default values'), children:\n                    _jsx(Icons.SyncOutlined, { iconSize: \"xl\", iconColor: theme.colors.primary.base, css: css`\n                                margin-left: ${theme.gridUnit * 2}px;\n                              `, onClick: () => refreshHandler(true) }) }\n                  )] }\n                ) : t('Fill all required fields to enable \"Default Value\"') }\n              ) }\n            ) }\n          ),\n          Object.keys(controlItems).\n          sort((a, b) => controlsOrder.indexOf(a) -\n          controlsOrder.indexOf(b)).\n          map((key) => controlItems[key].element)] }, `${filterId}-${FilterPanels.settings.key}`\n        )] }, `native-filter-config-${filterId}`\n      )] }, FilterTabs.configuration.key\n    ),\n    _jsx(TabPane, { tab: FilterTabs.scoping.name, forceRender: true, children:\n      _jsx(FilterScope, { updateFormValues: updateFormValues, pathToFormValue: ['filters', filterId], forceUpdate: forceUpdate, filterScope: filterToEdit == null ? void 0 : filterToEdit.scope, formFilterScope: formFilter == null ? void 0 : formFilter.scope, initiallyExcludedCharts: initiallyExcludedCharts }) }, FilterTabs.scoping.key\n    )] }\n  );\n};__signature__(FiltersConfigForm, \"useTheme{theme}\\nuseState{[error, setError]}\\nuseState{[metrics, setMetrics]([])}\\nuseState{[activeTabKey, setActiveTabKey](FilterTabs.configuration.key)}\\nuseSelector{dashboardId}\\nuseState{[undoFormValues, setUndoFormValues](null)}\\nuseForceUpdate{forceUpdate}\\nuseState{[datasetDetails, setDatasetDetails]}\\nuseMemo{defaultFormFilter}\\nuseCallback{handleModifyFilter}\\nuseSelector{loadedDatasets}\\nuseSelector{charts}\\nuseMemo{doLoadedDatasetsHaveTemporalColumns}\\nuseMemo{showTimeRangePicker}\\nuseCallback{formChanged}\\nuseCallback{debouncedFormChanged}\\nuseCallback{refreshHandler}\\nuseEffect{}\\nuseDefaultValue{[hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue]}\\nuseCallback{updateFormValues}\\nuseEffect{}\\nuseImperativeHandle{}\\nuseBackendFormUpdate{}\\nuseEffect{}\\nuseMemo{initiallyExcludedCharts}\\nuseEffect{}\\nuseEffect{}\", () => [useTheme, useSelector, useForceUpdate, useSelector, useSelector, useDefaultValue, useImperativeHandle, useBackendFormUpdate]);const _default = /*#__PURE__*/\nmemo(/*#__PURE__*/forwardRef(FiltersConfigForm));export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FORM_ITEM_WIDTH, \"FORM_ITEM_WIDTH\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(TabPane, \"TabPane\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowContainer, \"StyledRowContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(controlsOrder, \"controlsOrder\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledFormItem, \"StyledFormItem\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowFormItem, \"StyledRowFormItem\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledRowSubFormItem, \"StyledRowSubFormItem\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledLabel, \"StyledLabel\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(CleanFormItem, \"CleanFormItem\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(DefaultValueContainer, \"DefaultValueContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledCollapse, \"StyledCollapse\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledTabs, \"StyledTabs\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(StyledAsterisk, \"StyledAsterisk\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterTypeInfo, \"FilterTypeInfo\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterTabs, \"FilterTabs\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FilterPanels, \"FilterPanels\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTERS_WITH_ADHOC_FILTERS, \"FILTERS_WITH_ADHOC_FILTERS\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FILTER_TYPE_NAME_MAPPING, \"FILTER_TYPE_NAME_MAPPING\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(FiltersConfigForm, \"FiltersConfigForm\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["InfoTooltipWithTrigger","Behavior","isFeatureEnabled","FeatureFlag","GenericDataType","getChartMetadataRegistry","NativeFilterType","styled","t","getClientErrorObject","SLOW_DEBOUNCE","useTheme","css","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useState","memo","rison","useSelector","getChartDataRequest","Input","TextArea","Select","Collapse","BasicErrorAlert","ErrorMessageWithStackTrace","FormItem","Icons","Loading","addDangerToast","Radio","Tabs","Tooltip","cachedSupersetGet","DateFilterControl","AdhocFilterControl","waitForAsyncData","SingleValueType","getFormData","mergeExtraFormData","DatasetSelectLabel","ALLOW_DEPENDENCIES","TYPES_SUPPORT_DEPENDENCIES","getFiltersConfigModalTestId","CollapsibleControl","ColumnSelect","DatasetSelect","DefaultValue","FilterScope","getControlItemsMap","RemovedFilter","useBackendFormUpdate","useDefaultValue","hasTemporalColumns","mostUsedDataset","setNativeFilterFieldValues","useForceUpdate","FILTER_SUPPORTED_TYPES","INPUT_WIDTH","DependencyList","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FORM_ITEM_WIDTH","TabPane","theme","gridUnit","StyledContainer","div","StyledRowContainer","controlsOrder","StyledFormItem","expanded","StyledRowFormItem","StyledRowSubFormItem","StyledLabel","span","colors","grayscale","base","typography","sizes","s","CleanFormItem","DefaultValueContainer","StyledCollapse","light2","StyledTabs","light5","StyledAsterisk","error","FilterTypeInfo","light1","FilterTabs","configuration","key","name","scoping","FilterPanels","settings","FILTERS_WITH_ADHOC_FILTERS","FILTER_TYPE_NAME_MAPPING","FiltersConfigForm","filterId","filterToEdit","removedFilters","form","getAvailableFilters","activeFilterPanelKeys","restoreFilter","handleActiveFilterPanelChange","setErroredFilters","onModifyFilter","validateDependencies","getDependencySuggestion","isActive","ref","_formFilter$dataset2","_nativeFilterItems$fo","_nativeFilterItems$fo2","_ref","_formFilter$dataset$v","_formFilter$dataset3","_filterToEdit$targets","_nativeFilterItems$fo3","_nativeFilterItem$val","_formFilter$isDataDir","_formFilter$dataset6","_filterToEdit$adhoc_f","_formFilter$controlVa","_filterToEdit$control","_filterToEdit$control2","_formFilter$controlVa2","_formFilter$controlVa3","_filterToEdit$control3","_filterToEdit$control4","_formFilter$controlVa4","_formFilter$adhoc_fil","_formFilter$controlVa5","_formFilter$dataset9","_datasetDetails$colum","_error$errors","isRemoved","setError","metrics","setMetrics","activeTabKey","setActiveTabKey","dashboardId","state","dashboardInfo","id","undoFormValues","setUndoFormValues","forceUpdate","datasetDetails","setDatasetDetails","defaultFormFilter","filters","getFieldValue","formValues","formFilter","handleModifyFilter","dependencies","cascadeParentIds","nativeFilterItems","items","nativeFilterVizTypes","Object","entries","filter","value","_value$behaviors","behaviors","includes","NativeFilter","map","loadedDatasets","datasources","charts","doLoadedDatasetsHaveTemporalColumns","values","some","dataset","showTimeRangePicker","currentDataset","find","_formFilter$dataset","hasDataset","filterType","datasourceCount","datasetId","targets","formChanged","setFields","debouncedFormChanged","_debounce","controlItems","mainControlItems","disabled","removed","hasColumn","groupby","nativeFilterItem","enableNoResults","hasMetrics","length","hasFilledDataset","column","hasAdditionalFilters","canDependOnOtherFilters","isDataDirty","setNativeFilterFieldValuesWrapper","undefined","setErrorWrapper","defaultValueQueriesData","dependenciesDefaultValues","forEach","dependency","_filters$dependency","_filters$dependency$d","extraFormData","defaultDataMask","dependenciesText","JSON","stringify","refreshHandler","force","_formFilter$dataset4","_formFilter$dataset5","formData","extra_form_data","then","response","json","GlobalAsyncQueries","result","status","asyncResult","catch","clientErrorObject","Error","newFormData","hasDefaultValue","isRequired","defaultValueTooltip","setHasDefaultValue","showDataset","label","updateFormValues","triggerFormChange","hasPreFilter","adhoc_filters","time_range","hasEnableSingleValue","controlValues","enableSingleValue","enableSingleMaxValue","hasSorting","sortAscending","sort","showDefaultValue","onSortChanged","_form$getFieldValue","previous","onEnableSingleValueChanged","_form$getFieldValue2","validatePreFilter","setTimeout","validateFields","hasTimeRange","hasAdhoc","defaultToFirstItem","initialDefaultValue","preFilterValidator","Promise","resolve","reject","availableFilters","hasAvailableFilters","hasTimeDependency","type","endpoint","encode","columns","_response$json","_response$json$result","_response$json2","datasource_type","filter_select","message","changeTab","tab","initiallyExcludedCharts","_formFilter$dataset7","excluded","chart","_chart$form_data","_loadedDatasets$chart","_formFilter$dataset8","chartDatasetUid","form_data","datasource","push","onClick","timeColumn","children","placement","tooltip","initialValue","granularity_sqla","allowClear","formField","filterValues","is_dttm","onChange","activeKey","centered","forceRender","hidden","rules","required","ariaLabel","options","_nativeFilterItems$fi","_FILTER_SUPPORTED_TYP","_FILTER_SUPPORTED_TYP2","mappedName","isDisabled","Temporal","customLabel","title","table_name","schema","database","database_name","position","keys","element","defaultActiveKey","expandIconPosition","Panel","header","onDependenciesChange","checked","_css","width","process","env","NODE_ENV","validator","c","filterable","savedMetrics","timeRange","GroupWrapper","target","sortMetric","metric","_metric$verbose_name","metric_name","verbose_name","Exact","Minimum","Maximum","description","_formFilter$defaultDa","_formFilter$defaultDa2","filterState","formValidationFields","getFieldsError","prevErroredFilters","f","errors","fallback","body","level","setDataMask","dataMask","_initialDefaultValue$","_dataMask$filterState","_isEqual","SyncOutlined","iconSize","iconColor","primary","a","b","indexOf","pathToFormValue","filterScope","scope","formFilterScope","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FiltersConfigForm.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  ColumnMeta,\n  InfoTooltipWithTrigger,\n  Metric,\n} from '@superset-ui/chart-controls';\nimport {\n  AdhocFilter,\n  Behavior,\n  ChartDataResponseResult,\n  Column,\n  isFeatureEnabled,\n  FeatureFlag,\n  Filter,\n  GenericDataType,\n  getChartMetadataRegistry,\n  JsonResponse,\n  NativeFilterType,\n  styled,\n  SupersetApiError,\n  t,\n  ClientErrorObject,\n  getClientErrorObject,\n  SLOW_DEBOUNCE,\n  useTheme,\n  css,\n} from '@superset-ui/core';\nimport { debounce, isEqual } from 'lodash';\nimport {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n  RefObject,\n  memo,\n} from 'react';\nimport rison from 'rison';\nimport { PluginFilterSelectCustomizeProps } from 'src/filters/components/Select/types';\nimport { useSelector } from 'react-redux';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { Input, TextArea } from 'src/components/Input';\nimport { Select, FormInstance } from 'src/components';\nimport Collapse from 'src/components/Collapse';\nimport BasicErrorAlert from 'src/components/ErrorMessage/BasicErrorAlert';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { FormItem } from 'src/components/Form';\nimport { Icons } from 'src/components/Icons';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { Radio } from 'src/components/Radio';\nimport Tabs from 'src/components/Tabs';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { cachedSupersetGet } from 'src/utils/cachedSupersetGet';\nimport {\n  Chart,\n  ChartsState,\n  DatasourcesState,\n  RootState,\n} from 'src/dashboard/types';\nimport DateFilterControl from 'src/explore/components/controls/DateFilterControl';\nimport AdhocFilterControl from 'src/explore/components/controls/FilterControl/AdhocFilterControl';\nimport { waitForAsyncData } from 'src/middleware/asyncEvent';\nimport { SingleValueType } from 'src/filters/components/Range/SingleValueType';\nimport {\n  getFormData,\n  mergeExtraFormData,\n} from 'src/dashboard/components/nativeFilters/utils';\nimport { DatasetSelectLabel } from 'src/features/datasets/DatasetSelectLabel';\nimport {\n  ALLOW_DEPENDENCIES as TYPES_SUPPORT_DEPENDENCIES,\n  getFiltersConfigModalTestId,\n} from '../FiltersConfigModal';\nimport { FilterRemoval, NativeFiltersForm } from '../types';\nimport { CollapsibleControl } from './CollapsibleControl';\nimport { ColumnSelect } from './ColumnSelect';\nimport DatasetSelect from './DatasetSelect';\nimport DefaultValue from './DefaultValue';\nimport FilterScope from './FilterScope/FilterScope';\nimport getControlItemsMap from './getControlItemsMap';\nimport RemovedFilter from './RemovedFilter';\nimport { useBackendFormUpdate, useDefaultValue } from './state';\nimport {\n  hasTemporalColumns,\n  mostUsedDataset,\n  setNativeFilterFieldValues,\n  useForceUpdate,\n} from './utils';\nimport { FILTER_SUPPORTED_TYPES, INPUT_WIDTH } from './constants';\nimport DependencyList from './DependencyList';\n\nconst FORM_ITEM_WIDTH = 260;\n\nconst TabPane = styled(Tabs.TabPane)`\n  padding: ${({ theme }) => theme.gridUnit * 4}px 0px;\n`;\n\nconst StyledContainer = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    padding: 0px ${theme.gridUnit * 4}px;\n  `}\n`;\n\nconst StyledRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\ntype ControlKey = keyof PluginFilterSelectCustomizeProps;\n\nconst controlsOrder: ControlKey[] = [\n  'enableEmptyFilter',\n  'defaultToFirstItem',\n  'creatable',\n  'multiSelect',\n  'searchAllOptions',\n  'inverseSelection',\n];\n\nexport const StyledFormItem = styled(FormItem)<{ expanded: boolean }>`\n  width: ${({ expanded }) => (expanded ? '49%' : `${FORM_ITEM_WIDTH}px`)};\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowFormItem = styled(FormItem)<{ expanded: boolean }>`\n  margin-bottom: 0;\n  padding-bottom: 0;\n  min-width: ${({ expanded }) => (expanded ? '50%' : `${FORM_ITEM_WIDTH}px`)};\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  & .ant-form-item-control-input {\n    min-height: ${({ theme }) => theme.gridUnit * 10}px;\n  }\n`;\n\nexport const StyledRowSubFormItem = styled(FormItem)<{ expanded: boolean }>`\n  min-width: ${({ expanded }) => (expanded ? '50%' : `${FORM_ITEM_WIDTH}px`)};\n\n  & .ant-form-item-label {\n    padding-bottom: 0;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n\n  .ant-form-item-control-input-content > div > div {\n    height: auto;\n  }\n\n  .ant-form-item-extra {\n    display: none;\n  }\n\n  & .ant-form-item-control-input {\n    height: auto;\n  }\n`;\n\nexport const StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst CleanFormItem = styled(FormItem)`\n  margin-bottom: 0;\n`;\n\nconst DefaultValueContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  border-left: 0;\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: 0;\n\n  .ant-collapse-header {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  .ant-collapse-content {\n    border: 0;\n  }\n\n  .ant-collapse-content-box {\n    padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.ant-collapse > .ant-collapse-item {\n    border: 0;\n    border-radius: 0;\n  }\n`;\n\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav {\n    position: sticky;\n    top: 0;\n    background: ${({ theme }) => theme.colors.grayscale.light5};\n    z-index: 1;\n  }\n\n  .ant-tabs-nav-list {\n    padding: 0;\n  }\n\n  .ant-form-item-label {\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledAsterisk = styled.span`\n  color: ${({ theme }) => theme.colors.error.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-left: ${({ theme }) => theme.gridUnit - 1}px;\n  &:before {\n    content: '*';\n  }\n`;\n\nconst FilterTypeInfo = styled.div<{ expanded: boolean }>`\n  ${({ theme, expanded }) => `\n    width: ${expanded ? '49%' : `${FORM_ITEM_WIDTH}px`};\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.light1};\n    margin:\n      ${-theme.gridUnit * 2}px\n      0px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 4}px;\n  `}\n`;\n\nconst FilterTabs = {\n  configuration: {\n    key: 'configuration',\n    name: t('Settings'),\n  },\n  scoping: {\n    key: 'scoping',\n    name: t('Scoping'),\n  },\n};\n\nexport const FilterPanels = {\n  configuration: {\n    key: 'configuration',\n    name: t('Filter Configuration'),\n  },\n  settings: {\n    key: 'settings',\n    name: t('Filter Settings'),\n  },\n};\n\nexport interface FiltersConfigFormProps {\n  expanded: boolean;\n  filterId: string;\n  filterToEdit?: Filter;\n  removedFilters: Record<string, FilterRemoval>;\n  restoreFilter: (filterId: string) => void;\n  onModifyFilter: (filterId: string) => void;\n  form: FormInstance<NativeFiltersForm>;\n  getAvailableFilters: (\n    filterId: string,\n  ) => { label: string; value: string; type: string | undefined }[];\n  handleActiveFilterPanelChange: (activeFilterPanel: string | string[]) => void;\n  activeFilterPanelKeys: string | string[];\n  isActive: boolean;\n  setErroredFilters: (f: (filters: string[]) => string[]) => void;\n  validateDependencies: () => void;\n  getDependencySuggestion: (filterId: string) => string;\n}\n\nconst FILTERS_WITH_ADHOC_FILTERS = ['filter_select', 'filter_range'];\n\n// TODO: Rename the filter plugins and remove this mapping\nconst FILTER_TYPE_NAME_MAPPING = {\n  [t('Select filter')]: t('Value'),\n  [t('Range filter')]: t('Numerical range'),\n  [t('Time filter')]: t('Time range'),\n  [t('Time column')]: t('Time column'),\n  [t('Time grain')]: t('Time grain'),\n  [t('Group By')]: t('Group by'),\n};\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nconst FiltersConfigForm = (\n  {\n    expanded,\n    filterId,\n    filterToEdit,\n    removedFilters,\n    form,\n    getAvailableFilters,\n    activeFilterPanelKeys,\n    restoreFilter,\n    handleActiveFilterPanelChange,\n    setErroredFilters,\n    onModifyFilter,\n    validateDependencies,\n    getDependencySuggestion,\n    isActive,\n  }: FiltersConfigFormProps,\n  ref: RefObject<any>,\n) => {\n  const theme = useTheme();\n  const isRemoved = !!removedFilters[filterId];\n  const [error, setError] = useState<ClientErrorObject>();\n  const [metrics, setMetrics] = useState<Metric[]>([]);\n  const [activeTabKey, setActiveTabKey] = useState<string>(\n    FilterTabs.configuration.key,\n  );\n  const dashboardId = useSelector<RootState, number>(\n    state => state.dashboardInfo.id,\n  );\n  const [undoFormValues, setUndoFormValues] = useState<Record<\n    string,\n    any\n  > | null>(null);\n  const forceUpdate = useForceUpdate(isActive);\n  const [datasetDetails, setDatasetDetails] = useState<Record<string, any>>();\n  const defaultFormFilter = useMemo(() => ({}), []);\n  const filters = form.getFieldValue('filters');\n  const formValues = filters?.[filterId];\n  const formFilter = formValues || undoFormValues || defaultFormFilter;\n\n  const handleModifyFilter = useCallback(() => {\n    if (onModifyFilter) {\n      onModifyFilter(filterId);\n    }\n  }, [onModifyFilter, filterId]);\n\n  const dependencies: string[] =\n    formFilter?.dependencies || filterToEdit?.cascadeParentIds || [];\n\n  const nativeFilterItems = getChartMetadataRegistry().items;\n  const nativeFilterVizTypes = Object.entries(nativeFilterItems)\n    // @ts-ignore\n    .filter(([, { value }]) => value.behaviors?.includes(Behavior.NativeFilter))\n    .map(([key]) => key as keyof typeof FILTER_SUPPORTED_TYPES);\n\n  const loadedDatasets = useSelector<RootState, DatasourcesState>(\n    ({ datasources }) => datasources,\n  );\n\n  const charts = useSelector<RootState, ChartsState>(({ charts }) => charts);\n\n  const doLoadedDatasetsHaveTemporalColumns = useMemo(\n    () =>\n      Object.values(loadedDatasets).some(dataset =>\n        hasTemporalColumns(dataset),\n      ),\n    [loadedDatasets],\n  );\n\n  const showTimeRangePicker = useMemo(() => {\n    const currentDataset = Object.values(loadedDatasets).find(\n      dataset => dataset.id === formFilter?.dataset?.value,\n    );\n\n    return currentDataset ? hasTemporalColumns(currentDataset) : true;\n  }, [formFilter?.dataset?.value, loadedDatasets]);\n\n  const hasDataset =\n    // @ts-ignore\n    !!nativeFilterItems[formFilter?.filterType]?.value?.datasourceCount;\n\n  const datasetId =\n    formFilter?.dataset?.value ??\n    filterToEdit?.targets[0]?.datasetId ??\n    mostUsedDataset(loadedDatasets, charts);\n\n  const formChanged = useCallback(() => {\n    form.setFields([\n      {\n        name: 'changed',\n        value: true,\n      },\n    ]);\n    handleModifyFilter();\n  }, [form, handleModifyFilter]);\n\n  const debouncedFormChanged = useCallback(\n    debounce(formChanged, SLOW_DEBOUNCE),\n    [],\n  );\n\n  const { controlItems = {}, mainControlItems = {} } = formFilter\n    ? getControlItemsMap({\n        expanded,\n        datasetId,\n        disabled: false,\n        forceUpdate,\n        formChanged,\n        form,\n        filterId,\n        filterType: formFilter?.filterType,\n        filterToEdit,\n        formFilter,\n        removed: isRemoved,\n      })\n    : {};\n  const hasColumn = !!mainControlItems.groupby;\n\n  const nativeFilterItem = nativeFilterItems[formFilter?.filterType] ?? {};\n  // @ts-ignore\n  const enableNoResults = !!nativeFilterItem.value?.enableNoResults;\n\n  const hasMetrics = hasColumn && !!metrics.length;\n\n  const hasFilledDataset =\n    !hasDataset || (datasetId && (formFilter?.column || !hasColumn));\n\n  const hasAdditionalFilters = FILTERS_WITH_ADHOC_FILTERS.includes(\n    formFilter?.filterType,\n  );\n\n  const canDependOnOtherFilters = TYPES_SUPPORT_DEPENDENCIES.includes(\n    formFilter?.filterType,\n  );\n\n  const isDataDirty = formFilter?.isDataDirty ?? true;\n\n  const setNativeFilterFieldValuesWrapper = (values: object) => {\n    setNativeFilterFieldValues(form, filterId, values);\n    setError(undefined);\n    forceUpdate();\n  };\n\n  const setErrorWrapper = (error: ClientErrorObject) => {\n    setNativeFilterFieldValues(form, filterId, {\n      defaultValueQueriesData: null,\n    });\n    setError(error);\n    forceUpdate();\n  };\n\n  // Calculates the dependencies default values to be used\n  // to extract the available values to the filter\n  let dependenciesDefaultValues = {};\n  if (dependencies && dependencies.length > 0 && filters) {\n    dependencies.forEach(dependency => {\n      const extraFormData = filters[dependency]?.defaultDataMask?.extraFormData;\n      dependenciesDefaultValues = mergeExtraFormData(\n        dependenciesDefaultValues,\n        extraFormData,\n      );\n    });\n  }\n\n  const dependenciesText = JSON.stringify(dependenciesDefaultValues);\n\n  const refreshHandler = useCallback(\n    (force = false) => {\n      if (!hasDataset || !formFilter?.dataset?.value) {\n        forceUpdate();\n        return;\n      }\n      const formData = getFormData({\n        datasetId: formFilter?.dataset?.value,\n        dashboardId,\n        groupby: formFilter?.column,\n        ...formFilter,\n      });\n      formData.extra_form_data = dependenciesDefaultValues;\n\n      setNativeFilterFieldValuesWrapper({\n        defaultValueQueriesData: null,\n        isDataDirty: false,\n      });\n      getChartDataRequest({\n        formData,\n        force,\n      })\n        .then(({ response, json }) => {\n          if (isFeatureEnabled(FeatureFlag.GlobalAsyncQueries)) {\n            // deal with getChartDataRequest transforming the response data\n            const result = 'result' in json ? json.result[0] : json;\n\n            if (response.status === 200) {\n              setNativeFilterFieldValuesWrapper({\n                defaultValueQueriesData: [result],\n              });\n            } else if (response.status === 202) {\n              waitForAsyncData(result)\n                .then((asyncResult: ChartDataResponseResult[]) => {\n                  setNativeFilterFieldValuesWrapper({\n                    defaultValueQueriesData: asyncResult,\n                  });\n                })\n                .catch((error: Response) => {\n                  getClientErrorObject(error).then(clientErrorObject => {\n                    setErrorWrapper(clientErrorObject);\n                  });\n                });\n            } else {\n              throw new Error(\n                `Received unexpected response status (${response.status}) while fetching chart data`,\n              );\n            }\n          } else {\n            setNativeFilterFieldValuesWrapper({\n              defaultValueQueriesData: json.result,\n            });\n          }\n        })\n        .catch((error: Response) => {\n          getClientErrorObject(error).then(clientErrorObject => {\n            setError(clientErrorObject);\n          });\n        });\n    },\n    [filterId, forceUpdate, form, formFilter, hasDataset, dependenciesText],\n  );\n\n  // TODO: refreshHandler changes itself because of the dependencies. Needs refactor.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => refreshHandler(), [dependenciesText]);\n\n  const newFormData = getFormData({\n    datasetId,\n    groupby: hasColumn ? formFilter?.column : undefined,\n    ...formFilter,\n  });\n\n  newFormData.extra_form_data = dependenciesDefaultValues;\n\n  const [hasDefaultValue, isRequired, defaultValueTooltip, setHasDefaultValue] =\n    useDefaultValue(formFilter, filterToEdit);\n\n  const showDataset =\n    !datasetId || datasetDetails || formFilter?.dataset?.label;\n\n  const updateFormValues = useCallback(\n    (values: any, triggerFormChange = true) => {\n      setNativeFilterFieldValues(form, filterId, values);\n      if (triggerFormChange) formChanged();\n    },\n    [filterId, form, formChanged],\n  );\n\n  const hasPreFilter =\n    !!formFilter?.adhoc_filters ||\n    !!formFilter?.time_range ||\n    !!filterToEdit?.adhoc_filters?.length ||\n    !!filterToEdit?.time_range;\n\n  const hasEnableSingleValue =\n    formFilter?.controlValues?.enableSingleValue !== undefined ||\n    filterToEdit?.controlValues?.enableSingleValue !== undefined;\n\n  let enableSingleValue = filterToEdit?.controlValues?.enableSingleValue;\n  if (formFilter?.controlValues?.enableSingleMaxValue !== undefined) {\n    ({ enableSingleValue } = formFilter.controlValues);\n  }\n\n  const hasSorting =\n    typeof formFilter?.controlValues?.sortAscending === 'boolean' ||\n    typeof filterToEdit?.controlValues?.sortAscending === 'boolean';\n\n  let sort = filterToEdit?.controlValues?.sortAscending;\n  if (typeof formFilter?.controlValues?.sortAscending === 'boolean') {\n    sort = formFilter.controlValues.sortAscending;\n  }\n\n  const showDefaultValue =\n    !hasDataset ||\n    (!isDataDirty && hasFilledDataset) ||\n    !mainControlItems.groupby;\n\n  const onSortChanged = (value: boolean | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        sortAscending: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const onEnableSingleValueChanged = (value: SingleValueType | undefined) => {\n    const previous = form.getFieldValue('filters')?.[filterId].controlValues;\n    setNativeFilterFieldValues(form, filterId, {\n      controlValues: {\n        ...previous,\n        enableSingleValue: value,\n      },\n    });\n    forceUpdate();\n  };\n\n  const validatePreFilter = () =>\n    setTimeout(\n      () =>\n        form.validateFields([\n          ['filters', filterId, 'adhoc_filters'],\n          ['filters', filterId, 'time_range'],\n        ]),\n      0,\n    );\n\n  const hasTimeRange =\n    formFilter?.time_range && formFilter.time_range !== 'No filter';\n\n  const hasAdhoc = formFilter?.adhoc_filters?.length > 0;\n\n  const defaultToFirstItem = formFilter?.controlValues?.defaultToFirstItem;\n\n  const initialDefaultValue =\n    formFilter?.filterType === filterToEdit?.filterType\n      ? filterToEdit?.defaultDataMask\n      : null;\n\n  const preFilterValidator = () => {\n    if (hasTimeRange || hasAdhoc) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(t('Pre-filter is required')));\n  };\n\n  const availableFilters = getAvailableFilters(filterId);\n  const hasAvailableFilters = availableFilters.length > 0;\n  const hasTimeDependency = availableFilters\n    .filter(filter => filter.type === 'filter_time')\n    .some(filter => dependencies?.includes(filter.value));\n\n  useEffect(() => {\n    if (datasetId) {\n      cachedSupersetGet({\n        endpoint: `/api/v1/dataset/${datasetId}?q=${rison.encode({\n          columns: [\n            'columns.column_name',\n            'columns.expression',\n            'columns.filterable',\n            'columns.is_dttm',\n            'columns.type',\n            'columns.verbose_name',\n            'database.id',\n            'database.database_name',\n            'datasource_type',\n            'filter_select_enabled',\n            'id',\n            'is_sqllab_view',\n            'main_dttm_col',\n            'metrics.metric_name',\n            'metrics.verbose_name',\n            'schema',\n            'sql',\n            'table_name',\n          ],\n        })}`,\n      })\n        .then((response: JsonResponse) => {\n          setMetrics(response.json?.result?.metrics);\n          const dataset = response.json?.result;\n          // modify the response to fit structure expected by AdhocFilterControl\n          dataset.type = dataset.datasource_type;\n          dataset.filter_select = true;\n          setDatasetDetails(dataset);\n        })\n        .catch((response: SupersetApiError) => {\n          addDangerToast(response.message);\n        });\n    }\n  }, [datasetId]);\n\n  useImperativeHandle(ref, () => ({\n    changeTab(tab: 'configuration' | 'scoping') {\n      setActiveTabKey(tab);\n    },\n  }));\n\n  useBackendFormUpdate(form, filterId);\n\n  useEffect(() => {\n    if (hasDataset && hasFilledDataset && hasDefaultValue && isDataDirty) {\n      refreshHandler();\n    }\n  }, [\n    hasDataset,\n    hasFilledDataset,\n    hasDefaultValue,\n    isDataDirty,\n    refreshHandler,\n    showDataset,\n  ]);\n\n  const initiallyExcludedCharts = useMemo(() => {\n    const excluded: number[] = [];\n    if (formFilter?.dataset?.value === undefined) {\n      return [];\n    }\n\n    Object.values(charts).forEach((chart: Chart) => {\n      const chartDatasetUid = chart.form_data?.datasource;\n      if (chartDatasetUid === undefined) {\n        return;\n      }\n      if (loadedDatasets[chartDatasetUid]?.id !== formFilter?.dataset?.value) {\n        excluded.push(chart.id);\n      }\n    });\n    return excluded;\n  }, [\n    JSON.stringify(charts),\n    formFilter?.dataset?.value,\n    JSON.stringify(loadedDatasets),\n  ]);\n\n  useEffect(() => {\n    // just removed, saving current form items for eventual undo\n    if (isRemoved) {\n      setUndoFormValues(formValues);\n    }\n  }, [isRemoved]);\n\n  useEffect(() => {\n    // the filter was just restored after undo\n    if (undoFormValues && !isRemoved) {\n      setNativeFilterFieldValues(form, filterId, undoFormValues);\n      setUndoFormValues(null);\n    }\n  }, [formValues, filterId, form, isRemoved, undoFormValues]);\n\n  if (isRemoved) {\n    return <RemovedFilter onClick={() => restoreFilter(filterId)} />;\n  }\n\n  const timeColumn = (\n    <StyledRowFormItem\n      expanded={expanded}\n      name={['filters', filterId, 'granularity_sqla']}\n      label={\n        <>\n          <StyledLabel>{t('Time column')}</StyledLabel>&nbsp;\n          <InfoTooltipWithTrigger\n            placement=\"top\"\n            tooltip={\n              hasTimeDependency\n                ? t('Time column to apply dependent temporal filter to')\n                : t('Time column to apply time range to')\n            }\n          />\n        </>\n      }\n      initialValue={filterToEdit?.granularity_sqla}\n    >\n      <ColumnSelect\n        allowClear\n        form={form}\n        formField=\"granularity_sqla\"\n        filterId={filterId}\n        filterValues={(column: Column) => !!column.is_dttm}\n        datasetId={datasetId}\n        onChange={column => {\n          // We need reset default value when column changed\n          setNativeFilterFieldValues(form, filterId, {\n            granularity_sqla: column,\n          });\n          forceUpdate();\n          formChanged();\n        }}\n      />\n    </StyledRowFormItem>\n  );\n\n  return (\n    <StyledTabs\n      activeKey={activeTabKey}\n      onChange={activeKey => setActiveTabKey(activeKey)}\n      centered\n    >\n      <TabPane\n        tab={FilterTabs.configuration.name}\n        key={FilterTabs.configuration.key}\n        forceRender\n      >\n        <StyledContainer>\n          <StyledFormItem\n            expanded={expanded}\n            name={['filters', filterId, 'type']}\n            hidden\n            initialValue={NativeFilterType.NativeFilter}\n          >\n            <Input onChange={formChanged} />\n          </StyledFormItem>\n          <StyledFormItem\n            expanded={expanded}\n            name={['filters', filterId, 'name']}\n            label={<StyledLabel>{t('Filter name')}</StyledLabel>}\n            initialValue={filterToEdit?.name}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n          >\n            <Input\n              {...getFiltersConfigModalTestId('name-input')}\n              onChange={debouncedFormChanged}\n            />\n          </StyledFormItem>\n          <StyledFormItem\n            expanded={expanded}\n            name={['filters', filterId, 'filterType']}\n            rules={[{ required: !isRemoved, message: t('Name is required') }]}\n            initialValue={filterToEdit?.filterType || 'filter_select'}\n            label={<StyledLabel>{t('Filter Type')}</StyledLabel>}\n            {...getFiltersConfigModalTestId('filter-type')}\n          >\n            <Select\n              ariaLabel={t('Filter type')}\n              options={nativeFilterVizTypes.map(filterType => {\n                // @ts-ignore\n                const name = nativeFilterItems[filterType]?.value.name;\n                const mappedName = name\n                  ? FILTER_TYPE_NAME_MAPPING[name]\n                  : undefined;\n                const isDisabled =\n                  FILTER_SUPPORTED_TYPES[filterType]?.length === 1 &&\n                  FILTER_SUPPORTED_TYPES[filterType]?.includes(\n                    GenericDataType.Temporal,\n                  ) &&\n                  !doLoadedDatasetsHaveTemporalColumns;\n                return {\n                  value: filterType,\n                  label: mappedName || name,\n                  customLabel: isDisabled ? (\n                    <Tooltip\n                      title={t('Datasets do not contain a temporal column')}\n                    >\n                      {mappedName || name}\n                    </Tooltip>\n                  ) : undefined,\n                  disabled: isDisabled,\n                };\n              })}\n              onChange={value => {\n                setNativeFilterFieldValues(form, filterId, {\n                  filterType: value,\n                  defaultDataMask: null,\n                  column: null,\n                });\n                forceUpdate();\n                formChanged();\n              }}\n            />\n          </StyledFormItem>\n        </StyledContainer>\n        {formFilter?.filterType === 'filter_time' && (\n          <FilterTypeInfo expanded={expanded}>\n            {t(`Dashboard time range filters apply to temporal columns defined in\n          the filter section of each chart. Add temporal columns to the chart\n          filters to have this dashboard filter impact those charts.`)}\n          </FilterTypeInfo>\n        )}\n        {hasDataset && (\n          <StyledRowContainer>\n            {showDataset ? (\n              <StyledFormItem\n                expanded={expanded}\n                name={['filters', filterId, 'dataset']}\n                label={<StyledLabel>{t('Dataset')}</StyledLabel>}\n                initialValue={\n                  datasetDetails\n                    ? {\n                        label: DatasetSelectLabel({\n                          id: datasetDetails.id,\n                          table_name: datasetDetails.table_name,\n                          schema: datasetDetails.schema,\n                          database: {\n                            database_name:\n                              datasetDetails.database.database_name,\n                          },\n                        }),\n                        value: datasetDetails.id,\n                      }\n                    : undefined\n                }\n                rules={[\n                  { required: !isRemoved, message: t('Dataset is required') },\n                ]}\n                {...getFiltersConfigModalTestId('datasource-input')}\n              >\n                <DatasetSelect\n                  onChange={(value: { label: string; value: number }) => {\n                    // We need to reset the column when the dataset has changed\n                    if (value.value !== datasetId) {\n                      setNativeFilterFieldValues(form, filterId, {\n                        dataset: value,\n                        defaultDataMask: null,\n                        column: null,\n                      });\n                    }\n                    forceUpdate();\n                    formChanged();\n                  }}\n                />\n              </StyledFormItem>\n            ) : (\n              <StyledFormItem\n                expanded={expanded}\n                label={<StyledLabel>{t('Dataset')}</StyledLabel>}\n              >\n                <Loading position=\"inline-centered\" />\n              </StyledFormItem>\n            )}\n            {hasDataset &&\n              Object.keys(mainControlItems).map(\n                key => mainControlItems[key].element,\n              )}\n          </StyledRowContainer>\n        )}\n        <StyledCollapse\n          defaultActiveKey={activeFilterPanelKeys}\n          onChange={key => {\n            handleActiveFilterPanelChange(key);\n          }}\n          expandIconPosition=\"right\"\n          key={`native-filter-config-${filterId}`}\n        >\n          {formFilter?.filterType !== 'filter_time' && (\n            <Collapse.Panel\n              forceRender\n              header={FilterPanels.configuration.name}\n              key={`${filterId}-${FilterPanels.configuration.key}`}\n            >\n              {canDependOnOtherFilters && hasAvailableFilters && (\n                <StyledRowFormItem\n                  expanded={expanded}\n                  name={['filters', filterId, 'dependencies']}\n                  initialValue={dependencies}\n                >\n                  <DependencyList\n                    availableFilters={availableFilters}\n                    dependencies={dependencies}\n                    onDependenciesChange={dependencies => {\n                      setNativeFilterFieldValues(form, filterId, {\n                        dependencies,\n                      });\n                      forceUpdate();\n                      validateDependencies();\n                      formChanged();\n                    }}\n                    getDependencySuggestion={() =>\n                      getDependencySuggestion(filterId)\n                    }\n                  >\n                    {hasTimeDependency ? timeColumn : undefined}\n                  </DependencyList>\n                </StyledRowFormItem>\n              )}\n              {hasDataset && hasAdditionalFilters && (\n                <CleanFormItem name={['filters', filterId, 'preFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasPreFilter}\n                    title={t('Pre-filter available values')}\n                    tooltip={t(`Add filter clauses to control the filter's source query,\n                    though only in the context of the autocomplete i.e., these conditions\n                    do not impact how the filter is applied to the dashboard. This is useful\n                    when you want to improve the query's performance by only scanning a subset\n                    of the underlying data or limit the available values displayed in the filter.`)}\n                    onChange={checked => {\n                      formChanged();\n                      if (checked) {\n                        validatePreFilter();\n                      }\n                    }}\n                  >\n                    <StyledRowSubFormItem\n                      expanded={expanded}\n                      name={['filters', filterId, 'adhoc_filters']}\n                      css={{ width: INPUT_WIDTH }}\n                      initialValue={filterToEdit?.adhoc_filters}\n                      required\n                      rules={[\n                        {\n                          validator: preFilterValidator,\n                        },\n                      ]}\n                    >\n                      <AdhocFilterControl\n                        columns={\n                          datasetDetails?.columns?.filter(\n                            (c: ColumnMeta) => c.filterable,\n                          ) || []\n                        }\n                        savedMetrics={datasetDetails?.metrics || []}\n                        datasource={datasetDetails}\n                        onChange={(filters: AdhocFilter[]) => {\n                          setNativeFilterFieldValues(form, filterId, {\n                            adhoc_filters: filters,\n                          });\n                          forceUpdate();\n                          formChanged();\n                          validatePreFilter();\n                        }}\n                        label={\n                          <span>\n                            <StyledLabel>{t('Pre-filter')}</StyledLabel>\n                            {!hasTimeRange && <StyledAsterisk />}\n                          </span>\n                        }\n                      />\n                    </StyledRowSubFormItem>\n                    {showTimeRangePicker && (\n                      <StyledRowFormItem\n                        expanded={expanded}\n                        name={['filters', filterId, 'time_range']}\n                        label={<StyledLabel>{t('Time range')}</StyledLabel>}\n                        initialValue={\n                          filterToEdit?.time_range || t('No filter')\n                        }\n                        required={!hasAdhoc}\n                        rules={[\n                          {\n                            validator: preFilterValidator,\n                          },\n                        ]}\n                      >\n                        <DateFilterControl\n                          name=\"time_range\"\n                          onChange={timeRange => {\n                            setNativeFilterFieldValues(form, filterId, {\n                              time_range: timeRange,\n                            });\n                            forceUpdate();\n                            formChanged();\n                            validatePreFilter();\n                          }}\n                        />\n                      </StyledRowFormItem>\n                    )}\n                    {hasTimeRange && !hasTimeDependency\n                      ? timeColumn\n                      : undefined}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n              {formFilter?.filterType !== 'filter_range' ? (\n                <CleanFormItem name={['filters', filterId, 'sortFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasSorting}\n                    title={t('Sort filter values')}\n                    onChange={checked => {\n                      onSortChanged(checked || undefined);\n                      formChanged();\n                    }}\n                  >\n                    <StyledRowFormItem\n                      expanded={expanded}\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'sortAscending',\n                      ]}\n                      initialValue={sort}\n                      label={<StyledLabel>{t('Sort type')}</StyledLabel>}\n                    >\n                      <Radio.GroupWrapper\n                        options={[\n                          { value: true, label: t('Sort ascending') },\n                          { value: false, label: t('Sort descending') },\n                        ]}\n                        onChange={value => {\n                          onSortChanged(value.target.value);\n                          formChanged();\n                        }}\n                      />\n                    </StyledRowFormItem>\n                    {hasMetrics && (\n                      <StyledRowSubFormItem\n                        expanded={expanded}\n                        name={['filters', filterId, 'sortMetric']}\n                        initialValue={filterToEdit?.sortMetric}\n                        label={\n                          <>\n                            <StyledLabel>{t('Sort Metric')}</StyledLabel>&nbsp;\n                            <InfoTooltipWithTrigger\n                              placement=\"top\"\n                              tooltip={t(\n                                'If a metric is specified, sorting will be done based on the metric value',\n                              )}\n                            />\n                          </>\n                        }\n                        data-test=\"field-input\"\n                      >\n                        <Select\n                          allowClear\n                          ariaLabel={t('Sort metric')}\n                          name=\"sortMetric\"\n                          options={metrics.map((metric: Metric) => ({\n                            value: metric.metric_name,\n                            label: metric.verbose_name ?? metric.metric_name,\n                          }))}\n                          onChange={value => {\n                            if (value !== undefined) {\n                              setNativeFilterFieldValues(form, filterId, {\n                                sortMetric: value,\n                              });\n                              forceUpdate();\n                            }\n                            formChanged();\n                          }}\n                        />\n                      </StyledRowSubFormItem>\n                    )}\n                  </CollapsibleControl>\n                </CleanFormItem>\n              ) : (\n                <CleanFormItem name={['filters', filterId, 'rangeFilter']}>\n                  <CollapsibleControl\n                    initialValue={hasEnableSingleValue}\n                    title={t('Single Value')}\n                    onChange={checked => {\n                      onEnableSingleValueChanged(\n                        checked ? SingleValueType.Exact : undefined,\n                      );\n                      formChanged();\n                    }}\n                  >\n                    <StyledRowFormItem\n                      expanded={expanded}\n                      name={[\n                        'filters',\n                        filterId,\n                        'controlValues',\n                        'enableSingleValue',\n                      ]}\n                      initialValue={enableSingleValue}\n                      label={\n                        <StyledLabel>{t('Single value type')}</StyledLabel>\n                      }\n                    >\n                      <Radio.GroupWrapper\n                        onChange={value => {\n                          onEnableSingleValueChanged(value.target.value);\n                          formChanged();\n                        }}\n                        options={[\n                          {\n                            label: t('Minimum'),\n                            value: SingleValueType.Minimum,\n                          },\n                          { label: t('Exact'), value: SingleValueType.Exact },\n                          {\n                            label: t('Maximum'),\n                            value: SingleValueType.Maximum,\n                          },\n                        ]}\n                      />\n                    </StyledRowFormItem>\n                  </CollapsibleControl>\n                </CleanFormItem>\n              )}\n            </Collapse.Panel>\n          )}\n          <Collapse.Panel\n            forceRender\n            header={FilterPanels.settings.name}\n            key={`${filterId}-${FilterPanels.settings.key}`}\n          >\n            <StyledFormItem\n              expanded={expanded}\n              name={['filters', filterId, 'description']}\n              initialValue={filterToEdit?.description}\n              label={<StyledLabel>{t('Description')}</StyledLabel>}\n            >\n              <TextArea onChange={debouncedFormChanged} />\n            </StyledFormItem>\n            <CleanFormItem\n              name={['filters', filterId, 'defaultValueQueriesData']}\n              hidden\n              initialValue={null}\n            />\n            <CleanFormItem name={['filters', filterId, 'defaultValue']}>\n              <CollapsibleControl\n                checked={hasDefaultValue}\n                disabled={isRequired || defaultToFirstItem}\n                initialValue={hasDefaultValue}\n                title={t('Filter has default value')}\n                tooltip={defaultValueTooltip}\n                onChange={value => {\n                  setHasDefaultValue(value);\n                  if (!value) {\n                    setNativeFilterFieldValues(form, filterId, {\n                      defaultDataMask: null,\n                    });\n                  }\n                  formChanged();\n                }}\n              >\n                {!isRemoved && (\n                  <StyledRowSubFormItem\n                    expanded={expanded}\n                    name={['filters', filterId, 'defaultDataMask']}\n                    initialValue={initialDefaultValue}\n                    data-test=\"default-input\"\n                    label={<StyledLabel>{t('Default Value')}</StyledLabel>}\n                    required={hasDefaultValue}\n                    rules={[\n                      {\n                        validator: () => {\n                          if (formFilter?.defaultDataMask?.filterState?.value) {\n                            // requires managing the error as the DefaultValue\n                            // component does not use an Antdesign compatible input\n                            const formValidationFields = form.getFieldsError();\n                            setErroredFilters(prevErroredFilters => {\n                              if (\n                                prevErroredFilters.length &&\n                                !formValidationFields.find(\n                                  f => f.errors.length > 0,\n                                )\n                              ) {\n                                return [];\n                              }\n                              return prevErroredFilters;\n                            });\n                            return Promise.resolve();\n                          }\n                          setErroredFilters(prevErroredFilters => {\n                            if (prevErroredFilters.includes(filterId)) {\n                              return prevErroredFilters;\n                            }\n                            return [...prevErroredFilters, filterId];\n                          });\n                          return Promise.reject(\n                            new Error(t('Please choose a valid value')),\n                          );\n                        },\n                      },\n                    ]}\n                  >\n                    {error || showDefaultValue ? (\n                      <DefaultValueContainer>\n                        {error ? (\n                          <ErrorMessageWithStackTrace\n                            error={error.errors?.[0]}\n                            fallback={\n                              <BasicErrorAlert\n                                title={t('Cannot load filter')}\n                                body={error.error}\n                                level=\"error\"\n                              />\n                            }\n                          />\n                        ) : (\n                          <DefaultValue\n                            setDataMask={dataMask => {\n                              if (\n                                !isEqual(\n                                  initialDefaultValue?.filterState?.value,\n                                  dataMask?.filterState?.value,\n                                )\n                              ) {\n                                formChanged();\n                              }\n                              setNativeFilterFieldValues(form, filterId, {\n                                defaultDataMask: dataMask,\n                              });\n                              form.validateFields([\n                                ['filters', filterId, 'defaultDataMask'],\n                              ]);\n                              forceUpdate();\n                            }}\n                            hasDefaultValue={hasDefaultValue}\n                            filterId={filterId}\n                            hasDataset={hasDataset}\n                            form={form}\n                            formData={newFormData}\n                            enableNoResults={enableNoResults}\n                          />\n                        )}\n                        {hasDataset && datasetId && (\n                          <Tooltip title={t('Refresh the default values')}>\n                            <Icons.SyncOutlined\n                              iconSize=\"xl\"\n                              iconColor={theme.colors.primary.base}\n                              css={css`\n                                margin-left: ${theme.gridUnit * 2}px;\n                              `}\n                              onClick={() => refreshHandler(true)}\n                            />\n                          </Tooltip>\n                        )}\n                      </DefaultValueContainer>\n                    ) : (\n                      t('Fill all required fields to enable \"Default Value\"')\n                    )}\n                  </StyledRowSubFormItem>\n                )}\n              </CollapsibleControl>\n            </CleanFormItem>\n            {Object.keys(controlItems)\n              .sort(\n                (a, b) =>\n                  controlsOrder.indexOf(a as ControlKey) -\n                  controlsOrder.indexOf(b as ControlKey),\n              )\n              .map(key => controlItems[key].element)}\n          </Collapse.Panel>\n        </StyledCollapse>\n      </TabPane>\n      <TabPane\n        tab={FilterTabs.scoping.name}\n        key={FilterTabs.scoping.key}\n        forceRender\n      >\n        <FilterScope\n          updateFormValues={updateFormValues}\n          pathToFormValue={['filters', filterId]}\n          forceUpdate={forceUpdate}\n          filterScope={filterToEdit?.scope}\n          formFilterScope={formFilter?.scope}\n          initiallyExcludedCharts={initiallyExcludedCharts}\n        />\n      </TabPane>\n    </StyledTabs>\n  );\n};\n\nexport default memo(\n  forwardRef<typeof FiltersConfigForm, FiltersConfigFormProps>(\n    FiltersConfigForm,\n  ),\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}