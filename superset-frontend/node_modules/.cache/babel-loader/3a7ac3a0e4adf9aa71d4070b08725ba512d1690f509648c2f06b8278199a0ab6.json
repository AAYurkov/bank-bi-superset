{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect } from 'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { api } from './queryApi';\nconst schemaApi = api.injectEndpoints({\n  endpoints: (builder) => ({\n    schemas: builder.query({\n      providesTags: [{ type: 'Schemas', id: 'LIST' }],\n      query: ({ dbId, catalog, forceRefresh }) => ({\n        endpoint: `/api/v1/database/${dbId}/schemas/`,\n        // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n        urlParams: {\n          force: forceRefresh,\n          ...(catalog !== undefined && { catalog })\n        },\n        transformResponse: ({ json }) => json.result.sort().map((value) => ({\n          value,\n          label: value,\n          title: value\n        }))\n      }),\n      serializeQueryArgs: ({ queryArgs: { dbId, catalog } }) => ({\n        dbId,\n        catalog\n      })\n    })\n  })\n});\nexport const { useLazySchemasQuery, useSchemasQuery, endpoints: schemaEndpoints, util: schemaApiUtil } = schemaApi;\nexport const EMPTY_SCHEMAS = [];\nexport function useSchemas(options) {\n  const { dbId, catalog, onSuccess, onError } = options || {};\n  const [trigger] = useLazySchemasQuery();\n  const result = useSchemasQuery({ dbId, catalog: catalog || undefined, forceRefresh: false }, {\n    skip: !dbId\n  });\n  useEffect(() => {\n    if (result.isError) {\n      onError == null ? void 0 : onError(result.error);\n    }\n  }, [result.isError, result.error, onError]);\n  const fetchData = useEffectEvent((dbId, catalog, forceRefresh = false) => {\n    if (dbId && (!result.currentData || forceRefresh)) {\n      trigger({ dbId, catalog, forceRefresh }).then(({ isSuccess, isError, data }) => {\n        if (isSuccess) {\n          onSuccess == null ? void 0 : onSuccess(data || EMPTY_SCHEMAS, forceRefresh);\n        }\n        if (isError) {\n          onError == null ? void 0 : onError(result.error);\n        }\n      });\n    }\n  });\n  useEffect(() => {\n    fetchData(dbId, catalog, false);\n  }, [dbId, catalog, fetchData]);\n  const refetch = useCallback(() => {\n    fetchData(dbId, catalog, true);\n  }, [dbId, catalog, fetchData]);\n  return {\n    ...result,\n    refetch\n  };\n}__signature__(useSchemas, \"useLazySchemasQuery{[trigger]}\\nuseSchemasQuery{result}\\nuseEffect{}\\nuseEffectEvent{fetchData}\\nuseEffect{}\\nuseCallback{refetch}\", () => [useLazySchemasQuery, useSchemasQuery, useEffectEvent]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(schemaApi, \"schemaApi\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useLazySchemasQuery, \"useLazySchemasQuery\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useSchemasQuery, \"useSchemasQuery\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(schemaEndpoints, \"schemaEndpoints\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(schemaApiUtil, \"schemaApiUtil\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(EMPTY_SCHEMAS, \"EMPTY_SCHEMAS\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useSchemas, \"useSchemas\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useEffectEvent","api","schemaApi","injectEndpoints","endpoints","builder","schemas","query","providesTags","type","id","dbId","catalog","forceRefresh","endpoint","urlParams","force","undefined","transformResponse","json","result","sort","map","value","label","title","serializeQueryArgs","queryArgs","useLazySchemasQuery","useSchemasQuery","schemaEndpoints","util","schemaApiUtil","EMPTY_SCHEMAS","useSchemas","options","onSuccess","onError","trigger","skip","isError","error","fetchData","currentData","then","isSuccess","data","refetch","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/schemas.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect } from 'react';\nimport { ClientErrorObject } from '@superset-ui/core';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { api, JsonResponse } from './queryApi';\n\nexport type SchemaOption = {\n  value: string;\n  label: string;\n  title: string;\n};\n\nexport type FetchSchemasQueryParams = {\n  dbId?: string | number;\n  catalog?: string;\n  forceRefresh: boolean;\n  onSuccess?: (data: SchemaOption[], isRefetched: boolean) => void;\n  onError?: (error: ClientErrorObject) => void;\n};\n\ntype Params = Omit<FetchSchemasQueryParams, 'forceRefresh'>;\n\nconst schemaApi = api.injectEndpoints({\n  endpoints: builder => ({\n    schemas: builder.query<SchemaOption[], FetchSchemasQueryParams>({\n      providesTags: [{ type: 'Schemas', id: 'LIST' }],\n      query: ({ dbId, catalog, forceRefresh }) => ({\n        endpoint: `/api/v1/database/${dbId}/schemas/`,\n        // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n        urlParams: {\n          force: forceRefresh,\n          ...(catalog !== undefined && { catalog }),\n        },\n        transformResponse: ({ json }: JsonResponse) =>\n          json.result.sort().map((value: string) => ({\n            value,\n            label: value,\n            title: value,\n          })),\n      }),\n      serializeQueryArgs: ({ queryArgs: { dbId, catalog } }) => ({\n        dbId,\n        catalog,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useLazySchemasQuery,\n  useSchemasQuery,\n  endpoints: schemaEndpoints,\n  util: schemaApiUtil,\n} = schemaApi;\n\nexport const EMPTY_SCHEMAS = [] as SchemaOption[];\n\nexport function useSchemas(options: Params) {\n  const { dbId, catalog, onSuccess, onError } = options || {};\n  const [trigger] = useLazySchemasQuery();\n  const result = useSchemasQuery(\n    { dbId, catalog: catalog || undefined, forceRefresh: false },\n    {\n      skip: !dbId,\n    },\n  );\n\n  useEffect(() => {\n    if (result.isError) {\n      onError?.(result.error as ClientErrorObject);\n    }\n  }, [result.isError, result.error, onError]);\n\n  const fetchData = useEffectEvent(\n    (\n      dbId: FetchSchemasQueryParams['dbId'],\n      catalog: FetchSchemasQueryParams['catalog'],\n      forceRefresh = false,\n    ) => {\n      if (dbId && (!result.currentData || forceRefresh)) {\n        trigger({ dbId, catalog, forceRefresh }).then(\n          ({ isSuccess, isError, data }) => {\n            if (isSuccess) {\n              onSuccess?.(data || EMPTY_SCHEMAS, forceRefresh);\n            }\n            if (isError) {\n              onError?.(result.error as ClientErrorObject);\n            }\n          },\n        );\n      }\n    },\n  );\n\n  useEffect(() => {\n    fetchData(dbId, catalog, false);\n  }, [dbId, catalog, fetchData]);\n\n  const refetch = useCallback(() => {\n    fetchData(dbId, catalog, true);\n  }, [dbId, catalog, fetchData]);\n\n  return {\n    ...result,\n    refetch,\n  };\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAE9C,OAAOC,cAAc,MAAM,0BAA0B;AACrD,SAASC,GAAG,QAAsB,YAAY;AAkB9C,MAAMC,SAAS,GAAGD,GAAG,CAACE,eAAe,CAAC;EACpCC,SAAS,EAAEA,CAAAC,OAAO,MAAK;IACrBC,OAAO,EAAED,OAAO,CAACE,KAAK,CAA0C;MAC9DC,YAAY,EAAE,CAAC,EAAEC,IAAI,EAAE,SAAS,EAAEC,EAAE,EAAE,MAAM,EAAE,CAAC;MAC/CH,KAAK,EAAEA,CAAC,EAAEI,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAE,MAAM;QAC3CC,QAAQ,EAAE,oBAAoBH,IAAI,WAAW;QAC7C;QACAI,SAAS,EAAE;UACTC,KAAK,EAAEH,YAAY;UACnB,IAAID,OAAO,KAAKK,SAAS,IAAI,EAAEL,OAAO,EAAE;SACzC;QACDM,iBAAiB,EAAEA,CAAC,EAAEC,IAAI,EAAgB,KACxCA,IAAI,CAACC,MAAM,CAACC,IAAI,EAAE,CAACC,GAAG,CAAC,CAACC,KAAa,MAAM;UACzCA,KAAK;UACLC,KAAK,EAAED,KAAK;UACZE,KAAK,EAAEF;SACR,CAAC;OACL,CAAC;MACFG,kBAAkB,EAAEA,CAAC,EAAEC,SAAS,EAAE,EAAEhB,IAAI,EAAEC,OAAO,EAAE,EAAE,MAAM;QACzDD,IAAI;QACJC;OACD;KACF;GACF;CACF,CAAC;AAEF,OAAO,MAAM,EACXgB,mBAAmB,EACnBC,eAAe,EACfzB,SAAS,EAAE0B,eAAe,EAC1BC,IAAI,EAAEC,aAAa,EACpB,GAAG9B,SAAS;AAEb,OAAO,MAAM+B,aAAa,GAAG,EAAoB;AAEjD,OAAM,SAAUC,UAAUA,CAACC,OAAe;EACxC,MAAM,EAAExB,IAAI,EAAEC,OAAO,EAAEwB,SAAS,EAAEC,OAAO,EAAE,GAAGF,OAAO,IAAI,EAAE;EAC3D,MAAM,CAACG,OAAO,CAAC,GAAGV,mBAAmB,EAAE;EACvC,MAAMR,MAAM,GAAGS,eAAe,CAC5B,EAAElB,IAAI,EAAEC,OAAO,EAAEA,OAAO,IAAIK,SAAS,EAAEJ,YAAY,EAAE,KAAK,EAAE,EAC5D;IACE0B,IAAI,EAAE,CAAC5B;GACR,CACF;EAEDZ,SAAS,CAAC,MAAK;IACb,IAAIqB,MAAM,CAACoB,OAAO,EAAE;MAClBH,OAAO,oBAAPA,OAAO,CAAGjB,MAAM,CAACqB,KAA0B,CAAC;;EAEhD,CAAC,EAAE,CAACrB,MAAM,CAACoB,OAAO,EAAEpB,MAAM,CAACqB,KAAK,EAAEJ,OAAO,CAAC,CAAC;EAE3C,MAAMK,SAAS,GAAG1C,cAAc,CAC9B,CACEW,IAAqC,EACrCC,OAA2C,EAC3CC,YAAY,GAAG,KAAK,KAClB;IACF,IAAIF,IAAI,KAAK,CAACS,MAAM,CAACuB,WAAW,IAAI9B,YAAY,CAAC,EAAE;MACjDyB,OAAO,CAAC,EAAE3B,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAE,CAAC,CAAC+B,IAAI,CAC3C,CAAC,EAAEC,SAAS,EAAEL,OAAO,EAAEM,IAAI,EAAE,KAAI;QAC/B,IAAID,SAAS,EAAE;UACbT,SAAS,oBAATA,SAAS,CAAGU,IAAI,IAAIb,aAAa,EAAEpB,YAAY,CAAC;;QAElD,IAAI2B,OAAO,EAAE;UACXH,OAAO,oBAAPA,OAAO,CAAGjB,MAAM,CAACqB,KAA0B,CAAC;;MAEhD,CAAC,CACF;;EAEL,CAAC,CACF;EAED1C,SAAS,CAAC,MAAK;IACb2C,SAAS,CAAC/B,IAAI,EAAEC,OAAO,EAAE,KAAK,CAAC;EACjC,CAAC,EAAE,CAACD,IAAI,EAAEC,OAAO,EAAE8B,SAAS,CAAC,CAAC;EAE9B,MAAMK,OAAO,GAAGjD,WAAW,CAAC,MAAK;IAC/B4C,SAAS,CAAC/B,IAAI,EAAEC,OAAO,EAAE,IAAI,CAAC;EAChC,CAAC,EAAE,CAACD,IAAI,EAAEC,OAAO,EAAE8B,SAAS,CAAC,CAAC;EAE9B,OAAO;IACL,GAAGtB,MAAM;IACT2B;GACD;AACH,CAACC,aAAA,CAjDed,UAAU,+IAENN,mBAAmB,EACtBC,eAAe,EAaZ7B,cAAc,sBAAAiD,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAlC,SAAA,MAAAgC,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAnD5BlD,SAAS,+FAAA+C,cAAA,CAAAG,QAAA,CA2BbxB,mBAAmB,yGAAAqB,cAAA,CAAAG,QAAA,CACnBvB,eAAe,qGAAAoB,cAAA,CAAAG,QAAA,CACJtB,eAAe,qGAAAmB,cAAA,CAAAG,QAAA,CACpBpB,aAAa,mGAAAiB,cAAA,CAAAG,QAAA,CAGRnB,aAAa,mGAAAgB,cAAA,CAAAG,QAAA,CAEVlB,UAAU,wHAAAmB,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAApC,SAAA,CAAAoC,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}