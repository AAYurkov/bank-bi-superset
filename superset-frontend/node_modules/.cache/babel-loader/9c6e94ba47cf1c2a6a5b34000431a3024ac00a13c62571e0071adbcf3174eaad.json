{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * Util for drag and drop related operations.\n */\n/**\n * Handle drop of flat antd tree.\n *\n * Functionality is roughly based on antd tree examples:\n * https://ant.design/components/tree/\n *\n * @param info The argument of the onDrop callback.\n * @param treeData The list of DataNodes on which the drop event occurred.\n * @returns A copy of the list with the new sorting.\n */\nexport const handleDrop = (info, treeData) => {\n  if (info === undefined) {\n    return [...treeData];\n  }\n  const dropKey = info.node.key;\n  const dragKey = info.dragNode.key;\n  const dropPos = info.node.pos.split('-');\n  const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n  const data = [...treeData];\n  const dragObjIndex = data.findIndex((d) => d.key === dragKey);\n  const dragObj = data[dragObjIndex];\n  data.splice(dragObjIndex, 1);\n  const dropObjIndex = data.findIndex((d) => d.key === dropKey);\n  if (dropPosition === -1) {\n    data.splice(dropObjIndex, 0, dragObj);\n  } else\n  {\n    data.splice(dropObjIndex + 1, 0, dragObj);\n  }\n  return data;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(handleDrop, \"handleDrop\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/dragDropUtil.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["handleDrop","info","treeData","undefined","dropKey","node","key","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","length","data","dragObjIndex","findIndex","d","dragObj","splice","dropObjIndex","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/dragDropUtil.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// eslint-disable-next-line no-restricted-imports\nimport { TreeProps } from 'antd/lib/tree'; // TODO: Remove antd\nimport { DropInfoType, FlatLayerDataNode } from './types';\n\n/**\n * Util for drag and drop related operations.\n */\n\n/**\n * Handle drop of flat antd tree.\n *\n * Functionality is roughly based on antd tree examples:\n * https://ant.design/components/tree/\n *\n * @param info The argument of the onDrop callback.\n * @param treeData The list of DataNodes on which the drop event occurred.\n * @returns A copy of the list with the new sorting.\n */\nexport const handleDrop = (\n  info: DropInfoType<TreeProps['onDrop']>,\n  treeData: FlatLayerDataNode[],\n) => {\n  if (info === undefined) {\n    return [...treeData];\n  }\n\n  const dropKey = info.node.key;\n  const dragKey = info.dragNode.key;\n  const dropPos = info.node.pos.split('-');\n  const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n  const data = [...treeData];\n\n  const dragObjIndex = data.findIndex(d => d.key === dragKey);\n  const dragObj = data[dragObjIndex];\n  data.splice(dragObjIndex, 1);\n\n  const dropObjIndex = data.findIndex(d => d.key === dropKey);\n  if (dropPosition === -1) {\n    data.splice(dropObjIndex, 0, dragObj!);\n  } else {\n    data.splice(dropObjIndex + 1, 0, dragObj!);\n  }\n\n  return data;\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAuBA;;;AAIA;;;;;;;;;;AAUA,OAAO,MAAMA,UAAU,GAAGA,CACxBC,IAAuC,EACvCC,QAA6B,KAC3B;EACF,IAAID,IAAI,KAAKE,SAAS,EAAE;IACtB,OAAO,CAAC,GAAGD,QAAQ,CAAC;;EAGtB,MAAME,OAAO,GAAGH,IAAI,CAACI,IAAI,CAACC,GAAG;EAC7B,MAAMC,OAAO,GAAGN,IAAI,CAACO,QAAQ,CAACF,GAAG;EACjC,MAAMG,OAAO,GAAGR,IAAI,CAACI,IAAI,CAACK,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;EACxC,MAAMC,YAAY,GAAGX,IAAI,CAACW,YAAY,GAAGC,MAAM,CAACJ,OAAO,CAACA,OAAO,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC;EAE5E,MAAMC,IAAI,GAAG,CAAC,GAAGb,QAAQ,CAAC;EAE1B,MAAMc,YAAY,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACZ,GAAG,KAAKC,OAAO,CAAC;EAC3D,MAAMY,OAAO,GAAGJ,IAAI,CAACC,YAAY,CAAC;EAClCD,IAAI,CAACK,MAAM,CAACJ,YAAY,EAAE,CAAC,CAAC;EAE5B,MAAMK,YAAY,GAAGN,IAAI,CAACE,SAAS,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACZ,GAAG,KAAKF,OAAO,CAAC;EAC3D,IAAIQ,YAAY,KAAK,CAAC,CAAC,EAAE;IACvBG,IAAI,CAACK,MAAM,CAACC,YAAY,EAAE,CAAC,EAAEF,OAAQ,CAAC;GACvC;EAAM;IACLJ,IAAI,CAACK,MAAM,CAACC,YAAY,GAAG,CAAC,EAAE,CAAC,EAAEF,OAAQ,CAAC;;EAG5C,OAAOJ,IAAI;AACb,CAAC,CAAC,mBAAAO,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAArB,SAAA,MAAAmB,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA3BWzB,UAAU,2JAAA0B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAvB,SAAA,CAAAuB,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}