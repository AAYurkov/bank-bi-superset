{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport getChartIdsFromLayout from '../util/getChartIdsFromLayout';\nimport getLayoutComponentFromChartId from '../util/getLayoutComponentFromChartId';\n\nimport { slicePropShape } from '../util/propShapes';\nimport {\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  Logger } from\n'../../logger/LogUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\n\nimport getLocationHash from '../util/getLocationHash';\nimport isDashboardEmpty from '../util/isDashboardEmpty';\nimport { getAffectedOwnDataCharts } from '../util/charts/getOwnDataCharts';\nimport { getRelatedCharts } from '../util/getRelatedCharts';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  actions: PropTypes.shape({\n    addSliceToDashboard: PropTypes.func.isRequired,\n    removeSliceFromDashboard: PropTypes.func.isRequired,\n    triggerQuery: PropTypes.func.isRequired,\n    logEvent: PropTypes.func.isRequired,\n    clearDataMaskState: PropTypes.func.isRequired\n  }).isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  editMode: PropTypes.bool,\n  isPublished: PropTypes.bool,\n  hasUnsavedChanges: PropTypes.bool,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  activeFilters: PropTypes.object.isRequired,\n  chartConfiguration: PropTypes.object,\n  datasources: PropTypes.object.isRequired,\n  ownDataCharts: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  impressionId: PropTypes.string.isRequired,\n  timeout: PropTypes.number,\n  userId: PropTypes.string,\n  children: PropTypes.node\n};\n\nconst defaultProps = {\n  timeout: 60,\n  userId: ''\n};\n\nclass Dashboard extends PureComponent {\n\n\n  static onBeforeUnload(hasChanged) {\n    if (hasChanged) {\n      window.addEventListener('beforeunload', Dashboard.unload);\n    } else {\n      window.removeEventListener('beforeunload', Dashboard.unload);\n    }\n  }\n\n  static unload() {\n    const message = t('You have unsaved changes.');\n    window.event.returnValue = message; // Gecko + IE\n    return message; // Gecko + Webkit, Safari, Chrome etc.\n  }\n\n  constructor(props) {var _props$activeFilters, _props$ownDataCharts;\n    super(props);\n    this.appliedFilters = (_props$activeFilters = props.activeFilters) != null ? _props$activeFilters : {};\n    this.appliedOwnDataCharts = (_props$ownDataCharts = props.ownDataCharts) != null ? _props$ownDataCharts : {};\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const bootstrapData = getBootstrapData();\n    const { editMode, isPublished, layout } = this.props;\n    const eventData = {\n      is_soft_navigation: Logger.timeOriginOffset > 0,\n      is_edit_mode: editMode,\n      mount_duration: Logger.getTimestamp(),\n      is_empty: isDashboardEmpty(layout),\n      is_published: isPublished,\n      bootstrap_data_length: bootstrapData.length\n    };\n    const directLinkComponentId = getLocationHash();\n    if (directLinkComponentId) {\n      eventData.target_id = directLinkComponentId;\n    }\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_DASHBOARD, eventData);\n\n    // Handle browser tab visibility change\n    if (document.visibilityState === 'hidden') {\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime()\n      };\n    }\n    window.addEventListener('visibilitychange', this.onVisibilityChange);\n    this.applyCharts();\n  }\n\n  componentDidUpdate() {\n    this.applyCharts();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentChartIds = getChartIdsFromLayout(this.props.layout);\n    const nextChartIds = getChartIdsFromLayout(nextProps.layout);\n\n    if (this.props.dashboardId !== nextProps.dashboardId) {\n      // single-page-app navigation check\n      return;\n    }\n\n    if (currentChartIds.length < nextChartIds.length) {\n      const newChartIds = nextChartIds.filter(\n        (key) => currentChartIds.indexOf(key) === -1\n      );\n      newChartIds.forEach((newChartId) =>\n      this.props.actions.addSliceToDashboard(\n        newChartId,\n        getLayoutComponentFromChartId(nextProps.layout, newChartId)\n      )\n      );\n    } else if (currentChartIds.length > nextChartIds.length) {\n      // remove chart\n      const removedChartIds = currentChartIds.filter(\n        (key) => nextChartIds.indexOf(key) === -1\n      );\n      removedChartIds.forEach((removedChartId) =>\n      this.props.actions.removeSliceFromDashboard(removedChartId)\n      );\n    }\n  }\n\n  applyCharts() {\n    const {\n      activeFilters,\n      ownDataCharts,\n      chartConfiguration,\n      hasUnsavedChanges,\n      editMode\n    } = this.props;\n    const { appliedFilters, appliedOwnDataCharts } = this;\n    if (!chartConfiguration) {\n      // For a first loading we need to wait for cross filters charts data loaded to get all active filters\n      // for correct comparing  of filters to avoid unnecessary requests\n      return;\n    }\n\n    if (\n    !editMode && (\n    !areObjectsEqual(appliedOwnDataCharts, ownDataCharts, {\n      ignoreUndefined: true\n    }) ||\n    !areObjectsEqual(appliedFilters, activeFilters, {\n      ignoreUndefined: true\n    })))\n    {\n      this.applyFilters();\n    }\n\n    if (hasUnsavedChanges) {\n      Dashboard.onBeforeUnload(true);\n    } else {\n      Dashboard.onBeforeUnload(false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('visibilitychange', this.onVisibilityChange);\n    this.props.actions.clearDataMaskState();\n  }\n\n  onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      // from visible to hidden\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime()\n      };\n    } else if (document.visibilityState === 'visible') {\n      // from hidden to visible\n      const logStart = this.visibilityEventData.start_offset;\n      this.props.actions.logEvent(LOG_ACTIONS_HIDE_BROWSER_TAB, {\n        ...this.visibilityEventData,\n        duration: Logger.getTimestamp() - logStart\n      });\n    }\n  }\n\n  applyFilters() {\n    const { appliedFilters } = this;\n    const { activeFilters, ownDataCharts, slices } = this.props;\n\n    // refresh charts if a filter was removed, added, or changed\n\n    const currFilterKeys = Object.keys(activeFilters);\n    const appliedFilterKeys = Object.keys(appliedFilters);\n\n    const allKeys = new Set(currFilterKeys.concat(appliedFilterKeys));\n    const affectedChartIds = getAffectedOwnDataCharts(\n      ownDataCharts,\n      this.appliedOwnDataCharts\n    );\n\n    [...allKeys].forEach((filterKey) => {\n      if (\n      !currFilterKeys.includes(filterKey) &&\n      appliedFilterKeys.includes(filterKey))\n      {\n        // filterKey is removed?\n        affectedChartIds.push(\n          ...getRelatedCharts(filterKey, appliedFilters[filterKey], slices)\n        );\n      } else if (!appliedFilterKeys.includes(filterKey)) {\n        // filterKey is newly added?\n        affectedChartIds.push(\n          ...getRelatedCharts(filterKey, activeFilters[filterKey], slices)\n        );\n      } else {\n        // if filterKey changes value,\n        // update charts in its scope\n        if (\n        !areObjectsEqual(\n          appliedFilters[filterKey].values,\n          activeFilters[filterKey].values,\n          {\n            ignoreUndefined: true\n          }\n        ))\n        {\n          affectedChartIds.push(\n            ...getRelatedCharts(filterKey, activeFilters[filterKey], slices)\n          );\n        }\n\n        // if filterKey changes scope,\n        // update all charts in its scope\n        if (\n        !areObjectsEqual(\n          appliedFilters[filterKey].scope,\n          activeFilters[filterKey].scope\n        ))\n        {\n          const chartsInScope = (activeFilters[filterKey].scope || []).concat(\n            appliedFilters[filterKey].scope || []\n          );\n          affectedChartIds.push(...chartsInScope);\n        }\n      }\n    });\n\n    // remove dup in affectedChartIds\n    this.refreshCharts([...new Set(affectedChartIds)]);\n    this.appliedFilters = activeFilters;\n    this.appliedOwnDataCharts = ownDataCharts;\n  }\n\n  refreshCharts(ids) {\n    ids.forEach((id) => {\n      this.props.actions.triggerQuery(true, id);\n    });\n  }\n\n  render() {\n    if (this.context.loading) {\n      return _jsx(Loading, {});\n    }\n    return this.props.children;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}Dashboard.contextType = PluginContext;\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;const _default =\n\nDashboard;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(Dashboard, \"Dashboard\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Dashboard.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","PropTypes","t","PluginContext","Loading","getBootstrapData","getChartIdsFromLayout","getLayoutComponentFromChartId","slicePropShape","LOG_ACTIONS_HIDE_BROWSER_TAB","LOG_ACTIONS_MOUNT_DASHBOARD","Logger","areObjectsEqual","getLocationHash","isDashboardEmpty","getAffectedOwnDataCharts","getRelatedCharts","jsx","_jsx","propTypes","actions","shape","addSliceToDashboard","func","isRequired","removeSliceFromDashboard","triggerQuery","logEvent","clearDataMaskState","dashboardId","number","editMode","bool","isPublished","hasUnsavedChanges","slices","objectOf","activeFilters","object","chartConfiguration","datasources","ownDataCharts","layout","impressionId","string","timeout","userId","children","node","defaultProps","Dashboard","onBeforeUnload","hasChanged","window","addEventListener","unload","removeEventListener","message","event","returnValue","constructor","props","_props$activeFilters","_props$ownDataCharts","appliedFilters","appliedOwnDataCharts","onVisibilityChange","bind","componentDidMount","bootstrapData","eventData","is_soft_navigation","timeOriginOffset","is_edit_mode","mount_duration","getTimestamp","is_empty","is_published","bootstrap_data_length","length","directLinkComponentId","target_id","document","visibilityState","visibilityEventData","start_offset","ts","Date","getTime","applyCharts","componentDidUpdate","UNSAFE_componentWillReceiveProps","nextProps","currentChartIds","nextChartIds","newChartIds","filter","key","indexOf","forEach","newChartId","removedChartIds","removedChartId","ignoreUndefined","applyFilters","componentWillUnmount","logStart","duration","currFilterKeys","Object","keys","appliedFilterKeys","allKeys","Set","concat","affectedChartIds","filterKey","includes","push","values","scope","chartsInScope","refreshCharts","ids","id","render","context","loading","__reactstandin__regenerateByEval","code","eval","contextType","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/Dashboard.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport getChartIdsFromLayout from '../util/getChartIdsFromLayout';\nimport getLayoutComponentFromChartId from '../util/getLayoutComponentFromChartId';\n\nimport { slicePropShape } from '../util/propShapes';\nimport {\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  Logger,\n} from '../../logger/LogUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\n\nimport getLocationHash from '../util/getLocationHash';\nimport isDashboardEmpty from '../util/isDashboardEmpty';\nimport { getAffectedOwnDataCharts } from '../util/charts/getOwnDataCharts';\nimport { getRelatedCharts } from '../util/getRelatedCharts';\n\nconst propTypes = {\n  actions: PropTypes.shape({\n    addSliceToDashboard: PropTypes.func.isRequired,\n    removeSliceFromDashboard: PropTypes.func.isRequired,\n    triggerQuery: PropTypes.func.isRequired,\n    logEvent: PropTypes.func.isRequired,\n    clearDataMaskState: PropTypes.func.isRequired,\n  }).isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  editMode: PropTypes.bool,\n  isPublished: PropTypes.bool,\n  hasUnsavedChanges: PropTypes.bool,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  activeFilters: PropTypes.object.isRequired,\n  chartConfiguration: PropTypes.object,\n  datasources: PropTypes.object.isRequired,\n  ownDataCharts: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  impressionId: PropTypes.string.isRequired,\n  timeout: PropTypes.number,\n  userId: PropTypes.string,\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  timeout: 60,\n  userId: '',\n};\n\nclass Dashboard extends PureComponent {\n  static contextType = PluginContext;\n\n  static onBeforeUnload(hasChanged) {\n    if (hasChanged) {\n      window.addEventListener('beforeunload', Dashboard.unload);\n    } else {\n      window.removeEventListener('beforeunload', Dashboard.unload);\n    }\n  }\n\n  static unload() {\n    const message = t('You have unsaved changes.');\n    window.event.returnValue = message; // Gecko + IE\n    return message; // Gecko + Webkit, Safari, Chrome etc.\n  }\n\n  constructor(props) {\n    super(props);\n    this.appliedFilters = props.activeFilters ?? {};\n    this.appliedOwnDataCharts = props.ownDataCharts ?? {};\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const bootstrapData = getBootstrapData();\n    const { editMode, isPublished, layout } = this.props;\n    const eventData = {\n      is_soft_navigation: Logger.timeOriginOffset > 0,\n      is_edit_mode: editMode,\n      mount_duration: Logger.getTimestamp(),\n      is_empty: isDashboardEmpty(layout),\n      is_published: isPublished,\n      bootstrap_data_length: bootstrapData.length,\n    };\n    const directLinkComponentId = getLocationHash();\n    if (directLinkComponentId) {\n      eventData.target_id = directLinkComponentId;\n    }\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_DASHBOARD, eventData);\n\n    // Handle browser tab visibility change\n    if (document.visibilityState === 'hidden') {\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    }\n    window.addEventListener('visibilitychange', this.onVisibilityChange);\n    this.applyCharts();\n  }\n\n  componentDidUpdate() {\n    this.applyCharts();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentChartIds = getChartIdsFromLayout(this.props.layout);\n    const nextChartIds = getChartIdsFromLayout(nextProps.layout);\n\n    if (this.props.dashboardId !== nextProps.dashboardId) {\n      // single-page-app navigation check\n      return;\n    }\n\n    if (currentChartIds.length < nextChartIds.length) {\n      const newChartIds = nextChartIds.filter(\n        key => currentChartIds.indexOf(key) === -1,\n      );\n      newChartIds.forEach(newChartId =>\n        this.props.actions.addSliceToDashboard(\n          newChartId,\n          getLayoutComponentFromChartId(nextProps.layout, newChartId),\n        ),\n      );\n    } else if (currentChartIds.length > nextChartIds.length) {\n      // remove chart\n      const removedChartIds = currentChartIds.filter(\n        key => nextChartIds.indexOf(key) === -1,\n      );\n      removedChartIds.forEach(removedChartId =>\n        this.props.actions.removeSliceFromDashboard(removedChartId),\n      );\n    }\n  }\n\n  applyCharts() {\n    const {\n      activeFilters,\n      ownDataCharts,\n      chartConfiguration,\n      hasUnsavedChanges,\n      editMode,\n    } = this.props;\n    const { appliedFilters, appliedOwnDataCharts } = this;\n    if (!chartConfiguration) {\n      // For a first loading we need to wait for cross filters charts data loaded to get all active filters\n      // for correct comparing  of filters to avoid unnecessary requests\n      return;\n    }\n\n    if (\n      !editMode &&\n      (!areObjectsEqual(appliedOwnDataCharts, ownDataCharts, {\n        ignoreUndefined: true,\n      }) ||\n        !areObjectsEqual(appliedFilters, activeFilters, {\n          ignoreUndefined: true,\n        }))\n    ) {\n      this.applyFilters();\n    }\n\n    if (hasUnsavedChanges) {\n      Dashboard.onBeforeUnload(true);\n    } else {\n      Dashboard.onBeforeUnload(false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('visibilitychange', this.onVisibilityChange);\n    this.props.actions.clearDataMaskState();\n  }\n\n  onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      // from visible to hidden\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    } else if (document.visibilityState === 'visible') {\n      // from hidden to visible\n      const logStart = this.visibilityEventData.start_offset;\n      this.props.actions.logEvent(LOG_ACTIONS_HIDE_BROWSER_TAB, {\n        ...this.visibilityEventData,\n        duration: Logger.getTimestamp() - logStart,\n      });\n    }\n  }\n\n  applyFilters() {\n    const { appliedFilters } = this;\n    const { activeFilters, ownDataCharts, slices } = this.props;\n\n    // refresh charts if a filter was removed, added, or changed\n\n    const currFilterKeys = Object.keys(activeFilters);\n    const appliedFilterKeys = Object.keys(appliedFilters);\n\n    const allKeys = new Set(currFilterKeys.concat(appliedFilterKeys));\n    const affectedChartIds = getAffectedOwnDataCharts(\n      ownDataCharts,\n      this.appliedOwnDataCharts,\n    );\n\n    [...allKeys].forEach(filterKey => {\n      if (\n        !currFilterKeys.includes(filterKey) &&\n        appliedFilterKeys.includes(filterKey)\n      ) {\n        // filterKey is removed?\n        affectedChartIds.push(\n          ...getRelatedCharts(filterKey, appliedFilters[filterKey], slices),\n        );\n      } else if (!appliedFilterKeys.includes(filterKey)) {\n        // filterKey is newly added?\n        affectedChartIds.push(\n          ...getRelatedCharts(filterKey, activeFilters[filterKey], slices),\n        );\n      } else {\n        // if filterKey changes value,\n        // update charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].values,\n            activeFilters[filterKey].values,\n            {\n              ignoreUndefined: true,\n            },\n          )\n        ) {\n          affectedChartIds.push(\n            ...getRelatedCharts(filterKey, activeFilters[filterKey], slices),\n          );\n        }\n\n        // if filterKey changes scope,\n        // update all charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].scope,\n            activeFilters[filterKey].scope,\n          )\n        ) {\n          const chartsInScope = (activeFilters[filterKey].scope || []).concat(\n            appliedFilters[filterKey].scope || [],\n          );\n          affectedChartIds.push(...chartsInScope);\n        }\n      }\n    });\n\n    // remove dup in affectedChartIds\n    this.refreshCharts([...new Set(affectedChartIds)]);\n    this.appliedFilters = activeFilters;\n    this.appliedOwnDataCharts = ownDataCharts;\n  }\n\n  refreshCharts(ids) {\n    ids.forEach(id => {\n      this.props.actions.triggerQuery(true, id);\n    });\n  }\n\n  render() {\n    if (this.context.loading) {\n      return <Loading />;\n    }\n    return this.props.children;\n  }\n}\n\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}