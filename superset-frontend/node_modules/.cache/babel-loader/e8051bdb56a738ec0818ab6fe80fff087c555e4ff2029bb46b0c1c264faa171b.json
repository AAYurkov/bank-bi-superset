{"ast":null,"code":"import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { isDST, extendedDayjs } from 'src/utils/dates';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan' // timezones are deduped by the first alphabetical value\n};\nconst MIN_SELECT_WIDTH = '400px';\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n  'Mountain Standard Time - Phoenix',\n  'Mountain Standard Time - Phoenix'],\n\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time']\n};\nexport default function TimezoneSelector({ onTimezoneChange, timezone, minWidth = MIN_SELECT_WIDTH // smallest size for current values\n}) {\n  const { TIMEZONE_OPTIONS, TIMEZONE_OPTIONS_SORT_COMPARATOR, validTimezone } = useMemo(() => {\n    const currentDate = extendedDayjs();\n    const JANUARY = extendedDayjs.tz('2021-01-01');\n    const JULY = extendedDayjs.tz('2021-07-01');\n    const getOffsetKey = (name) => JANUARY.tz(name).utcOffset().toString() +\n    JULY.tz(name).utcOffset().toString();\n    const getTimezoneName = (name) => {var _offsetsToName$offset, _offsetsToName$offset2;\n      const offsets = getOffsetKey(name);\n      return (isDST(currentDate.tz(name), name) ? (_offsetsToName$offset =\n      offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset[1] : (_offsetsToName$offset2 =\n      offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset2[0]) || name;\n    };\n    // TODO: remove this ts-ignore when typescript is upgraded to 5.1\n    // @ts-ignore\n    const ALL_ZONES = Intl.supportedValuesOf('timeZone');\n    const labels = new Set();\n    const TIMEZONE_OPTIONS = ALL_ZONES.map((zone) => {\n      const label = `GMT ${extendedDayjs.\n      tz(currentDate, zone).\n      format('Z')} (${getTimezoneName(zone)})`;\n      if (labels.has(label)) {\n        return null; // Skip duplicates\n      }\n      labels.add(label);\n      return {\n        label,\n        value: zone,\n        offsets: getOffsetKey(zone),\n        timezoneName: zone\n      };\n    }).filter(Boolean);\n    const TIMEZONE_OPTIONS_SORT_COMPARATOR = (a, b) => extendedDayjs.tz(currentDate, a.timezoneName).utcOffset() -\n    extendedDayjs.tz(currentDate, b.timezoneName).utcOffset();\n    // pre-sort timezone options by time offset\n    TIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n    const matchTimezoneToOptions = (timezone) => {\n      const offsetKey = getOffsetKey(timezone);\n      let fallbackValue;\n      for (const option of TIMEZONE_OPTIONS) {\n        if (option.offsets === offsetKey &&\n        option.timezoneName === timezone) {\n          return option.value;\n        }\n        if (!fallbackValue && option.offsets === offsetKey) {\n          fallbackValue = option.value;\n        }\n      }\n      return fallbackValue || DEFAULT_TIMEZONE.value;\n    };\n    const validTimezone = matchTimezoneToOptions(timezone || extendedDayjs.tz.guess());\n    return {\n      TIMEZONE_OPTIONS,\n      TIMEZONE_OPTIONS_SORT_COMPARATOR,\n      validTimezone\n    };\n  }, [timezone]);\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (validTimezone && timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n  return _jsx(Select, { ariaLabel: t('Timezone selector'), css: /*#__PURE__*/_css({ minWidth }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:TimezoneSelector;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hcnl1cmtvdi9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9UaW1lem9uZVNlbGVjdG9yL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwR3VEIiwiZmlsZSI6Ii9Vc2Vycy9hcnl1cmtvdi9zdXBlcnNldC9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9UaW1lem9uZVNlbGVjdG9yL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHQgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgeyBTZWxlY3QgfSBmcm9tICdzcmMvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBpc0RTVCwgZXh0ZW5kZWREYXlqcyB9IGZyb20gJ3NyYy91dGlscy9kYXRlcyc7XG5jb25zdCBERUZBVUxUX1RJTUVaT05FID0ge1xuICAgIG5hbWU6ICdHTVQgU3RhbmRhcmQgVGltZScsXG4gICAgdmFsdWU6ICdBZnJpY2EvQWJpZGphbicsIC8vIHRpbWV6b25lcyBhcmUgZGVkdXBlZCBieSB0aGUgZmlyc3QgYWxwaGFiZXRpY2FsIHZhbHVlXG59O1xuY29uc3QgTUlOX1NFTEVDVF9XSURUSCA9ICc0MDBweCc7XG5jb25zdCBvZmZzZXRzVG9OYW1lID0ge1xuICAgICctMzAwLTI0MCc6IFsnRWFzdGVybiBTdGFuZGFyZCBUaW1lJywgJ0Vhc3Rlcm4gRGF5bGlnaHQgVGltZSddLFxuICAgICctMzYwLTMwMCc6IFsnQ2VudHJhbCBTdGFuZGFyZCBUaW1lJywgJ0NlbnRyYWwgRGF5bGlnaHQgVGltZSddLFxuICAgICctNDIwLTM2MCc6IFsnTW91bnRhaW4gU3RhbmRhcmQgVGltZScsICdNb3VudGFpbiBEYXlsaWdodCBUaW1lJ10sXG4gICAgJy00MjAtNDIwJzogW1xuICAgICAgICAnTW91bnRhaW4gU3RhbmRhcmQgVGltZSAtIFBob2VuaXgnLFxuICAgICAgICAnTW91bnRhaW4gU3RhbmRhcmQgVGltZSAtIFBob2VuaXgnLFxuICAgIF0sXG4gICAgJy00ODAtNDIwJzogWydQYWNpZmljIFN0YW5kYXJkIFRpbWUnLCAnUGFjaWZpYyBEYXlsaWdodCBUaW1lJ10sXG4gICAgJy01NDAtNDgwJzogWydBbGFza2EgU3RhbmRhcmQgVGltZScsICdBbGFza2EgRGF5bGlnaHQgVGltZSddLFxuICAgICctNjAwLTYwMCc6IFsnSGF3YWlpIFN0YW5kYXJkIFRpbWUnLCAnSGF3YWlpIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnNjAxMjAnOiBbJ0NlbnRyYWwgRXVyb3BlYW4gVGltZScsICdDZW50cmFsIEV1cm9wZWFuIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnMDAnOiBbREVGQVVMVF9USU1FWk9ORS5uYW1lLCBERUZBVUxUX1RJTUVaT05FLm5hbWVdLFxuICAgICcwNjAnOiBbJ0dNVCBTdGFuZGFyZCBUaW1lIC0gTG9uZG9uJywgJ0JyaXRpc2ggU3VtbWVyIFRpbWUnXSxcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUaW1lem9uZVNlbGVjdG9yKHsgb25UaW1lem9uZUNoYW5nZSwgdGltZXpvbmUsIG1pbldpZHRoID0gTUlOX1NFTEVDVF9XSURUSCwgLy8gc21hbGxlc3Qgc2l6ZSBmb3IgY3VycmVudCB2YWx1ZXNcbiB9KSB7XG4gICAgY29uc3QgeyBUSU1FWk9ORV9PUFRJT05TLCBUSU1FWk9ORV9PUFRJT05TX1NPUlRfQ09NUEFSQVRPUiwgdmFsaWRUaW1lem9uZSB9ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnREYXRlID0gZXh0ZW5kZWREYXlqcygpO1xuICAgICAgICBjb25zdCBKQU5VQVJZID0gZXh0ZW5kZWREYXlqcy50eignMjAyMS0wMS0wMScpO1xuICAgICAgICBjb25zdCBKVUxZID0gZXh0ZW5kZWREYXlqcy50eignMjAyMS0wNy0wMScpO1xuICAgICAgICBjb25zdCBnZXRPZmZzZXRLZXkgPSAobmFtZSkgPT4gSkFOVUFSWS50eihuYW1lKS51dGNPZmZzZXQoKS50b1N0cmluZygpICtcbiAgICAgICAgICAgIEpVTFkudHoobmFtZSkudXRjT2Zmc2V0KCkudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3QgZ2V0VGltZXpvbmVOYW1lID0gKG5hbWUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldHMgPSBnZXRPZmZzZXRLZXkobmFtZSk7XG4gICAgICAgICAgICByZXR1cm4gKChpc0RTVChjdXJyZW50RGF0ZS50eihuYW1lKSwgbmFtZSlcbiAgICAgICAgICAgICAgICA/IG9mZnNldHNUb05hbWVbb2Zmc2V0c10/LlsxXVxuICAgICAgICAgICAgICAgIDogb2Zmc2V0c1RvTmFtZVtvZmZzZXRzXT8uWzBdKSB8fCBuYW1lKTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gVE9ETzogcmVtb3ZlIHRoaXMgdHMtaWdub3JlIHdoZW4gdHlwZXNjcmlwdCBpcyB1cGdyYWRlZCB0byA1LjFcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBjb25zdCBBTExfWk9ORVMgPSBJbnRsLnN1cHBvcnRlZFZhbHVlc09mKCd0aW1lWm9uZScpO1xuICAgICAgICBjb25zdCBsYWJlbHMgPSBuZXcgU2V0KCk7XG4gICAgICAgIGNvbnN0IFRJTUVaT05FX09QVElPTlMgPSBBTExfWk9ORVMubWFwKHpvbmUgPT4ge1xuICAgICAgICAgICAgY29uc3QgbGFiZWwgPSBgR01UICR7ZXh0ZW5kZWREYXlqc1xuICAgICAgICAgICAgICAgIC50eihjdXJyZW50RGF0ZSwgem9uZSlcbiAgICAgICAgICAgICAgICAuZm9ybWF0KCdaJyl9ICgke2dldFRpbWV6b25lTmFtZSh6b25lKX0pYDtcbiAgICAgICAgICAgIGlmIChsYWJlbHMuaGFzKGxhYmVsKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsOyAvLyBTa2lwIGR1cGxpY2F0ZXNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxhYmVscy5hZGQobGFiZWwpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBsYWJlbCxcbiAgICAgICAgICAgICAgICB2YWx1ZTogem9uZSxcbiAgICAgICAgICAgICAgICBvZmZzZXRzOiBnZXRPZmZzZXRLZXkoem9uZSksXG4gICAgICAgICAgICAgICAgdGltZXpvbmVOYW1lOiB6b25lLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSkuZmlsdGVyKEJvb2xlYW4pO1xuICAgICAgICBjb25zdCBUSU1FWk9ORV9PUFRJT05TX1NPUlRfQ09NUEFSQVRPUiA9IChhLCBiKSA9PiBleHRlbmRlZERheWpzLnR6KGN1cnJlbnREYXRlLCBhLnRpbWV6b25lTmFtZSkudXRjT2Zmc2V0KCkgLVxuICAgICAgICAgICAgZXh0ZW5kZWREYXlqcy50eihjdXJyZW50RGF0ZSwgYi50aW1lem9uZU5hbWUpLnV0Y09mZnNldCgpO1xuICAgICAgICAvLyBwcmUtc29ydCB0aW1lem9uZSBvcHRpb25zIGJ5IHRpbWUgb2Zmc2V0XG4gICAgICAgIFRJTUVaT05FX09QVElPTlMuc29ydChUSU1FWk9ORV9PUFRJT05TX1NPUlRfQ09NUEFSQVRPUik7XG4gICAgICAgIGNvbnN0IG1hdGNoVGltZXpvbmVUb09wdGlvbnMgPSAodGltZXpvbmUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldEtleSA9IGdldE9mZnNldEtleSh0aW1lem9uZSk7XG4gICAgICAgICAgICBsZXQgZmFsbGJhY2tWYWx1ZTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgb3B0aW9uIG9mIFRJTUVaT05FX09QVElPTlMpIHtcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9uLm9mZnNldHMgPT09IG9mZnNldEtleSAmJlxuICAgICAgICAgICAgICAgICAgICBvcHRpb24udGltZXpvbmVOYW1lID09PSB0aW1lem9uZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0aW9uLnZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWZhbGxiYWNrVmFsdWUgJiYgb3B0aW9uLm9mZnNldHMgPT09IG9mZnNldEtleSkge1xuICAgICAgICAgICAgICAgICAgICBmYWxsYmFja1ZhbHVlID0gb3B0aW9uLnZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxsYmFja1ZhbHVlIHx8IERFRkFVTFRfVElNRVpPTkUudmFsdWU7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHZhbGlkVGltZXpvbmUgPSBtYXRjaFRpbWV6b25lVG9PcHRpb25zKHRpbWV6b25lIHx8IGV4dGVuZGVkRGF5anMudHouZ3Vlc3MoKSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBUSU1FWk9ORV9PUFRJT05TLFxuICAgICAgICAgICAgVElNRVpPTkVfT1BUSU9OU19TT1JUX0NPTVBBUkFUT1IsXG4gICAgICAgICAgICB2YWxpZFRpbWV6b25lLFxuICAgICAgICB9O1xuICAgIH0sIFt0aW1lem9uZV0pO1xuICAgIC8vIGZvcmNlIHRyaWdnZXIgYSB0aW1lem9uZSB1cGRhdGUgaWYgcHJvdmlkZWQgYHRpbWV6b25lYCBpcyBub3QgaW52YWxpZFxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh2YWxpZFRpbWV6b25lICYmIHRpbWV6b25lICE9PSB2YWxpZFRpbWV6b25lKSB7XG4gICAgICAgICAgICBvblRpbWV6b25lQ2hhbmdlKHZhbGlkVGltZXpvbmUpO1xuICAgICAgICB9XG4gICAgfSwgW3ZhbGlkVGltZXpvbmUsIG9uVGltZXpvbmVDaGFuZ2UsIHRpbWV6b25lXSk7XG4gICAgcmV0dXJuICg8U2VsZWN0IGFyaWFMYWJlbD17dCgnVGltZXpvbmUgc2VsZWN0b3InKX0gY3NzPXt7IG1pbldpZHRoIH19IG9uQ2hhbmdlPXt0eiA9PiBvblRpbWV6b25lQ2hhbmdlKHR6KX0gdmFsdWU9e3ZhbGlkVGltZXpvbmV9IG9wdGlvbnM9e1RJTUVaT05FX09QVElPTlN9IHNvcnRDb21wYXJhdG9yPXtUSU1FWk9ORV9PUFRJT05TX1NPUlRfQ09NUEFSQVRPUn0vPik7XG59XG4iXX0= */\"), onChange: (tz) => onTimezoneChange(tz), value: validTimezone, options: TIMEZONE_OPTIONS, sortComparator: TIMEZONE_OPTIONS_SORT_COMPARATOR });\n}__signature__(TimezoneSelector, \"useMemo{{ TIMEZONE_OPTIONS, TIMEZONE_OPTIONS_SORT_COMPARATOR, validTimezone }}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_TIMEZONE, \"DEFAULT_TIMEZONE\", \"/Users/aryurkov/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(MIN_SELECT_WIDTH, \"MIN_SELECT_WIDTH\", \"/Users/aryurkov/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(offsetsToName, \"offsetsToName\", \"/Users/aryurkov/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TimezoneSelector, \"TimezoneSelector\", \"/Users/aryurkov/superset/superset-frontend/src/components/TimezoneSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useMemo","t","Select","isDST","extendedDayjs","jsx","_jsx","DEFAULT_TIMEZONE","name","value","MIN_SELECT_WIDTH","offsetsToName","TimezoneSelector","onTimezoneChange","timezone","minWidth","TIMEZONE_OPTIONS","TIMEZONE_OPTIONS_SORT_COMPARATOR","validTimezone","currentDate","JANUARY","tz","JULY","getOffsetKey","utcOffset","toString","getTimezoneName","_offsetsToName$offset","_offsetsToName$offset2","offsets","ALL_ZONES","Intl","supportedValuesOf","labels","Set","map","zone","label","format","has","add","timezoneName","filter","Boolean","a","b","sort","matchTimezoneToOptions","offsetKey","fallbackValue","option","guess","ariaLabel","css","_css","process","env","NODE_ENV","onChange","options","sortComparator","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/TimezoneSelector/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useEffect, useMemo } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport { isDST, extendedDayjs } from 'src/utils/dates';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nexport type TimezoneSelectorProps = {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n  minWidth?: string;\n};\n\nexport default function TimezoneSelector({\n  onTimezoneChange,\n  timezone,\n  minWidth = MIN_SELECT_WIDTH, // smallest size for current values\n}: TimezoneSelectorProps) {\n  const { TIMEZONE_OPTIONS, TIMEZONE_OPTIONS_SORT_COMPARATOR, validTimezone } =\n    useMemo(() => {\n      const currentDate = extendedDayjs();\n      const JANUARY = extendedDayjs.tz('2021-01-01');\n      const JULY = extendedDayjs.tz('2021-07-01');\n\n      const getOffsetKey = (name: string) =>\n        JANUARY.tz(name).utcOffset().toString() +\n        JULY.tz(name).utcOffset().toString();\n\n      const getTimezoneName = (name: string) => {\n        const offsets = getOffsetKey(name);\n        return (\n          (isDST(currentDate.tz(name), name)\n            ? offsetsToName[offsets as keyof typeof offsetsToName]?.[1]\n            : offsetsToName[offsets as keyof typeof offsetsToName]?.[0]) || name\n        );\n      };\n\n      // TODO: remove this ts-ignore when typescript is upgraded to 5.1\n      // @ts-ignore\n      const ALL_ZONES: string[] = Intl.supportedValuesOf('timeZone');\n\n      const labels = new Set<string>();\n      const TIMEZONE_OPTIONS = ALL_ZONES.map(zone => {\n        const label = `GMT ${extendedDayjs\n          .tz(currentDate, zone)\n          .format('Z')} (${getTimezoneName(zone)})`;\n\n        if (labels.has(label)) {\n          return null; // Skip duplicates\n        }\n        labels.add(label);\n        return {\n          label,\n          value: zone,\n          offsets: getOffsetKey(zone),\n          timezoneName: zone,\n        };\n      }).filter(Boolean) as {\n        label: string;\n        value: string;\n        offsets: string;\n        timezoneName: string;\n      }[];\n\n      const TIMEZONE_OPTIONS_SORT_COMPARATOR = (\n        a: (typeof TIMEZONE_OPTIONS)[number],\n        b: (typeof TIMEZONE_OPTIONS)[number],\n      ) =>\n        extendedDayjs.tz(currentDate, a.timezoneName).utcOffset() -\n        extendedDayjs.tz(currentDate, b.timezoneName).utcOffset();\n\n      // pre-sort timezone options by time offset\n      TIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n\n      const matchTimezoneToOptions = (timezone: string) => {\n        const offsetKey = getOffsetKey(timezone);\n        let fallbackValue: string | undefined;\n\n        for (const option of TIMEZONE_OPTIONS) {\n          if (\n            option.offsets === offsetKey &&\n            option.timezoneName === timezone\n          ) {\n            return option.value;\n          }\n          if (!fallbackValue && option.offsets === offsetKey) {\n            fallbackValue = option.value;\n          }\n        }\n        return fallbackValue || DEFAULT_TIMEZONE.value;\n      };\n\n      const validTimezone = matchTimezoneToOptions(\n        timezone || extendedDayjs.tz.guess(),\n      );\n\n      return {\n        TIMEZONE_OPTIONS,\n        TIMEZONE_OPTIONS_SORT_COMPARATOR,\n        validTimezone,\n      };\n    }, [timezone]);\n\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (validTimezone && timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth }}\n      onChange={tz => onTimezoneChange(tz as string)}\n      value={validTimezone}\n      options={TIMEZONE_OPTIONS}\n      sortComparator={TIMEZONE_OPTIONS_SORT_COMPARATOR}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}