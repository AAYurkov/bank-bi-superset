{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport { isDefined, styled, SupersetClient, getClientErrorObject, t, useTheme, css } from '@superset-ui/core';\nimport { Icons } from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { startMetaDataLoading, stopMetaDataLoading, syncDatasourceMetadata } from 'src/explore/actions/exploreActions';\nimport { fetchSyncedColumns, updateColumns } from 'src/components/Datasource/utils';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n`;\nfunction buildExtraJsonObject(item) {\n  const certification = item != null && item.certified_by || item != null && item.certification_details ?\n  {\n    certified_by: item == null ? void 0 : item.certified_by,\n    details: item == null ? void 0 : item.certification_details\n  } :\n  undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: item == null ? void 0 : item.warning_markdown\n  });\n}\nconst DatasourceModal = ({ addSuccessToast, addDangerToast, datasource, onDatasourceSave, onHide, show }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [currentDatasource, setCurrentDatasource] = useState(datasource);\n  const currencies = useSelector((state) => {var _state$common;return (_state$common = state.common) == null ? void 0 : _state$common.currencies;});\n  const [errors, setErrors] = useState([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const dialog = useRef(null);\n  const [modal, contextHolder] = Modal.useModal();\n  const buildPayload = (datasource) => {var _datasource$database, _datasource$tableSele, _datasource$databaseS, _datasource$metrics, _datasource$columns;return {\n      table_name: datasource.table_name,\n      database_id: (_datasource$database = datasource.database) == null ? void 0 : _datasource$database.id,\n      sql: datasource.sql,\n      filter_select_enabled: datasource.filter_select_enabled,\n      fetch_values_predicate: datasource.fetch_values_predicate,\n      schema: ((_datasource$tableSele = datasource.tableSelector) == null ? void 0 : _datasource$tableSele.schema) || ((_datasource$databaseS =\n      datasource.databaseSelector) == null ? void 0 : _datasource$databaseS.schema) ||\n      datasource.schema,\n      description: datasource.description,\n      main_dttm_col: datasource.main_dttm_col,\n      normalize_columns: datasource.normalize_columns,\n      always_filter_main_dttm: datasource.always_filter_main_dttm,\n      offset: datasource.offset,\n      default_endpoint: datasource.default_endpoint,\n      cache_timeout: datasource.cache_timeout === '' ? null : datasource.cache_timeout,\n      is_sqllab_view: datasource.is_sqllab_view,\n      template_params: datasource.template_params,\n      extra: datasource.extra,\n      is_managed_externally: datasource.is_managed_externally,\n      external_url: datasource.external_url,\n      metrics: datasource == null ? void 0 : (_datasource$metrics = datasource.metrics) == null ? void 0 : _datasource$metrics.map((metric) => {\n        const metricBody = {\n          expression: metric.expression,\n          description: metric.description,\n          metric_name: metric.metric_name,\n          metric_type: metric.metric_type,\n          d3format: metric.d3format || null,\n          currency: !isDefined(metric.currency) ?\n          null :\n          JSON.stringify(metric.currency),\n          verbose_name: metric.verbose_name,\n          warning_text: metric.warning_text,\n          uuid: metric.uuid,\n          extra: buildExtraJsonObject(metric)\n        };\n        if (!Number.isNaN(Number(metric.id))) {\n          metricBody.id = metric.id;\n        }\n        return metricBody;\n      }),\n      columns: datasource == null ? void 0 : (_datasource$columns = datasource.columns) == null ? void 0 : _datasource$columns.map((column) => ({\n        id: typeof column.id === 'number' ? column.id : undefined,\n        column_name: column.column_name,\n        type: column.type,\n        advanced_data_type: column.advanced_data_type,\n        verbose_name: column.verbose_name,\n        description: column.description,\n        expression: column.expression,\n        filterable: column.filterable,\n        groupby: column.groupby,\n        is_active: column.is_active,\n        is_dttm: column.is_dttm,\n        python_date_format: column.python_date_format || null,\n        uuid: column.uuid,\n        extra: buildExtraJsonObject(column)\n      })),\n      owners: datasource.owners.map((o) => o.value || o.id)\n    };};\n  const onConfirmSave = async () => {\n    // Pull out extra fields into the extra object\n    setIsSaving(true);\n    try {\n      await SupersetClient.put({\n        endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n        jsonPayload: buildPayload(currentDatasource)\n      });\n      if (datasource.sql !== currentDatasource.sql) {\n        // if sql has changed, save a second time with synced columns\n        dispatch(startMetaDataLoading());\n        try {\n          const columnJson = await fetchSyncedColumns(currentDatasource);\n          const columnChanges = updateColumns(currentDatasource.columns, columnJson, addSuccessToast);\n          currentDatasource.columns = columnChanges.finalColumns;\n          dispatch(syncDatasourceMetadata(currentDatasource));\n          dispatch(stopMetaDataLoading());\n          addSuccessToast(t('Metadata has been synced'));\n        }\n        catch (error) {\n          dispatch(stopMetaDataLoading());\n          addDangerToast(t('An error has occurred while syncing virtual dataset columns'));\n        }\n        await SupersetClient.put({\n          endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n          jsonPayload: buildPayload(currentDatasource)\n        });\n      }\n      const { json } = await SupersetClient.get({\n        endpoint: `/api/v1/dataset/${currentDatasource == null ? void 0 : currentDatasource.id}`\n      });\n      addSuccessToast(t('The dataset has been saved'));\n      // eslint-disable-next-line no-param-reassign\n      json.result.type = 'table';\n      onDatasourceSave({\n        ...json.result,\n        owners: currentDatasource.owners\n      });\n      onHide();\n    }\n    catch (response) {var _error$errors;\n      setIsSaving(false);\n      const error = await getClientErrorObject(response);\n      let errorResponse;\n      let errorText;\n      // sip-40 error response\n      if (error != null && (_error$errors = error.errors) != null && _error$errors.length) {\n        errorResponse = error.errors[0];\n      } else\n      if (typeof error.error === 'string') {\n        // backward compatible with old error messages\n        errorText = error.error;\n      }\n      modal.error({\n        title: t('Error saving dataset'),\n        okButtonProps: { danger: true, className: 'btn-danger' },\n        content: _jsx(ErrorMessageWithStackTrace, { error: errorResponse, source: \"crud\", fallback: errorText })\n      });\n    }\n  };\n  const onDatasourceChange = (data, err) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data == null ? void 0 : data.metrics.map((metric) => ({\n        ...metric,\n        is_certified: (metric == null ? void 0 : metric.certified_by) || (metric == null ? void 0 : metric.certification_details)\n      }))\n    });\n    setErrors(err);\n  };\n  const renderSaveDialog = () => _jsxs(\"div\", { children: [\n    _jsx(Alert, { css: (theme) => ({\n        marginTop: theme.gridUnit * 4,\n        marginBottom: theme.gridUnit * 4\n      }), type: \"warning\", showIcon: true, message: t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`) }),\n    t('Are you sure you want to save and apply changes?')] }\n  );\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n      okText: t('OK'),\n      cancelText: t('Cancel')\n    });\n  };\n  return _jsxs(StyledDatasourceModal, { show: show, onHide: onHide, title: _jsxs(\"span\", { children: [\n      _jsx(Icons.EditOutlined, { iconSize: \"l\", css: css`\n              margin: auto ${theme.gridUnit * 2}px auto 0;\n            `, \"data-test\": \"edit-alt\" }),\n      t('Edit Dataset '),\n      _jsx(\"strong\", { children: currentDatasource.table_name })] }\n    ), maskClosable: !isEditing, footer: _jsxs(_Fragment, { children: [\n      _jsx(Button, { \"data-test\": \"datasource-modal-cancel\", buttonSize: \"small\", className: \"m-r-5\", onClick: onHide, children:\n        t('Cancel') }\n      ),\n      _jsx(Button, { buttonSize: \"small\", buttonStyle: \"primary\", \"data-test\": \"datasource-modal-save\", onClick: onClickSave, disabled: isSaving ||\n        errors.length > 0 ||\n        currentDatasource.is_managed_externally, tooltip: currentDatasource.is_managed_externally ?\n        t(\"This dataset is managed externally, and can't be edited in Superset\") :\n        '', children:\n        t('Save') }\n      )] }\n    ), responsive: true, children: [\n    _jsx(DatasourceEditor, { showLoadingForImport: true, height: 500, datasource: currentDatasource, onChange: onDatasourceChange, setIsEditing: setIsEditing, currencies: currencies }),\n    contextHolder] }\n  );\n};__signature__(DatasourceModal, \"useTheme{theme}\\nuseDispatch{dispatch}\\nuseState{[currentDatasource, setCurrentDatasource](datasource)}\\nuseSelector{currencies}\\nuseState{[errors, setErrors]([])}\\nuseState{[isSaving, setIsSaving](false)}\\nuseState{[isEditing, setIsEditing](false)}\\nuseRef{dialog}\\nuseModal{[modal, contextHolder]}\", () => [useTheme, useDispatch, useSelector]);const _default =\nwithToasts(DatasourceModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceEditor, \"DatasourceEditor\", \"/Users/aryurkov/superset/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(StyledDatasourceModal, \"StyledDatasourceModal\", \"/Users/aryurkov/superset/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(buildExtraJsonObject, \"buildExtraJsonObject\", \"/Users/aryurkov/superset/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(DatasourceModal, \"DatasourceModal\", \"/Users/aryurkov/superset/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useRef","useDispatch","useSelector","Alert","Button","isDefined","styled","SupersetClient","getClientErrorObject","t","useTheme","css","Icons","Modal","AsyncEsmComponent","ErrorMessageWithStackTrace","withToasts","startMetaDataLoading","stopMetaDataLoading","syncDatasourceMetadata","fetchSyncedColumns","updateColumns","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DatasourceEditor","StyledDatasourceModal","buildExtraJsonObject","item","certification","certified_by","certification_details","details","undefined","JSON","stringify","warning_markdown","DatasourceModal","addSuccessToast","addDangerToast","datasource","onDatasourceSave","onHide","show","theme","dispatch","currentDatasource","setCurrentDatasource","currencies","state","_state$common","common","errors","setErrors","isSaving","setIsSaving","isEditing","setIsEditing","dialog","modal","contextHolder","useModal","buildPayload","_datasource$database","_datasource$tableSele","_datasource$databaseS","_datasource$metrics","_datasource$columns","table_name","database_id","database","id","sql","filter_select_enabled","fetch_values_predicate","schema","tableSelector","databaseSelector","description","main_dttm_col","normalize_columns","always_filter_main_dttm","offset","default_endpoint","cache_timeout","is_sqllab_view","template_params","extra","is_managed_externally","external_url","metrics","map","metric","metricBody","expression","metric_name","metric_type","d3format","currency","verbose_name","warning_text","uuid","Number","isNaN","columns","column","column_name","type","advanced_data_type","filterable","groupby","is_active","is_dttm","python_date_format","owners","o","value","onConfirmSave","put","endpoint","jsonPayload","columnJson","columnChanges","finalColumns","error","json","get","result","response","_error$errors","errorResponse","errorText","length","title","okButtonProps","danger","className","content","source","fallback","onDatasourceChange","data","err","is_certified","renderSaveDialog","children","marginTop","gridUnit","marginBottom","showIcon","message","onClickSave","current","confirm","onOk","icon","okText","cancelText","EditOutlined","iconSize","maskClosable","footer","buttonSize","onClick","buttonStyle","disabled","tooltip","responsive","showLoadingForImport","height","onChange","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/Datasource/DatasourceModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FunctionComponent, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport {\n  isDefined,\n  styled,\n  SupersetClient,\n  getClientErrorObject,\n  t,\n  SupersetError,\n  useTheme,\n  css,\n} from '@superset-ui/core';\n\nimport { Icons } from 'src/components/Icons';\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport {\n  startMetaDataLoading,\n  stopMetaDataLoading,\n  syncDatasourceMetadata,\n} from 'src/explore/actions/exploreActions';\nimport {\n  fetchSyncedColumns,\n  updateColumns,\n} from 'src/components/Datasource/utils';\nimport { DatasetObject } from '../../features/datasets/types';\n\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\n\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n`;\n\ninterface DatasourceModalProps {\n  addSuccessToast: (msg: string) => void;\n  addDangerToast: (msg: string) => void;\n  datasource: DatasetObject;\n  onChange: () => {};\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => {};\n  show: boolean;\n}\n\nfunction buildExtraJsonObject(\n  item: DatasetObject['metrics'][0] | DatasetObject['columns'][0],\n) {\n  const certification =\n    item?.certified_by || item?.certification_details\n      ? {\n          certified_by: item?.certified_by,\n          details: item?.certification_details,\n        }\n      : undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: item?.warning_markdown,\n  });\n}\n\nconst DatasourceModal: FunctionComponent<DatasourceModalProps> = ({\n  addSuccessToast,\n  addDangerToast,\n  datasource,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [currentDatasource, setCurrentDatasource] = useState(datasource);\n  const currencies = useSelector<\n    {\n      common: {\n        currencies: string[];\n      };\n    },\n    string[]\n  >(state => state.common?.currencies);\n  const [errors, setErrors] = useState<any[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const dialog = useRef<any>(null);\n  const [modal, contextHolder] = Modal.useModal();\n  const buildPayload = (datasource: Record<string, any>) => ({\n    table_name: datasource.table_name,\n    database_id: datasource.database?.id,\n    sql: datasource.sql,\n    filter_select_enabled: datasource.filter_select_enabled,\n    fetch_values_predicate: datasource.fetch_values_predicate,\n    schema:\n      datasource.tableSelector?.schema ||\n      datasource.databaseSelector?.schema ||\n      datasource.schema,\n    description: datasource.description,\n    main_dttm_col: datasource.main_dttm_col,\n    normalize_columns: datasource.normalize_columns,\n    always_filter_main_dttm: datasource.always_filter_main_dttm,\n    offset: datasource.offset,\n    default_endpoint: datasource.default_endpoint,\n    cache_timeout:\n      datasource.cache_timeout === '' ? null : datasource.cache_timeout,\n    is_sqllab_view: datasource.is_sqllab_view,\n    template_params: datasource.template_params,\n    extra: datasource.extra,\n    is_managed_externally: datasource.is_managed_externally,\n    external_url: datasource.external_url,\n    metrics: datasource?.metrics?.map((metric: DatasetObject['metrics'][0]) => {\n      const metricBody: any = {\n        expression: metric.expression,\n        description: metric.description,\n        metric_name: metric.metric_name,\n        metric_type: metric.metric_type,\n        d3format: metric.d3format || null,\n        currency: !isDefined(metric.currency)\n          ? null\n          : JSON.stringify(metric.currency),\n        verbose_name: metric.verbose_name,\n        warning_text: metric.warning_text,\n        uuid: metric.uuid,\n        extra: buildExtraJsonObject(metric),\n      };\n      if (!Number.isNaN(Number(metric.id))) {\n        metricBody.id = metric.id;\n      }\n      return metricBody;\n    }),\n    columns: datasource?.columns?.map(\n      (column: DatasetObject['columns'][0]) => ({\n        id: typeof column.id === 'number' ? column.id : undefined,\n        column_name: column.column_name,\n        type: column.type,\n        advanced_data_type: column.advanced_data_type,\n        verbose_name: column.verbose_name,\n        description: column.description,\n        expression: column.expression,\n        filterable: column.filterable,\n        groupby: column.groupby,\n        is_active: column.is_active,\n        is_dttm: column.is_dttm,\n        python_date_format: column.python_date_format || null,\n        uuid: column.uuid,\n        extra: buildExtraJsonObject(column),\n      }),\n    ),\n    owners: datasource.owners.map(\n      (o: Record<string, number>) => o.value || o.id,\n    ),\n  });\n  const onConfirmSave = async () => {\n    // Pull out extra fields into the extra object\n    setIsSaving(true);\n    try {\n      await SupersetClient.put({\n        endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n        jsonPayload: buildPayload(currentDatasource),\n      });\n      if (datasource.sql !== currentDatasource.sql) {\n        // if sql has changed, save a second time with synced columns\n        dispatch(startMetaDataLoading());\n        try {\n          const columnJson = await fetchSyncedColumns(currentDatasource);\n          const columnChanges = updateColumns(\n            currentDatasource.columns,\n            columnJson,\n            addSuccessToast,\n          );\n          currentDatasource.columns = columnChanges.finalColumns;\n          dispatch(syncDatasourceMetadata(currentDatasource));\n          dispatch(stopMetaDataLoading());\n          addSuccessToast(t('Metadata has been synced'));\n        } catch (error) {\n          dispatch(stopMetaDataLoading());\n          addDangerToast(\n            t('An error has occurred while syncing virtual dataset columns'),\n          );\n        }\n        await SupersetClient.put({\n          endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n          jsonPayload: buildPayload(currentDatasource),\n        });\n      }\n      const { json } = await SupersetClient.get({\n        endpoint: `/api/v1/dataset/${currentDatasource?.id}`,\n      });\n      addSuccessToast(t('The dataset has been saved'));\n      // eslint-disable-next-line no-param-reassign\n      json.result.type = 'table';\n      onDatasourceSave({\n        ...json.result,\n        owners: currentDatasource.owners,\n      });\n      onHide();\n    } catch (response) {\n      setIsSaving(false);\n      const error = await getClientErrorObject(response);\n      let errorResponse: SupersetError | undefined;\n      let errorText: string | undefined;\n      // sip-40 error response\n      if (error?.errors?.length) {\n        errorResponse = error.errors[0];\n      } else if (typeof error.error === 'string') {\n        // backward compatible with old error messages\n        errorText = error.error;\n      }\n      modal.error({\n        title: t('Error saving dataset'),\n        okButtonProps: { danger: true, className: 'btn-danger' },\n        content: (\n          <ErrorMessageWithStackTrace\n            error={errorResponse}\n            source=\"crud\"\n            fallback={errorText}\n          />\n        ),\n      });\n    }\n  };\n\n  const onDatasourceChange = (data: DatasetObject, err: Array<any>) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data?.metrics.map((metric: DatasetObject['metrics'][0]) => ({\n        ...metric,\n        is_certified: metric?.certified_by || metric?.certification_details,\n      })),\n    });\n    setErrors(err);\n  };\n\n  const renderSaveDialog = () => (\n    <div>\n      <Alert\n        css={theme => ({\n          marginTop: theme.gridUnit * 4,\n          marginBottom: theme.gridUnit * 4,\n        })}\n        type=\"warning\"\n        showIcon\n        message={t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`)}\n      />\n      {t('Are you sure you want to save and apply changes?')}\n    </div>\n  );\n\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n      okText: t('OK'),\n      cancelText: t('Cancel'),\n    });\n  };\n\n  return (\n    <StyledDatasourceModal\n      show={show}\n      onHide={onHide}\n      title={\n        <span>\n          <Icons.EditOutlined\n            iconSize=\"l\"\n            css={css`\n              margin: auto ${theme.gridUnit * 2}px auto 0;\n            `}\n            data-test=\"edit-alt\"\n          />\n          {t('Edit Dataset ')}\n          <strong>{currentDatasource.table_name}</strong>\n        </span>\n      }\n      maskClosable={!isEditing}\n      footer={\n        <>\n          <Button\n            data-test=\"datasource-modal-cancel\"\n            buttonSize=\"small\"\n            className=\"m-r-5\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            data-test=\"datasource-modal-save\"\n            onClick={onClickSave}\n            disabled={\n              isSaving ||\n              errors.length > 0 ||\n              currentDatasource.is_managed_externally\n            }\n            tooltip={\n              currentDatasource.is_managed_externally\n                ? t(\n                    \"This dataset is managed externally, and can't be edited in Superset\",\n                  )\n                : ''\n            }\n          >\n            {t('Save')}\n          </Button>\n        </>\n      }\n      responsive\n    >\n      <DatasourceEditor\n        showLoadingForImport\n        height={500}\n        datasource={currentDatasource}\n        onChange={onDatasourceChange}\n        setIsEditing={setIsEditing}\n        currencies={currencies}\n      />\n      {contextHolder}\n    </StyledDatasourceModal>\n  );\n};\n\nexport default withToasts(DatasourceModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}