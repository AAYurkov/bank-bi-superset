{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect } from 'react';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { api } from './queryApi';\nconst catalogApi = api.injectEndpoints({\n  endpoints: (builder) => ({\n    catalogs: builder.query({\n      providesTags: [{ type: 'Catalogs', id: 'LIST' }],\n      query: ({ dbId, forceRefresh }) => ({\n        endpoint: `/api/v1/database/${dbId}/catalogs/`,\n        urlParams: {\n          force: forceRefresh\n        },\n        transformResponse: ({ json }) => json.result.sort().map((value) => ({\n          value,\n          label: value,\n          title: value\n        }))\n      }),\n      serializeQueryArgs: ({ queryArgs: { dbId } }) => ({\n        dbId\n      })\n    })\n  })\n});\nexport const { useLazyCatalogsQuery, useCatalogsQuery, endpoints: catalogEndpoints, util: catalogApiUtil } = catalogApi;\nexport const EMPTY_CATALOGS = [];\nexport function useCatalogs(options) {\n  const { dbId, onSuccess, onError } = options || {};\n  const [trigger] = useLazyCatalogsQuery();\n  const result = useCatalogsQuery({ dbId, forceRefresh: false }, {\n    skip: !dbId\n  });\n  useEffect(() => {\n    if (result.isError) {\n      onError == null ? void 0 : onError(result.error);\n    }\n  }, [result.isError, result.error, onError]);\n  const fetchData = useEffectEvent((dbId, forceRefresh = false) => {\n    if (dbId && (!result.currentData || forceRefresh)) {\n      trigger({ dbId, forceRefresh }).then(({ isSuccess, isError, data }) => {\n        if (isSuccess) {\n          onSuccess == null ? void 0 : onSuccess(data || EMPTY_CATALOGS, forceRefresh);\n        }\n        if (isError) {\n          onError == null ? void 0 : onError(result.error);\n        }\n      });\n    }\n  });\n  const refetch = useCallback(() => {\n    fetchData(dbId, true);\n  }, [dbId, fetchData]);\n  useEffect(() => {\n    fetchData(dbId, false);\n  }, [dbId, fetchData]);\n  return {\n    ...result,\n    refetch\n  };\n}__signature__(useCatalogs, \"useLazyCatalogsQuery{[trigger]}\\nuseCatalogsQuery{result}\\nuseEffect{}\\nuseEffectEvent{fetchData}\\nuseCallback{refetch}\\nuseEffect{}\", () => [useLazyCatalogsQuery, useCatalogsQuery, useEffectEvent]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(catalogApi, \"catalogApi\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts\");reactHotLoader.register(useLazyCatalogsQuery, \"useLazyCatalogsQuery\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts\");reactHotLoader.register(useCatalogsQuery, \"useCatalogsQuery\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts\");reactHotLoader.register(catalogEndpoints, \"catalogEndpoints\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts\");reactHotLoader.register(catalogApiUtil, \"catalogApiUtil\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts\");reactHotLoader.register(EMPTY_CATALOGS, \"EMPTY_CATALOGS\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts\");reactHotLoader.register(useCatalogs, \"useCatalogs\", \"/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useEffectEvent","api","catalogApi","injectEndpoints","endpoints","builder","catalogs","query","providesTags","type","id","dbId","forceRefresh","endpoint","urlParams","force","transformResponse","json","result","sort","map","value","label","title","serializeQueryArgs","queryArgs","useLazyCatalogsQuery","useCatalogsQuery","catalogEndpoints","util","catalogApiUtil","EMPTY_CATALOGS","useCatalogs","options","onSuccess","onError","trigger","skip","isError","error","fetchData","currentData","then","isSuccess","data","refetch","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/hooks/apiResources/catalogs.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect } from 'react';\nimport { ClientErrorObject } from '@superset-ui/core';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { api, JsonResponse } from './queryApi';\n\nexport type CatalogOption = {\n  value: string;\n  label: string;\n  title: string;\n};\n\nexport type FetchCatalogsQueryParams = {\n  dbId?: string | number;\n  forceRefresh: boolean;\n  onSuccess?: (data: CatalogOption[], isRefetched: boolean) => void;\n  onError?: (error: ClientErrorObject) => void;\n};\n\ntype Params = Omit<FetchCatalogsQueryParams, 'forceRefresh'>;\n\nconst catalogApi = api.injectEndpoints({\n  endpoints: builder => ({\n    catalogs: builder.query<CatalogOption[], FetchCatalogsQueryParams>({\n      providesTags: [{ type: 'Catalogs', id: 'LIST' }],\n      query: ({ dbId, forceRefresh }) => ({\n        endpoint: `/api/v1/database/${dbId}/catalogs/`,\n        urlParams: {\n          force: forceRefresh,\n        },\n        transformResponse: ({ json }: JsonResponse) =>\n          json.result.sort().map((value: string) => ({\n            value,\n            label: value,\n            title: value,\n          })),\n      }),\n      serializeQueryArgs: ({ queryArgs: { dbId } }) => ({\n        dbId,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useLazyCatalogsQuery,\n  useCatalogsQuery,\n  endpoints: catalogEndpoints,\n  util: catalogApiUtil,\n} = catalogApi;\n\nexport const EMPTY_CATALOGS = [] as CatalogOption[];\n\nexport function useCatalogs(options: Params) {\n  const { dbId, onSuccess, onError } = options || {};\n  const [trigger] = useLazyCatalogsQuery();\n  const result = useCatalogsQuery(\n    { dbId, forceRefresh: false },\n    {\n      skip: !dbId,\n    },\n  );\n\n  useEffect(() => {\n    if (result.isError) {\n      onError?.(result.error as ClientErrorObject);\n    }\n  }, [result.isError, result.error, onError]);\n\n  const fetchData = useEffectEvent(\n    (dbId: FetchCatalogsQueryParams['dbId'], forceRefresh = false) => {\n      if (dbId && (!result.currentData || forceRefresh)) {\n        trigger({ dbId, forceRefresh }).then(({ isSuccess, isError, data }) => {\n          if (isSuccess) {\n            onSuccess?.(data || EMPTY_CATALOGS, forceRefresh);\n          }\n          if (isError) {\n            onError?.(result.error as ClientErrorObject);\n          }\n        });\n      }\n    },\n  );\n\n  const refetch = useCallback(() => {\n    fetchData(dbId, true);\n  }, [dbId, fetchData]);\n\n  useEffect(() => {\n    fetchData(dbId, false);\n  }, [dbId, fetchData]);\n\n  return {\n    ...result,\n    refetch,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}