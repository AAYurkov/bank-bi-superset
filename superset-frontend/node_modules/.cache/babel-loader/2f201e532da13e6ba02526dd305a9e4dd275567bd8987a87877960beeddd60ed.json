{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useRef } from 'react';\nimport { t, css, useTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FormLabel } from 'src/components/Form';\nimport { Icons } from 'src/components/Icons';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\nconst ControlHeader = ({ name, label, description, validationErrors = [], renderTrigger = false, rightNode, leftNode, onClick, hovered = false, tooltipOnClick = () => {}, warning, danger }) => {\n  const { gridUnit, colors } = useTheme();\n  const hasHadNoErrors = useRef(false);\n  const labelColor = useMemo(() => {\n    if (!validationErrors.length) {\n      hasHadNoErrors.current = true;\n    }\n    if (hasHadNoErrors.current) {\n      if (validationErrors.length) {\n        return colors.error.base;\n      }\n      return 'unset';\n    }\n    return colors.warning.base;\n  }, [colors.error.base, colors.warning.base, validationErrors.length]);\n  if (!label) {\n    return null;\n  }\n  const renderOptionalIcons = () => {\n    if (!hovered) {\n      return null;\n    }\n    return _jsxs(\"span\", { css: () => css`\n          position: absolute;\n          top: 50%;\n          right: 0;\n          padding-left: ${gridUnit}px;\n          transform: translate(100%, -50%);\n          white-space: nowrap;\n        `, children: [\n      description && _jsxs(\"span\", { children: [\n        _jsx(Tooltip, { id: \"description-tooltip\", title: description, placement: \"top\", children:\n          _jsx(Icons.InfoCircleOutlined, { css: iconStyles, onClick: tooltipOnClick }) }\n        ), ' '] }\n      ),\n      renderTrigger && _jsxs(\"span\", { children: [\n        _jsx(InfoTooltipWithTrigger, { label: t('bolt'), tooltip: t('Changing this control takes effect instantly'), placement: \"top\", icon: \"bolt\" }), ' '] }\n      )] }\n    );\n  };\n  return _jsxs(\"div\", { className: \"ControlHeader\", \"data-test\": `${name}-header`, children: [\n    _jsx(\"div\", { className: \"pull-left\", children:\n      _jsxs(FormLabel, { css: (theme) => css`\n            margin-bottom: ${theme.gridUnit * 0.5}px;\n            position: relative;\n          `, children: [\n        leftNode && _jsx(\"span\", { children: leftNode }),\n        _jsx(\"span\", { role: \"button\", tabIndex: 0, onClick: onClick, style: { cursor: onClick ? 'pointer' : '' }, children:\n          label }\n        ), ' ',\n        warning && _jsxs(\"span\", { children: [\n          _jsx(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: warning, children:\n            _jsx(Icons.WarningOutlined, { iconColor: colors.warning.base, css: css`\n                    vertical-align: baseline;\n                  `, iconSize: \"s\" }) }\n          ), ' '] }\n        ),\n        danger && _jsxs(\"span\", { children: [\n          _jsx(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: danger, children:\n            _jsx(Icons.ExclamationCircleOutlined, { iconColor: colors.error.base, iconSize: \"s\" }) }\n          ), ' '] }\n        ),\n        (validationErrors == null ? void 0 : validationErrors.length) > 0 && _jsxs(\"span\", { \"data-test\": \"error-tooltip\", children: [\n          _jsx(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: validationErrors == null ? void 0 : validationErrors.join(' '), children:\n            _jsx(Icons.ExclamationCircleOutlined, { css: css`\n                    ${iconStyles};\n                    color: ${labelColor};\n                  ` }) }\n          ), ' '] }\n        ),\n        renderOptionalIcons()] }\n      ) }\n    ),\n    rightNode && _jsx(\"div\", { className: \"pull-right\", children: rightNode }),\n    _jsx(\"div\", { className: \"clearfix\" })] }\n  );\n};__signature__(ControlHeader, \"useTheme{{ gridUnit, colors }}\\nuseRef{hasHadNoErrors}\\nuseMemo{labelColor}\", () => [useTheme]);const _default =\nControlHeader;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(iconStyles, \"iconStyles\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ControlHeader.tsx\");reactHotLoader.register(ControlHeader, \"ControlHeader\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ControlHeader.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ControlHeader.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","useRef","t","css","useTheme","InfoTooltipWithTrigger","Tooltip","FormLabel","Icons","jsx","_jsx","jsxs","_jsxs","iconStyles","ControlHeader","name","label","description","validationErrors","renderTrigger","rightNode","leftNode","onClick","hovered","tooltipOnClick","warning","danger","gridUnit","colors","hasHadNoErrors","labelColor","length","current","error","base","renderOptionalIcons","children","id","title","placement","InfoCircleOutlined","tooltip","icon","className","theme","role","tabIndex","style","cursor","WarningOutlined","iconColor","iconSize","ExclamationCircleOutlined","join","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/ControlHeader.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FC, ReactNode, useMemo, useRef } from 'react';\nimport { t, css, useTheme, SupersetTheme } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FormLabel } from 'src/components/Form';\nimport { Icons } from 'src/components/Icons';\n\ntype ValidationError = string;\n\nexport type ControlHeaderProps = {\n  name?: string;\n  label?: ReactNode;\n  description?: ReactNode;\n  validationErrors?: ValidationError[];\n  renderTrigger?: boolean;\n  rightNode?: ReactNode;\n  leftNode?: ReactNode;\n  onClick?: () => void;\n  hovered?: boolean;\n  tooltipOnClick?: () => void;\n  warning?: string;\n  danger?: string;\n};\n\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\n\nconst ControlHeader: FC<ControlHeaderProps> = ({\n  name,\n  label,\n  description,\n  validationErrors = [],\n  renderTrigger = false,\n  rightNode,\n  leftNode,\n  onClick,\n  hovered = false,\n  tooltipOnClick = () => {},\n  warning,\n  danger,\n}) => {\n  const { gridUnit, colors } = useTheme();\n  const hasHadNoErrors = useRef(false);\n  const labelColor = useMemo(() => {\n    if (!validationErrors.length) {\n      hasHadNoErrors.current = true;\n    }\n\n    if (hasHadNoErrors.current) {\n      if (validationErrors.length) {\n        return colors.error.base;\n      }\n\n      return 'unset';\n    }\n\n    return colors.warning.base;\n  }, [colors.error.base, colors.warning.base, validationErrors.length]);\n\n  if (!label) {\n    return null;\n  }\n\n  const renderOptionalIcons = () => {\n    if (!hovered) {\n      return null;\n    }\n\n    return (\n      <span\n        css={() => css`\n          position: absolute;\n          top: 50%;\n          right: 0;\n          padding-left: ${gridUnit}px;\n          transform: translate(100%, -50%);\n          white-space: nowrap;\n        `}\n      >\n        {description && (\n          <span>\n            <Tooltip\n              id=\"description-tooltip\"\n              title={description}\n              placement=\"top\"\n            >\n              <Icons.InfoCircleOutlined\n                css={iconStyles}\n                onClick={tooltipOnClick}\n              />\n            </Tooltip>{' '}\n          </span>\n        )}\n        {renderTrigger && (\n          <span>\n            <InfoTooltipWithTrigger\n              label={t('bolt')}\n              tooltip={t('Changing this control takes effect instantly')}\n              placement=\"top\"\n              icon=\"bolt\"\n            />{' '}\n          </span>\n        )}\n      </span>\n    );\n  };\n\n  return (\n    <div className=\"ControlHeader\" data-test={`${name}-header`}>\n      <div className=\"pull-left\">\n        <FormLabel\n          css={(theme: SupersetTheme) => css`\n            margin-bottom: ${theme.gridUnit * 0.5}px;\n            position: relative;\n          `}\n        >\n          {leftNode && <span>{leftNode}</span>}\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={onClick}\n            style={{ cursor: onClick ? 'pointer' : '' }}\n          >\n            {label}\n          </span>{' '}\n          {warning && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={warning}>\n                <Icons.WarningOutlined\n                  iconColor={colors.warning.base}\n                  css={css`\n                    vertical-align: baseline;\n                  `}\n                  iconSize=\"s\"\n                />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {danger && (\n            <span>\n              <Tooltip id=\"error-tooltip\" placement=\"top\" title={danger}>\n                <Icons.ExclamationCircleOutlined\n                  iconColor={colors.error.base}\n                  iconSize=\"s\"\n                />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {validationErrors?.length > 0 && (\n            <span data-test=\"error-tooltip\">\n              <Tooltip\n                id=\"error-tooltip\"\n                placement=\"top\"\n                title={validationErrors?.join(' ')}\n              >\n                <Icons.ExclamationCircleOutlined\n                  css={css`\n                    ${iconStyles};\n                    color: ${labelColor};\n                  `}\n                />\n              </Tooltip>{' '}\n            </span>\n          )}\n          {renderOptionalIcons()}\n        </FormLabel>\n      </div>\n      {rightNode && <div className=\"pull-right\">{rightNode}</div>}\n      <div className=\"clearfix\" />\n    </div>\n  );\n};\n\nexport default ControlHeader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}