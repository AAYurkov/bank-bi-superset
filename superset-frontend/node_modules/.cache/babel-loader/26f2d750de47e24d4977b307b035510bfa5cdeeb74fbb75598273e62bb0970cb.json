{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent, Fragment } from 'react';\nimport { withTheme } from '@emotion/react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { addAlpha, css, styled, t } from '@superset-ui/core';\nimport { EmptyState } from 'src/components/EmptyState';\nimport { Icons } from 'src/components/Icons';\nimport { navigateTo } from 'src/utils/navigationUtils';\nimport { componentShape } from '../util/propShapes';\nimport DashboardComponent from '../containers/DashboardComponent';\nimport { Droppable } from './dnd/DragDroppable';\nimport { GRID_GUTTER_SIZE, GRID_COLUMN_COUNT } from '../util/constants';\nimport { TAB_TYPE } from '../util/componentTypes';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool,\n  gridComponent: componentShape,\n  handleComponentDrop: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool.isRequired,\n  resizeComponent: PropTypes.func.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  dashboardId: PropTypes.number\n};\n\nconst defaultProps = {};\n\nconst renderDraggableContent = (dropProps) =>\ndropProps.dropIndicatorProps && _jsx(\"div\", { ...dropProps.dropIndicatorProps });\n\nconst DashboardEmptyStateContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst GridContent = styled.div`\n  ${({ theme, editMode }) => css`\n    display: flex;\n    flex-direction: column;\n    /* gutters between rows */\n    & > div:not(:last-child):not(.empty-droptarget) {\n      ${!editMode && `margin-bottom: ${theme.gridUnit * 4}px`};\n    }\n\n    .empty-droptarget {\n      width: 100%;\n      height: ${theme.gridUnit * 4}px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: ${theme.gridUnit}px;\n      overflow: hidden;\n\n      &:before {\n        content: '';\n        display: block;\n        width: calc(100% - ${theme.gridUnit * 2}px);\n        height: calc(100% - ${theme.gridUnit * 2}px);\n        border: 1px dashed transparent;\n        border-radius: ${theme.gridUnit}px;\n        opacity: 0.5;\n      }\n    }\n\n    & > .empty-droptarget:first-child {\n      height: ${theme.gridUnit * 4}px;\n      margin-top: ${theme.gridUnit * -4}px;\n    }\n\n    & > .empty-droptarget:last-child {\n      height: ${theme.gridUnit * 24}px;\n    }\n\n    & > .empty-droptarget.empty-droptarget--full:only-child {\n      height: 80vh;\n    }\n  `}\n`;\n\nconst GridColumnGuide = styled.div`\n  ${({ theme }) => css`\n    // /* Editing guides */\n    &.grid-column-guide {\n      position: absolute;\n      top: 0;\n      min-height: 100%;\n      background-color: ${addAlpha(\n  theme.colors.primary.base,\n  parseFloat(theme.opacity.light) / 100\n)};\n      pointer-events: none;\n      box-shadow: inset 0 0 0 1px\n        ${addAlpha(\n  theme.colors.primary.base,\n  parseFloat(theme.opacity.mediumHeavy) / 100\n)};\n    }\n  `};\n`;\n\nclass DashboardGrid extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isResizing: false\n    };\n    this.theme = this;\n    this.handleResizeStart = this.handleResizeStart.bind(this);\n    this.handleResizeStop = this.handleResizeStop.bind(this);\n    this.handleTopDropTargetDrop = this.handleTopDropTargetDrop.bind(this);\n    this.getRowGuidePosition = this.getRowGuidePosition.bind(this);\n    this.setGridRef = this.setGridRef.bind(this);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n  }\n\n  getRowGuidePosition(resizeRef) {\n    if (resizeRef && this.grid) {\n      return (\n        resizeRef.getBoundingClientRect().bottom -\n        this.grid.getBoundingClientRect().top -\n        2);\n\n    }\n    return null;\n  }\n\n  setGridRef(ref) {\n    this.grid = ref;\n  }\n\n  handleResizeStart() {\n    this.setState(() => ({\n      isResizing: true\n    }));\n  }\n\n  handleResizeStop(_event, _direction, _elementRef, delta, id) {\n    this.props.resizeComponent({\n      id,\n      width: delta.width,\n      height: delta.height\n    });\n\n    this.setState(() => ({\n      isResizing: false\n    }));\n  }\n\n  handleTopDropTargetDrop(dropResult) {\n    if (dropResult) {\n      this.props.handleComponentDrop({\n        ...dropResult,\n        destination: {\n          ...dropResult.destination,\n          // force appending as the first child if top drop target\n          index: 0\n        }\n      });\n    }\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  render() {var _gridComponent$childr, _gridComponent$childr2, _gridComponent$childr3, _gridComponent$childr4;\n    const {\n      gridComponent,\n      handleComponentDrop,\n      depth,\n      width,\n      isComponentVisible,\n      editMode,\n      canEdit,\n      setEditMode,\n      dashboardId,\n      theme\n    } = this.props;\n    const columnPlusGutterWidth =\n    (width + GRID_GUTTER_SIZE) / GRID_COLUMN_COUNT;\n\n    const columnWidth = columnPlusGutterWidth - GRID_GUTTER_SIZE;\n    const { isResizing } = this.state;\n\n    const shouldDisplayEmptyState = (gridComponent == null ? void 0 : (_gridComponent$childr = gridComponent.children) == null ? void 0 : _gridComponent$childr.length) === 0;\n    const shouldDisplayTopLevelTabEmptyState =\n    shouldDisplayEmptyState && gridComponent.type === TAB_TYPE;\n\n    const dashboardEmptyState = editMode &&\n    _jsx(EmptyState, {\n      title: t('Drag and drop components and charts to the dashboard'),\n      description: t(\n        'You can create a new chart or use existing ones from the panel on the right'\n      ),\n      size: \"large\",\n      buttonText:\n      _jsxs(_Fragment, { children: [\n        _jsx(Icons.PlusOutlined, {\n          iconSize: \"m\",\n          iconColor: theme.colors.primary.light5 }\n        ),\n        t('Create a new chart')] }\n      ),\n\n      buttonAction: () => {\n        navigateTo(`/chart/add?dashboard_id=${dashboardId}`, {\n          newWindow: true\n        });\n      },\n      image: \"chart.svg\" }\n    );\n\n\n    const topLevelTabEmptyState = editMode ?\n    _jsx(EmptyState, {\n      title: t('Drag and drop components to this tab'),\n      size: \"large\",\n      description: t(\n        `You can create a new chart or use existing ones from the panel on the right`\n      ),\n      buttonText:\n      _jsxs(_Fragment, { children: [\n        _jsx(Icons.PlusOutlined, {\n          iconSize: \"m\",\n          iconColor: theme.colors.primary.light5 }\n        ),\n        t('Create a new chart')] }\n      ),\n\n      buttonAction: () => {\n        navigateTo(`/chart/add?dashboard_id=${dashboardId}`, {\n          newWindow: true\n        });\n      },\n      image: \"chart.svg\" }\n    ) :\n\n    _jsx(EmptyState, {\n      title: t('There are no components added to this tab'),\n      size: \"large\",\n      description:\n      canEdit && t('You can add the components in the edit mode.'),\n\n      buttonText: canEdit && t('Edit the dashboard'),\n      buttonAction:\n      canEdit && (\n      () => {\n        setEditMode(true);\n      }),\n\n      image: \"chart.svg\" }\n    );\n\n\n    return width < 100 ? null :\n    _jsxs(_Fragment, { children: [\n      shouldDisplayEmptyState &&\n      _jsx(DashboardEmptyStateContainer, { children:\n        shouldDisplayTopLevelTabEmptyState ?\n        topLevelTabEmptyState :\n        dashboardEmptyState }\n      ),\n\n      _jsx(\"div\", { className: \"dashboard-grid\", ref: this.setGridRef, children:\n        _jsxs(GridContent, {\n          className: \"grid-content\",\n          \"data-test\": \"grid-content\",\n          editMode: editMode, children: [\n\n\n          editMode &&\n          _jsx(Droppable, {\n            component: gridComponent,\n            depth: depth,\n            parentComponent: null,\n            index: 0,\n            orientation: \"column\",\n            onDrop: this.handleTopDropTargetDrop,\n            className: classNames({\n              'empty-droptarget': true,\n              'empty-droptarget--full':\n              (gridComponent == null ? void 0 : (_gridComponent$childr2 = gridComponent.children) == null ? void 0 : _gridComponent$childr2.length) === 0\n            }),\n            editMode: true,\n            dropToChild: (gridComponent == null ? void 0 : (_gridComponent$childr3 = gridComponent.children) == null ? void 0 : _gridComponent$childr3.length) === 0, children:\n\n            renderDraggableContent }\n          ),\n\n          gridComponent == null ? void 0 : (_gridComponent$childr4 = gridComponent.children) == null ? void 0 : _gridComponent$childr4.map((id, index) =>\n          _jsxs(Fragment, { children: [\n            _jsx(DashboardComponent, {\n              id: id,\n              parentId: gridComponent.id,\n              depth: depth + 1,\n              index: index,\n              availableColumnCount: GRID_COLUMN_COUNT,\n              columnWidth: columnWidth,\n              isComponentVisible: isComponentVisible,\n              onResizeStart: this.handleResizeStart,\n              onResize: this.handleResize,\n              onResizeStop: this.handleResizeStop,\n              onChangeTab: this.handleChangeTab }\n            ),\n\n            editMode &&\n            _jsx(Droppable, {\n              component: gridComponent,\n              depth: depth,\n              parentComponent: null,\n              index: index + 1,\n              orientation: \"column\",\n              onDrop: handleComponentDrop,\n              className: \"empty-droptarget\",\n              editMode: true, children:\n\n              renderDraggableContent }\n            )] }, id\n\n          )\n          ),\n          isResizing &&\n          Array(GRID_COLUMN_COUNT).\n          fill(null).\n          map((_, i) =>\n          _jsx(GridColumnGuide, {\n\n            className: \"grid-column-guide\",\n            style: {\n              left: i * GRID_GUTTER_SIZE + i * columnWidth,\n              width: columnWidth\n            } }, `grid-column-${i}`\n          )\n          )] }\n        ) }\n      )] }\n    );\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDashboardGrid.propTypes = propTypes;\nDashboardGrid.defaultProps = defaultProps;const _default =\n\nwithTheme(DashboardGrid);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");reactHotLoader.register(renderDraggableContent, \"renderDraggableContent\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");reactHotLoader.register(DashboardEmptyStateContainer, \"DashboardEmptyStateContainer\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");reactHotLoader.register(GridContent, \"GridContent\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");reactHotLoader.register(GridColumnGuide, \"GridColumnGuide\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");reactHotLoader.register(DashboardGrid, \"DashboardGrid\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","Fragment","withTheme","PropTypes","classNames","addAlpha","css","styled","t","EmptyState","Icons","navigateTo","componentShape","DashboardComponent","Droppable","GRID_GUTTER_SIZE","GRID_COLUMN_COUNT","TAB_TYPE","jsx","_jsx","_Fragment","jsxs","_jsxs","propTypes","depth","number","isRequired","editMode","bool","gridComponent","handleComponentDrop","func","isComponentVisible","resizeComponent","setDirectPathToChild","width","dashboardId","defaultProps","renderDraggableContent","dropProps","dropIndicatorProps","DashboardEmptyStateContainer","div","GridContent","theme","gridUnit","GridColumnGuide","colors","primary","base","parseFloat","opacity","light","mediumHeavy","DashboardGrid","constructor","props","state","isResizing","handleResizeStart","bind","handleResizeStop","handleTopDropTargetDrop","getRowGuidePosition","setGridRef","handleChangeTab","resizeRef","grid","getBoundingClientRect","bottom","top","ref","setState","_event","_direction","_elementRef","delta","id","height","dropResult","destination","index","pathToTabIndex","render","_gridComponent$childr","_gridComponent$childr2","_gridComponent$childr3","_gridComponent$childr4","canEdit","setEditMode","columnPlusGutterWidth","columnWidth","shouldDisplayEmptyState","children","length","shouldDisplayTopLevelTabEmptyState","type","dashboardEmptyState","title","description","size","buttonText","PlusOutlined","iconSize","iconColor","light5","buttonAction","newWindow","image","topLevelTabEmptyState","className","component","parentComponent","orientation","onDrop","dropToChild","map","parentId","availableColumnCount","onResizeStart","onResize","handleResize","onResizeStop","onChangeTab","Array","fill","_","i","style","left","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/DashboardGrid.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent, Fragment } from 'react';\nimport { withTheme } from '@emotion/react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { addAlpha, css, styled, t } from '@superset-ui/core';\nimport { EmptyState } from 'src/components/EmptyState';\nimport { Icons } from 'src/components/Icons';\nimport { navigateTo } from 'src/utils/navigationUtils';\nimport { componentShape } from '../util/propShapes';\nimport DashboardComponent from '../containers/DashboardComponent';\nimport { Droppable } from './dnd/DragDroppable';\nimport { GRID_GUTTER_SIZE, GRID_COLUMN_COUNT } from '../util/constants';\nimport { TAB_TYPE } from '../util/componentTypes';\n\nconst propTypes = {\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool,\n  gridComponent: componentShape,\n  handleComponentDrop: PropTypes.func.isRequired,\n  isComponentVisible: PropTypes.bool.isRequired,\n  resizeComponent: PropTypes.func.isRequired,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  dashboardId: PropTypes.number,\n};\n\nconst defaultProps = {};\n\nconst renderDraggableContent = dropProps =>\n  dropProps.dropIndicatorProps && <div {...dropProps.dropIndicatorProps} />;\n\nconst DashboardEmptyStateContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst GridContent = styled.div`\n  ${({ theme, editMode }) => css`\n    display: flex;\n    flex-direction: column;\n    /* gutters between rows */\n    & > div:not(:last-child):not(.empty-droptarget) {\n      ${!editMode && `margin-bottom: ${theme.gridUnit * 4}px`};\n    }\n\n    .empty-droptarget {\n      width: 100%;\n      height: ${theme.gridUnit * 4}px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: ${theme.gridUnit}px;\n      overflow: hidden;\n\n      &:before {\n        content: '';\n        display: block;\n        width: calc(100% - ${theme.gridUnit * 2}px);\n        height: calc(100% - ${theme.gridUnit * 2}px);\n        border: 1px dashed transparent;\n        border-radius: ${theme.gridUnit}px;\n        opacity: 0.5;\n      }\n    }\n\n    & > .empty-droptarget:first-child {\n      height: ${theme.gridUnit * 4}px;\n      margin-top: ${theme.gridUnit * -4}px;\n    }\n\n    & > .empty-droptarget:last-child {\n      height: ${theme.gridUnit * 24}px;\n    }\n\n    & > .empty-droptarget.empty-droptarget--full:only-child {\n      height: 80vh;\n    }\n  `}\n`;\n\nconst GridColumnGuide = styled.div`\n  ${({ theme }) => css`\n    // /* Editing guides */\n    &.grid-column-guide {\n      position: absolute;\n      top: 0;\n      min-height: 100%;\n      background-color: ${addAlpha(\n        theme.colors.primary.base,\n        parseFloat(theme.opacity.light) / 100,\n      )};\n      pointer-events: none;\n      box-shadow: inset 0 0 0 1px\n        ${addAlpha(\n          theme.colors.primary.base,\n          parseFloat(theme.opacity.mediumHeavy) / 100,\n        )};\n    }\n  `};\n`;\n\nclass DashboardGrid extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isResizing: false,\n    };\n    this.theme = this;\n    this.handleResizeStart = this.handleResizeStart.bind(this);\n    this.handleResizeStop = this.handleResizeStop.bind(this);\n    this.handleTopDropTargetDrop = this.handleTopDropTargetDrop.bind(this);\n    this.getRowGuidePosition = this.getRowGuidePosition.bind(this);\n    this.setGridRef = this.setGridRef.bind(this);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n  }\n\n  getRowGuidePosition(resizeRef) {\n    if (resizeRef && this.grid) {\n      return (\n        resizeRef.getBoundingClientRect().bottom -\n        this.grid.getBoundingClientRect().top -\n        2\n      );\n    }\n    return null;\n  }\n\n  setGridRef(ref) {\n    this.grid = ref;\n  }\n\n  handleResizeStart() {\n    this.setState(() => ({\n      isResizing: true,\n    }));\n  }\n\n  handleResizeStop(_event, _direction, _elementRef, delta, id) {\n    this.props.resizeComponent({\n      id,\n      width: delta.width,\n      height: delta.height,\n    });\n\n    this.setState(() => ({\n      isResizing: false,\n    }));\n  }\n\n  handleTopDropTargetDrop(dropResult) {\n    if (dropResult) {\n      this.props.handleComponentDrop({\n        ...dropResult,\n        destination: {\n          ...dropResult.destination,\n          // force appending as the first child if top drop target\n          index: 0,\n        },\n      });\n    }\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  render() {\n    const {\n      gridComponent,\n      handleComponentDrop,\n      depth,\n      width,\n      isComponentVisible,\n      editMode,\n      canEdit,\n      setEditMode,\n      dashboardId,\n      theme,\n    } = this.props;\n    const columnPlusGutterWidth =\n      (width + GRID_GUTTER_SIZE) / GRID_COLUMN_COUNT;\n\n    const columnWidth = columnPlusGutterWidth - GRID_GUTTER_SIZE;\n    const { isResizing } = this.state;\n\n    const shouldDisplayEmptyState = gridComponent?.children?.length === 0;\n    const shouldDisplayTopLevelTabEmptyState =\n      shouldDisplayEmptyState && gridComponent.type === TAB_TYPE;\n\n    const dashboardEmptyState = editMode && (\n      <EmptyState\n        title={t('Drag and drop components and charts to the dashboard')}\n        description={t(\n          'You can create a new chart or use existing ones from the panel on the right',\n        )}\n        size=\"large\"\n        buttonText={\n          <>\n            <Icons.PlusOutlined\n              iconSize=\"m\"\n              iconColor={theme.colors.primary.light5}\n            />\n            {t('Create a new chart')}\n          </>\n        }\n        buttonAction={() => {\n          navigateTo(`/chart/add?dashboard_id=${dashboardId}`, {\n            newWindow: true,\n          });\n        }}\n        image=\"chart.svg\"\n      />\n    );\n\n    const topLevelTabEmptyState = editMode ? (\n      <EmptyState\n        title={t('Drag and drop components to this tab')}\n        size=\"large\"\n        description={t(\n          `You can create a new chart or use existing ones from the panel on the right`,\n        )}\n        buttonText={\n          <>\n            <Icons.PlusOutlined\n              iconSize=\"m\"\n              iconColor={theme.colors.primary.light5}\n            />\n            {t('Create a new chart')}\n          </>\n        }\n        buttonAction={() => {\n          navigateTo(`/chart/add?dashboard_id=${dashboardId}`, {\n            newWindow: true,\n          });\n        }}\n        image=\"chart.svg\"\n      />\n    ) : (\n      <EmptyState\n        title={t('There are no components added to this tab')}\n        size=\"large\"\n        description={\n          canEdit && t('You can add the components in the edit mode.')\n        }\n        buttonText={canEdit && t('Edit the dashboard')}\n        buttonAction={\n          canEdit &&\n          (() => {\n            setEditMode(true);\n          })\n        }\n        image=\"chart.svg\"\n      />\n    );\n\n    return width < 100 ? null : (\n      <>\n        {shouldDisplayEmptyState && (\n          <DashboardEmptyStateContainer>\n            {shouldDisplayTopLevelTabEmptyState\n              ? topLevelTabEmptyState\n              : dashboardEmptyState}\n          </DashboardEmptyStateContainer>\n        )}\n        <div className=\"dashboard-grid\" ref={this.setGridRef}>\n          <GridContent\n            className=\"grid-content\"\n            data-test=\"grid-content\"\n            editMode={editMode}\n          >\n            {/* make the area above components droppable */}\n            {editMode && (\n              <Droppable\n                component={gridComponent}\n                depth={depth}\n                parentComponent={null}\n                index={0}\n                orientation=\"column\"\n                onDrop={this.handleTopDropTargetDrop}\n                className={classNames({\n                  'empty-droptarget': true,\n                  'empty-droptarget--full':\n                    gridComponent?.children?.length === 0,\n                })}\n                editMode\n                dropToChild={gridComponent?.children?.length === 0}\n              >\n                {renderDraggableContent}\n              </Droppable>\n            )}\n            {gridComponent?.children?.map((id, index) => (\n              <Fragment key={id}>\n                <DashboardComponent\n                  id={id}\n                  parentId={gridComponent.id}\n                  depth={depth + 1}\n                  index={index}\n                  availableColumnCount={GRID_COLUMN_COUNT}\n                  columnWidth={columnWidth}\n                  isComponentVisible={isComponentVisible}\n                  onResizeStart={this.handleResizeStart}\n                  onResize={this.handleResize}\n                  onResizeStop={this.handleResizeStop}\n                  onChangeTab={this.handleChangeTab}\n                />\n                {/* make the area below components droppable */}\n                {editMode && (\n                  <Droppable\n                    component={gridComponent}\n                    depth={depth}\n                    parentComponent={null}\n                    index={index + 1}\n                    orientation=\"column\"\n                    onDrop={handleComponentDrop}\n                    className=\"empty-droptarget\"\n                    editMode\n                  >\n                    {renderDraggableContent}\n                  </Droppable>\n                )}\n              </Fragment>\n            ))}\n            {isResizing &&\n              Array(GRID_COLUMN_COUNT)\n                .fill(null)\n                .map((_, i) => (\n                  <GridColumnGuide\n                    key={`grid-column-${i}`}\n                    className=\"grid-column-guide\"\n                    style={{\n                      left: i * GRID_GUTTER_SIZE + i * columnWidth,\n                      width: columnWidth,\n                    }}\n                  />\n                ))}\n          </GridContent>\n        </div>\n      </>\n    );\n  }\n}\n\nDashboardGrid.propTypes = propTypes;\nDashboardGrid.defaultProps = defaultProps;\n\nexport default withTheme(DashboardGrid);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}