{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState, useEffect, useRef } from 'react';\nimport { css, GenericDataType, getTimeFormatter, safeHtmlSpan, styled, t, TimeFormats, useTheme } from '@superset-ui/core';\n\nimport { Input } from 'src/components/Input';\nimport { BOOL_FALSE_DISPLAY, BOOL_TRUE_DISPLAY, NULL_DISPLAY, SLOW_DEBOUNCE } from 'src/constants';\nimport { Radio } from 'src/components/Radio';\nimport { Icons } from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport Popover from 'src/components/Popover';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { getTimeColumns, setTimeColumns } from './utils';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const CellNull = styled('span')`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\nexport const CopyButton = styled(Button)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  i {\n    padding: 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nexport const CopyToClipboardButton = ({ data, columns }) => _jsx(CopyToClipboard, { text: data && columns ? prepareCopyToClipboardTabularData(data, columns) : '', wrapped: false, copyNode: _jsx(Icons.CopyOutlined, { iconSize: \"l\", \"aria-label\": t('Copy'), role: \"button\", css: css`\n          &.anticon > * {\n            line-height: 0;\n          }\n        ` }) });\nexport const FilterInput = ({ onChangeHandler, shouldFocus = false }) => {\n  const inputRef = useRef(null);\n  useEffect(() => {\n    // Focus the input element when the component mounts\n    if (inputRef.current && shouldFocus) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const theme = useTheme();\n  const debouncedChangeHandler = _debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return _jsx(Input, { prefix: _jsx(Icons.SearchOutlined, { iconSize: \"l\" }), placeholder: t('Search'), onChange: (event) => {\n      const filterText = event.target.value;\n      debouncedChangeHandler(filterText);\n    }, css: css`\n        width: 200px;\n        margin-right: ${theme.gridUnit * 2}px;\n      `, ref: inputRef });\n};__signature__(FilterInput, \"useRef{inputRef}\\nuseEffect{}\\nuseTheme{theme}\", () => [useTheme]);\nvar FormatPickerValue;\n(function (FormatPickerValue) {\n  FormatPickerValue[\"Formatted\"] = \"formatted\";\n  FormatPickerValue[\"Original\"] = \"original\";\n})(FormatPickerValue || (FormatPickerValue = {}));\nconst FormatPicker = ({ onChange, value }) => _jsx(Radio.GroupWrapper, { spaceConfig: {\n    direction: 'vertical',\n    align: 'start',\n    size: 15,\n    wrap: false\n  }, size: \"large\", value: value, onChange: onChange, options: [\n  { label: t('Formatted date'), value: FormatPickerValue.Formatted },\n  { label: t('Original value'), value: FormatPickerValue.Original }] }\n);\nconst FormatPickerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: ${({ theme }) => `${theme.gridUnit * 4}px`};\n`;\nconst FormatPickerLabel = styled.span`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst DataTableTemporalHeaderCell = ({ columnName, onTimeColumnChange, datasourceId, isOriginalTimeColumn }) => {\n  const theme = useTheme();\n  const onChange = (e) => {\n    onTimeColumnChange(columnName, e.target.value);\n  };\n  const overlayContent = useMemo(() => datasourceId ? // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n  _jsxs(FormatPickerContainer, { onClick: (e) => e.stopPropagation(), children: [\n\n    _jsx(FormatPickerLabel, { children: t('Column Formatting') }),\n    _jsx(FormatPicker, { onChange: onChange, value: isOriginalTimeColumn ?\n      FormatPickerValue.Original :\n      FormatPickerValue.Formatted })] }\n  ) : null, [datasourceId, isOriginalTimeColumn]);\n  return datasourceId ? _jsxs(\"span\", { children: [\n    _jsx(Popover, { trigger: \"click\", content: overlayContent, placement: \"bottomLeft\", arrow: { pointAtCenter: true }, children:\n      _jsx(Icons.SettingOutlined, { iconSize: \"m\", iconColor: theme.colors.grayscale.light1, css: /*#__PURE__*/_css({ marginRight: `${theme.gridUnit}px` }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:DataTableTemporalHeaderCell;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), onClick: (e) => e.stopPropagation() }) }\n    ),\n    columnName] }\n  ) : _jsx(\"span\", { children: columnName });\n};__signature__(DataTableTemporalHeaderCell, \"useTheme{theme}\\nuseMemo{overlayContent}\", () => [useTheme]);\nexport const useFilteredTableData = (filterText, data) => {\n  const rowsAsStrings = useMemo(() => {var _data$map;return (_data$map = data == null ? void 0 : data.map((row) => Object.values(row).map((value) => value ? value.toString().toLowerCase() : t('N/A')))) != null ? _data$map : [];}, [data]);\n  return useMemo(() => {\n    if (!(data != null && data.length)) {\n      return [];\n    }\n    return data.filter((_, index) => rowsAsStrings[index].some((value) => value == null ? void 0 : value.includes(filterText.toLowerCase())));\n  }, [data, filterText, rowsAsStrings]);\n};__signature__(useFilteredTableData, \"useMemo{rowsAsStrings}\\nuseMemo{}\");\nconst timeFormatter = getTimeFormatter(TimeFormats.DATABASE_DATETIME);\nexport const useTableColumns = (colnames, coltypes, data, datasourceId, isVisible, moreConfigs, allowHTML) => {\n  const [originalFormattedTimeColumns, setOriginalFormattedTimeColumns] = useState(getTimeColumns(datasourceId));\n  const onTimeColumnChange = (columnName, columnType) => {\n    if (!datasourceId) {\n      return;\n    }\n    if (columnType === FormatPickerValue.Original &&\n    !originalFormattedTimeColumns.includes(columnName)) {\n      const cols = getTimeColumns(datasourceId);\n      cols.push(columnName);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    } else\n    if (columnType === FormatPickerValue.Formatted &&\n    originalFormattedTimeColumns.includes(columnName)) {\n      const cols = getTimeColumns(datasourceId);\n      cols.splice(cols.indexOf(columnName), 1);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    }\n  };\n  useEffect(() => {\n    if (isVisible) {\n      setOriginalFormattedTimeColumns(getTimeColumns(datasourceId));\n    }\n  }, [datasourceId, isVisible]);\n  return useMemo(() => colnames && data != null && data.length ?\n  colnames.\n  filter((column) => Object.keys(data[0]).includes(column)).\n  map((key, index) => {\n    const colType = coltypes == null ? void 0 : coltypes[index];\n    const firstValue = data[0][key];\n    const originalFormattedTimeColumnIndex = colType === GenericDataType.Temporal ?\n    originalFormattedTimeColumns.indexOf(key) :\n    -1;\n    const isOriginalTimeColumn = originalFormattedTimeColumns.includes(key);\n    return {\n      // react-table requires a non-empty id, therefore we introduce a fallback value in case the key is empty\n      id: key || index,\n      accessor: (row) => row[key],\n      Header: colType === GenericDataType.Temporal &&\n      typeof firstValue !== 'string' ? _jsx(DataTableTemporalHeaderCell, { columnName: key, datasourceId: datasourceId, onTimeColumnChange: onTimeColumnChange, isOriginalTimeColumn: isOriginalTimeColumn }) : key,\n      Cell: ({ value }) => {\n        if (value === true) {\n          return BOOL_TRUE_DISPLAY;\n        }\n        if (value === false) {\n          return BOOL_FALSE_DISPLAY;\n        }\n        if (value === null) {\n          return _jsx(CellNull, { children: NULL_DISPLAY });\n        }\n        if (colType === GenericDataType.Temporal &&\n        originalFormattedTimeColumnIndex === -1 &&\n        typeof value === 'number') {\n          return timeFormatter(value);\n        }\n        if (typeof value === 'string' && allowHTML) {\n          return safeHtmlSpan(value);\n        }\n        return String(value);\n      },\n      ...(moreConfigs == null ? void 0 : moreConfigs[key])\n    };\n  }) :\n  [], [\n  colnames,\n  data,\n  coltypes,\n  datasourceId,\n  moreConfigs,\n  originalFormattedTimeColumns]\n  );\n};__signature__(useTableColumns, \"useState{[originalFormattedTimeColumns, setOriginalFormattedTimeColumns](getTimeColumns(datasourceId))}\\nuseEffect{}\\nuseMemo{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CellNull, \"CellNull\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(CopyButton, \"CopyButton\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(CopyToClipboardButton, \"CopyToClipboardButton\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(FilterInput, \"FilterInput\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(FormatPickerValue, \"FormatPickerValue\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(FormatPicker, \"FormatPicker\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(FormatPickerContainer, \"FormatPickerContainer\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(FormatPickerLabel, \"FormatPickerLabel\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(DataTableTemporalHeaderCell, \"DataTableTemporalHeaderCell\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(useFilteredTableData, \"useFilteredTableData\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(timeFormatter, \"timeFormatter\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");reactHotLoader.register(useTableColumns, \"useTableColumns\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","useState","useEffect","useRef","css","GenericDataType","getTimeFormatter","safeHtmlSpan","styled","t","TimeFormats","useTheme","Input","BOOL_FALSE_DISPLAY","BOOL_TRUE_DISPLAY","NULL_DISPLAY","SLOW_DEBOUNCE","Radio","Icons","Button","Popover","prepareCopyToClipboardTabularData","CopyToClipboard","getTimeColumns","setTimeColumns","jsx","_jsx","jsxs","_jsxs","CellNull","theme","colors","grayscale","light1","CopyButton","typography","sizes","s","gridUnit","CopyToClipboardButton","data","columns","text","wrapped","copyNode","CopyOutlined","iconSize","role","FilterInput","onChangeHandler","shouldFocus","inputRef","current","focus","debouncedChangeHandler","_debounce","prefix","SearchOutlined","placeholder","onChange","event","filterText","target","value","ref","__signature__","FormatPickerValue","FormatPicker","GroupWrapper","spaceConfig","direction","align","size","wrap","options","label","Formatted","Original","FormatPickerContainer","div","FormatPickerLabel","span","base","DataTableTemporalHeaderCell","columnName","onTimeColumnChange","datasourceId","isOriginalTimeColumn","e","overlayContent","onClick","stopPropagation","children","trigger","content","placement","arrow","pointAtCenter","SettingOutlined","iconColor","_css","marginRight","process","env","NODE_ENV","useFilteredTableData","rowsAsStrings","_data$map","map","row","Object","values","toString","toLowerCase","length","filter","_","index","some","includes","timeFormatter","DATABASE_DATETIME","useTableColumns","colnames","coltypes","isVisible","moreConfigs","allowHTML","originalFormattedTimeColumns","setOriginalFormattedTimeColumns","columnType","cols","push","splice","indexOf","column","keys","key","colType","firstValue","originalFormattedTimeColumnIndex","Temporal","id","accessor","Header","Cell","String","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/DataTableControl/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState, useEffect, useRef, RefObject } from 'react';\nimport {\n  css,\n  GenericDataType,\n  getTimeFormatter,\n  safeHtmlSpan,\n  styled,\n  t,\n  TimeFormats,\n  useTheme,\n} from '@superset-ui/core';\nimport { Column } from 'react-table';\nimport { debounce } from 'lodash';\nimport { Input } from 'src/components/Input';\nimport {\n  BOOL_FALSE_DISPLAY,\n  BOOL_TRUE_DISPLAY,\n  NULL_DISPLAY,\n  SLOW_DEBOUNCE,\n} from 'src/constants';\nimport { Radio } from 'src/components/Radio';\nimport { Icons } from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport Popover from 'src/components/Popover';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { getTimeColumns, setTimeColumns } from './utils';\n\nexport const CellNull = styled('span')`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\n\nexport const CopyButton = styled(Button)`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n\n  // needed to override button's first-of-type margin: 0\n  && {\n    margin: 0 ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  i {\n    padding: 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nexport const CopyToClipboardButton = ({\n  data,\n  columns,\n}: {\n  data?: Record<string, any>;\n  columns?: string[];\n}) => (\n  <CopyToClipboard\n    text={\n      data && columns ? prepareCopyToClipboardTabularData(data, columns) : ''\n    }\n    wrapped={false}\n    copyNode={\n      <Icons.CopyOutlined\n        iconSize=\"l\"\n        aria-label={t('Copy')}\n        role=\"button\"\n        css={css`\n          &.anticon > * {\n            line-height: 0;\n          }\n        `}\n      />\n    }\n  />\n);\n\nexport const FilterInput = ({\n  onChangeHandler,\n  shouldFocus = false,\n}: {\n  onChangeHandler(filterText: string): void;\n  shouldFocus?: boolean;\n}) => {\n  const inputRef: RefObject<any> = useRef(null);\n\n  useEffect(() => {\n    // Focus the input element when the component mounts\n    if (inputRef.current && shouldFocus) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const theme = useTheme();\n  const debouncedChangeHandler = debounce(onChangeHandler, SLOW_DEBOUNCE);\n  return (\n    <Input\n      prefix={<Icons.SearchOutlined iconSize=\"l\" />}\n      placeholder={t('Search')}\n      onChange={(event: any) => {\n        const filterText = event.target.value;\n        debouncedChangeHandler(filterText);\n      }}\n      css={css`\n        width: 200px;\n        margin-right: ${theme.gridUnit * 2}px;\n      `}\n      ref={inputRef}\n    />\n  );\n};\n\nenum FormatPickerValue {\n  Formatted = 'formatted',\n  Original = 'original',\n}\n\nconst FormatPicker = ({\n  onChange,\n  value,\n}: {\n  onChange: any;\n  value: FormatPickerValue;\n}) => (\n  <Radio.GroupWrapper\n    spaceConfig={{\n      direction: 'vertical',\n      align: 'start',\n      size: 15,\n      wrap: false,\n    }}\n    size=\"large\"\n    value={value}\n    onChange={onChange}\n    options={[\n      { label: t('Formatted date'), value: FormatPickerValue.Formatted },\n      { label: t('Original value'), value: FormatPickerValue.Original },\n    ]}\n  />\n);\n\nconst FormatPickerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: ${({ theme }) => `${theme.gridUnit * 4}px`};\n`;\n\nconst FormatPickerLabel = styled.span`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst DataTableTemporalHeaderCell = ({\n  columnName,\n  onTimeColumnChange,\n  datasourceId,\n  isOriginalTimeColumn,\n}: {\n  columnName: string;\n  onTimeColumnChange: (\n    columnName: string,\n    columnType: FormatPickerValue,\n  ) => void;\n  datasourceId?: string;\n  isOriginalTimeColumn: boolean;\n}) => {\n  const theme = useTheme();\n\n  const onChange = (e: any) => {\n    onTimeColumnChange(columnName, e.target.value);\n  };\n\n  const overlayContent = useMemo(\n    () =>\n      datasourceId ? ( // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <FormatPickerContainer onClick={e => e.stopPropagation()}>\n          {/* hack to disable click propagation from popover content to table header, which triggers sorting column */}\n          <FormatPickerLabel>{t('Column Formatting')}</FormatPickerLabel>\n          <FormatPicker\n            onChange={onChange}\n            value={\n              isOriginalTimeColumn\n                ? FormatPickerValue.Original\n                : FormatPickerValue.Formatted\n            }\n          />\n        </FormatPickerContainer>\n      ) : null,\n    [datasourceId, isOriginalTimeColumn],\n  );\n\n  return datasourceId ? (\n    <span>\n      <Popover\n        trigger=\"click\"\n        content={overlayContent}\n        placement=\"bottomLeft\"\n        arrow={{ pointAtCenter: true }}\n      >\n        <Icons.SettingOutlined\n          iconSize=\"m\"\n          iconColor={theme.colors.grayscale.light1}\n          css={{ marginRight: `${theme.gridUnit}px` }}\n          onClick={e => e.stopPropagation()}\n        />\n      </Popover>\n      {columnName}\n    </span>\n  ) : (\n    <span>{columnName}</span>\n  );\n};\n\nexport const useFilteredTableData = (\n  filterText: string,\n  data?: Record<string, any>[],\n) => {\n  const rowsAsStrings = useMemo(\n    () =>\n      data?.map((row: Record<string, any>) =>\n        Object.values(row).map(value =>\n          value ? value.toString().toLowerCase() : t('N/A'),\n        ),\n      ) ?? [],\n    [data],\n  );\n\n  return useMemo(() => {\n    if (!data?.length) {\n      return [];\n    }\n    return data.filter((_, index: number) =>\n      rowsAsStrings[index].some(value =>\n        value?.includes(filterText.toLowerCase()),\n      ),\n    );\n  }, [data, filterText, rowsAsStrings]);\n};\n\nconst timeFormatter = getTimeFormatter(TimeFormats.DATABASE_DATETIME);\n\nexport const useTableColumns = (\n  colnames?: string[],\n  coltypes?: GenericDataType[],\n  data?: Record<string, any>[],\n  datasourceId?: string,\n  isVisible?: boolean,\n  moreConfigs?: { [key: string]: Partial<Column> },\n  allowHTML?: boolean,\n) => {\n  const [originalFormattedTimeColumns, setOriginalFormattedTimeColumns] =\n    useState<string[]>(getTimeColumns(datasourceId));\n\n  const onTimeColumnChange = (\n    columnName: string,\n    columnType: FormatPickerValue,\n  ) => {\n    if (!datasourceId) {\n      return;\n    }\n    if (\n      columnType === FormatPickerValue.Original &&\n      !originalFormattedTimeColumns.includes(columnName)\n    ) {\n      const cols = getTimeColumns(datasourceId);\n      cols.push(columnName);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    } else if (\n      columnType === FormatPickerValue.Formatted &&\n      originalFormattedTimeColumns.includes(columnName)\n    ) {\n      const cols = getTimeColumns(datasourceId);\n      cols.splice(cols.indexOf(columnName), 1);\n      setTimeColumns(datasourceId, cols);\n      setOriginalFormattedTimeColumns(cols);\n    }\n  };\n\n  useEffect(() => {\n    if (isVisible) {\n      setOriginalFormattedTimeColumns(getTimeColumns(datasourceId));\n    }\n  }, [datasourceId, isVisible]);\n\n  return useMemo(\n    () =>\n      colnames && data?.length\n        ? colnames\n            .filter((column: string) => Object.keys(data[0]).includes(column))\n            .map((key, index) => {\n              const colType = coltypes?.[index];\n              const firstValue = data[0][key];\n              const originalFormattedTimeColumnIndex =\n                colType === GenericDataType.Temporal\n                  ? originalFormattedTimeColumns.indexOf(key)\n                  : -1;\n              const isOriginalTimeColumn =\n                originalFormattedTimeColumns.includes(key);\n              return {\n                // react-table requires a non-empty id, therefore we introduce a fallback value in case the key is empty\n                id: key || index,\n                accessor: (row: Record<string, any>) => row[key],\n                Header:\n                  colType === GenericDataType.Temporal &&\n                  typeof firstValue !== 'string' ? (\n                    <DataTableTemporalHeaderCell\n                      columnName={key}\n                      datasourceId={datasourceId}\n                      onTimeColumnChange={onTimeColumnChange}\n                      isOriginalTimeColumn={isOriginalTimeColumn}\n                    />\n                  ) : (\n                    key\n                  ),\n                Cell: ({ value }) => {\n                  if (value === true) {\n                    return BOOL_TRUE_DISPLAY;\n                  }\n                  if (value === false) {\n                    return BOOL_FALSE_DISPLAY;\n                  }\n                  if (value === null) {\n                    return <CellNull>{NULL_DISPLAY}</CellNull>;\n                  }\n                  if (\n                    colType === GenericDataType.Temporal &&\n                    originalFormattedTimeColumnIndex === -1 &&\n                    typeof value === 'number'\n                  ) {\n                    return timeFormatter(value);\n                  }\n                  if (typeof value === 'string' && allowHTML) {\n                    return safeHtmlSpan(value);\n                  }\n                  return String(value);\n                },\n                ...moreConfigs?.[key],\n              } as Column;\n            })\n        : [],\n    [\n      colnames,\n      data,\n      coltypes,\n      datasourceId,\n      moreConfigs,\n      originalFormattedTimeColumns,\n    ],\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}