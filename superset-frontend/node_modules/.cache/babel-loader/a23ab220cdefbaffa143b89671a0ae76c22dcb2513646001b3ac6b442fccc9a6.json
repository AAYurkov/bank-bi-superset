{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FeatureFlag, isFeatureEnabled } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { useDownloadScreenshot } from 'src/dashboard/hooks/useDownloadScreenshot';\nimport { DownloadScreenshotFormat } from './types';\nimport DownloadAsPdf from './DownloadAsPdf';\nimport DownloadAsImage from './DownloadAsImage';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DownloadMenuItems = (props) => {\n  const { pdfMenuItemTitle, imageMenuItemTitle, logEvent, dashboardId, dashboardTitle, submenuKey, disabled, title, ...rest } = props;\n  const isWebDriverScreenshotEnabled = isFeatureEnabled(FeatureFlag.EnableDashboardScreenshotEndpoints) &&\n  isFeatureEnabled(FeatureFlag.EnableDashboardDownloadWebDriverScreenshot);\n  const downloadScreenshot = useDownloadScreenshot(dashboardId, logEvent);\n  return isWebDriverScreenshotEnabled ? _jsxs(Menu.SubMenu, { title: title, disabled: disabled, ...rest, children: [\n    _jsx(Menu.Item, { onClick: () => downloadScreenshot(DownloadScreenshotFormat.PDF), children:\n      pdfMenuItemTitle }, DownloadScreenshotFormat.PDF\n    ),\n    _jsx(Menu.Item, { onClick: () => downloadScreenshot(DownloadScreenshotFormat.PNG), children:\n      imageMenuItemTitle }, DownloadScreenshotFormat.PNG\n    )] }, submenuKey\n  ) : _jsxs(Menu.SubMenu, { title: title, disabled: disabled, ...rest, children: [\n    _jsx(DownloadAsPdf, { text: pdfMenuItemTitle, dashboardTitle: dashboardTitle, logEvent: logEvent }),\n    _jsx(DownloadAsImage, { text: imageMenuItemTitle, dashboardTitle: dashboardTitle, logEvent: logEvent })] }, submenuKey\n  );\n};__signature__(DownloadMenuItems, \"useDownloadScreenshot{downloadScreenshot}\", () => [useDownloadScreenshot]);const _default =\nDownloadMenuItems;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DownloadMenuItems, \"DownloadMenuItems\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/DownloadMenuItems/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/DownloadMenuItems/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["FeatureFlag","isFeatureEnabled","Menu","useDownloadScreenshot","DownloadScreenshotFormat","DownloadAsPdf","DownloadAsImage","jsx","_jsx","jsxs","_jsxs","DownloadMenuItems","props","pdfMenuItemTitle","imageMenuItemTitle","logEvent","dashboardId","dashboardTitle","submenuKey","disabled","title","rest","isWebDriverScreenshotEnabled","EnableDashboardScreenshotEndpoints","EnableDashboardDownloadWebDriverScreenshot","downloadScreenshot","SubMenu","children","Item","onClick","PDF","PNG","text","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/DownloadMenuItems/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FeatureFlag, isFeatureEnabled } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { useDownloadScreenshot } from 'src/dashboard/hooks/useDownloadScreenshot';\nimport { ComponentProps } from 'react';\nimport { DownloadScreenshotFormat } from './types';\nimport DownloadAsPdf from './DownloadAsPdf';\nimport DownloadAsImage from './DownloadAsImage';\n\nexport interface DownloadMenuItemProps\n  extends ComponentProps<typeof Menu.SubMenu> {\n  pdfMenuItemTitle: string;\n  imageMenuItemTitle: string;\n  dashboardTitle: string;\n  logEvent?: Function;\n  dashboardId: number;\n  title: string;\n  disabled?: boolean;\n  submenuKey: string;\n}\n\nconst DownloadMenuItems = (props: DownloadMenuItemProps) => {\n  const {\n    pdfMenuItemTitle,\n    imageMenuItemTitle,\n    logEvent,\n    dashboardId,\n    dashboardTitle,\n    submenuKey,\n    disabled,\n    title,\n    ...rest\n  } = props;\n  const isWebDriverScreenshotEnabled =\n    isFeatureEnabled(FeatureFlag.EnableDashboardScreenshotEndpoints) &&\n    isFeatureEnabled(FeatureFlag.EnableDashboardDownloadWebDriverScreenshot);\n\n  const downloadScreenshot = useDownloadScreenshot(dashboardId, logEvent);\n\n  return isWebDriverScreenshotEnabled ? (\n    <Menu.SubMenu key={submenuKey} title={title} disabled={disabled} {...rest}>\n      <Menu.Item\n        key={DownloadScreenshotFormat.PDF}\n        onClick={() => downloadScreenshot(DownloadScreenshotFormat.PDF)}\n      >\n        {pdfMenuItemTitle}\n      </Menu.Item>\n      <Menu.Item\n        key={DownloadScreenshotFormat.PNG}\n        onClick={() => downloadScreenshot(DownloadScreenshotFormat.PNG)}\n      >\n        {imageMenuItemTitle}\n      </Menu.Item>\n    </Menu.SubMenu>\n  ) : (\n    <Menu.SubMenu key={submenuKey} title={title} disabled={disabled} {...rest}>\n      <DownloadAsPdf\n        text={pdfMenuItemTitle}\n        dashboardTitle={dashboardTitle}\n        logEvent={logEvent}\n      />\n      <DownloadAsImage\n        text={imageMenuItemTitle}\n        dashboardTitle={dashboardTitle}\n        logEvent={logEvent}\n      />\n    </Menu.SubMenu>\n  );\n};\n\nexport default DownloadMenuItems;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,mBAAmB;AACjE,SAASC,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,qBAAqB,QAAQ,2CAA2C;AAEjF,SAASC,wBAAwB,QAAQ,SAAS;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAchD,MAAMC,iBAAiB,GAAGA,CAACC,KAA4B,KAAI;EACzD,MAAM,EACJC,gBAAgB,EAChBC,kBAAkB,EAClBC,QAAQ,EACRC,WAAW,EACXC,cAAc,EACdC,UAAU,EACVC,QAAQ,EACRC,KAAK,EACL,GAAGC,IAAI,EACR,GAAGT,KAAK;EACT,MAAMU,4BAA4B,GAChCrB,gBAAgB,CAACD,WAAW,CAACuB,kCAAkC,CAAC;EAChEtB,gBAAgB,CAACD,WAAW,CAACwB,0CAA0C,CAAC;EAE1E,MAAMC,kBAAkB,GAAGtB,qBAAqB,CAACa,WAAW,EAAED,QAAQ,CAAC;EAEvE,OAAOO,4BAA4B,GACjCZ,KAAA,CAACR,IAAI,CAACwB,OAAO,IAAkBN,KAAK,EAAEA,KAAM,EAACD,QAAQ,EAAEA,QAAS,KAAKE,IAAI,EAAAM,QAAA;IACvEnB,IAAA,CAACN,IAAI,CAAC0B,IAAI,IAERC,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAACrB,wBAAwB,CAAC0B,GAAG,CAAE,EAAAH,QAAA;MAE/Dd,gBAAgB,IAHZT,wBAAwB,CAAC0B;IAIrB,CACX;IAAAtB,IAAA,CAACN,IAAI,CAAC0B,IAAI,IAERC,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAACrB,wBAAwB,CAAC2B,GAAG,CAAE,EAAAJ,QAAA;MAE/Db,kBAAkB,IAHdV,wBAAwB,CAAC2B;IAIrB,CACb,KAbmBb;EAaL,CAAC,GAEfR,KAAA,CAACR,IAAI,CAACwB,OAAO,IAAkBN,KAAK,EAAEA,KAAM,EAACD,QAAQ,EAAEA,QAAS,KAAKE,IAAI,EAAAM,QAAA;IACvEnB,IAAA,CAACH,aAAa,IACZ2B,IAAI,EAAEnB,gBAAiB,EACvBI,cAAc,EAAEA,cAAe,EAC/BF,QAAQ,EAAEA,QAAS,GAErB;IAAAP,IAAA,CAACF,eAAe,IACd0B,IAAI,EAAElB,kBAAmB,EACzBG,cAAc,EAAEA,cAAe,EAC/BF,QAAQ,EAAEA,QAAS,GAEvB,KAXmBG;EAWL,CACf;AACH,CAAC,CAACe,aAAA,CA/CItB,iBAAiB,sDAgBMR,qBAAqB,SAAA+B,QAAA;AAiCnCvB,iBAAiB,CAAhC,eAAAuB,QAAA,CAAiC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAjD3B5B,iBAAiB,+HAAAwB,cAAA,CAAAI,QAAA,CAAAL,QAAA,6IAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}