{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useContext, useMemo, useState } from 'react';\nimport { css, DatasourceType, styled, t } from '@superset-ui/core';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { matchSorter, rankings } from 'match-sorter';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport Control from 'src/explore/components/Control';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\nimport { DndItemType } from '../DndItemType';\nimport { DropzoneContext } from '../ExploreContainer';\nimport { DatasourceItems } from './DatasourceItems';\nimport { transformDatasourceWithFolders } from './transformDatasourceFolders';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${theme.gridUnit}px;\n      overflow: auto;\n      height: 100%;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      display: inline-flex;\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\nconst BORDER_WIDTH = 2;\nconst sortColumns = (slice) => [...slice].\nsort((col1, col2) => {\n  if (col1 != null && col1.is_dttm && !(col2 != null && col2.is_dttm)) {\n    return -1;\n  }\n  if (col2 != null && col2.is_dttm && !(col1 != null && col1.is_dttm)) {\n    return 1;\n  }\n  return 0;\n}).\nsort((a, b) => {var _b$is_certified, _a$is_certified;return ((_b$is_certified = b == null ? void 0 : b.is_certified) != null ? _b$is_certified : 0) - ((_a$is_certified = a == null ? void 0 : a.is_certified) != null ? _a$is_certified : 0);});\nexport default function DataSourcePanel({ datasource, formData, controls: { datasource: datasourceControl }, actions, width }) {\n  const [dropzones] = useContext(DropzoneContext);\n  const { columns: _columns, metrics, folders: _folders } = datasource;\n  const allowedColumns = useMemo(() => {\n    const validators = Object.values(dropzones);\n    if (!Array.isArray(_columns))\n    return [];\n    return _columns.filter((column) => validators.some((validator) => validator({\n      value: column,\n      type: DndItemType.Column\n    })));\n  }, [dropzones, _columns]);\n  const allowedMetrics = useMemo(() => {\n    const validators = Object.values(dropzones);\n    return metrics.filter((metric) => validators.some((validator) => validator({ value: metric, type: DndItemType.Metric })));\n  }, [dropzones, metrics]);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const searchKeyword = useDebounceValue(inputValue, FAST_DEBOUNCE);\n  const filteredColumns = useMemo(() => {\n    if (!searchKeyword) {\n      return allowedColumns != null ? allowedColumns : [];\n    }\n    return matchSorter(allowedColumns, searchKeyword, {\n      keys: [\n      {\n        key: 'verbose_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: 'column_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: (item) => {var _item$description, _item$expression;return [(_item$description = item == null ? void 0 : item.description) != null ? _item$description : '', (_item$expression = item == null ? void 0 : item.expression) != null ? _item$expression : ''].map((x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || '');},\n        threshold: rankings.CONTAINS,\n        maxRanking: rankings.CONTAINS\n      }],\n\n      keepDiacritics: true\n    });\n  }, [allowedColumns, searchKeyword]);\n  const filteredMetrics = useMemo(() => {\n    if (!searchKeyword) {\n      return allowedMetrics != null ? allowedMetrics : [];\n    }\n    return matchSorter(allowedMetrics, searchKeyword, {\n      keys: [\n      {\n        key: 'verbose_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: 'metric_name',\n        threshold: rankings.CONTAINS\n      },\n      {\n        key: (item) => {var _item$description2, _item$expression2;return [(_item$description2 = item == null ? void 0 : item.description) != null ? _item$description2 : '', (_item$expression2 = item == null ? void 0 : item.expression) != null ? _item$expression2 : ''].map((x) => (x == null ? void 0 : x.replace(/[_\\n\\s]+/g, ' ')) || '');},\n        threshold: rankings.CONTAINS,\n        maxRanking: rankings.CONTAINS\n      }],\n\n      keepDiacritics: true,\n      baseSort: (a, b) => {var _b$item$is_certified, _b$item, _a$item$is_certified, _a$item, _a$rankedValue, _b$rankedValue;return Number((_b$item$is_certified = b == null ? void 0 : (_b$item = b.item) == null ? void 0 : _b$item.is_certified) != null ? _b$item$is_certified : 0) -\n        Number((_a$item$is_certified = a == null ? void 0 : (_a$item = a.item) == null ? void 0 : _a$item.is_certified) != null ? _a$item$is_certified : 0) ||\n        String((_a$rankedValue = a == null ? void 0 : a.rankedValue) != null ? _a$rankedValue : '').localeCompare((_b$rankedValue = b == null ? void 0 : b.rankedValue) != null ? _b$rankedValue : '');}\n    });\n  }, [allowedMetrics, searchKeyword]);\n  const sortedColumns = useMemo(() => sortColumns(filteredColumns), [filteredColumns]);\n  const folders = useMemo(() => transformDatasourceWithFolders(filteredMetrics, sortedColumns, _folders, allowedMetrics, allowedColumns), [_folders, filteredMetrics, sortedColumns]);\n  const showInfoboxCheck = () => {\n    try {\n      if (sessionStorage.getItem('showInfobox') === 'false')\n      return false;\n    }\n    catch (error) {\n\n      // continue regardless of error\n    }return true;\n  };\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery\n  };\n  const datasourceIsSaveable = datasource.type &&\n  saveableDatasets[datasource.type];\n  const mainBody = useMemo(() => _jsxs(_Fragment, { children: [\n    _jsx(Input, { allowClear: true, onChange: (evt) => {\n        setInputValue(evt.target.value);\n      }, value: inputValue, className: \"form-control input-md\", placeholder: t('Search Metrics & Columns') }),\n    _jsxs(\"div\", { className: \"field-selections\", \"data-test\": \"fieldSelections\", children: [\n      datasourceIsSaveable && showInfoboxCheck() && _jsx(StyledInfoboxWrapper, { children:\n        _jsx(Alert, { closable: true, onClose: () => {\n            try {\n              sessionStorage.setItem('showInfobox', 'false');\n            }\n            catch (error) {\n\n              // continue regardless of error\n            }}, type: \"info\", message: \"\", description: _jsxs(_Fragment, { children: [\n            _jsx(\"span\", { role: \"button\", tabIndex: 0, onClick: () => setShowSaveDatasetModal(true), className: \"add-dataset-alert-description\", children:\n              t('Create a dataset') }\n            ),\n            t(' to edit or add columns and metrics.')] }\n          ) }) }\n      ),\n      _jsx(AutoSizer, { children:\n        ({ height }) => _jsx(DatasourceItems, { width: width - BORDER_WIDTH, height: height, folders: folders }) }\n      )] }\n    )] }\n  ), [inputValue, datasourceIsSaveable, width, folders]);\n  return _jsxs(DatasourceContainer, { children: [\n    datasourceIsSaveable && showSaveDatasetModal && _jsx(SaveDatasetModal, { visible: showSaveDatasetModal, onHide: () => setShowSaveDatasetModal(false), buttonTextOnSave: t('Save'), buttonTextOnOverwrite: t('Overwrite'), datasource: getDatasourceAsSaveableDataset(datasource), openWindow: false, formData: formData }),\n\n    _jsx(Control, { ...datasourceControl, name: \"datasource\", actions: actions }),\n    datasource.id != null && mainBody] }\n  );\n}__signature__(DataSourcePanel, \"useContext{[dropzones]}\\nuseMemo{allowedColumns}\\nuseMemo{allowedMetrics}\\nuseState{[showSaveDatasetModal, setShowSaveDatasetModal](false)}\\nuseState{[inputValue, setInputValue]('')}\\nuseDebounceValue{searchKeyword}\\nuseMemo{filteredColumns}\\nuseMemo{filteredMetrics}\\nuseMemo{sortedColumns}\\nuseMemo{folders}\\nuseMemo{mainBody}\", () => [useDebounceValue]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(StyledInfoboxWrapper, \"StyledInfoboxWrapper\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(BORDER_WIDTH, \"BORDER_WIDTH\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(sortColumns, \"sortColumns\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");reactHotLoader.register(DataSourcePanel, \"DataSourcePanel\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useContext","useMemo","useState","css","DatasourceType","styled","t","AutoSizer","matchSorter","rankings","Alert","SaveDatasetModal","getDatasourceAsSaveableDataset","Input","FAST_DEBOUNCE","Control","useDebounceValue","DndItemType","DropzoneContext","DatasourceItems","transformDatasourceWithFolders","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DatasourceContainer","div","theme","colors","grayscale","light5","gridUnit","typography","sizes","s","light1","base","StyledInfoboxWrapper","BORDER_WIDTH","sortColumns","slice","sort","col1","col2","is_dttm","a","b","_b$is_certified","_a$is_certified","is_certified","DataSourcePanel","datasource","formData","controls","datasourceControl","actions","width","dropzones","columns","_columns","metrics","folders","_folders","allowedColumns","validators","Object","values","Array","isArray","filter","column","some","validator","value","type","Column","allowedMetrics","metric","Metric","showSaveDatasetModal","setShowSaveDatasetModal","inputValue","setInputValue","searchKeyword","filteredColumns","keys","key","threshold","CONTAINS","item","_item$description","_item$expression","description","expression","map","x","replace","maxRanking","keepDiacritics","filteredMetrics","_item$description2","_item$expression2","baseSort","_b$item$is_certified","_b$item","_a$item$is_certified","_a$item","_a$rankedValue","_b$rankedValue","Number","String","rankedValue","localeCompare","sortedColumns","showInfoboxCheck","sessionStorage","getItem","error","saveableDatasets","query","Query","saved_query","SavedQuery","datasourceIsSaveable","mainBody","children","allowClear","onChange","evt","target","className","placeholder","closable","onClose","setItem","message","role","tabIndex","onClick","height","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","openWindow","name","id","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/DatasourcePanel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useContext, useMemo, useState } from 'react';\nimport {\n  css,\n  DatasourceType,\n  Metric,\n  QueryFormData,\n  styled,\n  t,\n} from '@superset-ui/core';\n\nimport { ControlConfig } from '@superset-ui/chart-controls';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { matchSorter, rankings } from 'match-sorter';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\nimport { DndItemType } from '../DndItemType';\nimport { DatasourceFolder, DatasourcePanelColumn, DndItemValue } from './types';\nimport { DropzoneContext } from '../ExploreContainer';\nimport { DatasourceItems } from './DatasourceItems';\nimport { transformDatasourceWithFolders } from './transformDatasourceFolders';\n\ninterface DatasourceControl extends Omit<ControlConfig, 'hidden'> {\n  datasource?: IDatasource;\n}\nexport interface IDatasource {\n  metrics: Metric[];\n  columns: DatasourcePanelColumn[];\n  folders?: DatasourceFolder[];\n  id: number;\n  type: DatasourceType;\n  database: {\n    id: number;\n  };\n  sql?: string | null;\n  datasource_name?: string | null;\n  name?: string | null;\n  schema?: string | null;\n}\n\nexport interface Props {\n  datasource: IDatasource;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  // we use this props control force update when this panel resize\n  width: number;\n  formData?: QueryFormData;\n}\n\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${theme.gridUnit}px;\n      overflow: auto;\n      height: 100%;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      display: inline-flex;\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\n\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\n\nconst BORDER_WIDTH = 2;\n\nconst sortColumns = (slice: DatasourcePanelColumn[]) =>\n  [...slice]\n    .sort((col1, col2) => {\n      if (col1?.is_dttm && !col2?.is_dttm) {\n        return -1;\n      }\n      if (col2?.is_dttm && !col1?.is_dttm) {\n        return 1;\n      }\n      return 0;\n    })\n    .sort((a, b) => (b?.is_certified ?? 0) - (a?.is_certified ?? 0));\n\nexport default function DataSourcePanel({\n  datasource,\n  formData,\n  controls: { datasource: datasourceControl },\n  actions,\n  width,\n}: Props) {\n  const [dropzones] = useContext(DropzoneContext);\n  const { columns: _columns, metrics, folders: _folders } = datasource;\n\n  const allowedColumns = useMemo(() => {\n    const validators = Object.values(dropzones);\n    if (!Array.isArray(_columns)) return [];\n    return _columns.filter(column =>\n      validators.some(validator =>\n        validator({\n          value: column as DndItemValue,\n          type: DndItemType.Column,\n        }),\n      ),\n    );\n  }, [dropzones, _columns]);\n\n  const allowedMetrics = useMemo(() => {\n    const validators = Object.values(dropzones);\n    return metrics.filter(metric =>\n      validators.some(validator =>\n        validator({ value: metric, type: DndItemType.Metric }),\n      ),\n    );\n  }, [dropzones, metrics]);\n\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const searchKeyword = useDebounceValue(inputValue, FAST_DEBOUNCE);\n\n  const filteredColumns = useMemo(() => {\n    if (!searchKeyword) {\n      return allowedColumns ?? [];\n    }\n    return matchSorter(allowedColumns, searchKeyword, {\n      keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: 'column_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: item =>\n            [item?.description ?? '', item?.expression ?? ''].map(\n              x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n            ),\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS,\n        },\n      ],\n      keepDiacritics: true,\n    });\n  }, [allowedColumns, searchKeyword]);\n\n  const filteredMetrics = useMemo(() => {\n    if (!searchKeyword) {\n      return allowedMetrics ?? [];\n    }\n    return matchSorter(allowedMetrics, searchKeyword, {\n      keys: [\n        {\n          key: 'verbose_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: 'metric_name',\n          threshold: rankings.CONTAINS,\n        },\n        {\n          key: item =>\n            [item?.description ?? '', item?.expression ?? ''].map(\n              x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n            ),\n          threshold: rankings.CONTAINS,\n          maxRanking: rankings.CONTAINS,\n        },\n      ],\n      keepDiacritics: true,\n      baseSort: (a, b) =>\n        Number(b?.item?.is_certified ?? 0) -\n          Number(a?.item?.is_certified ?? 0) ||\n        String(a?.rankedValue ?? '').localeCompare(b?.rankedValue ?? ''),\n    });\n  }, [allowedMetrics, searchKeyword]);\n\n  const sortedColumns = useMemo(\n    () => sortColumns(filteredColumns),\n    [filteredColumns],\n  );\n\n  const folders = useMemo(\n    () =>\n      transformDatasourceWithFolders(\n        filteredMetrics,\n        sortedColumns,\n        _folders,\n        allowedMetrics,\n        allowedColumns,\n      ),\n    [_folders, filteredMetrics, sortedColumns],\n  );\n\n  const showInfoboxCheck = () => {\n    try {\n      if (sessionStorage.getItem('showInfobox') === 'false') return false;\n    } catch (error) {\n      // continue regardless of error\n    }\n    return true;\n  };\n\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery,\n  };\n\n  const datasourceIsSaveable =\n    datasource.type &&\n    saveableDatasets[datasource.type as keyof typeof saveableDatasets];\n\n  const mainBody = useMemo(\n    () => (\n      <>\n        <Input\n          allowClear\n          onChange={evt => {\n            setInputValue(evt.target.value);\n          }}\n          value={inputValue}\n          className=\"form-control input-md\"\n          placeholder={t('Search Metrics & Columns')}\n        />\n        <div className=\"field-selections\" data-test=\"fieldSelections\">\n          {datasourceIsSaveable && showInfoboxCheck() && (\n            <StyledInfoboxWrapper>\n              <Alert\n                closable\n                onClose={() => {\n                  try {\n                    sessionStorage.setItem('showInfobox', 'false');\n                  } catch (error) {\n                    // continue regardless of error\n                  }\n                }}\n                type=\"info\"\n                message=\"\"\n                description={\n                  <>\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => setShowSaveDatasetModal(true)}\n                      className=\"add-dataset-alert-description\"\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to edit or add columns and metrics.')}\n                  </>\n                }\n              />\n            </StyledInfoboxWrapper>\n          )}\n          <AutoSizer>\n            {({ height }: { height: number }) => (\n              <DatasourceItems\n                width={width - BORDER_WIDTH}\n                height={height}\n                folders={folders}\n              />\n            )}\n          </AutoSizer>\n        </div>\n      </>\n    ),\n    [inputValue, datasourceIsSaveable, width, folders],\n  );\n\n  return (\n    <DatasourceContainer>\n      {datasourceIsSaveable && showSaveDatasetModal && (\n        <SaveDatasetModal\n          visible={showSaveDatasetModal}\n          onHide={() => setShowSaveDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n      {/* @ts-ignore */}\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}