{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getExtensionsRegistry, styled, SupersetClient, t, useTheme, css } from '@superset-ui/core';\nimport { useState, useMemo, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport Loading from 'src/components/Loading';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated, uploadUserPerms } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Icons } from 'src/components/Icons';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport handleResourceExport from 'src/utils/export';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';\nimport UploadDataModal from 'src/features/databases/UploadDataModel';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatabaseDeleteRelatedExtension = extensionsRegistry.get('database.delete.related');\nconst dbConfigExtraExtension = extensionsRegistry.get('databaseconnection.extraOption');\nconst PAGE_SIZE = 25;\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .action-button {\n    display: inline-block;\n    height: 100%;\n  }\n`;\nfunction BooleanDisplay({ value }) {\n  const theme = useTheme();\n  return value ? _jsx(Icons.CheckOutlined, { iconSize: \"s\", iconColor: theme.colors.grayscale.dark1 }) : _jsx(Icons.CloseOutlined, { iconSize: \"s\", iconColor: theme.colors.grayscale.light1 });\n}__signature__(BooleanDisplay, \"useTheme{theme}\", () => [useTheme]);\nfunction DatabaseList({ addDangerToast, addInfoToast, addSuccessToast, user }) {\n  const theme = useTheme();\n  const { state: { loading, resourceCount: databaseCount, resourceCollection: databases }, hasPerm, fetchData, refreshData } = useListViewResource('database', t('database'), addDangerToast);\n  const fullUser = useSelector((state) => state.user);\n  const shouldSyncPermsInAsyncMode = useSelector((state) => {var _state$common;return (_state$common = state.common) == null ? void 0 : _state$common.conf.SYNC_DB_PERMISSIONS_IN_ASYNC_MODE;});\n  const showDatabaseModal = getUrlParam(URL_PARAMS.showDatabaseModal);\n  const [query, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam\n  });\n  const [databaseModalOpen, setDatabaseModalOpen] = useState(showDatabaseModal || false);\n  const [databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting] = useState(null);\n  const [currentDatabase, setCurrentDatabase] = useState(null);\n  const [csvUploadDataModalOpen, setCsvUploadDataModalOpen] = useState(false);\n  const [excelUploadDataModalOpen, setExcelUploadDataModalOpen] = useState(false);\n  const [columnarUploadDataModalOpen, setColumnarUploadDataModalOpen] = useState(false);\n  const [allowUploads, setAllowUploads] = useState(false);\n  const isAdmin = isUserAdmin(fullUser);\n  const showUploads = allowUploads || isAdmin;\n  const [preparingExport, setPreparingExport] = useState(false);\n  const { roles } = fullUser;\n  const { CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS } = useSelector((state) => state.common.conf);\n  useEffect(() => {\n    if (query != null && query.databaseAdded) {\n      setQuery({ databaseAdded: undefined });\n      refreshData();\n    }\n  }, [query, setQuery, refreshData]);\n  const openDatabaseDeleteModal = (database) => SupersetClient.get({\n    endpoint: `/api/v1/database/${database.id}/related_objects/`\n  }).\n  then(({ json = {} }) => {\n    setDatabaseCurrentlyDeleting({\n      ...database,\n      charts: json.charts,\n      dashboards: json.dashboards,\n      sqllab_tab_count: json.sqllab_tab_states.count\n    });\n  }).\n  catch(createErrorHandler((errMsg) => t('An error occurred while fetching database related data: %s', errMsg)));\n  function handleDatabaseDelete(database) {\n    const { id, database_name: dbName } = database;\n    SupersetClient.delete({\n      endpoint: `/api/v1/database/${id}`\n    }).then(() => {\n      refreshData();\n      addSuccessToast(t('Deleted: %s', dbName));\n      // Remove any extension-related data\n      if (dbConfigExtraExtension != null && dbConfigExtraExtension.onDelete) {\n        dbConfigExtraExtension.onDelete(database);\n      }\n      // Delete user-selected db from local storage\n      setItem(LocalStorageKeys.Database, null);\n      // Close delete modal\n      setDatabaseCurrentlyDeleting(null);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', dbName, errMsg))));\n  }\n  function handleDatabaseEditModal({ database = null, modalOpen = false } = {}) {\n    // Set database and modal\n    setCurrentDatabase(database);\n    setDatabaseModalOpen(modalOpen);\n  }\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const { canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(roles, CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS);\n  const isDisabled = isAdmin && !allowUploads;\n  const uploadDropdownMenu = [\n  {\n    label: t('Upload file to database'),\n    childs: [\n    {\n      label: t('Upload CSV'),\n      name: 'Upload CSV file',\n      url: '#',\n      onClick: () => {\n        setCsvUploadDataModalOpen(true);\n      },\n      perm: canUploadCSV && showUploads,\n      disable: isDisabled\n    },\n    {\n      label: t('Upload Excel'),\n      name: 'Upload Excel file',\n      url: '#',\n      onClick: () => {\n        setExcelUploadDataModalOpen(true);\n      },\n      perm: canUploadExcel && showUploads,\n      disable: isDisabled\n    },\n    {\n      label: t('Upload Columnar'),\n      name: 'Upload columnar file',\n      url: '#',\n      onClick: () => {\n        setColumnarUploadDataModalOpen(true);\n      },\n      perm: canUploadColumnar && showUploads,\n      disable: isDisabled\n    }]\n\n  }];\n\n  const hasFileUploadEnabled = () => {\n    const payload = {\n      filters: [\n      { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true }]\n\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`\n    }).then(({ json }) => {var _json$result;\n      // There might be some existing Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload = (json == null ? void 0 : (_json$result = json.result) == null ? void 0 : _json$result.filter((database) => {var _database$engine_info;return database == null ? void 0 : (_database$engine_info = database.engine_information) == null ? void 0 : _database$engine_info.supports_file_upload;})) || [];\n      setAllowUploads((allowedDatabasesWithFileUpload == null ? void 0 : allowedDatabasesWithFileUpload.length) >= 1);\n    });\n  };\n  useEffect(() => hasFileUploadEnabled(), [databaseModalOpen]);\n  const filteredDropDown = uploadDropdownMenu.reduce((prev, cur) => {\n    // eslint-disable-next-line no-param-reassign\n    cur.childs = cur.childs.filter((item) => item.perm);\n    if (!cur.childs.length)\n    return prev;\n    prev.push(cur);\n    return prev;\n  }, []);\n  const menuData = {\n    activeChild: 'Databases',\n    dropDownLinks: filteredDropDown,\n    name: t('Databases')\n  };\n  if (canCreate) {\n    menuData.buttons = [\n    {\n      'data-test': 'btn-create-database',\n      name: _jsxs(_Fragment, { children: [\n        _jsx(Icons.PlusOutlined, { css: css`\n                vertical-align: text-top;\n              `, iconColor: theme.colors.primary.light5, iconSize: \"m\" }),\n        t('Database')] }\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        // Ensure modal will be opened in add mode\n        handleDatabaseEditModal({ modalOpen: true });\n      }\n    }];\n\n  }\n  function handleDatabaseExport(database) {\n    if (database.id === undefined) {\n      return;\n    }\n    handleResourceExport('database', [database.id], () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  }\n  function handleDatabasePermSync(database) {\n    if (shouldSyncPermsInAsyncMode) {\n      addInfoToast(t('Validating connectivity for %s', database.database_name));\n    } else\n    {\n      addInfoToast(t('Syncing permissions for %s', database.database_name));\n    }\n    SupersetClient.post({\n      endpoint: `/api/v1/database/${database.id}/sync_permissions/`\n    }).then(({ response }) => {\n      // Sync request\n      if (response.status === 200) {\n        addSuccessToast(t('Permissions successfully synced for %s', database.database_name));\n      }\n      // Async request\n      else {\n        addInfoToast(t('Syncing permissions for %s in the background', database.database_name));\n      }\n    }, createErrorHandler((errMsg) => addDangerToast(t('An error occurred while syncing permissions for %s: %s', database.database_name, errMsg))));\n  }\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'database_name',\n    Header: t('Name')\n  },\n  {\n    accessor: 'backend',\n    Header: t('Backend'),\n    size: 'lg',\n    disableSortBy: true // TODO: api support for sorting by 'backend'\n  },\n  {\n    accessor: 'allow_run_async',\n    Header: _jsx(Tooltip, { id: \"allow-run-async-header-tooltip\", title: t('Asynchronous query execution'), placement: \"top\", children:\n      _jsx(\"span\", { children: t('AQE') }) }\n    ),\n    Cell: ({ row: { original: { allow_run_async: allowRunAsync } } }) => _jsx(BooleanDisplay, { value: allowRunAsync }),\n    size: 'sm'\n  },\n  {\n    accessor: 'allow_dml',\n    Header: _jsx(Tooltip, { id: \"allow-dml-header-tooltip\", title: t('Allow data manipulation language'), placement: \"top\", children:\n      _jsx(\"span\", { children: t('DML') }) }\n    ),\n    Cell: ({ row: { original: { allow_dml: allowDML } } }) => _jsx(BooleanDisplay, { value: allowDML }),\n    size: 'sm'\n  },\n  {\n    accessor: 'allow_file_upload',\n    Header: t('File upload'),\n    Cell: ({ row: { original: { allow_file_upload: allowFileUpload } } }) => _jsx(BooleanDisplay, { value: allowFileUpload }),\n    size: 'md'\n  },\n  {\n    accessor: 'expose_in_sqllab',\n    Header: t('Expose in SQL Lab'),\n    Cell: ({ row: { original: { expose_in_sqllab: exposeInSqllab } } }) => _jsx(BooleanDisplay, { value: exposeInSqllab }),\n    size: 'md'\n  },\n  {\n    Cell: ({ row: { original: { changed_by: changedBy, changed_on_delta_humanized: changedOn } } }) => _jsx(ModifiedInfo, { date: changedOn, user: changedBy }),\n    Header: t('Last modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl'\n  },\n  {\n    Cell: ({ row: { original } }) => {\n      const handleEdit = () => handleDatabaseEditModal({ database: original, modalOpen: true });\n      const handleDelete = () => openDatabaseDeleteModal(original);\n      const handleExport = () => handleDatabaseExport(original);\n      const handleSync = () => handleDatabasePermSync(original);\n      if (!canEdit && !canDelete && !canExport) {\n        return null;\n      }\n      return _jsxs(Actions, { className: \"actions\", children: [\n        canDelete && _jsx(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", \"data-test\": \"database-delete\", onClick: handleDelete, children:\n          _jsx(Tooltip, { id: \"delete-action-tooltip\", title: t('Delete database'), placement: \"bottom\", children:\n            _jsx(Icons.DeleteOutlined, { iconSize: \"l\" }) }\n          ) }\n        ),\n        canExport && _jsx(Tooltip, { id: \"export-action-tooltip\", title: t('Export'), placement: \"bottom\", children:\n          _jsx(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleExport, children:\n            _jsx(Icons.UploadOutlined, { iconSize: \"l\" }) }\n          ) }\n        ),\n        canEdit && _jsx(Tooltip, { id: \"edit-action-tooltip\", title: t('Edit'), placement: \"bottom\", children:\n          _jsx(\"span\", { role: \"button\", \"data-test\": \"database-edit\", tabIndex: 0, className: \"action-button\", onClick: handleEdit, children:\n            _jsx(Icons.EditOutlined, { \"data-test\": \"edit-alt\", iconSize: \"l\" }) }\n          ) }\n        ),\n        canEdit && _jsx(Tooltip, { id: \"sync-action-tooltip\", title: t('Sync Permissions'), placement: \"bottom\", children:\n          _jsx(\"span\", { role: \"button\", \"data-test\": \"database-sync-perm\", tabIndex: 0, className: \"action-button\", onClick: handleSync, children:\n            _jsx(Icons.SyncOutlined, { iconSize: \"l\" }) }\n          ) }\n        )] }\n      );\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canEdit && !canDelete,\n    disableSortBy: true\n  },\n  {\n    accessor: QueryObjectColumns.ChangedBy,\n    hidden: true\n  }],\n  [canDelete, canEdit, canExport]);\n  const filters = useMemo(() => [\n  {\n    Header: t('Name'),\n    key: 'search',\n    id: 'database_name',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Expose in SQL Lab'),\n    key: 'expose_in_sql_lab',\n    id: 'expose_in_sqllab',\n    input: 'select',\n    operator: FilterOperator.Equals,\n    unfilteredLabel: t('All'),\n    selects: [\n    { label: t('Yes'), value: true },\n    { label: t('No'), value: false }]\n\n  },\n  {\n    Header: _jsx(Tooltip, { id: \"allow-run-async-filter-header-tooltip\", title: t('Asynchronous query execution'), placement: \"top\", children:\n      _jsx(\"span\", { children: t('AQE') }) }\n    ),\n    key: 'allow_run_async',\n    id: 'allow_run_async',\n    input: 'select',\n    operator: FilterOperator.Equals,\n    unfilteredLabel: t('All'),\n    selects: [\n    { label: t('Yes'), value: true },\n    { label: t('No'), value: false }]\n\n  },\n  {\n    Header: t('Modified by'),\n    key: 'changed_by',\n    id: 'changed_by',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('database', 'changed_by', createErrorHandler((errMsg) => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user),\n    paginate: true\n  }],\n  []);\n  return _jsxs(_Fragment, { children: [\n    _jsx(SubMenu, { ...menuData }),\n    _jsx(DatabaseModal, { databaseId: currentDatabase == null ? void 0 : currentDatabase.id, show: databaseModalOpen, onHide: handleDatabaseEditModal, onDatabaseAdd: () => {\n        refreshData();\n      } }),\n    _jsx(UploadDataModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, onHide: () => {\n        setCsvUploadDataModalOpen(false);\n      }, show: csvUploadDataModalOpen, allowedExtensions: CSV_EXTENSIONS, type: \"csv\" }),\n    _jsx(UploadDataModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, onHide: () => {\n        setExcelUploadDataModalOpen(false);\n      }, show: excelUploadDataModalOpen, allowedExtensions: EXCEL_EXTENSIONS, type: \"excel\" }),\n    _jsx(UploadDataModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, onHide: () => {\n        setColumnarUploadDataModalOpen(false);\n      }, show: columnarUploadDataModalOpen, allowedExtensions: COLUMNAR_EXTENSIONS, type: \"columnar\" }),\n    databaseCurrentlyDeleting && _jsx(DeleteModal, { description: _jsxs(_Fragment, { children: [\n        _jsxs(\"p\", { children: [\n          t('The database'), ' ',\n          _jsx(\"b\", { children: databaseCurrentlyDeleting.database_name }), ' ',\n          t('is linked to %s charts that appear on %s dashboards and users have %s SQL Lab tabs using this database open. Are you sure you want to continue? Deleting the database will break those objects.', databaseCurrentlyDeleting.charts.count, databaseCurrentlyDeleting.dashboards.count, databaseCurrentlyDeleting.sqllab_tab_count)] }\n        ),\n        databaseCurrentlyDeleting.dashboards.count >= 1 && _jsxs(_Fragment, { children: [\n          _jsx(\"h4\", { children: t('Affected Dashboards') }),\n          _jsxs(\"ul\", { children: [\n            databaseCurrentlyDeleting.dashboards.result.\n            slice(0, 10).\n            map((result, index) => _jsx(\"li\", { children:\n              _jsx(\"a\", { href: `/superset/dashboard/${result.id}`, target: \"_atRiskItem\", children:\n                result.title }\n              ) }, result.id\n            )),\n            databaseCurrentlyDeleting.dashboards.result.length >\n            10 && _jsx(\"li\", { children:\n              t('... and %s others', databaseCurrentlyDeleting.dashboards.result.length -\n              10) }\n            )] }\n          )] }\n        ),\n        databaseCurrentlyDeleting.charts.count >= 1 && _jsxs(_Fragment, { children: [\n          _jsx(\"h4\", { children: t('Affected Charts') }),\n          _jsxs(\"ul\", { children: [\n            databaseCurrentlyDeleting.charts.result.slice(0, 10).map((result, index) => _jsx(\"li\", { children:\n              _jsx(\"a\", { href: `/explore/?slice_id=${result.id}`, target: \"_atRiskItem\", children:\n                result.slice_name }\n              ) }, result.id\n            )),\n            databaseCurrentlyDeleting.charts.result.length > 10 && _jsx(\"li\", { children:\n              t('... and %s others', databaseCurrentlyDeleting.charts.result.length - 10) }\n            )] }\n          )] }\n        ),\n        DatabaseDeleteRelatedExtension && _jsx(DatabaseDeleteRelatedExtension, { database: databaseCurrentlyDeleting })] }\n      ), onConfirm: () => {\n        if (databaseCurrentlyDeleting) {\n          handleDatabaseDelete(databaseCurrentlyDeleting);\n        }\n      }, onHide: () => setDatabaseCurrentlyDeleting(null), open: true, title: t('Delete Database?') }),\n\n    _jsx(ListView, { className: \"database-list-view\", columns: columns, count: databaseCount, data: databases, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, refreshData: () => {}, pageSize: PAGE_SIZE }),\n\n    preparingExport && _jsx(Loading, {})] }\n  );\n}__signature__(DatabaseList, \"useTheme{theme}\\nuseListViewResource{{ state: { loading, resourceCount: databaseCount, resourceCollection: databases, }, hasPerm, fetchData, refreshData, }}\\nuseSelector{fullUser}\\nuseSelector{shouldSyncPermsInAsyncMode}\\nuseQueryParams{[query, setQuery]}\\nuseState{[databaseModalOpen, setDatabaseModalOpen](showDatabaseModal || false)}\\nuseState{[databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting](null)}\\nuseState{[currentDatabase, setCurrentDatabase](null)}\\nuseState{[csvUploadDataModalOpen, setCsvUploadDataModalOpen](false)}\\nuseState{[excelUploadDataModalOpen, setExcelUploadDataModalOpen](false)}\\nuseState{[columnarUploadDataModalOpen, setColumnarUploadDataModalOpen](false)}\\nuseState{[allowUploads, setAllowUploads](false)}\\nuseState{[preparingExport, setPreparingExport](false)}\\nuseSelector{{ CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS, }}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useTheme, useListViewResource, useSelector, useSelector, useQueryParams, useSelector]);const _default =\nwithToasts(DatabaseList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(DatabaseDeleteRelatedExtension, \"DatabaseDeleteRelatedExtension\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(dbConfigExtraExtension, \"dbConfigExtraExtension\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(Actions, \"Actions\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(BooleanDisplay, \"BooleanDisplay\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(DatabaseList, \"DatabaseList\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getExtensionsRegistry","styled","SupersetClient","t","useTheme","css","useState","useMemo","useEffect","rison","useSelector","useQueryParams","BooleanParam","LocalStorageKeys","setItem","Loading","useListViewResource","createErrorHandler","createFetchRelated","uploadUserPerms","withToasts","SubMenu","DeleteModal","getUrlParam","URL_PARAMS","Tooltip","Icons","isUserAdmin","ListView","FilterOperator","handleResourceExport","DatabaseModal","UploadDataModal","ModifiedInfo","QueryObjectColumns","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","extensionsRegistry","DatabaseDeleteRelatedExtension","get","dbConfigExtraExtension","PAGE_SIZE","Actions","div","theme","colors","grayscale","base","BooleanDisplay","value","CheckOutlined","iconSize","iconColor","dark1","CloseOutlined","light1","__signature__","DatabaseList","addDangerToast","addInfoToast","addSuccessToast","user","state","loading","resourceCount","databaseCount","resourceCollection","databases","hasPerm","fetchData","refreshData","fullUser","shouldSyncPermsInAsyncMode","_state$common","common","conf","SYNC_DB_PERMISSIONS_IN_ASYNC_MODE","showDatabaseModal","query","setQuery","databaseAdded","databaseModalOpen","setDatabaseModalOpen","databaseCurrentlyDeleting","setDatabaseCurrentlyDeleting","currentDatabase","setCurrentDatabase","csvUploadDataModalOpen","setCsvUploadDataModalOpen","excelUploadDataModalOpen","setExcelUploadDataModalOpen","columnarUploadDataModalOpen","setColumnarUploadDataModalOpen","allowUploads","setAllowUploads","isAdmin","showUploads","preparingExport","setPreparingExport","roles","CSV_EXTENSIONS","COLUMNAR_EXTENSIONS","EXCEL_EXTENSIONS","ALLOWED_EXTENSIONS","undefined","openDatabaseDeleteModal","database","endpoint","id","then","json","charts","dashboards","sqllab_tab_count","sqllab_tab_states","count","catch","errMsg","handleDatabaseDelete","database_name","dbName","delete","onDelete","Database","handleDatabaseEditModal","modalOpen","canCreate","canEdit","canDelete","canExport","canUploadCSV","canUploadColumnar","canUploadExcel","isDisabled","uploadDropdownMenu","label","childs","name","url","onClick","perm","disable","hasFileUploadEnabled","payload","filters","col","opr","encode","_json$result","allowedDatabasesWithFileUpload","result","filter","_database$engine_info","engine_information","supports_file_upload","length","filteredDropDown","reduce","prev","cur","item","push","menuData","activeChild","dropDownLinks","buttons","children","PlusOutlined","primary","light5","buttonStyle","handleDatabaseExport","handleDatabasePermSync","post","response","status","initialSort","desc","columns","accessor","Header","size","disableSortBy","title","placement","Cell","row","original","allow_run_async","allowRunAsync","allow_dml","allowDML","allow_file_upload","allowFileUpload","expose_in_sqllab","exposeInSqllab","changed_by","changedBy","changed_on_delta_humanized","changedOn","date","handleEdit","handleDelete","handleExport","handleSync","className","role","tabIndex","DeleteOutlined","UploadOutlined","EditOutlined","SyncOutlined","hidden","ChangedBy","key","input","operator","Contains","Equals","unfilteredLabel","selects","RelationOneMany","fetchSelects","paginate","databaseId","show","onHide","onDatabaseAdd","allowedExtensions","type","description","slice","map","index","href","target","slice_name","onConfirm","open","data","pageSize","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/pages/DatabaseList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  getExtensionsRegistry,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n  css,\n} from '@superset-ui/core';\nimport { useState, useMemo, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport Loading from 'src/components/Loading';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  uploadUserPerms,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Icons } from 'src/components/Icons';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport ListView, { FilterOperator, Filters } from 'src/components/ListView';\nimport handleResourceExport from 'src/utils/export';\nimport { ExtensionConfigs } from 'src/features/home/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport type { MenuObjectProps } from 'src/types/bootstrapTypes';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';\nimport UploadDataModal from 'src/features/databases/UploadDataModel';\nimport { DatabaseObject } from 'src/features/databases/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatabaseDeleteRelatedExtension = extensionsRegistry.get(\n  'database.delete.related',\n);\nconst dbConfigExtraExtension = extensionsRegistry.get(\n  'databaseconnection.extraOption',\n);\n\nconst PAGE_SIZE = 25;\n\ninterface DatabaseDeleteObject extends DatabaseObject {\n  charts: any;\n  dashboards: any;\n  sqllab_tab_count: number;\n}\ninterface DatabaseListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  addInfoToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .action-button {\n    display: inline-block;\n    height: 100%;\n  }\n`;\n\nfunction BooleanDisplay({ value }: { value: Boolean }) {\n  const theme = useTheme();\n  return value ? (\n    <Icons.CheckOutlined\n      iconSize=\"s\"\n      iconColor={theme.colors.grayscale.dark1}\n    />\n  ) : (\n    <Icons.CloseOutlined\n      iconSize=\"s\"\n      iconColor={theme.colors.grayscale.light1}\n    />\n  );\n}\n\nfunction DatabaseList({\n  addDangerToast,\n  addInfoToast,\n  addSuccessToast,\n  user,\n}: DatabaseListProps) {\n  const theme = useTheme();\n  const {\n    state: {\n      loading,\n      resourceCount: databaseCount,\n      resourceCollection: databases,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n  } = useListViewResource<DatabaseObject>(\n    'database',\n    t('database'),\n    addDangerToast,\n  );\n  const fullUser = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const shouldSyncPermsInAsyncMode = useSelector<any, boolean>(\n    state => state.common?.conf.SYNC_DB_PERMISSIONS_IN_ASYNC_MODE,\n  );\n  const showDatabaseModal = getUrlParam(URL_PARAMS.showDatabaseModal);\n\n  const [query, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam,\n  });\n\n  const [databaseModalOpen, setDatabaseModalOpen] = useState<boolean>(\n    showDatabaseModal || false,\n  );\n  const [databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting] =\n    useState<DatabaseDeleteObject | null>(null);\n  const [currentDatabase, setCurrentDatabase] = useState<DatabaseObject | null>(\n    null,\n  );\n  const [csvUploadDataModalOpen, setCsvUploadDataModalOpen] =\n    useState<boolean>(false);\n  const [excelUploadDataModalOpen, setExcelUploadDataModalOpen] =\n    useState<boolean>(false);\n  const [columnarUploadDataModalOpen, setColumnarUploadDataModalOpen] =\n    useState<boolean>(false);\n\n  const [allowUploads, setAllowUploads] = useState<boolean>(false);\n  const isAdmin = isUserAdmin(fullUser);\n  const showUploads = allowUploads || isAdmin;\n\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const { roles } = fullUser;\n  const {\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  } = useSelector<any, ExtensionConfigs>(state => state.common.conf);\n\n  useEffect(() => {\n    if (query?.databaseAdded) {\n      setQuery({ databaseAdded: undefined });\n      refreshData();\n    }\n  }, [query, setQuery, refreshData]);\n\n  const openDatabaseDeleteModal = (database: DatabaseObject) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/database/${database.id}/related_objects/`,\n    })\n      .then(({ json = {} }) => {\n        setDatabaseCurrentlyDeleting({\n          ...database,\n          charts: json.charts,\n          dashboards: json.dashboards,\n          sqllab_tab_count: json.sqllab_tab_states.count,\n        });\n      })\n      .catch(\n        createErrorHandler(errMsg =>\n          t(\n            'An error occurred while fetching database related data: %s',\n            errMsg,\n          ),\n        ),\n      );\n\n  function handleDatabaseDelete(database: DatabaseObject) {\n    const { id, database_name: dbName } = database;\n    SupersetClient.delete({\n      endpoint: `/api/v1/database/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        addSuccessToast(t('Deleted: %s', dbName));\n\n        // Remove any extension-related data\n        if (dbConfigExtraExtension?.onDelete) {\n          dbConfigExtraExtension.onDelete(database);\n        }\n\n        // Delete user-selected db from local storage\n        setItem(LocalStorageKeys.Database, null);\n\n        // Close delete modal\n        setDatabaseCurrentlyDeleting(null);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', dbName, errMsg)),\n      ),\n    );\n  }\n\n  function handleDatabaseEditModal({\n    database = null,\n    modalOpen = false,\n  }: { database?: DatabaseObject | null; modalOpen?: boolean } = {}) {\n    // Set database and modal\n    setCurrentDatabase(database);\n    setDatabaseModalOpen(modalOpen);\n  }\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const { canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(\n    roles,\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  );\n\n  const isDisabled = isAdmin && !allowUploads;\n\n  const uploadDropdownMenu = [\n    {\n      label: t('Upload file to database'),\n      childs: [\n        {\n          label: t('Upload CSV'),\n          name: 'Upload CSV file',\n          url: '#',\n          onClick: () => {\n            setCsvUploadDataModalOpen(true);\n          },\n          perm: canUploadCSV && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload Excel'),\n          name: 'Upload Excel file',\n          url: '#',\n          onClick: () => {\n            setExcelUploadDataModalOpen(true);\n          },\n          perm: canUploadExcel && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload Columnar'),\n          name: 'Upload columnar file',\n          url: '#',\n          onClick: () => {\n            setColumnarUploadDataModalOpen(true);\n          },\n          perm: canUploadColumnar && showUploads,\n          disable: isDisabled,\n        },\n      ],\n    },\n  ];\n\n  const hasFileUploadEnabled = () => {\n    const payload = {\n      filters: [\n        { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true },\n      ],\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`,\n    }).then(({ json }: Record<string, any>) => {\n      // There might be some existing Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload =\n        json?.result?.filter(\n          (database: any) => database?.engine_information?.supports_file_upload,\n        ) || [];\n      setAllowUploads(allowedDatabasesWithFileUpload?.length >= 1);\n    });\n  };\n\n  useEffect(() => hasFileUploadEnabled(), [databaseModalOpen]);\n\n  const filteredDropDown = uploadDropdownMenu.reduce((prev, cur) => {\n    // eslint-disable-next-line no-param-reassign\n    cur.childs = cur.childs.filter(item => item.perm);\n    if (!cur.childs.length) return prev;\n    prev.push(cur);\n    return prev;\n  }, [] as MenuObjectProps[]);\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Databases',\n    dropDownLinks: filteredDropDown,\n    name: t('Databases'),\n  };\n\n  if (canCreate) {\n    menuData.buttons = [\n      {\n        'data-test': 'btn-create-database',\n        name: (\n          <>\n            <Icons.PlusOutlined\n              css={css`\n                vertical-align: text-top;\n              `}\n              iconColor={theme.colors.primary.light5}\n              iconSize=\"m\"\n            />\n            {t('Database')}\n          </>\n        ),\n        buttonStyle: 'primary',\n        onClick: () => {\n          // Ensure modal will be opened in add mode\n          handleDatabaseEditModal({ modalOpen: true });\n        },\n      },\n    ];\n  }\n\n  function handleDatabaseExport(database: DatabaseObject) {\n    if (database.id === undefined) {\n      return;\n    }\n\n    handleResourceExport('database', [database.id], () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  }\n\n  function handleDatabasePermSync(database: DatabaseObject) {\n    if (shouldSyncPermsInAsyncMode) {\n      addInfoToast(t('Validating connectivity for %s', database.database_name));\n    } else {\n      addInfoToast(t('Syncing permissions for %s', database.database_name));\n    }\n    SupersetClient.post({\n      endpoint: `/api/v1/database/${database.id}/sync_permissions/`,\n    }).then(\n      ({ response }) => {\n        // Sync request\n        if (response.status === 200) {\n          addSuccessToast(\n            t('Permissions successfully synced for %s', database.database_name),\n          );\n        }\n        // Async request\n        else {\n          addInfoToast(\n            t(\n              'Syncing permissions for %s in the background',\n              database.database_name,\n            ),\n          );\n        }\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t(\n            'An error occurred while syncing permissions for %s: %s',\n            database.database_name,\n            errMsg,\n          ),\n        ),\n      ),\n    );\n  }\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'database_name',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'backend',\n        Header: t('Backend'),\n        size: 'lg',\n        disableSortBy: true, // TODO: api support for sorting by 'backend'\n      },\n      {\n        accessor: 'allow_run_async',\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_run_async: allowRunAsync },\n          },\n        }: {\n          row: { original: { allow_run_async: boolean } };\n        }) => <BooleanDisplay value={allowRunAsync} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_dml',\n        Header: (\n          <Tooltip\n            id=\"allow-dml-header-tooltip\"\n            title={t('Allow data manipulation language')}\n            placement=\"top\"\n          >\n            <span>{t('DML')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_dml: allowDML },\n          },\n        }: any) => <BooleanDisplay value={allowDML} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_file_upload',\n        Header: t('File upload'),\n        Cell: ({\n          row: {\n            original: { allow_file_upload: allowFileUpload },\n          },\n        }: any) => <BooleanDisplay value={allowFileUpload} />,\n        size: 'md',\n      },\n      {\n        accessor: 'expose_in_sqllab',\n        Header: t('Expose in SQL Lab'),\n        Cell: ({\n          row: {\n            original: { expose_in_sqllab: exposeInSqllab },\n          },\n        }: any) => <BooleanDisplay value={exposeInSqllab} />,\n        size: 'md',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_by: changedBy,\n              changed_on_delta_humanized: changedOn,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () =>\n            handleDatabaseEditModal({ database: original, modalOpen: true });\n          const handleDelete = () => openDatabaseDeleteModal(original);\n          const handleExport = () => handleDatabaseExport(original);\n          const handleSync = () => handleDatabasePermSync(original);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className=\"action-button\"\n                  data-test=\"database-delete\"\n                  onClick={handleDelete}\n                >\n                  <Tooltip\n                    id=\"delete-action-tooltip\"\n                    title={t('Delete database')}\n                    placement=\"bottom\"\n                  >\n                    <Icons.DeleteOutlined iconSize=\"l\" />\n                  </Tooltip>\n                </span>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.UploadOutlined iconSize=\"l\" />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    data-test=\"database-edit\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleEdit}\n                  >\n                    <Icons.EditOutlined data-test=\"edit-alt\" iconSize=\"l\" />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"sync-action-tooltip\"\n                  title={t('Sync Permissions')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    data-test=\"database-sync-perm\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleSync}\n                  >\n                    <Icons.SyncOutlined iconSize=\"l\" />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canDelete, canEdit, canExport],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'database_name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Expose in SQL Lab'),\n        key: 'expose_in_sql_lab',\n        id: 'expose_in_sqllab',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-filter-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        key: 'allow_run_async',\n        id: 'allow_run_async',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'database',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <DatabaseModal\n        databaseId={currentDatabase?.id}\n        show={databaseModalOpen}\n        onHide={handleDatabaseEditModal}\n        onDatabaseAdd={() => {\n          refreshData();\n        }}\n      />\n      <UploadDataModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onHide={() => {\n          setCsvUploadDataModalOpen(false);\n        }}\n        show={csvUploadDataModalOpen}\n        allowedExtensions={CSV_EXTENSIONS}\n        type=\"csv\"\n      />\n      <UploadDataModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onHide={() => {\n          setExcelUploadDataModalOpen(false);\n        }}\n        show={excelUploadDataModalOpen}\n        allowedExtensions={EXCEL_EXTENSIONS}\n        type=\"excel\"\n      />\n      <UploadDataModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onHide={() => {\n          setColumnarUploadDataModalOpen(false);\n        }}\n        show={columnarUploadDataModalOpen}\n        allowedExtensions={COLUMNAR_EXTENSIONS}\n        type=\"columnar\"\n      />\n      {databaseCurrentlyDeleting && (\n        <DeleteModal\n          description={\n            <>\n              <p>\n                {t('The database')}{' '}\n                <b>{databaseCurrentlyDeleting.database_name}</b>{' '}\n                {t(\n                  'is linked to %s charts that appear on %s dashboards and users have %s SQL Lab tabs using this database open. Are you sure you want to continue? Deleting the database will break those objects.',\n                  databaseCurrentlyDeleting.charts.count,\n                  databaseCurrentlyDeleting.dashboards.count,\n                  databaseCurrentlyDeleting.sqllab_tab_count,\n                )}\n              </p>\n              {databaseCurrentlyDeleting.dashboards.count >= 1 && (\n                <>\n                  <h4>{t('Affected Dashboards')}</h4>\n                  <ul>\n                    {databaseCurrentlyDeleting.dashboards.result\n                      .slice(0, 10)\n                      .map(\n                        (\n                          result: { id: number; title: string },\n                          index: number,\n                        ) => (\n                          <li key={result.id}>\n                            <a\n                              href={`/superset/dashboard/${result.id}`}\n                              target=\"_atRiskItem\"\n                            >\n                              {result.title}\n                            </a>\n                          </li>\n                        ),\n                      )}\n                    {databaseCurrentlyDeleting.dashboards.result.length >\n                      10 && (\n                      <li>\n                        {t(\n                          '... and %s others',\n                          databaseCurrentlyDeleting.dashboards.result.length -\n                            10,\n                        )}\n                      </li>\n                    )}\n                  </ul>\n                </>\n              )}\n              {databaseCurrentlyDeleting.charts.count >= 1 && (\n                <>\n                  <h4>{t('Affected Charts')}</h4>\n                  <ul>\n                    {databaseCurrentlyDeleting.charts.result.slice(0, 10).map(\n                      (\n                        result: {\n                          id: number;\n                          slice_name: string;\n                        },\n                        index: number,\n                      ) => (\n                        <li key={result.id}>\n                          <a\n                            href={`/explore/?slice_id=${result.id}`}\n                            target=\"_atRiskItem\"\n                          >\n                            {result.slice_name}\n                          </a>\n                        </li>\n                      ),\n                    )}\n                    {databaseCurrentlyDeleting.charts.result.length > 10 && (\n                      <li>\n                        {t(\n                          '... and %s others',\n                          databaseCurrentlyDeleting.charts.result.length - 10,\n                        )}\n                      </li>\n                    )}\n                  </ul>\n                </>\n              )}\n              {DatabaseDeleteRelatedExtension && (\n                <DatabaseDeleteRelatedExtension\n                  database={databaseCurrentlyDeleting}\n                />\n              )}\n            </>\n          }\n          onConfirm={() => {\n            if (databaseCurrentlyDeleting) {\n              handleDatabaseDelete(databaseCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setDatabaseCurrentlyDeleting(null)}\n          open\n          title={t('Delete Database?')}\n        />\n      )}\n\n      <ListView<DatabaseObject>\n        className=\"database-list-view\"\n        columns={columns}\n        count={databaseCount}\n        data={databases}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={() => {}}\n        pageSize={PAGE_SIZE}\n      />\n\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(DatabaseList);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}