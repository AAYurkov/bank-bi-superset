{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useReducer, useCallback, useMemo } from 'react';\nimport { t, getClientErrorObject, VizType } from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addReport, editReport } from 'src/features/reports/ReportModal/actions';\nimport Alert from 'src/components/Alert';\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport LabeledErrorBoundInput from 'src/components/Form/LabeledErrorBoundInput';\nimport { Icons } from 'src/components/Icons';\nimport { Radio } from 'src/components/Radio';\nimport { Input } from 'src/components/Input';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { NotificationFormats } from 'src/features/reports/types';\nimport { reportSelector } from 'src/views/CRUD/hooks';\nimport { StyledInputContainer } from 'src/features/alerts/AlertReportModal';\nimport { CreationMethod } from './HeaderReportDropdown';\nimport { antDErrorAlertStyles, CustomWidthHeaderStyle, StyledModal, StyledTopSection, StyledBottomSection, StyledIconWrapper, StyledScheduleTitle, StyledCronPicker, StyledCronError, noBottomMargin, StyledFooterButton, TimezoneHeaderStyle, SectionHeaderStyle, StyledMessageContentTitle } from './styles';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst TEXT_BASED_VISUALIZATION_TYPES = [\nVizType.PivotTable,\n'table',\nVizType.PairedTTest];\n\nconst INITIAL_STATE = {\n  crontab: '0 12 * * 1'\n};\n// Same instance to be used in useEffects\nconst EMPTY_OBJECT = {};\nfunction ReportModal({ onHide, show = false, dashboardId, chart, userId, userEmail, ccEmail, bccEmail, creationMethod, dashboardName, chartName }) {var _chart$sliceFormData;\n  const vizType = chart == null ? void 0 : (_chart$sliceFormData = chart.sliceFormData) == null ? void 0 : _chart$sliceFormData.viz_type;\n  const isChart = !!chart;\n  const isTextBasedChart = isChart && vizType && TEXT_BASED_VISUALIZATION_TYPES.includes(vizType);\n  const defaultNotificationFormat = isTextBasedChart ?\n  NotificationFormats.Text :\n  NotificationFormats.PNG;\n  const entityName = dashboardName || chartName;\n  const initialState = useMemo(() => ({\n    ...INITIAL_STATE,\n    name: entityName ?\n    t('Weekly Report for %s', entityName) :\n    t('Weekly Report')\n  }), [entityName]);\n  const reportReducer = useCallback((state, action) => {\n    if (action === 'reset') {\n      return initialState;\n    }\n    return {\n      ...state,\n      ...action\n    };\n  }, [initialState]);\n  const [currentReport, setCurrentReport] = useReducer(reportReducer, initialState);\n  const [cronError, setCronError] = useState();\n  const dispatch = useDispatch();\n  // Report fetch logic\n  const report = useSelector((state) => {\n    const resourceType = dashboardId ?\n    CreationMethod.Dashboards :\n    CreationMethod.Charts;\n    return reportSelector(state, resourceType, dashboardId || (chart == null ? void 0 : chart.id)) ||\n    EMPTY_OBJECT;\n  });\n  const isEditMode = report && Object.keys(report).length;\n  useEffect(() => {\n    if (isEditMode) {\n      setCurrentReport(report);\n    } else\n    {\n      setCurrentReport('reset');\n    }\n  }, [isEditMode, report]);\n  const onSave = async () => {\n    // Create new Report\n    const newReportValues = {\n      type: 'Report',\n      active: true,\n      force_screenshot: false,\n      custom_width: currentReport.custom_width,\n      creation_method: creationMethod,\n      dashboard: dashboardId,\n      chart: chart == null ? void 0 : chart.id,\n      owners: [userId],\n      recipients: [\n      {\n        recipient_config_json: {\n          target: userEmail,\n          ccTarget: ccEmail,\n          bccTarget: bccEmail\n        },\n        type: 'Email'\n      }],\n\n      name: currentReport.name,\n      description: currentReport.description,\n      crontab: currentReport.crontab,\n      report_format: currentReport.report_format || defaultNotificationFormat,\n      timezone: currentReport.timezone\n    };\n    setCurrentReport({ isSubmitting: true, error: undefined });\n    try {\n      if (isEditMode) {\n        await dispatch(editReport(currentReport.id, newReportValues));\n      } else\n      {\n        await dispatch(addReport(newReportValues));\n      }\n      onHide();\n    }\n    catch (e) {\n      const { error } = await getClientErrorObject(e);\n      setCurrentReport({ error });\n    }\n    setCurrentReport({ isSubmitting: false });\n  };\n  const wrappedTitle = _jsxs(StyledIconWrapper, { children: [\n    _jsx(Icons.CalendarOutlined, {}),\n    _jsx(\"span\", { className: \"text\", children:\n      isEditMode ? t('Edit email report') : t('Schedule a new email report') }\n    )] }\n  );\n  const renderModalFooter = _jsxs(_Fragment, { children: [\n    _jsx(StyledFooterButton, { onClick: onHide, children:\n      t('Cancel') }, \"back\"\n    ),\n    _jsx(StyledFooterButton, { buttonStyle: \"primary\", onClick: onSave, disabled: !currentReport.name, loading: currentReport.isSubmitting, children:\n      isEditMode ? t('Save') : t('Add') }, \"submit\"\n    )] }\n  );\n  const renderMessageContentSection = _jsxs(_Fragment, { children: [\n    _jsx(StyledMessageContentTitle, { children:\n      _jsx(\"h4\", { children: t('Message content') }) }\n    ),\n    _jsx(\"div\", { className: \"inline-container\", children:\n      _jsx(Radio.GroupWrapper, { spaceConfig: {\n          direction: 'vertical',\n          size: 'middle',\n          align: 'start',\n          wrap: false\n        }, onChange: (event) => {\n          setCurrentReport({ report_format: event.target.value });\n        }, value: currentReport.report_format || defaultNotificationFormat, options: [\n        {\n          label: t('Text embedded in email'),\n          value: NotificationFormats.Text\n        },\n        {\n          label: t('Image (PNG) embedded in email'),\n          value: NotificationFormats.PNG\n        },\n        {\n          label: t('Formatted CSV attached in email'),\n          value: NotificationFormats.CSV\n        }] }\n      ) }\n    )] }\n  );\n  const renderCustomWidthSection = _jsxs(StyledInputContainer, { children: [\n    _jsx(\"div\", { className: \"control-label\", css: CustomWidthHeaderStyle, children:\n      t('Screenshot width') }\n    ),\n    _jsx(\"div\", { className: \"input-container\", children:\n      _jsx(Input, { type: \"number\", name: \"custom_width\", value: (currentReport == null ? void 0 : currentReport.custom_width) || '', placeholder: t('Input custom width in pixels'), onChange: (event) => {\n          setCurrentReport({\n            custom_width: parseInt(event.target.value, 10) || null\n          });\n        } }) }\n    )] }\n  );\n  return _jsxs(StyledModal, { show: show, onHide: onHide, title: wrappedTitle, footer: renderModalFooter, width: \"432\", centered: true, children: [\n    _jsxs(StyledTopSection, { children: [\n      _jsx(LabeledErrorBoundInput, { id: \"name\", name: \"name\", value: currentReport.name || '', placeholder: initialState.name, required: true, validationMethods: {\n          onChange: ({ target }) => setCurrentReport({ name: target.value })\n        }, label: t('Report Name'), \"data-test\": \"report-name-test\" }),\n      _jsx(LabeledErrorBoundInput, { id: \"description\", name: \"description\", value: (currentReport == null ? void 0 : currentReport.description) || '', validationMethods: {\n          onChange: ({ target }) => {\n            setCurrentReport({ description: target.value });\n          }\n        }, label: t('Description'), placeholder: t('Include a description that will be sent with your report'), css: noBottomMargin, \"data-test\": \"report-description-test\" })] }\n    ),\n\n    _jsxs(StyledBottomSection, { children: [\n      _jsxs(StyledScheduleTitle, { children: [\n        _jsx(\"h4\", { css: (theme) => SectionHeaderStyle(theme), children:\n          t('Schedule') }\n        ),\n        _jsx(\"p\", { children: t('The report will be sent to your email at') })] }\n      ),\n\n      _jsx(StyledCronPicker, { clearButton: false, value: currentReport.crontab || '0 12 * * 1', setValue: (newValue) => {\n          setCurrentReport({ crontab: newValue });\n        }, onError: setCronError }),\n      _jsx(StyledCronError, { children: cronError }),\n      _jsx(\"div\", { className: \"control-label\", css: (theme) => TimezoneHeaderStyle(theme), children:\n        t('Timezone') }\n      ),\n      _jsx(TimezoneSelector, { timezone: currentReport.timezone, onTimezoneChange: (value) => {\n          setCurrentReport({ timezone: value });\n        } }),\n      isChart && renderMessageContentSection,\n      (!isChart || !isTextBasedChart) && renderCustomWidthSection] }\n    ),\n    currentReport.error && _jsx(Alert, { type: \"error\", css: (theme) => antDErrorAlertStyles(theme), message: isEditMode ?\n      t('Failed to update report') :\n      t('Failed to create report'), description: currentReport.error })] }\n  );\n}__signature__(ReportModal, \"useMemo{initialState}\\nuseCallback{reportReducer}\\nuseReducer{[currentReport, setCurrentReport](initialState)}\\nuseState{[cronError, setCronError]}\\nuseDispatch{dispatch}\\nuseSelector{report}\\nuseEffect{}\", () => [useDispatch, useSelector]);const _default =\nwithToasts(ReportModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TEXT_BASED_VISUALIZATION_TYPES, \"TEXT_BASED_VISUALIZATION_TYPES\", \"/Users/aryurkov/superset/superset-frontend/src/features/reports/ReportModal/index.tsx\");reactHotLoader.register(INITIAL_STATE, \"INITIAL_STATE\", \"/Users/aryurkov/superset/superset-frontend/src/features/reports/ReportModal/index.tsx\");reactHotLoader.register(EMPTY_OBJECT, \"EMPTY_OBJECT\", \"/Users/aryurkov/superset/superset-frontend/src/features/reports/ReportModal/index.tsx\");reactHotLoader.register(ReportModal, \"ReportModal\", \"/Users/aryurkov/superset/superset-frontend/src/features/reports/ReportModal/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/features/reports/ReportModal/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useEffect","useReducer","useCallback","useMemo","t","getClientErrorObject","VizType","useDispatch","useSelector","addReport","editReport","Alert","TimezoneSelector","LabeledErrorBoundInput","Icons","Radio","Input","withToasts","NotificationFormats","reportSelector","StyledInputContainer","CreationMethod","antDErrorAlertStyles","CustomWidthHeaderStyle","StyledModal","StyledTopSection","StyledBottomSection","StyledIconWrapper","StyledScheduleTitle","StyledCronPicker","StyledCronError","noBottomMargin","StyledFooterButton","TimezoneHeaderStyle","SectionHeaderStyle","StyledMessageContentTitle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TEXT_BASED_VISUALIZATION_TYPES","PivotTable","PairedTTest","INITIAL_STATE","crontab","EMPTY_OBJECT","ReportModal","onHide","show","dashboardId","chart","userId","userEmail","ccEmail","bccEmail","creationMethod","dashboardName","chartName","_chart$sliceFormData","vizType","sliceFormData","viz_type","isChart","isTextBasedChart","includes","defaultNotificationFormat","Text","PNG","entityName","initialState","name","reportReducer","state","action","currentReport","setCurrentReport","cronError","setCronError","dispatch","report","resourceType","Dashboards","Charts","id","isEditMode","Object","keys","length","onSave","newReportValues","type","active","force_screenshot","custom_width","creation_method","dashboard","owners","recipients","recipient_config_json","target","ccTarget","bccTarget","description","report_format","timezone","isSubmitting","error","undefined","e","wrappedTitle","children","CalendarOutlined","className","renderModalFooter","onClick","buttonStyle","disabled","loading","renderMessageContentSection","GroupWrapper","spaceConfig","direction","size","align","wrap","onChange","event","value","options","label","CSV","renderCustomWidthSection","css","placeholder","parseInt","title","footer","width","centered","required","validationMethods","theme","clearButton","setValue","newValue","onError","onTimezoneChange","message","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/features/reports/ReportModal/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useState,\n  useEffect,\n  useReducer,\n  useCallback,\n  useMemo,\n  ChangeEvent,\n} from 'react';\n\nimport {\n  t,\n  SupersetTheme,\n  getClientErrorObject,\n  VizType,\n} from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addReport,\n  editReport,\n} from 'src/features/reports/ReportModal/actions';\nimport Alert from 'src/components/Alert';\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport LabeledErrorBoundInput from 'src/components/Form/LabeledErrorBoundInput';\nimport { Icons } from 'src/components/Icons';\nimport { CronError } from 'src/components/CronPicker';\nimport { Radio, RadioChangeEvent } from 'src/components/Radio';\nimport { Input } from 'src/components/Input';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { ChartState } from 'src/explore/types';\nimport {\n  ReportCreationMethod,\n  ReportObject,\n  NotificationFormats,\n} from 'src/features/reports/types';\nimport { reportSelector } from 'src/views/CRUD/hooks';\nimport { StyledInputContainer } from 'src/features/alerts/AlertReportModal';\nimport { CreationMethod } from './HeaderReportDropdown';\nimport {\n  antDErrorAlertStyles,\n  CustomWidthHeaderStyle,\n  StyledModal,\n  StyledTopSection,\n  StyledBottomSection,\n  StyledIconWrapper,\n  StyledScheduleTitle,\n  StyledCronPicker,\n  StyledCronError,\n  noBottomMargin,\n  StyledFooterButton,\n  TimezoneHeaderStyle,\n  SectionHeaderStyle,\n  StyledMessageContentTitle,\n} from './styles';\n\ninterface ReportProps {\n  onHide: () => {};\n  addDangerToast: (msg: string) => void;\n  show: boolean;\n  userId: number;\n  userEmail: string;\n  ccEmail: string;\n  bccEmail: string;\n  chart?: ChartState;\n  chartName?: string;\n  dashboardId?: number;\n  dashboardName?: string;\n  creationMethod: ReportCreationMethod;\n  props: any;\n}\n\nconst TEXT_BASED_VISUALIZATION_TYPES = [\n  VizType.PivotTable,\n  'table',\n  VizType.PairedTTest,\n];\n\nconst INITIAL_STATE = {\n  crontab: '0 12 * * 1',\n};\n\ntype ReportObjectState = Partial<ReportObject> & {\n  error?: string;\n  /**\n   * Is submitting changes to the backend.\n   */\n  isSubmitting?: boolean;\n};\n\n// Same instance to be used in useEffects\nconst EMPTY_OBJECT = {};\n\nfunction ReportModal({\n  onHide,\n  show = false,\n  dashboardId,\n  chart,\n  userId,\n  userEmail,\n  ccEmail,\n  bccEmail,\n  creationMethod,\n  dashboardName,\n  chartName,\n}: ReportProps) {\n  const vizType = chart?.sliceFormData?.viz_type;\n  const isChart = !!chart;\n  const isTextBasedChart =\n    isChart && vizType && TEXT_BASED_VISUALIZATION_TYPES.includes(vizType);\n  const defaultNotificationFormat = isTextBasedChart\n    ? NotificationFormats.Text\n    : NotificationFormats.PNG;\n  const entityName = dashboardName || chartName;\n  const initialState: ReportObjectState = useMemo(\n    () => ({\n      ...INITIAL_STATE,\n      name: entityName\n        ? t('Weekly Report for %s', entityName)\n        : t('Weekly Report'),\n    }),\n    [entityName],\n  );\n\n  const reportReducer = useCallback(\n    (state: ReportObjectState | null, action: 'reset' | ReportObjectState) => {\n      if (action === 'reset') {\n        return initialState;\n      }\n      return {\n        ...state,\n        ...action,\n      };\n    },\n    [initialState],\n  );\n\n  const [currentReport, setCurrentReport] = useReducer(\n    reportReducer,\n    initialState,\n  );\n  const [cronError, setCronError] = useState<CronError>();\n\n  const dispatch = useDispatch();\n  // Report fetch logic\n  const report = useSelector<any, ReportObject>(state => {\n    const resourceType = dashboardId\n      ? CreationMethod.Dashboards\n      : CreationMethod.Charts;\n    return (\n      reportSelector(state, resourceType, dashboardId || chart?.id) ||\n      EMPTY_OBJECT\n    );\n  });\n  const isEditMode = report && Object.keys(report).length;\n\n  useEffect(() => {\n    if (isEditMode) {\n      setCurrentReport(report);\n    } else {\n      setCurrentReport('reset');\n    }\n  }, [isEditMode, report]);\n\n  const onSave = async () => {\n    // Create new Report\n    const newReportValues: Partial<ReportObject> = {\n      type: 'Report',\n      active: true,\n      force_screenshot: false,\n      custom_width: currentReport.custom_width,\n      creation_method: creationMethod,\n      dashboard: dashboardId,\n      chart: chart?.id,\n      owners: [userId],\n      recipients: [\n        {\n          recipient_config_json: {\n            target: userEmail,\n            ccTarget: ccEmail,\n            bccTarget: bccEmail,\n          },\n          type: 'Email',\n        },\n      ],\n      name: currentReport.name,\n      description: currentReport.description,\n      crontab: currentReport.crontab,\n      report_format: currentReport.report_format || defaultNotificationFormat,\n      timezone: currentReport.timezone,\n    };\n\n    setCurrentReport({ isSubmitting: true, error: undefined });\n    try {\n      if (isEditMode) {\n        await dispatch(\n          editReport(currentReport.id, newReportValues as ReportObject),\n        );\n      } else {\n        await dispatch(addReport(newReportValues as ReportObject));\n      }\n      onHide();\n    } catch (e) {\n      const { error } = await getClientErrorObject(e);\n      setCurrentReport({ error });\n    }\n    setCurrentReport({ isSubmitting: false });\n  };\n\n  const wrappedTitle = (\n    <StyledIconWrapper>\n      <Icons.CalendarOutlined />\n      <span className=\"text\">\n        {isEditMode ? t('Edit email report') : t('Schedule a new email report')}\n      </span>\n    </StyledIconWrapper>\n  );\n\n  const renderModalFooter = (\n    <>\n      <StyledFooterButton key=\"back\" onClick={onHide}>\n        {t('Cancel')}\n      </StyledFooterButton>\n      <StyledFooterButton\n        key=\"submit\"\n        buttonStyle=\"primary\"\n        onClick={onSave}\n        disabled={!currentReport.name}\n        loading={currentReport.isSubmitting}\n      >\n        {isEditMode ? t('Save') : t('Add')}\n      </StyledFooterButton>\n    </>\n  );\n\n  const renderMessageContentSection = (\n    <>\n      <StyledMessageContentTitle>\n        <h4>{t('Message content')}</h4>\n      </StyledMessageContentTitle>\n      <div className=\"inline-container\">\n        <Radio.GroupWrapper\n          spaceConfig={{\n            direction: 'vertical',\n            size: 'middle',\n            align: 'start',\n            wrap: false,\n          }}\n          onChange={(event: RadioChangeEvent) => {\n            setCurrentReport({ report_format: event.target.value });\n          }}\n          value={currentReport.report_format || defaultNotificationFormat}\n          options={[\n            {\n              label: t('Text embedded in email'),\n              value: NotificationFormats.Text,\n            },\n            {\n              label: t('Image (PNG) embedded in email'),\n              value: NotificationFormats.PNG,\n            },\n            {\n              label: t('Formatted CSV attached in email'),\n              value: NotificationFormats.CSV,\n            },\n          ]}\n        />\n      </div>\n    </>\n  );\n  const renderCustomWidthSection = (\n    <StyledInputContainer>\n      <div className=\"control-label\" css={CustomWidthHeaderStyle}>\n        {t('Screenshot width')}\n      </div>\n      <div className=\"input-container\">\n        <Input\n          type=\"number\"\n          name=\"custom_width\"\n          value={currentReport?.custom_width || ''}\n          placeholder={t('Input custom width in pixels')}\n          onChange={(event: ChangeEvent<HTMLInputElement>) => {\n            setCurrentReport({\n              custom_width: parseInt(event.target.value, 10) || null,\n            });\n          }}\n        />\n      </div>\n    </StyledInputContainer>\n  );\n\n  return (\n    <StyledModal\n      show={show}\n      onHide={onHide}\n      title={wrappedTitle}\n      footer={renderModalFooter}\n      width=\"432\"\n      centered\n    >\n      <StyledTopSection>\n        <LabeledErrorBoundInput\n          id=\"name\"\n          name=\"name\"\n          value={currentReport.name || ''}\n          placeholder={initialState.name}\n          required\n          validationMethods={{\n            onChange: ({ target }: { target: HTMLInputElement }) =>\n              setCurrentReport({ name: target.value }),\n          }}\n          label={t('Report Name')}\n          data-test=\"report-name-test\"\n        />\n        <LabeledErrorBoundInput\n          id=\"description\"\n          name=\"description\"\n          value={currentReport?.description || ''}\n          validationMethods={{\n            onChange: ({ target }: { target: HTMLInputElement }) => {\n              setCurrentReport({ description: target.value });\n            },\n          }}\n          label={t('Description')}\n          placeholder={t(\n            'Include a description that will be sent with your report',\n          )}\n          css={noBottomMargin}\n          data-test=\"report-description-test\"\n        />\n      </StyledTopSection>\n\n      <StyledBottomSection>\n        <StyledScheduleTitle>\n          <h4 css={(theme: SupersetTheme) => SectionHeaderStyle(theme)}>\n            {t('Schedule')}\n          </h4>\n          <p>{t('The report will be sent to your email at')}</p>\n        </StyledScheduleTitle>\n\n        <StyledCronPicker\n          clearButton={false}\n          value={currentReport.crontab || '0 12 * * 1'}\n          setValue={(newValue: string) => {\n            setCurrentReport({ crontab: newValue });\n          }}\n          onError={setCronError}\n        />\n        <StyledCronError>{cronError}</StyledCronError>\n        <div\n          className=\"control-label\"\n          css={(theme: SupersetTheme) => TimezoneHeaderStyle(theme)}\n        >\n          {t('Timezone')}\n        </div>\n        <TimezoneSelector\n          timezone={currentReport.timezone}\n          onTimezoneChange={value => {\n            setCurrentReport({ timezone: value });\n          }}\n        />\n        {isChart && renderMessageContentSection}\n        {(!isChart || !isTextBasedChart) && renderCustomWidthSection}\n      </StyledBottomSection>\n      {currentReport.error && (\n        <Alert\n          type=\"error\"\n          css={(theme: SupersetTheme) => antDErrorAlertStyles(theme)}\n          message={\n            isEditMode\n              ? t('Failed to update report')\n              : t('Failed to create report')\n          }\n          description={currentReport.error}\n        />\n      )}\n    </StyledModal>\n  );\n}\n\nexport default withToasts(ReportModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}