{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n/* eslint prefer-const: 2 */\nimport { nanoid } from 'nanoid';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { safeStringify } from '../utils/safeStringify';\nimport { LOG_EVENT } from '../logger/actions';\nimport {\n  LOG_EVENT_TYPE_TIMING,\n  LOG_ACTIONS_SPA_NAVIGATION } from\n'../logger/LogUtils';\nimport DebouncedMessageQueue from '../utils/DebouncedMessageQueue';\nimport { ensureAppRoot } from '../utils/pathUtils';\n\nconst LOG_ENDPOINT = '/superset/log/?explode=events';\nconst sendBeacon = (events) => {\n  if (events.length <= 0) {\n    return;\n  }\n\n  let endpoint = LOG_ENDPOINT;\n  const { source, source_id } = events[0];\n  // backend logs treat these request params as first-class citizens\n  if (source === 'dashboard') {\n    endpoint += `&dashboard_id=${source_id}`;\n  } else if (source === 'slice') {\n    endpoint += `&slice_id=${source_id}`;\n  }\n\n  if (navigator.sendBeacon) {\n    const formData = new FormData();\n    formData.append('events', safeStringify(events));\n    if (SupersetClient.getGuestToken()) {\n      // if we have a guest token, we need to send it for auth via the form\n      formData.append('guest_token', SupersetClient.getGuestToken());\n    }\n    navigator.sendBeacon(ensureAppRoot(endpoint), formData);\n  } else {\n    SupersetClient.post({\n      endpoint,\n      postPayload: { events },\n      parseMethod: null\n    });\n  }\n};\n\n// beacon API has data size limit = 2^16.\n// assume avg each log entry has 2^6 characters\nconst MAX_EVENTS_PER_REQUEST = 1024;\nconst logMessageQueue = new DebouncedMessageQueue({\n  callback: sendBeacon,\n  sizeThreshold: MAX_EVENTS_PER_REQUEST,\n  delayThreshold: 1000\n});\nlet lastEventId = 0;\nconst loggerMiddleware = (store) => (next) => {\n  let navPath;\n  return (action) => {var _window, _window$location, _dashboardLayout$pres;\n    if (action.type !== LOG_EVENT) {\n      return next(action);\n    }\n\n    const { dashboardInfo, explore, impressionId, dashboardLayout, sqlLab } =\n    store.getState();\n    let logMetadata = {\n      impression_id: impressionId,\n      version: 'v2'\n    };\n    const { eventName } = action.payload;\n    let { eventData = {} } = action.payload;\n\n    if (eventName === LOG_ACTIONS_SPA_NAVIGATION) {\n      navPath = eventData.path;\n    }\n    const path = navPath || ((_window = window) == null ? void 0 : (_window$location = _window.location) == null ? void 0 : _window$location.href);\n\n    if (dashboardInfo != null && dashboardInfo.id && path != null && path.includes('/dashboard/')) {\n      logMetadata = {\n        source: 'dashboard',\n        source_id: dashboardInfo.id,\n        dashboard_id: dashboardInfo.id,\n        ...logMetadata\n      };\n    } else if (explore != null && explore.slice) {\n      logMetadata = {\n        source: 'explore',\n        source_id: explore.slice ? explore.slice.slice_id : 0,\n        ...(explore.slice.slice_id && { slice_id: explore.slice.slice_id }),\n        ...logMetadata\n      };\n    } else if (path != null && path.includes('/sqllab/')) {\n      const editor = sqlLab.queryEditors.find(\n        ({ id }) => id === sqlLab.tabHistory.slice(-1)[0]\n      );\n      logMetadata = {\n        source: 'sqlLab',\n        source_id: editor == null ? void 0 : editor.id,\n        db_id: editor == null ? void 0 : editor.dbId,\n        schema: editor == null ? void 0 : editor.schema\n      };\n    }\n\n    eventData = {\n      ...logMetadata,\n      ts: new Date().getTime(),\n      event_name: eventName,\n      ...eventData\n    };\n    if (LOG_EVENT_TYPE_TIMING.has(eventName)) {\n      eventData = {\n        ...eventData,\n        event_type: 'timing',\n        trigger_event: lastEventId\n      };\n    } else {\n      lastEventId = nanoid();\n      eventData = {\n        ...eventData,\n        event_type: 'user',\n        event_id: lastEventId,\n        visibility: document.visibilityState\n      };\n    }\n\n    if (\n    eventData.target_id &&\n    dashboardLayout != null && (_dashboardLayout$pres = dashboardLayout.present) != null && _dashboardLayout$pres[eventData.target_id])\n    {\n      const { meta } = dashboardLayout.present[eventData.target_id];\n      // chart name or tab/header text\n      eventData.target_name = meta.chartId ? meta.sliceName : meta.text;\n    }\n\n    logMessageQueue.append(eventData);\n    return eventData;\n  };\n};const _default =\n\nloggerMiddleware;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LOG_ENDPOINT, \"LOG_ENDPOINT\", \"/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js\");reactHotLoader.register(sendBeacon, \"sendBeacon\", \"/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js\");reactHotLoader.register(MAX_EVENTS_PER_REQUEST, \"MAX_EVENTS_PER_REQUEST\", \"/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js\");reactHotLoader.register(logMessageQueue, \"logMessageQueue\", \"/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js\");reactHotLoader.register(lastEventId, \"lastEventId\", \"/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js\");reactHotLoader.register(loggerMiddleware, \"loggerMiddleware\", \"/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["nanoid","SupersetClient","safeStringify","LOG_EVENT","LOG_EVENT_TYPE_TIMING","LOG_ACTIONS_SPA_NAVIGATION","DebouncedMessageQueue","ensureAppRoot","LOG_ENDPOINT","sendBeacon","events","length","endpoint","source","source_id","navigator","formData","FormData","append","getGuestToken","post","postPayload","parseMethod","MAX_EVENTS_PER_REQUEST","logMessageQueue","callback","sizeThreshold","delayThreshold","lastEventId","loggerMiddleware","store","next","navPath","action","_window","_window$location","_dashboardLayout$pres","type","dashboardInfo","explore","impressionId","dashboardLayout","sqlLab","getState","logMetadata","impression_id","version","eventName","payload","eventData","path","window","location","href","id","includes","dashboard_id","slice","slice_id","editor","queryEditors","find","tabHistory","db_id","dbId","schema","ts","Date","getTime","event_name","has","event_type","trigger_event","event_id","visibility","document","visibilityState","target_id","present","meta","target_name","chartId","sliceName","text","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/middleware/loggerMiddleware.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable camelcase */\n/* eslint prefer-const: 2 */\nimport { nanoid } from 'nanoid';\nimport { SupersetClient } from '@superset-ui/core';\n\nimport { safeStringify } from '../utils/safeStringify';\nimport { LOG_EVENT } from '../logger/actions';\nimport {\n  LOG_EVENT_TYPE_TIMING,\n  LOG_ACTIONS_SPA_NAVIGATION,\n} from '../logger/LogUtils';\nimport DebouncedMessageQueue from '../utils/DebouncedMessageQueue';\nimport { ensureAppRoot } from '../utils/pathUtils';\n\nconst LOG_ENDPOINT = '/superset/log/?explode=events';\nconst sendBeacon = events => {\n  if (events.length <= 0) {\n    return;\n  }\n\n  let endpoint = LOG_ENDPOINT;\n  const { source, source_id } = events[0];\n  // backend logs treat these request params as first-class citizens\n  if (source === 'dashboard') {\n    endpoint += `&dashboard_id=${source_id}`;\n  } else if (source === 'slice') {\n    endpoint += `&slice_id=${source_id}`;\n  }\n\n  if (navigator.sendBeacon) {\n    const formData = new FormData();\n    formData.append('events', safeStringify(events));\n    if (SupersetClient.getGuestToken()) {\n      // if we have a guest token, we need to send it for auth via the form\n      formData.append('guest_token', SupersetClient.getGuestToken());\n    }\n    navigator.sendBeacon(ensureAppRoot(endpoint), formData);\n  } else {\n    SupersetClient.post({\n      endpoint,\n      postPayload: { events },\n      parseMethod: null,\n    });\n  }\n};\n\n// beacon API has data size limit = 2^16.\n// assume avg each log entry has 2^6 characters\nconst MAX_EVENTS_PER_REQUEST = 1024;\nconst logMessageQueue = new DebouncedMessageQueue({\n  callback: sendBeacon,\n  sizeThreshold: MAX_EVENTS_PER_REQUEST,\n  delayThreshold: 1000,\n});\nlet lastEventId = 0;\nconst loggerMiddleware = store => next => {\n  let navPath;\n  return action => {\n    if (action.type !== LOG_EVENT) {\n      return next(action);\n    }\n\n    const { dashboardInfo, explore, impressionId, dashboardLayout, sqlLab } =\n      store.getState();\n    let logMetadata = {\n      impression_id: impressionId,\n      version: 'v2',\n    };\n    const { eventName } = action.payload;\n    let { eventData = {} } = action.payload;\n\n    if (eventName === LOG_ACTIONS_SPA_NAVIGATION) {\n      navPath = eventData.path;\n    }\n    const path = navPath || window?.location?.href;\n\n    if (dashboardInfo?.id && path?.includes('/dashboard/')) {\n      logMetadata = {\n        source: 'dashboard',\n        source_id: dashboardInfo.id,\n        dashboard_id: dashboardInfo.id,\n        ...logMetadata,\n      };\n    } else if (explore?.slice) {\n      logMetadata = {\n        source: 'explore',\n        source_id: explore.slice ? explore.slice.slice_id : 0,\n        ...(explore.slice.slice_id && { slice_id: explore.slice.slice_id }),\n        ...logMetadata,\n      };\n    } else if (path?.includes('/sqllab/')) {\n      const editor = sqlLab.queryEditors.find(\n        ({ id }) => id === sqlLab.tabHistory.slice(-1)[0],\n      );\n      logMetadata = {\n        source: 'sqlLab',\n        source_id: editor?.id,\n        db_id: editor?.dbId,\n        schema: editor?.schema,\n      };\n    }\n\n    eventData = {\n      ...logMetadata,\n      ts: new Date().getTime(),\n      event_name: eventName,\n      ...eventData,\n    };\n    if (LOG_EVENT_TYPE_TIMING.has(eventName)) {\n      eventData = {\n        ...eventData,\n        event_type: 'timing',\n        trigger_event: lastEventId,\n      };\n    } else {\n      lastEventId = nanoid();\n      eventData = {\n        ...eventData,\n        event_type: 'user',\n        event_id: lastEventId,\n        visibility: document.visibilityState,\n      };\n    }\n\n    if (\n      eventData.target_id &&\n      dashboardLayout?.present?.[eventData.target_id]\n    ) {\n      const { meta } = dashboardLayout.present[eventData.target_id];\n      // chart name or tab/header text\n      eventData.target_name = meta.chartId ? meta.sliceName : meta.text;\n    }\n\n    logMessageQueue.append(eventData);\n    return eventData;\n  };\n};\n\nexport default loggerMiddleware;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}