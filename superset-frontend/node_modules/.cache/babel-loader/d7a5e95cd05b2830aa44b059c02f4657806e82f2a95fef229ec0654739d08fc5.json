{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { buildQueryContext, ensureIsArray } from '@superset-ui/core';\nimport { isTimeComparison, timeCompareOperator } from '@superset-ui/chart-controls';\n\nexport default function buildQuery(formData) {\n  const { cols: groupby } = formData;\n  const queryContextA = buildQueryContext(formData, (baseQueryObject) => {\n    const postProcessing = [];\n    postProcessing.push(timeCompareOperator(formData, baseQueryObject));\n    const nonCustomNorInheritShifts = ensureIsArray(formData.time_compare).filter((shift) => shift !== 'custom' && shift !== 'inherit');\n    const customOrInheritShifts = ensureIsArray(formData.time_compare).filter((shift) => shift === 'custom' || shift === 'inherit');\n    let timeOffsets = [];\n    // Shifts for non-custom or non inherit time comparison\n    if (!_isEmpty(nonCustomNorInheritShifts)) {\n      timeOffsets = nonCustomNorInheritShifts;\n    }\n    // Shifts for custom or inherit time comparison\n    if (!_isEmpty(customOrInheritShifts)) {\n      if (customOrInheritShifts.includes('custom')) {\n        timeOffsets = timeOffsets.concat([formData.start_date_offset]);\n      }\n      if (customOrInheritShifts.includes('inherit')) {\n        timeOffsets = timeOffsets.concat(['inherit']);\n      }\n    }\n    return [\n    {\n      ...baseQueryObject,\n      groupby,\n      post_processing: postProcessing,\n      time_offsets: isTimeComparison(formData, baseQueryObject) ?\n      ensureIsArray(timeOffsets) :\n      []\n    }];\n\n  });\n  return {\n    ...queryContextA\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildQuery, \"buildQuery\", \"/Users/aryurkov/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/buildQuery.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["buildQueryContext","ensureIsArray","isTimeComparison","timeCompareOperator","buildQuery","formData","cols","groupby","queryContextA","baseQueryObject","postProcessing","push","nonCustomNorInheritShifts","time_compare","filter","shift","customOrInheritShifts","timeOffsets","_isEmpty","includes","concat","start_date_offset","post_processing","time_offsets","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/buildQuery.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  buildQueryContext,\n  QueryFormData,\n  PostProcessingRule,\n  ensureIsArray,\n} from '@superset-ui/core';\nimport {\n  isTimeComparison,\n  timeCompareOperator,\n} from '@superset-ui/chart-controls';\nimport { isEmpty } from 'lodash';\n\nexport default function buildQuery(formData: QueryFormData) {\n  const { cols: groupby } = formData;\n\n  const queryContextA = buildQueryContext(formData, baseQueryObject => {\n    const postProcessing: PostProcessingRule[] = [];\n    postProcessing.push(timeCompareOperator(formData, baseQueryObject));\n\n    const nonCustomNorInheritShifts = ensureIsArray(\n      formData.time_compare,\n    ).filter((shift: string) => shift !== 'custom' && shift !== 'inherit');\n    const customOrInheritShifts = ensureIsArray(formData.time_compare).filter(\n      (shift: string) => shift === 'custom' || shift === 'inherit',\n    );\n\n    let timeOffsets: string[] = [];\n\n    // Shifts for non-custom or non inherit time comparison\n    if (!isEmpty(nonCustomNorInheritShifts)) {\n      timeOffsets = nonCustomNorInheritShifts;\n    }\n\n    // Shifts for custom or inherit time comparison\n    if (!isEmpty(customOrInheritShifts)) {\n      if (customOrInheritShifts.includes('custom')) {\n        timeOffsets = timeOffsets.concat([formData.start_date_offset]);\n      }\n      if (customOrInheritShifts.includes('inherit')) {\n        timeOffsets = timeOffsets.concat(['inherit']);\n      }\n    }\n    return [\n      {\n        ...baseQueryObject,\n        groupby,\n        post_processing: postProcessing,\n        time_offsets: isTimeComparison(formData, baseQueryObject)\n          ? ensureIsArray(timeOffsets)\n          : [],\n      },\n    ];\n  });\n\n  return {\n    ...queryContextA,\n  };\n}\n"],"mappings":"8UAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,iBAAiB,EAGjBC,aAAa,QACR,mBAAmB;AAC1B,SACEC,gBAAgB,EAChBC,mBAAmB,QACd,6BAA6B;;AAGpC,eAAc,SAAUC,UAAUA,CAACC,QAAuB;EACxD,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAE,GAAGF,QAAQ;EAElC,MAAMG,aAAa,GAAGR,iBAAiB,CAACK,QAAQ,EAAE,CAAAI,eAAe,KAAG;IAClE,MAAMC,cAAc,GAAyB,EAAE;IAC/CA,cAAc,CAACC,IAAI,CAACR,mBAAmB,CAACE,QAAQ,EAAEI,eAAe,CAAC,CAAC;IAEnE,MAAMG,yBAAyB,GAAGX,aAAa,CAC7CI,QAAQ,CAACQ,YAAY,CACtB,CAACC,MAAM,CAAC,CAACC,KAAa,KAAKA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,SAAS,CAAC;IACtE,MAAMC,qBAAqB,GAAGf,aAAa,CAACI,QAAQ,CAACQ,YAAY,CAAC,CAACC,MAAM,CACvE,CAACC,KAAa,KAAKA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,SAAS,CAC7D;IAED,IAAIE,WAAW,GAAa,EAAE;IAE9B;IACA,IAAI,CAACC,QAAA,CAAQN,yBAAyB,CAAC,EAAE;MACvCK,WAAW,GAAGL,yBAAyB;;IAGzC;IACA,IAAI,CAACM,QAAA,CAAQF,qBAAqB,CAAC,EAAE;MACnC,IAAIA,qBAAqB,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC5CF,WAAW,GAAGA,WAAW,CAACG,MAAM,CAAC,CAACf,QAAQ,CAACgB,iBAAiB,CAAC,CAAC;;MAEhE,IAAIL,qBAAqB,CAACG,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC7CF,WAAW,GAAGA,WAAW,CAACG,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;;;IAGjD,OAAO;IACL;MACE,GAAGX,eAAe;MAClBF,OAAO;MACPe,eAAe,EAAEZ,cAAc;MAC/Ba,YAAY,EAAErB,gBAAgB,CAACG,QAAQ,EAAEI,eAAe,CAAC;MACrDR,aAAa,CAACgB,WAAW,CAAC;MAC1B;KACL,CACF;;EACH,CAAC,CAAC;EAEF,OAAO;IACL,GAAGT;GACJ;AACH,CAAC,mBAAAgB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA7CuBxB,UAAU,yKAAAyB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}