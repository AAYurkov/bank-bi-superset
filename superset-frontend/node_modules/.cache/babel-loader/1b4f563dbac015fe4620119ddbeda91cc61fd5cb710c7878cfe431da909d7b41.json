{"ast":null,"code":"import _cloneDeep from \"lodash/cloneDeep\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nimport { Behavior, getChartMetadataRegistry, isDefined } from '@superset-ui/core';\nimport { getChartIdsInFilterScope } from './getChartIdsInFilterScope';\nimport { GLOBAL_SCOPE_POINTER, isCrossFilterScopeGlobal } from '../types';\nimport { DEFAULT_CROSS_FILTER_SCOPING } from '../constants';\nimport { CHART_TYPE } from './componentTypes';\nexport const isCrossFiltersEnabled = (metadataCrossFiltersEnabled) => metadataCrossFiltersEnabled === undefined || metadataCrossFiltersEnabled;\nexport const getCrossFiltersConfiguration = (dashboardLayout, metadata, charts) => {var _metadata$global_char;\n  const chartLayoutItems = Object.values(dashboardLayout).filter((item) => (item == null ? void 0 : item.type) === CHART_TYPE);\n  const globalChartConfiguration = (_metadata$global_char = metadata.global_chart_configuration) != null && _metadata$global_char.scope ?\n  {\n    scope: metadata.global_chart_configuration.scope,\n    chartsInScope: getChartIdsInFilterScope(metadata.global_chart_configuration.scope, Object.values(charts).map((chart) => chart.id), chartLayoutItems)\n  } :\n  {\n    scope: DEFAULT_CROSS_FILTER_SCOPING,\n    chartsInScope: Object.values(charts).map((chart) => chart.id)\n  };\n  // If user just added cross filter to dashboard it's not saving its scope on server,\n  // so we tweak it until user will update scope and will save it in server\n  const chartConfiguration = {};\n  chartLayoutItems.forEach((layoutItem) => {var _layoutItem$meta, _behaviors, _ref, _getChartMetadataRegi, _charts$chartId, _charts$chartId$form_;\n    const chartId = (_layoutItem$meta = layoutItem.meta) == null ? void 0 : _layoutItem$meta.chartId;\n    if (!isDefined(chartId)) {\n      return;\n    }\n    const behaviors = (_behaviors = (_ref = (_getChartMetadataRegi = getChartMetadataRegistry().get((_charts$chartId = charts[chartId]) == null ? void 0 : (_charts$chartId$form_ = _charts$chartId.form_data) == null ? void 0 : _charts$chartId$form_.viz_type)) != null ? _getChartMetadataRegi :\n    {}) == null ? void 0 : _ref.behaviors) != null ? _behaviors : [];\n    if (behaviors.includes(Behavior.InteractiveChart)) {var _metadata$chart_confi;\n      if ((_metadata$chart_confi = metadata.chart_configuration) != null && _metadata$chart_confi[chartId]) {\n        // We need to clone to avoid mutating Redux state\n        chartConfiguration[chartId] = _cloneDeep(metadata.chart_configuration[chartId]);\n      }\n      if (!chartConfiguration[chartId]) {\n        chartConfiguration[chartId] = {\n          id: chartId,\n          crossFilters: {\n            scope: GLOBAL_SCOPE_POINTER,\n            chartsInScope: []\n          }\n        };\n      }\n      chartConfiguration[chartId].crossFilters.chartsInScope =\n      isCrossFilterScopeGlobal(chartConfiguration[chartId].crossFilters.scope) ?\n      globalChartConfiguration.chartsInScope.filter((id) => id !== Number(chartId)) :\n      getChartIdsInFilterScope(chartConfiguration[chartId].crossFilters.\n      scope, Object.values(charts).map((chart) => chart.id), chartLayoutItems);\n    }\n  });\n  return { chartConfiguration, globalChartConfiguration };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isCrossFiltersEnabled, \"isCrossFiltersEnabled\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/crossFilters.ts\");reactHotLoader.register(getCrossFiltersConfiguration, \"getCrossFiltersConfiguration\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/crossFilters.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["enterModule","reactHotLoaderGlobal","undefined","module","__signature__","default","signature","a","Behavior","getChartMetadataRegistry","isDefined","getChartIdsInFilterScope","GLOBAL_SCOPE_POINTER","isCrossFilterScopeGlobal","DEFAULT_CROSS_FILTER_SCOPING","CHART_TYPE","isCrossFiltersEnabled","metadataCrossFiltersEnabled","getCrossFiltersConfiguration","dashboardLayout","metadata","charts","_metadata$global_char","chartLayoutItems","Object","values","filter","item","type","globalChartConfiguration","global_chart_configuration","scope","chartsInScope","map","chart","id","chartConfiguration","forEach","layoutItem","_layoutItem$meta","_behaviors","_ref","_getChartMetadataRegi","_charts$chartId","_charts$chartId$form_","chartId","meta","behaviors","get","form_data","viz_type","includes","InteractiveChart","_metadata$chart_confi","chart_configuration","_cloneDeep","crossFilters","Number","reactHotLoader","register","leaveModule"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/util/crossFilters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { cloneDeep } from 'lodash';\nimport {\n  Behavior,\n  getChartMetadataRegistry,\n  isDefined,\n  NativeFilterScope,\n} from '@superset-ui/core';\nimport { getChartIdsInFilterScope } from './getChartIdsInFilterScope';\nimport {\n  ChartConfiguration,\n  ChartsState,\n  DashboardInfo,\n  DashboardLayout,\n  GLOBAL_SCOPE_POINTER,\n  isCrossFilterScopeGlobal,\n} from '../types';\nimport { DEFAULT_CROSS_FILTER_SCOPING } from '../constants';\nimport { CHART_TYPE } from './componentTypes';\n\nexport const isCrossFiltersEnabled = (\n  metadataCrossFiltersEnabled: boolean | undefined,\n): boolean =>\n  metadataCrossFiltersEnabled === undefined || metadataCrossFiltersEnabled;\n\nexport const getCrossFiltersConfiguration = (\n  dashboardLayout: DashboardLayout,\n  metadata: Pick<\n    DashboardInfo['metadata'],\n    'chart_configuration' | 'global_chart_configuration'\n  >,\n  charts: ChartsState,\n) => {\n  const chartLayoutItems = Object.values(dashboardLayout).filter(\n    item => item?.type === CHART_TYPE,\n  );\n\n  const globalChartConfiguration = metadata.global_chart_configuration?.scope\n    ? {\n        scope: metadata.global_chart_configuration.scope,\n        chartsInScope: getChartIdsInFilterScope(\n          metadata.global_chart_configuration.scope,\n          Object.values(charts).map(chart => chart.id),\n          chartLayoutItems,\n        ),\n      }\n    : {\n        scope: DEFAULT_CROSS_FILTER_SCOPING,\n        chartsInScope: Object.values(charts).map(chart => chart.id),\n      };\n\n  // If user just added cross filter to dashboard it's not saving its scope on server,\n  // so we tweak it until user will update scope and will save it in server\n  const chartConfiguration: ChartConfiguration = {};\n  chartLayoutItems.forEach(layoutItem => {\n    const chartId = layoutItem.meta?.chartId;\n\n    if (!isDefined(chartId)) {\n      return;\n    }\n\n    const behaviors =\n      (\n        getChartMetadataRegistry().get(charts[chartId]?.form_data?.viz_type) ??\n        {}\n      )?.behaviors ?? [];\n\n    if (behaviors.includes(Behavior.InteractiveChart)) {\n      if (metadata.chart_configuration?.[chartId]) {\n        // We need to clone to avoid mutating Redux state\n        chartConfiguration[chartId] = cloneDeep(\n          metadata.chart_configuration[chartId],\n        );\n      }\n      if (!chartConfiguration[chartId]) {\n        chartConfiguration[chartId] = {\n          id: chartId,\n          crossFilters: {\n            scope: GLOBAL_SCOPE_POINTER,\n            chartsInScope: [],\n          },\n        };\n      }\n      chartConfiguration[chartId].crossFilters.chartsInScope =\n        isCrossFilterScopeGlobal(chartConfiguration[chartId].crossFilters.scope)\n          ? globalChartConfiguration.chartsInScope.filter(\n              id => id !== Number(chartId),\n            )\n          : getChartIdsInFilterScope(\n              chartConfiguration[chartId].crossFilters\n                .scope as NativeFilterScope,\n              Object.values(charts).map(chart => chart.id),\n              chartLayoutItems,\n            );\n    }\n  });\n\n  return { chartConfiguration, globalChartConfiguration };\n};\n"],"mappings":"2CAAA;;;;;;;;;;;;;;;;;GAAA,kBAAAA,WAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAD,WAAA,GAAAE,SAAA,CAAAF,WAAA,IAAAA,WAAA,CAAAG,MAAA,WAAAC,aAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,CAAAC,SAAA,aAAAC,CAAA,UAAAA,CAAA;;AAmBA,SACEC,QAAQ,EACRC,wBAAwB,EACxBC,SAAS,QAEJ,mBAAmB;AAC1B,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAKEC,oBAAoB,EACpBC,wBAAwB,QACnB,UAAU;AACjB,SAASC,4BAA4B,QAAQ,cAAc;AAC3D,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,OAAO,MAAMC,qBAAqB,GAAGA,CACnCC,2BAAgD,KAEhDA,2BAA2B,KAAKf,SAAS,IAAIe,2BAA2B;AAE1E,OAAO,MAAMC,4BAA4B,GAAGA,CAC1CC,eAAgC,EAChCC,QAGC,EACDC,MAAmB,KACjB,KAAAC,qBAAA;EACF,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAACN,eAAe,CAAC,CAACO,MAAM,CAC5D,CAAAC,IAAI,KAAI,CAAAA,IAAI,oBAAJA,IAAI,CAAEC,IAAI,MAAKb,UAAU,CAClC;EAED,MAAMc,wBAAwB,GAAG,CAAAP,qBAAA,GAAAF,QAAQ,CAACU,0BAA0B,aAAnCR,qBAAA,CAAqCS,KAAK;EACvE;IACEA,KAAK,EAAEX,QAAQ,CAACU,0BAA0B,CAACC,KAAK;IAChDC,aAAa,EAAErB,wBAAwB,CACrCS,QAAQ,CAACU,0BAA0B,CAACC,KAAK,EACzCP,MAAM,CAACC,MAAM,CAACJ,MAAM,CAAC,CAACY,GAAG,CAAC,CAAAC,KAAK,KAAIA,KAAK,CAACC,EAAE,CAAC,EAC5CZ,gBAAgB;GAEnB;EACD;IACEQ,KAAK,EAAEjB,4BAA4B;IACnCkB,aAAa,EAAER,MAAM,CAACC,MAAM,CAACJ,MAAM,CAAC,CAACY,GAAG,CAAC,CAAAC,KAAK,KAAIA,KAAK,CAACC,EAAE;GAC3D;EAEL;EACA;EACA,MAAMC,kBAAkB,GAAuB,EAAE;EACjDb,gBAAgB,CAACc,OAAO,CAAC,CAAAC,UAAU,KAAG,KAAAC,gBAAA,EAAAC,UAAA,EAAAC,IAAA,EAAAC,qBAAA,EAAAC,eAAA,EAAAC,qBAAA;IACpC,MAAMC,OAAO,IAAAN,gBAAA,GAAGD,UAAU,CAACQ,IAAI,qBAAfP,gBAAA,CAAiBM,OAAO;IAExC,IAAI,CAACnC,SAAS,CAACmC,OAAO,CAAC,EAAE;MACvB;;IAGF,MAAME,SAAS,IAAAP,UAAA,IAAAC,IAAA,IAAAC,qBAAA,GAEXjC,wBAAwB,EAAE,CAACuC,GAAG,EAAAL,eAAA,GAACtB,MAAM,CAACwB,OAAO,CAAC,sBAAAD,qBAAA,GAAfD,eAAA,CAAiBM,SAAS,qBAA1BL,qBAAA,CAA4BM,QAAQ,CAAC,YAAAR,qBAAA;IACpE,EAAE,qBAFJD,IAAA,CAGGM,SAAS,YAAAP,UAAA,GAAI,EAAE;IAEpB,IAAIO,SAAS,CAACI,QAAQ,CAAC3C,QAAQ,CAAC4C,gBAAgB,CAAC,EAAE,KAAAC,qBAAA;MACjD,KAAAA,qBAAA,GAAIjC,QAAQ,CAACkC,mBAAmB,aAA5BD,qBAAA,CAA+BR,OAAO,CAAC,EAAE;QAC3C;QACAT,kBAAkB,CAACS,OAAO,CAAC,GAAGU,UAAA,CAC5BnC,QAAQ,CAACkC,mBAAmB,CAACT,OAAO,CAAC,CACtC;;MAEH,IAAI,CAACT,kBAAkB,CAACS,OAAO,CAAC,EAAE;QAChCT,kBAAkB,CAACS,OAAO,CAAC,GAAG;UAC5BV,EAAE,EAAEU,OAAO;UACXW,YAAY,EAAE;YACZzB,KAAK,EAAEnB,oBAAoB;YAC3BoB,aAAa,EAAE;;SAElB;;MAEHI,kBAAkB,CAACS,OAAO,CAAC,CAACW,YAAY,CAACxB,aAAa;MACpDnB,wBAAwB,CAACuB,kBAAkB,CAACS,OAAO,CAAC,CAACW,YAAY,CAACzB,KAAK,CAAC;MACpEF,wBAAwB,CAACG,aAAa,CAACN,MAAM,CAC3C,CAAAS,EAAE,KAAIA,EAAE,KAAKsB,MAAM,CAACZ,OAAO,CAAC,CAC7B;MACDlC,wBAAwB,CACtByB,kBAAkB,CAACS,OAAO,CAAC,CAACW,YAAY;MACrCzB,KAA0B,EAC7BP,MAAM,CAACC,MAAM,CAACJ,MAAM,CAAC,CAACY,GAAG,CAAC,CAAAC,KAAK,KAAIA,KAAK,CAACC,EAAE,CAAC,EAC5CZ,gBAAgB,CACjB;;EAEX,CAAC,CAAC;EAEF,OAAO,EAAEa,kBAAkB,EAAEP,wBAAwB,EAAE;AACzD,CAAC,CAAC,mBAAA6B,cAAA,UAAAzD,oBAAA,mBAAAA,oBAAA,CAAAI,OAAA,GAAAH,SAAA,MAAAwD,cAAA,WAAAA,cAAA,CAAAC,QAAA,CA9EW3C,qBAAqB,4GAAA0C,cAAA,CAAAC,QAAA,CAKrBzC,4BAA4B,2IAAA0C,WAAA,UAAA3D,oBAAA,mBAAAA,oBAAA,CAAA2D,WAAA,GAAA1D,SAAA,CAAA0D,WAAA,IAAAA,WAAA,CAAAzD,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}