{"ast":null,"code":"import _pick from \"lodash/pick\";import _omit from \"lodash/omit\";import _isObjectLike from \"lodash/isObjectLike\";import _isEqual from \"lodash/isEqual\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  styled,\n  t,\n  css,\n  useTheme,\n  logging,\n  useChangeEffect,\n  useComponentDidMount,\n  usePrevious } from\n'@superset-ui/core';\n\nimport { Resizable } from 're-resizable';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Icons } from 'src/components/Icons';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys } from\n'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { QUERY_MODE_REQUISITES } from 'src/explore/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS } from\n'src/logger/LogUtils';\nimport { ensureAppRoot } from 'src/utils/pathUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/actions/datasources';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { datasourcesActions } from 'src/explore/actions/datasourcesActions';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';\nimport ExploreContainer from '../ExploreContainer';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  colorScheme: PropTypes.string,\n  ownColorScheme: PropTypes.string,\n  dashboardColorScheme: PropTypes.string,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n  saveAction: PropTypes.string,\n  isSaveModalVisible: PropTypes.bool\n};\n\nconst ExplorePanelContainer = styled.div`\n  ${({ theme }) => css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `};\n`;\n\nconst updateHistory = _debounce(\n  async (\n  formData,\n  datasourceId,\n  datasourceType,\n  isReplace,\n  standalone,\n  force,\n  title,\n  tabId) =>\n  {\n    const payload = { ...formData };\n    const chartId = formData.slice_id;\n    const params = new URLSearchParams(window.location.search);\n    const additionalParam = Object.fromEntries(params);\n\n    if (chartId) {\n      additionalParam[URL_PARAMS.sliceId.name] = chartId;\n    } else {\n      additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n      additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n    }\n\n    const urlParams = (payload == null ? void 0 : payload.url_params) || {};\n    Object.entries(urlParams).forEach(([key, value]) => {\n      if (!RESERVED_CHART_URL_PARAMS.includes(key)) {\n        additionalParam[key] = value;\n      }\n    });\n\n    try {\n      let key;\n      let stateModifier;\n      if (isReplace) {\n        key = await postFormData(\n          datasourceId,\n          datasourceType,\n          formData,\n          chartId,\n          tabId\n        );\n        stateModifier = 'replaceState';\n      } else {\n        key = getUrlParam(URL_PARAMS.formDataKey);\n        await putFormData(\n          datasourceId,\n          datasourceType,\n          key,\n          formData,\n          chartId,\n          tabId\n        );\n        stateModifier = 'pushState';\n      }\n      // avoid race condition in case user changes route before explore updates the url\n      if (window.location.pathname.startsWith(ensureAppRoot('/explore'))) {\n        const url = mountExploreUrl(\n          standalone ? URL_PARAMS.standalone.name : null,\n          {\n            [URL_PARAMS.formDataKey.name]: key,\n            ...additionalParam\n          },\n          force\n        );\n        window.history[stateModifier](payload, title, url);\n      }\n    } catch (e) {\n      logging.warn('Failed at altering browser history', e);\n    }\n  },\n  1000\n);\n\nconst defaultSidebarsWidth = {\n  controls_width: 320,\n  datasource_width: 300\n};\n\nfunction getSidebarWidths(key) {\n  return getItem(key, defaultSidebarsWidth[key]);\n}\n\nfunction setSidebarWidths(key, dimension) {\n  const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n  setItem(key, newDimension);\n}\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n    props.controls\n  );\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [width, setWidth] = useState(\n    getSidebarWidths(LocalStorageKeys.DatasourceWidth)\n  );\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const addHistory = useCallback(\n    async ({ isReplace = false, title } = {}) => {\n      const formData = props.dashboardId ?\n      {\n        ...props.form_data,\n        dashboardId: props.dashboardId\n      } :\n      props.form_data;\n      const { id: datasourceId, type: datasourceType } = props.datasource;\n\n      updateHistory(\n        formData,\n        datasourceId,\n        datasourceType,\n        isReplace,\n        props.standalone,\n        props.force,\n        title,\n        tabId\n      );\n    },\n    [\n    props.dashboardId,\n    props.form_data,\n    props.datasource.id,\n    props.datasource.type,\n    props.standalone,\n    props.force,\n    tabId]\n\n  );\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n        formData,\n        props.force,\n        props.timeout,\n        props.chart.id\n      );\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n    (event) => {\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      if (controlOrCommand) {\n        const isEnter = event.key === 'Enter' || event.keyCode === 13;\n        const isS = event.key === 's' || event.keyCode === 83;\n        if (isEnter) {\n          onQuery();\n        } else if (isS) {\n          if (props.slice) {\n            props.actions.\n            saveSlice(props.form_data, {\n              action: 'overwrite',\n              slice_id: props.slice.slice_id,\n              slice_name: props.slice.slice_name,\n              add_to_dash: 'noSave',\n              goto_dash: false\n            }).\n            then(({ data }) => {\n              window.location = data.slice.slice_url;\n            });\n          }\n        }\n      }\n    },\n    [onQuery, props.actions, props.form_data, props.slice]\n  );\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {var _props$slice;\n    props.actions.logEvent(\n      LOG_ACTIONS_MOUNT_EXPLORER,\n      (_props$slice = props.slice) != null && _props$slice.slice_id ?\n      {\n        slice_id: props.slice.slice_id\n      } :\n      undefined\n    );\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n      (control) =>\n      control.validationErrors && control.validationErrors.length > 0\n    );\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n    (controlsChanged) => {\n      const newQueryFormData = controlsChanged ?\n      {\n        ...props.chart.latestQueryFormData,\n        ...getFormDataFromControls(_pick(props.controls, controlsChanged))\n      } :\n      getFormDataFromControls(props.controls);\n      props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n      props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n      addHistory();\n    },\n    [\n    addHistory,\n    props.actions,\n    props.chart.id,\n    props.chart.latestQueryFormData,\n    props.controls]\n\n  );\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n    previousControls &&\n    props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value)\n    {\n      if (\n      props.controls.datasource && (\n      previousControls.datasource == null ||\n      props.controls.datasource.value !== previousControls.datasource.value))\n      {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n        (key) =>\n        typeof previousControls[key] !== 'undefined' &&\n        !areObjectsEqual(\n          props.controls[key].value,\n          previousControls[key].value\n        )\n      );\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n        (key) => props.controls[key].renderTrigger\n      );\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const { controls } = props;\n      const changedControlKeys = Object.keys(controls).filter((key) => {\n        const lastControl = lastQueriedControls[key];\n        if (typeof lastControl === 'undefined') {\n          return false;\n        }\n        const { value: value1 } = controls[key];\n        const { value: value2 } = lastControl;\n        if (_isObjectLike(value1) && _isObjectLike(value2)) {\n          return !areObjectsEqual(value1, value2, {\n            ignoreFields: ['datasourceWarning']\n          });\n        }\n        return !_isEqual(value1, value2);\n      });\n\n      return changedControlKeys.some(\n        (key) =>\n        !props.controls[key].renderTrigger &&\n        !props.controls[key].dontRefreshOnChange\n      );\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  useChangeEffect(props.saveAction, () => {\n    if (['saveas', 'overwrite'].includes(props.saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n      props.actions.setSaveAction(null);\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n      (control) =>\n      control.validationErrors && control.validationErrors.length > 0\n    );\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n      (control) => control.validationErrors\n    );\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages.\n    map((message) => {\n      const matchingLabels = controlsWithErrors.\n      filter((control) => {var _control$validationEr;return (_control$validationEr = control.validationErrors) == null ? void 0 : _control$validationEr.includes(message);}).\n      map((control) => control.label);\n      return [matchingLabels, message];\n    }).\n    map(([labels, message]) =>\n    _jsxs(\"div\", { children: [\n      labels.length > 1 ? t('Controls labeled ') : t('Control labeled '),\n      _jsx(\"strong\", { children: ` ${labels.join(', ')}` }),\n      _jsxs(\"span\", { children: [\": \", message] })] }, message\n    )\n    );\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = _jsx(\"div\", { style: { textAlign: 'left' }, children: errors });\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      _jsx(ExploreChartPanel, { ...\n        props,\n        errorMessage: errorMessage,\n        chartIsStale: chartIsStale,\n        onQuery: onQuery }\n      ));\n\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    _jsxs(ExploreContainer, { children: [\n      _jsx(ConnectedExploreChartHeader, {\n        actions: props.actions,\n        canOverwrite: props.can_overwrite,\n        canDownload: props.can_download,\n        dashboardId: props.dashboardId,\n        colorScheme: props.dashboardColorScheme,\n        isStarred: props.isStarred,\n        slice: props.slice,\n        sliceName: props.sliceName,\n        table_name: props.table_name,\n        formData: props.form_data,\n        chart: props.chart,\n        ownState: props.ownState,\n        user: props.user,\n        reports: props.reports,\n        saveDisabled: errorMessage || props.chart.chartStatus === 'loading',\n        metadata: props.metadata }\n      ),\n      _jsxs(ExplorePanelContainer, { id: \"explore-container\", children: [\n        _jsx(Global, {\n          styles: css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          ` }\n        ),\n        _jsxs(Resizable, {\n          onResizeStop: (evt, direction, ref, d) => {\n            setWidth(ref.getBoundingClientRect().width);\n            setSidebarWidths(LocalStorageKeys.DatasourceWidth, d);\n          },\n          defaultSize: {\n            width: getSidebarWidths(LocalStorageKeys.DatasourceWidth),\n            height: '100%'\n          },\n          minWidth: defaultSidebarsWidth[LocalStorageKeys.DatasourceWidth],\n          maxWidth: \"33%\",\n          enable: { right: true },\n          className:\n          isCollapsed ? 'no-show' : 'explore-column data-source-selection', children: [\n\n\n          _jsxs(\"div\", { className: \"title-container\", children: [\n            _jsx(\"span\", { className: \"horizontal-text\", children: t('Chart Source') }),\n            _jsx(\"span\", {\n              role: \"button\",\n              tabIndex: 0,\n              className: \"action-button\",\n              onClick: toggleCollapse, children:\n\n              _jsx(Icons.VerticalAlignTopOutlined, {\n                iconSize: \"xl\",\n                css: css`\n                  transform: rotate(-90deg);\n                `,\n                className: \"collapse-icon\",\n                iconColor: theme.colors.primary.base }\n              ) }\n            )] }\n          ),\n          _jsx(DataSourcePanel, {\n            formData: props.form_data,\n            datasource: props.datasource,\n            controls: props.controls,\n            actions: props.actions,\n            width: width,\n            user: props.user }\n          )] }\n        ),\n        isCollapsed ?\n        _jsx(\"div\", {\n          className: \"sidebar\",\n          onClick: toggleCollapse,\n          \"data-test\": \"open-datasource-tab\",\n          role: \"button\",\n          tabIndex: 0, children:\n\n          _jsx(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", children:\n            _jsx(Tooltip, { title: t('Open Datasource tab'), children:\n              _jsx(Icons.VerticalAlignTopOutlined, {\n                iconSize: \"xl\",\n                css: css`\n                    transform: rotate(90deg);\n                  `,\n                className: \"collapse-icon\",\n                iconColor: theme.colors.primary.base }\n              ) }\n            ) }\n          ) }\n        ) :\n        null,\n        _jsx(Resizable, {\n          onResizeStop: (evt, direction, ref, d) =>\n          setSidebarWidths(LocalStorageKeys.ControlsWidth, d),\n\n          defaultSize: {\n            width: getSidebarWidths(LocalStorageKeys.ControlsWidth),\n            height: '100%'\n          },\n          minWidth: defaultSidebarsWidth[LocalStorageKeys.ControlsWidth],\n          maxWidth: \"33%\",\n          enable: { right: true },\n          className: \"col-sm-3 explore-column controls-column\", children:\n\n          _jsx(ConnectedControlPanelsContainer, {\n            exploreState: props.exploreState,\n            actions: props.actions,\n            form_data: props.form_data,\n            controls: props.controls,\n            chart: props.chart,\n            datasource_type: props.datasource_type,\n            isDatasourceMetaLoading: props.isDatasourceMetaLoading,\n            onQuery: onQuery,\n            onStop: onStop,\n            canStopQuery: props.can_add || props.can_overwrite,\n            errorMessage: errorMessage,\n            chartIsStale: chartIsStale }\n          ) }\n        ),\n        _jsx(\"div\", {\n          className: cx(\n            'main-explore-content',\n            isCollapsed ? 'col-sm-9' : 'col-sm-7'\n          ), children:\n\n          renderChartContainer() }\n        )] }\n      ),\n      props.isSaveModalVisible &&\n      _jsx(SaveModal, {\n        addDangerToast: props.addDangerToast,\n        actions: props.actions,\n        form_data: props.form_data,\n        sliceName: props.sliceName,\n        dashboardId: props.dashboardId }\n      )] }\n\n    ));\n\n}__signature__(ExploreViewContainer, \"usePluginContext{dynamicPluginContext}\\nusePrevious{wasDynamicPluginLoading}\\nusePrevious{previousControls}\\nuseState{[lastQueriedControls, setLastQueriedControls](props.controls)}\\nuseState{[isCollapsed, setIsCollapsed](false)}\\nuseState{[width, setWidth](getSidebarWidths(LocalStorageKeys.DatasourceWidth))}\\nuseTabId{tabId}\\nuseTheme{theme}\\nuseCallback{addHistory}\\nuseCallback{handlePopstate}\\nuseCallback{onQuery}\\nuseCallback{handleKeydown}\\nuseComponentDidMount{}\\nuseChangeEffect{}\\nusePrevious{previousHandlePopstate}\\nuseEffect{}\\nusePrevious{previousHandleKeyDown}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{reRenderChart}\\nuseEffect{}\\nuseMemo{chartIsStale}\\nuseChangeEffect{}\\nuseEffect{}\\nuseMemo{errorMessage}\", () => [usePluginContext, usePrevious, usePrevious, useTabId, useTheme, useComponentDidMount, useChangeEffect, usePrevious, usePrevious, useChangeEffect]);\n\nExploreViewContainer.propTypes = propTypes;\n\nconst retainQueryModeRequirements = (hiddenFormData) =>\nObject.keys(hiddenFormData != null ? hiddenFormData : {}).filter(\n  (key) => !QUERY_MODE_REQUISITES.has(key)\n);\n\nfunction patchBigNumberTotalFormData(form_data, slice) {var _slice$form_data;\n  if (\n  form_data.viz_type === 'big_number_total' &&\n  !form_data.subtitle &&\n  slice != null && (_slice$form_data = slice.form_data) != null && _slice$form_data.subheader)\n  {\n    return { ...form_data, subtitle: slice.form_data.subheader };\n  }\n  return form_data;\n}\n\nfunction mapStateToProps(state) {var _controls$query_mode, _ref, _form_data$slice_id, _dataMask$slice_id, _explore$form_data, _explore$form_data2, _explore$form_data3, _explore$form_data4, _slice$form_data2, _controls$subtitle, _datasource$column_fo, _ref2, _explore$sliceName, _dataMask$slice_id2;\n  const {\n    explore,\n    charts,\n    common,\n    impressionId,\n    dataMask,\n    reports,\n    user,\n    saveModal\n  } = state;\n  const { controls, slice, datasource, metadata, hiddenFormData } = explore;\n  const hasQueryMode = !!((_controls$query_mode = controls.query_mode) != null && _controls$query_mode.value);\n  const fieldsToOmit = hasQueryMode ?\n  retainQueryModeRequirements(hiddenFormData) :\n  Object.keys(hiddenFormData != null ? hiddenFormData : {});\n  const form_data = _omit(getFormDataFromControls(controls), fieldsToOmit);\n  const slice_id = (_ref = (_form_data$slice_id = form_data.slice_id) != null ? _form_data$slice_id : slice == null ? void 0 : slice.slice_id) != null ? _ref : 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n    { ...form_data.extra_form_data },\n    {\n      ...((_dataMask$slice_id = dataMask[slice_id]) == null ? void 0 : _dataMask$slice_id.ownState)\n    }\n  );\n  const chart = charts[slice_id];\n  const colorScheme = (_explore$form_data = explore.form_data) == null ? void 0 : _explore$form_data.color_scheme;\n  const ownColorScheme = (_explore$form_data2 = explore.form_data) == null ? void 0 : _explore$form_data2.own_color_scheme;\n  const dashboardColorScheme = (_explore$form_data3 = explore.form_data) == null ? void 0 : _explore$form_data3.dashboard_color_scheme;\n\n  let dashboardId = Number((_explore$form_data4 = explore.form_data) == null ? void 0 : _explore$form_data4.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  if (\n  form_data.viz_type === 'big_number_total' &&\n  slice != null && (_slice$form_data2 = slice.form_data) != null && _slice$form_data2.subheader && (\n  !((_controls$subtitle = controls.subtitle) != null && _controls$subtitle.value) || controls.subtitle.value === ''))\n  {var _slice$form_data3;\n    controls.subtitle = {\n      ...controls.subtitle,\n      value: slice.form_data.subheader\n    };\n    if (slice != null && (_slice$form_data3 = slice.form_data) != null && _slice$form_data3.subheader_font_size) {\n      controls.subtitle_font_size = {\n        ...controls.subtitle_font_size,\n        value: slice.form_data.subheader_font_size\n      };\n    }\n  }\n\n  const patchedFormData = patchBigNumberTotalFormData(form_data, slice);\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    colorScheme,\n    ownColorScheme,\n    dashboardColorScheme,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: (_datasource$column_fo = datasource == null ? void 0 : datasource.column_formats) != null ? _datasource$column_fo : null,\n    containerId: slice ?\n    `slice-container-${slice.slice_id}` :\n    'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: (_ref2 = (_explore$sliceName = explore.sliceName) != null ? _explore$sliceName : slice == null ? void 0 : slice.slice_name) != null ? _ref2 : null,\n    triggerRender: explore.triggerRender,\n    form_data: patchedFormData,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: (_dataMask$slice_id2 = dataMask[slice_id]) == null ? void 0 : _dataMask$slice_id2.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n    metadata,\n    saveAction: explore.saveAction,\n    isSaveModalVisible: saveModal.isVisible\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...datasourcesActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}const _default =\n\nconnect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withToasts(/*#__PURE__*/memo(ExploreViewContainer)));export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(ExplorePanelContainer, \"ExplorePanelContainer\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(updateHistory, \"updateHistory\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(defaultSidebarsWidth, \"defaultSidebarsWidth\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(getSidebarWidths, \"getSidebarWidths\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(setSidebarWidths, \"setSidebarWidths\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(ExploreViewContainer, \"ExploreViewContainer\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(retainQueryModeRequirements, \"retainQueryModeRequirements\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(patchBigNumberTotalFormData, \"patchBigNumberTotalFormData\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["memo","useCallback","useEffect","useMemo","useState","PropTypes","bindActionCreators","connect","styled","t","css","useTheme","logging","useChangeEffect","useComponentDidMount","usePrevious","Resizable","usePluginContext","Global","Tooltip","Icons","getItem","setItem","LocalStorageKeys","RESERVED_CHART_URL_PARAMS","URL_PARAMS","QUERY_MODE_REQUISITES","areObjectsEqual","logActions","LOG_ACTIONS_MOUNT_EXPLORER","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","ensureAppRoot","getUrlParam","cx","chartActions","fetchDatasourceMetadata","chartPropShape","mergeExtraFormData","postFormData","putFormData","datasourcesActions","mountExploreUrl","getFormDataFromControls","exploreActions","saveModalActions","useTabId","withToasts","ExploreChartPanel","ConnectedControlPanelsContainer","SaveModal","DataSourcePanel","ConnectedExploreChartHeader","ExploreContainer","jsx","_jsx","jsxs","_jsxs","propTypes","actions","object","isRequired","datasource_type","string","dashboardId","number","colorScheme","ownColorScheme","dashboardColorScheme","isDatasourceMetaLoading","bool","chart","slice","sliceName","controls","forcedHeight","form_data","standalone","force","timeout","impressionId","vizType","saveAction","isSaveModalVisible","ExplorePanelContainer","div","theme","colors","grayscale","light5","light2","gridUnit","typography","sizes","m","light4","primary","base","updateHistory","_debounce","formData","datasourceId","datasourceType","isReplace","title","tabId","payload","chartId","slice_id","params","URLSearchParams","window","location","search","additionalParam","Object","fromEntries","sliceId","name","urlParams","url_params","entries","forEach","key","value","includes","stateModifier","formDataKey","pathname","startsWith","url","history","e","warn","defaultSidebarsWidth","controls_width","datasource_width","getSidebarWidths","setSidebarWidths","dimension","newDimension","Number","width","ExploreViewContainer","props","dynamicPluginContext","dynamicPlugin","dynamicPlugins","isDynamicPluginLoading","mounting","wasDynamicPluginLoading","previousControls","lastQueriedControls","setLastQueriedControls","isCollapsed","setIsCollapsed","setWidth","DatasourceWidth","addHistory","id","type","datasource","handlePopstate","state","keys","length","setExploreControls","postChartFormData","onQuery","setForceQuery","triggerQuery","handleKeydown","event","controlOrCommand","ctrlKey","metaKey","isEnter","keyCode","isS","saveSlice","action","slice_name","add_to_dash","goto_dash","then","data","slice_url","onStop","queryController","abort","toggleCollapse","_props$slice","logEvent","undefined","previous","current","previousHandlePopstate","removeEventListener","addEventListener","previousHandleKeyDown","document","dynamicPluginControlsReady","hasError","values","some","control","validationErrors","reRenderChart","controlsChanged","newQueryFormData","latestQueryFormData","_pick","updateQueryFormData","renderTriggered","Date","getTime","viz_type","changedControlKeys","filter","displayControlsChanged","renderTrigger","ownState","chartIsStale","lastControl","value1","value2","_isObjectLike","ignoreFields","_isEqual","dontRefreshOnChange","setSaveAction","errorMessage","controlsWithErrors","errorMessages","map","uniqueErrorMessages","Set","flat","errors","message","matchingLabels","_control$validationEr","label","labels","children","join","style","textAlign","renderChartContainer","canOverwrite","can_overwrite","canDownload","can_download","isStarred","table_name","user","reports","saveDisabled","chartStatus","metadata","styles","onResizeStop","evt","direction","ref","d","getBoundingClientRect","defaultSize","height","minWidth","maxWidth","enable","right","className","role","tabIndex","onClick","VerticalAlignTopOutlined","iconSize","iconColor","ControlsWidth","exploreState","canStopQuery","can_add","addDangerToast","__signature__","retainQueryModeRequirements","hiddenFormData","has","patchBigNumberTotalFormData","_slice$form_data","subtitle","subheader","mapStateToProps","_controls$query_mode","_ref","_form_data$slice_id","_dataMask$slice_id","_explore$form_data","_explore$form_data2","_explore$form_data3","_explore$form_data4","_slice$form_data2","_controls$subtitle","_datasource$column_fo","_ref2","_explore$sliceName","_dataMask$slice_id2","explore","charts","common","dataMask","saveModal","hasQueryMode","query_mode","fieldsToOmit","_omit","extra_form_data","color_scheme","own_color_scheme","dashboard_color_scheme","isNaN","_slice$form_data3","subheader_font_size","subtitle_font_size","patchedFormData","datasource_id","column_formats","containerId","triggerRender","conf","SUPERSET_WEBSERVER_TIMEOUT","isVisible","mapDispatchToProps","dispatch","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/ExploreViewContainer/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  styled,\n  t,\n  css,\n  useTheme,\n  logging,\n  useChangeEffect,\n  useComponentDidMount,\n  usePrevious,\n} from '@superset-ui/core';\nimport { debounce, isEqual, isObjectLike, omit, pick } from 'lodash';\nimport { Resizable } from 're-resizable';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Icons } from 'src/components/Icons';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { QUERY_MODE_REQUISITES } from 'src/explore/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n} from 'src/logger/LogUtils';\nimport { ensureAppRoot } from 'src/utils/pathUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/actions/datasources';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { datasourcesActions } from 'src/explore/actions/datasourcesActions';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';\nimport ExploreContainer from '../ExploreContainer';\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  colorScheme: PropTypes.string,\n  ownColorScheme: PropTypes.string,\n  dashboardColorScheme: PropTypes.string,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n  saveAction: PropTypes.string,\n  isSaveModalVisible: PropTypes.bool,\n};\n\nconst ExplorePanelContainer = styled.div`\n  ${({ theme }) => css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `};\n`;\n\nconst updateHistory = debounce(\n  async (\n    formData,\n    datasourceId,\n    datasourceType,\n    isReplace,\n    standalone,\n    force,\n    title,\n    tabId,\n  ) => {\n    const payload = { ...formData };\n    const chartId = formData.slice_id;\n    const params = new URLSearchParams(window.location.search);\n    const additionalParam = Object.fromEntries(params);\n\n    if (chartId) {\n      additionalParam[URL_PARAMS.sliceId.name] = chartId;\n    } else {\n      additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n      additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n    }\n\n    const urlParams = payload?.url_params || {};\n    Object.entries(urlParams).forEach(([key, value]) => {\n      if (!RESERVED_CHART_URL_PARAMS.includes(key)) {\n        additionalParam[key] = value;\n      }\n    });\n\n    try {\n      let key;\n      let stateModifier;\n      if (isReplace) {\n        key = await postFormData(\n          datasourceId,\n          datasourceType,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'replaceState';\n      } else {\n        key = getUrlParam(URL_PARAMS.formDataKey);\n        await putFormData(\n          datasourceId,\n          datasourceType,\n          key,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'pushState';\n      }\n      // avoid race condition in case user changes route before explore updates the url\n      if (window.location.pathname.startsWith(ensureAppRoot('/explore'))) {\n        const url = mountExploreUrl(\n          standalone ? URL_PARAMS.standalone.name : null,\n          {\n            [URL_PARAMS.formDataKey.name]: key,\n            ...additionalParam,\n          },\n          force,\n        );\n        window.history[stateModifier](payload, title, url);\n      }\n    } catch (e) {\n      logging.warn('Failed at altering browser history', e);\n    }\n  },\n  1000,\n);\n\nconst defaultSidebarsWidth = {\n  controls_width: 320,\n  datasource_width: 300,\n};\n\nfunction getSidebarWidths(key) {\n  return getItem(key, defaultSidebarsWidth[key]);\n}\n\nfunction setSidebarWidths(key, dimension) {\n  const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n  setItem(key, newDimension);\n}\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n    props.controls,\n  );\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [width, setWidth] = useState(\n    getSidebarWidths(LocalStorageKeys.DatasourceWidth),\n  );\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const addHistory = useCallback(\n    async ({ isReplace = false, title } = {}) => {\n      const formData = props.dashboardId\n        ? {\n            ...props.form_data,\n            dashboardId: props.dashboardId,\n          }\n        : props.form_data;\n      const { id: datasourceId, type: datasourceType } = props.datasource;\n\n      updateHistory(\n        formData,\n        datasourceId,\n        datasourceType,\n        isReplace,\n        props.standalone,\n        props.force,\n        title,\n        tabId,\n      );\n    },\n    [\n      props.dashboardId,\n      props.form_data,\n      props.datasource.id,\n      props.datasource.type,\n      props.standalone,\n      props.force,\n      tabId,\n    ],\n  );\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n        formData,\n        props.force,\n        props.timeout,\n        props.chart.id,\n      );\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n    event => {\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      if (controlOrCommand) {\n        const isEnter = event.key === 'Enter' || event.keyCode === 13;\n        const isS = event.key === 's' || event.keyCode === 83;\n        if (isEnter) {\n          onQuery();\n        } else if (isS) {\n          if (props.slice) {\n            props.actions\n              .saveSlice(props.form_data, {\n                action: 'overwrite',\n                slice_id: props.slice.slice_id,\n                slice_name: props.slice.slice_name,\n                add_to_dash: 'noSave',\n                goto_dash: false,\n              })\n              .then(({ data }) => {\n                window.location = data.slice.slice_url;\n              });\n          }\n        }\n      }\n    },\n    [onQuery, props.actions, props.form_data, props.slice],\n  );\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {\n    props.actions.logEvent(\n      LOG_ACTIONS_MOUNT_EXPLORER,\n      props.slice?.slice_id\n        ? {\n            slice_id: props.slice.slice_id,\n          }\n        : undefined,\n    );\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n    controlsChanged => {\n      const newQueryFormData = controlsChanged\n        ? {\n            ...props.chart.latestQueryFormData,\n            ...getFormDataFromControls(pick(props.controls, controlsChanged)),\n          }\n        : getFormDataFromControls(props.controls);\n      props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n      props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n      addHistory();\n    },\n    [\n      addHistory,\n      props.actions,\n      props.chart.id,\n      props.chart.latestQueryFormData,\n      props.controls,\n    ],\n  );\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n      previousControls &&\n      props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value\n    ) {\n      if (\n        props.controls.datasource &&\n        (previousControls.datasource == null ||\n          props.controls.datasource.value !== previousControls.datasource.value)\n      ) {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof previousControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            previousControls[key].value,\n          ),\n      );\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n        key => props.controls[key].renderTrigger,\n      );\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const { controls } = props;\n      const changedControlKeys = Object.keys(controls).filter(key => {\n        const lastControl = lastQueriedControls[key];\n        if (typeof lastControl === 'undefined') {\n          return false;\n        }\n        const { value: value1 } = controls[key];\n        const { value: value2 } = lastControl;\n        if (isObjectLike(value1) && isObjectLike(value2)) {\n          return !areObjectsEqual(value1, value2, {\n            ignoreFields: ['datasourceWarning'],\n          });\n        }\n        return !isEqual(value1, value2);\n      });\n\n      return changedControlKeys.some(\n        key =>\n          !props.controls[key].renderTrigger &&\n          !props.controls[key].dontRefreshOnChange,\n      );\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  useChangeEffect(props.saveAction, () => {\n    if (['saveas', 'overwrite'].includes(props.saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n      props.actions.setSaveAction(null);\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n      control => control.validationErrors,\n    );\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages\n      .map(message => {\n        const matchingLabels = controlsWithErrors\n          .filter(control => control.validationErrors?.includes(message))\n          .map(control => control.label);\n        return [matchingLabels, message];\n      })\n      .map(([labels, message]) => (\n        <div key={message}>\n          {labels.length > 1 ? t('Controls labeled ') : t('Control labeled ')}\n          <strong>{` ${labels.join(', ')}`}</strong>\n          <span>: {message}</span>\n        </div>\n      ));\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = <div style={{ textAlign: 'left' }}>{errors}</div>;\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      <ExploreChartPanel\n        {...props}\n        errorMessage={errorMessage}\n        chartIsStale={chartIsStale}\n        onQuery={onQuery}\n      />\n    );\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    <ExploreContainer>\n      <ConnectedExploreChartHeader\n        actions={props.actions}\n        canOverwrite={props.can_overwrite}\n        canDownload={props.can_download}\n        dashboardId={props.dashboardId}\n        colorScheme={props.dashboardColorScheme}\n        isStarred={props.isStarred}\n        slice={props.slice}\n        sliceName={props.sliceName}\n        table_name={props.table_name}\n        formData={props.form_data}\n        chart={props.chart}\n        ownState={props.ownState}\n        user={props.user}\n        reports={props.reports}\n        saveDisabled={errorMessage || props.chart.chartStatus === 'loading'}\n        metadata={props.metadata}\n      />\n      <ExplorePanelContainer id=\"explore-container\">\n        <Global\n          styles={css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          `}\n        />\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) => {\n            setWidth(ref.getBoundingClientRect().width);\n            setSidebarWidths(LocalStorageKeys.DatasourceWidth, d);\n          }}\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.DatasourceWidth),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.DatasourceWidth]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className={\n            isCollapsed ? 'no-show' : 'explore-column data-source-selection'\n          }\n        >\n          <div className=\"title-container\">\n            <span className=\"horizontal-text\">{t('Chart Source')}</span>\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"action-button\"\n              onClick={toggleCollapse}\n            >\n              <Icons.VerticalAlignTopOutlined\n                iconSize=\"xl\"\n                css={css`\n                  transform: rotate(-90deg);\n                `}\n                className=\"collapse-icon\"\n                iconColor={theme.colors.primary.base}\n              />\n            </span>\n          </div>\n          <DataSourcePanel\n            formData={props.form_data}\n            datasource={props.datasource}\n            controls={props.controls}\n            actions={props.actions}\n            width={width}\n            user={props.user}\n          />\n        </Resizable>\n        {isCollapsed ? (\n          <div\n            className=\"sidebar\"\n            onClick={toggleCollapse}\n            data-test=\"open-datasource-tab\"\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span role=\"button\" tabIndex={0} className=\"action-button\">\n              <Tooltip title={t('Open Datasource tab')}>\n                <Icons.VerticalAlignTopOutlined\n                  iconSize=\"xl\"\n                  css={css`\n                    transform: rotate(90deg);\n                  `}\n                  className=\"collapse-icon\"\n                  iconColor={theme.colors.primary.base}\n                />\n              </Tooltip>\n            </span>\n          </div>\n        ) : null}\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) =>\n            setSidebarWidths(LocalStorageKeys.ControlsWidth, d)\n          }\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.ControlsWidth),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.ControlsWidth]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className=\"col-sm-3 explore-column controls-column\"\n        >\n          <ConnectedControlPanelsContainer\n            exploreState={props.exploreState}\n            actions={props.actions}\n            form_data={props.form_data}\n            controls={props.controls}\n            chart={props.chart}\n            datasource_type={props.datasource_type}\n            isDatasourceMetaLoading={props.isDatasourceMetaLoading}\n            onQuery={onQuery}\n            onStop={onStop}\n            canStopQuery={props.can_add || props.can_overwrite}\n            errorMessage={errorMessage}\n            chartIsStale={chartIsStale}\n          />\n        </Resizable>\n        <div\n          className={cx(\n            'main-explore-content',\n            isCollapsed ? 'col-sm-9' : 'col-sm-7',\n          )}\n        >\n          {renderChartContainer()}\n        </div>\n      </ExplorePanelContainer>\n      {props.isSaveModalVisible && (\n        <SaveModal\n          addDangerToast={props.addDangerToast}\n          actions={props.actions}\n          form_data={props.form_data}\n          sliceName={props.sliceName}\n          dashboardId={props.dashboardId}\n        />\n      )}\n    </ExploreContainer>\n  );\n}\n\nExploreViewContainer.propTypes = propTypes;\n\nconst retainQueryModeRequirements = hiddenFormData =>\n  Object.keys(hiddenFormData ?? {}).filter(\n    key => !QUERY_MODE_REQUISITES.has(key),\n  );\n\nfunction patchBigNumberTotalFormData(form_data, slice) {\n  if (\n    form_data.viz_type === 'big_number_total' &&\n    !form_data.subtitle &&\n    slice?.form_data?.subheader\n  ) {\n    return { ...form_data, subtitle: slice.form_data.subheader };\n  }\n  return form_data;\n}\n\nfunction mapStateToProps(state) {\n  const {\n    explore,\n    charts,\n    common,\n    impressionId,\n    dataMask,\n    reports,\n    user,\n    saveModal,\n  } = state;\n  const { controls, slice, datasource, metadata, hiddenFormData } = explore;\n  const hasQueryMode = !!controls.query_mode?.value;\n  const fieldsToOmit = hasQueryMode\n    ? retainQueryModeRequirements(hiddenFormData)\n    : Object.keys(hiddenFormData ?? {});\n  const form_data = omit(getFormDataFromControls(controls), fieldsToOmit);\n  const slice_id = form_data.slice_id ?? slice?.slice_id ?? 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n    { ...form_data.extra_form_data },\n    {\n      ...dataMask[slice_id]?.ownState,\n    },\n  );\n  const chart = charts[slice_id];\n  const colorScheme = explore.form_data?.color_scheme;\n  const ownColorScheme = explore.form_data?.own_color_scheme;\n  const dashboardColorScheme = explore.form_data?.dashboard_color_scheme;\n\n  let dashboardId = Number(explore.form_data?.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  if (\n    form_data.viz_type === 'big_number_total' &&\n    slice?.form_data?.subheader &&\n    (!controls.subtitle?.value || controls.subtitle.value === '')\n  ) {\n    controls.subtitle = {\n      ...controls.subtitle,\n      value: slice.form_data.subheader,\n    };\n    if (slice?.form_data?.subheader_font_size) {\n      controls.subtitle_font_size = {\n        ...controls.subtitle_font_size,\n        value: slice.form_data.subheader_font_size,\n      };\n    }\n  }\n\n  const patchedFormData = patchBigNumberTotalFormData(form_data, slice);\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    colorScheme,\n    ownColorScheme,\n    dashboardColorScheme,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: datasource?.column_formats ?? null,\n    containerId: slice\n      ? `slice-container-${slice.slice_id}`\n      : 'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: explore.sliceName ?? slice?.slice_name ?? null,\n    triggerRender: explore.triggerRender,\n    form_data: patchedFormData,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: dataMask[slice_id]?.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n    metadata,\n    saveAction: explore.saveAction,\n    isSaveModalVisible: saveModal.isVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...datasourcesActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions,\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withToasts(memo(ExploreViewContainer)));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}