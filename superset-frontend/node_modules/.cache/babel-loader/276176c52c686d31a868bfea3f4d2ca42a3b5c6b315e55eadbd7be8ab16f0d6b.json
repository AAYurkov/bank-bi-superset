{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Modal from 'src/components/Modal';\nimport { Icons } from 'src/components/Icons';\nimport Alert from 'src/components/Alert';\nimport { t, useTheme } from '@superset-ui/core';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst ErrorAlert = ({ errorType = t('Error'), message, type = 'error', description, descriptionDetails, descriptionDetailsCollapsed = true, descriptionPre = true, compact = false, children, closable = true, showIcon = true, className }) => {\n  const [isDescriptionVisible, setIsDescriptionVisible] = useState(!descriptionDetailsCollapsed);\n  const [showModal, setShowModal] = useState(false);\n  const toggleDescription = () => {\n    setIsDescriptionVisible(!isDescriptionVisible);\n  };\n  const theme = useTheme();\n  const renderTrigger = () => {\n    const icon = type === 'warning' ? _jsx(Icons.WarningOutlined, {}) : _jsx(Icons.ExclamationCircleOutlined, {});\n    const color = type === 'warning' ? theme.colors.warning.base : theme.colors.error.base;\n    return _jsxs(\"div\", { className: className, style: { cursor: 'pointer' }, children: [\n      _jsxs(\"span\", { style: { color }, children: [icon, \" \"] }),\n      errorType] }\n    );\n  };\n  const preStyle = {\n    whiteSpace: 'pre-wrap',\n    fontFamily: theme.typography.families.sansSerif\n  };\n  const renderDescription = () => _jsxs(\"div\", { children: [\n    description && _jsx(\"p\", { style: descriptionPre ? preStyle : {}, \"data-testid\": \"description\", children:\n      description }\n    ),\n    descriptionDetails && _jsxs(\"div\", { children: [\n      isDescriptionVisible && _jsx(\"p\", { style: descriptionPre ? preStyle : {}, children: descriptionDetails }),\n      _jsx(\"span\", { role: \"button\", tabIndex: 0, onClick: toggleDescription, style: { textDecoration: 'underline', cursor: 'pointer' }, children:\n        isDescriptionVisible ? t('See less') : t('See more') }\n      )] }\n    )] }\n  );\n  const renderAlert = (closable) => _jsxs(Alert, { description: renderDescription(), type: type, showIcon: true, closable: closable, className: className, children: [\n    _jsx(\"strong\", { children: errorType }),\n    message && _jsxs(_Fragment, { children: [\": \",\n      _jsx(\"span\", { children: message })] }\n    )] }\n  );\n  if (compact) {\n    return _jsxs(_Fragment, { children: [\n      _jsx(Tooltip, { title: `${errorType}: ${message}`, children:\n        _jsx(\"span\", { role: \"button\", onClick: () => setShowModal(true), tabIndex: 0, children:\n          renderTrigger() }\n        ) }\n      ),\n      _jsxs(Modal, { title: errorType, show: showModal, onHide: () => setShowModal(false), footer: null, children: [\n        renderAlert(false),\n        children] }\n      )] }\n    );\n  }\n  return renderAlert(closable);\n};__signature__(ErrorAlert, \"useState{[isDescriptionVisible, setIsDescriptionVisible](!descriptionDetailsCollapsed)}\\nuseState{[showModal, setShowModal](false)}\\nuseTheme{theme}\", () => [useTheme]);const _default =\nErrorAlert;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ErrorAlert, \"ErrorAlert\", \"/Users/aryurkov/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","Tooltip","Modal","Icons","Alert","t","useTheme","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ErrorAlert","errorType","message","type","description","descriptionDetails","descriptionDetailsCollapsed","descriptionPre","compact","children","closable","showIcon","className","isDescriptionVisible","setIsDescriptionVisible","showModal","setShowModal","toggleDescription","theme","renderTrigger","icon","WarningOutlined","ExclamationCircleOutlined","color","colors","warning","base","error","style","cursor","preStyle","whiteSpace","fontFamily","typography","families","sansSerif","renderDescription","role","tabIndex","onClick","textDecoration","renderAlert","title","show","onHide","footer","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Modal from 'src/components/Modal';\nimport { Icons } from 'src/components/Icons';\nimport Alert from 'src/components/Alert';\nimport { t, useTheme } from '@superset-ui/core';\n\nexport interface ErrorAlertProps {\n  errorType?: string; // Strong text on the first line\n  message: React.ReactNode | string; // Text shown on the first line\n  type?: 'warning' | 'error' | 'info'; // Allows only 'warning' or 'error'\n  description?: React.ReactNode; // Text shown under the first line, not collapsible\n  descriptionDetails?: React.ReactNode | string; // Text shown under the first line, collapsible\n  descriptionDetailsCollapsed?: boolean; // Hides the collapsible section unless \"Show more\" is clicked, default true\n  descriptionPre?: boolean; // Uses pre-style to break lines, default true\n  compact?: boolean; // Shows the error icon with tooltip and modal, default false\n  children?: React.ReactNode; // Additional content to show in the modal\n  closable?: boolean; // Show close button, default true\n  showIcon?: boolean; // Show icon, default true\n  className?: string;\n}\n\nconst ErrorAlert: React.FC<ErrorAlertProps> = ({\n  errorType = t('Error'),\n  message,\n  type = 'error',\n  description,\n  descriptionDetails,\n  descriptionDetailsCollapsed = true,\n  descriptionPre = true,\n  compact = false,\n  children,\n  closable = true,\n  showIcon = true,\n  className,\n}) => {\n  const [isDescriptionVisible, setIsDescriptionVisible] = useState(\n    !descriptionDetailsCollapsed,\n  );\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleDescription = () => {\n    setIsDescriptionVisible(!isDescriptionVisible);\n  };\n\n  const theme = useTheme();\n  const renderTrigger = () => {\n    const icon =\n      type === 'warning' ? (\n        <Icons.WarningOutlined />\n      ) : (\n        <Icons.ExclamationCircleOutlined />\n      );\n    const color =\n      type === 'warning' ? theme.colors.warning.base : theme.colors.error.base;\n    return (\n      <div className={className} style={{ cursor: 'pointer' }}>\n        <span style={{ color }}>{icon} </span>\n        {errorType}\n      </div>\n    );\n  };\n  const preStyle = {\n    whiteSpace: 'pre-wrap',\n    fontFamily: theme.typography.families.sansSerif,\n  };\n  const renderDescription = () => (\n    <div>\n      {description && (\n        <p style={descriptionPre ? preStyle : {}} data-testid=\"description\">\n          {description}\n        </p>\n      )}\n      {descriptionDetails && (\n        <div>\n          {isDescriptionVisible && (\n            <p style={descriptionPre ? preStyle : {}}>{descriptionDetails}</p>\n          )}\n          <span\n            role=\"button\"\n            tabIndex={0}\n            onClick={toggleDescription}\n            style={{ textDecoration: 'underline', cursor: 'pointer' }}\n          >\n            {isDescriptionVisible ? t('See less') : t('See more')}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n  const renderAlert = (closable: boolean) => (\n    <Alert\n      description={renderDescription()}\n      type={type}\n      showIcon\n      closable={closable}\n      className={className}\n    >\n      <strong>{errorType}</strong>\n      {message && (\n        <>\n          : <span>{message}</span>\n        </>\n      )}\n    </Alert>\n  );\n\n  if (compact) {\n    return (\n      <>\n        <Tooltip title={`${errorType}: ${message}`}>\n          <span role=\"button\" onClick={() => setShowModal(true)} tabIndex={0}>\n            {renderTrigger()}\n          </span>\n        </Tooltip>\n        <Modal\n          title={errorType}\n          show={showModal}\n          onHide={() => setShowModal(false)}\n          footer={null}\n        >\n          {renderAlert(false)}\n          {children}\n        </Modal>\n      </>\n    );\n  }\n\n  return renderAlert(closable);\n};\n\nexport default ErrorAlert;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}