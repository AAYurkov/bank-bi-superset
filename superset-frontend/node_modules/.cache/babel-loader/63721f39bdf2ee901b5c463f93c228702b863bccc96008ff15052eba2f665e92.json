{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useMemo, useCallback, useEffect, memo } from 'react';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { css, useTheme } from '@superset-ui/core';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport Chart from 'src/dashboard/components/gridComponents/Chart';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport { Draggable } from 'src/dashboard/components/dnd/DragDroppable';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from 'src/dashboard/util/getChartAndLabelComponentIdFromPath';\nimport useFilterFocusHighlightStyles from 'src/dashboard/util/useFilterFocusHighlightStyles';\nimport { COLUMN_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport { GRID_BASE_UNIT, GRID_GUTTER_SIZE, GRID_MIN_COLUMN_COUNT, GRID_MIN_ROW_UNITS } from 'src/dashboard/util/constants';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const CHART_MARGIN = 32;\nconst ChartHolder = ({ id, parentId, component, parentComponent, index, depth, availableColumnCount, columnWidth, onResizeStart, onResize, onResizeStop, editMode, isComponentVisible, dashboardId, fullSizeChartId, getComponentById = () => undefined, deleteComponent, updateComponents, handleComponentDrop, setFullSizeChartId, isInView }) => {\n  const theme = useTheme();\n  const fullSizeStyle = css`\n    && {\n      position: fixed !important;\n      z-index: 3000;\n      left: 0;\n      top: 0;\n      padding: ${theme.gridUnit * 2}px;\n    }\n  `;\n  const { chartId } = component.meta;\n  const isFullSize = fullSizeChartId === chartId;\n  const focusHighlightStyles = useFilterFocusHighlightStyles(chartId);\n  const directPathToChild = useSelector((state) => state.dashboardState.directPathToChild);\n  const directPathLastUpdated = useSelector((state) => {var _state$dashboardState;return (_state$dashboardState = state.dashboardState.directPathLastUpdated) != null ? _state$dashboardState : 0;});\n  const [extraControls, setExtraControls] = useState({});\n  const [outlinedComponentId, setOutlinedComponentId] = useState();\n  const [outlinedColumnName, setOutlinedColumnName] = useState();\n  const [currentDirectPathLastUpdated, setCurrentDirectPathLastUpdated] = useState(0);\n  const infoFromPath = useMemo(() => getChartAndLabelComponentIdFromPath(directPathToChild != null ? directPathToChild : []), [directPathToChild]);\n  // Calculate if the chart should be outlined\n  useEffect(() => {\n    const { label: columnName, chart: chartComponentId } = infoFromPath;\n    if (directPathLastUpdated !== currentDirectPathLastUpdated &&\n    component.id === chartComponentId) {\n      setCurrentDirectPathLastUpdated(directPathLastUpdated);\n      setOutlinedComponentId(component.id);\n      setOutlinedColumnName(columnName);\n    }\n  }, [\n  component,\n  currentDirectPathLastUpdated,\n  directPathLastUpdated,\n  infoFromPath]\n  );\n  // Remove the chart outline after a defined time\n  useEffect(() => {\n    let timerId;\n    if (outlinedComponentId) {\n      timerId = setTimeout(() => {\n        setOutlinedComponentId(undefined);\n        setOutlinedColumnName(undefined);\n      }, 2000);\n    }\n    return () => {\n      if (timerId) {\n        clearTimeout(timerId);\n      }\n    };\n  }, [outlinedComponentId]);\n  const widthMultiple = useMemo(() => {var _getComponentById, _getComponentById$met, _parentComponent$pare;\n    const columnParentWidth = (_getComponentById = getComponentById((_parentComponent$pare = parentComponent.parents) == null ? void 0 : _parentComponent$pare.find((parent) => parent.startsWith(COLUMN_TYPE)))) == null ? void 0 : (_getComponentById$met = _getComponentById.meta) == null ? void 0 : _getComponentById$met.width;\n    let widthMultiple = component.meta.width || GRID_MIN_COLUMN_COUNT;\n    if (parentComponent.type === COLUMN_TYPE) {\n      widthMultiple = parentComponent.meta.width || GRID_MIN_COLUMN_COUNT;\n    } else\n    if (columnParentWidth && widthMultiple > columnParentWidth) {\n      widthMultiple = columnParentWidth;\n    }\n    return widthMultiple;\n  }, [\n  component,\n  getComponentById,\n  parentComponent.meta.width,\n  parentComponent.parents,\n  parentComponent.type]\n  );\n  const { chartWidth, chartHeight } = useMemo(() => {\n    let width = 0;\n    let height = 0;\n    if (isFullSize) {\n      width = window.innerWidth - CHART_MARGIN;\n      height = window.innerHeight - CHART_MARGIN;\n    } else\n    {\n      width = Math.floor(widthMultiple * columnWidth +\n      (widthMultiple - 1) * GRID_GUTTER_SIZE -\n      CHART_MARGIN);\n      height = Math.floor(component.meta.height * GRID_BASE_UNIT - CHART_MARGIN);\n    }\n    return {\n      chartWidth: width,\n      chartHeight: height\n    };\n  }, [columnWidth, component, isFullSize, widthMultiple]);\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(id, parentId);\n  }, [deleteComponent, id, parentId]);\n  const handleUpdateSliceName = useCallback((nextName) => {\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          sliceNameOverride: nextName\n        }\n      }\n    });\n  }, [component, updateComponents]);\n  const handleToggleFullSize = useCallback(() => {\n    setFullSizeChartId(isFullSize ? null : chartId);\n  }, [chartId, isFullSize, setFullSizeChartId]);\n  const handleExtraControl = useCallback((name, value) => {\n    setExtraControls((current) => ({\n      ...current,\n      [name]: value\n    }));\n  }, []);\n  const renderChild = useCallback(({ dragSourceRef }) => _jsx(ResizableContainer, { id: component.id, adjustableWidth: parentComponent.type === ROW_TYPE, adjustableHeight: true, widthStep: columnWidth, widthMultiple: widthMultiple, heightStep: GRID_BASE_UNIT, heightMultiple: component.meta.height, minWidthMultiple: GRID_MIN_COLUMN_COUNT, minHeightMultiple: GRID_MIN_ROW_UNITS, maxWidthMultiple: availableColumnCount + widthMultiple, onResizeStart: onResizeStart, onResize: onResize, onResizeStop: onResizeStop, editMode: editMode, children:\n    _jsxs(\"div\", { ref: dragSourceRef, \"data-test\": \"dashboard-component-chart-holder\", style: focusHighlightStyles, css: isFullSize ? fullSizeStyle : undefined, className: cx('dashboard-component', 'dashboard-component-chart-holder',\n      // The following class is added to support custom dashboard styling via the CSS editor\n      `dashboard-chart-id-${chartId}`, outlinedComponentId ? 'fade-in' : 'fade-out'), children: [\n      !editMode && _jsx(AnchorLink, { id: component.id, scrollIntoView: outlinedComponentId === component.id }),\n      !!outlinedComponentId && _jsx(\"style\", { children:\n        `label[for=${outlinedColumnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n                  }` }\n      ),\n      _jsx(Chart, { componentId: component.id, id: component.meta.chartId, dashboardId: dashboardId, width: chartWidth, height: chartHeight, sliceName: component.meta.sliceNameOverride || component.meta.sliceName || '', updateSliceName: handleUpdateSliceName, isComponentVisible: isComponentVisible, handleToggleFullSize: handleToggleFullSize, isFullSize: isFullSize, setControlValue: handleExtraControl, extraControls: extraControls, isInView: isInView }),\n      editMode && _jsx(HoverMenu, { position: \"top\", children:\n        _jsx(\"div\", { \"data-test\": \"dashboard-delete-component-button\", children:\n          _jsx(DeleteComponentButton, { onDelete: handleDeleteComponent }) }\n        ) }\n      )] }\n    ) }\n  ), [\n  component.id,\n  component.meta.height,\n  component.meta.chartId,\n  component.meta.sliceNameOverride,\n  component.meta.sliceName,\n  parentComponent.type,\n  columnWidth,\n  widthMultiple,\n  availableColumnCount,\n  onResizeStart,\n  onResize,\n  onResizeStop,\n  editMode,\n  focusHighlightStyles,\n  isFullSize,\n  fullSizeStyle,\n  chartId,\n  outlinedComponentId,\n  outlinedColumnName,\n  dashboardId,\n  chartWidth,\n  chartHeight,\n  handleUpdateSliceName,\n  isComponentVisible,\n  handleToggleFullSize,\n  handleExtraControl,\n  extraControls,\n  isInView,\n  handleDeleteComponent]\n  );\n  return _jsx(Draggable, { component: component, parentComponent: parentComponent, orientation: parentComponent.type === ROW_TYPE ? 'column' : 'row', index: index, depth: depth, onDrop: handleComponentDrop, disableDragDrop: false, editMode: editMode, children:\n    renderChild }\n  );\n};__signature__(ChartHolder, \"useTheme{theme}\\nuseFilterFocusHighlightStyles{focusHighlightStyles}\\nuseSelector{directPathToChild}\\nuseSelector{directPathLastUpdated}\\nuseState{[extraControls, setExtraControls]({})}\\nuseState{[outlinedComponentId, setOutlinedComponentId]}\\nuseState{[outlinedColumnName, setOutlinedColumnName]}\\nuseState{[currentDirectPathLastUpdated, setCurrentDirectPathLastUpdated](0)}\\nuseMemo{infoFromPath}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{widthMultiple}\\nuseMemo{{ chartWidth, chartHeight }}\\nuseCallback{handleDeleteComponent}\\nuseCallback{handleUpdateSliceName}\\nuseCallback{handleToggleFullSize}\\nuseCallback{handleExtraControl}\\nuseCallback{renderChild}\", () => [useTheme, useFilterFocusHighlightStyles, useSelector, useSelector]);const _default = /*#__PURE__*/\nmemo(ChartHolder);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_MARGIN, \"CHART_MARGIN\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx\");reactHotLoader.register(ChartHolder, \"ChartHolder\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","memo","cx","useSelector","css","useTheme","AnchorLink","Chart","DeleteComponentButton","Draggable","HoverMenu","ResizableContainer","getChartAndLabelComponentIdFromPath","useFilterFocusHighlightStyles","COLUMN_TYPE","ROW_TYPE","GRID_BASE_UNIT","GRID_GUTTER_SIZE","GRID_MIN_COLUMN_COUNT","GRID_MIN_ROW_UNITS","jsx","_jsx","jsxs","_jsxs","CHART_MARGIN","ChartHolder","id","parentId","component","parentComponent","index","depth","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","editMode","isComponentVisible","dashboardId","fullSizeChartId","getComponentById","undefined","deleteComponent","updateComponents","handleComponentDrop","setFullSizeChartId","isInView","theme","fullSizeStyle","gridUnit","chartId","meta","isFullSize","focusHighlightStyles","directPathToChild","state","dashboardState","directPathLastUpdated","_state$dashboardState","extraControls","setExtraControls","outlinedComponentId","setOutlinedComponentId","outlinedColumnName","setOutlinedColumnName","currentDirectPathLastUpdated","setCurrentDirectPathLastUpdated","infoFromPath","label","columnName","chart","chartComponentId","timerId","setTimeout","clearTimeout","widthMultiple","_getComponentById","_getComponentById$met","_parentComponent$pare","columnParentWidth","parents","find","parent","startsWith","width","type","chartWidth","chartHeight","height","window","innerWidth","innerHeight","Math","floor","handleDeleteComponent","handleUpdateSliceName","nextName","sliceNameOverride","handleToggleFullSize","handleExtraControl","name","value","current","renderChild","dragSourceRef","adjustableWidth","adjustableHeight","widthStep","heightStep","heightMultiple","minWidthMultiple","minHeightMultiple","maxWidthMultiple","children","ref","style","className","scrollIntoView","componentId","sliceName","updateSliceName","setControlValue","position","onDelete","orientation","onDrop","disableDragDrop","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useMemo, useCallback, useEffect, memo } from 'react';\n\nimport { ResizeCallback, ResizeStartCallback } from 're-resizable';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { css, useTheme } from '@superset-ui/core';\nimport { LayoutItem, RootState } from 'src/dashboard/types';\nimport AnchorLink from 'src/dashboard/components/AnchorLink';\nimport Chart from 'src/dashboard/components/gridComponents/Chart';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport { Draggable } from 'src/dashboard/components/dnd/DragDroppable';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from 'src/dashboard/util/getChartAndLabelComponentIdFromPath';\nimport useFilterFocusHighlightStyles from 'src/dashboard/util/useFilterFocusHighlightStyles';\nimport { COLUMN_TYPE, ROW_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  GRID_BASE_UNIT,\n  GRID_GUTTER_SIZE,\n  GRID_MIN_COLUMN_COUNT,\n  GRID_MIN_ROW_UNITS,\n} from 'src/dashboard/util/constants';\n\nexport const CHART_MARGIN = 32;\n\ninterface ChartHolderProps {\n  id: string;\n  parentId: string;\n  dashboardId: number;\n  component: LayoutItem;\n  parentComponent: LayoutItem;\n  getComponentById?: (id?: string) => LayoutItem | undefined;\n  index: number;\n  depth: number;\n  editMode: boolean;\n  directPathLastUpdated?: number;\n  fullSizeChartId: number | null;\n  isComponentVisible: boolean;\n\n  // grid related\n  availableColumnCount: number;\n  columnWidth: number;\n  onResizeStart: ResizeStartCallback;\n  onResize: ResizeCallback;\n  onResizeStop: ResizeCallback;\n\n  // dnd\n  deleteComponent: (id: string, parentId: string) => void;\n  updateComponents: Function;\n  handleComponentDrop: (...args: unknown[]) => unknown;\n  setFullSizeChartId: (chartId: number | null) => void;\n  isInView: boolean;\n}\n\nconst ChartHolder = ({\n  id,\n  parentId,\n  component,\n  parentComponent,\n  index,\n  depth,\n  availableColumnCount,\n  columnWidth,\n  onResizeStart,\n  onResize,\n  onResizeStop,\n  editMode,\n  isComponentVisible,\n  dashboardId,\n  fullSizeChartId,\n  getComponentById = () => undefined,\n  deleteComponent,\n  updateComponents,\n  handleComponentDrop,\n  setFullSizeChartId,\n  isInView,\n}: ChartHolderProps) => {\n  const theme = useTheme();\n  const fullSizeStyle = css`\n    && {\n      position: fixed !important;\n      z-index: 3000;\n      left: 0;\n      top: 0;\n      padding: ${theme.gridUnit * 2}px;\n    }\n  `;\n  const { chartId } = component.meta;\n  const isFullSize = fullSizeChartId === chartId;\n\n  const focusHighlightStyles = useFilterFocusHighlightStyles(chartId);\n  const directPathToChild = useSelector(\n    (state: RootState) => state.dashboardState.directPathToChild,\n  );\n  const directPathLastUpdated = useSelector(\n    (state: RootState) => state.dashboardState.directPathLastUpdated ?? 0,\n  );\n\n  const [extraControls, setExtraControls] = useState<Record<string, unknown>>(\n    {},\n  );\n  const [outlinedComponentId, setOutlinedComponentId] = useState<string>();\n  const [outlinedColumnName, setOutlinedColumnName] = useState<string>();\n  const [currentDirectPathLastUpdated, setCurrentDirectPathLastUpdated] =\n    useState(0);\n\n  const infoFromPath = useMemo(\n    () => getChartAndLabelComponentIdFromPath(directPathToChild ?? []) as any,\n    [directPathToChild],\n  );\n\n  // Calculate if the chart should be outlined\n  useEffect(() => {\n    const { label: columnName, chart: chartComponentId } = infoFromPath;\n\n    if (\n      directPathLastUpdated !== currentDirectPathLastUpdated &&\n      component.id === chartComponentId\n    ) {\n      setCurrentDirectPathLastUpdated(directPathLastUpdated);\n      setOutlinedComponentId(component.id);\n      setOutlinedColumnName(columnName);\n    }\n  }, [\n    component,\n    currentDirectPathLastUpdated,\n    directPathLastUpdated,\n    infoFromPath,\n  ]);\n\n  // Remove the chart outline after a defined time\n  useEffect(() => {\n    let timerId: NodeJS.Timeout | undefined;\n    if (outlinedComponentId) {\n      timerId = setTimeout(() => {\n        setOutlinedComponentId(undefined);\n        setOutlinedColumnName(undefined);\n      }, 2000);\n    }\n\n    return () => {\n      if (timerId) {\n        clearTimeout(timerId);\n      }\n    };\n  }, [outlinedComponentId]);\n\n  const widthMultiple = useMemo(() => {\n    const columnParentWidth = getComponentById(\n      parentComponent.parents?.find(parent => parent.startsWith(COLUMN_TYPE)),\n    )?.meta?.width;\n\n    let widthMultiple = component.meta.width || GRID_MIN_COLUMN_COUNT;\n    if (parentComponent.type === COLUMN_TYPE) {\n      widthMultiple = parentComponent.meta.width || GRID_MIN_COLUMN_COUNT;\n    } else if (columnParentWidth && widthMultiple > columnParentWidth) {\n      widthMultiple = columnParentWidth;\n    }\n\n    return widthMultiple;\n  }, [\n    component,\n    getComponentById,\n    parentComponent.meta.width,\n    parentComponent.parents,\n    parentComponent.type,\n  ]);\n\n  const { chartWidth, chartHeight } = useMemo(() => {\n    let width = 0;\n    let height = 0;\n\n    if (isFullSize) {\n      width = window.innerWidth - CHART_MARGIN;\n      height = window.innerHeight - CHART_MARGIN;\n    } else {\n      width = Math.floor(\n        widthMultiple * columnWidth +\n          (widthMultiple - 1) * GRID_GUTTER_SIZE -\n          CHART_MARGIN,\n      );\n      height = Math.floor(\n        component.meta.height * GRID_BASE_UNIT - CHART_MARGIN,\n      );\n    }\n\n    return {\n      chartWidth: width,\n      chartHeight: height,\n    };\n  }, [columnWidth, component, isFullSize, widthMultiple]);\n\n  const handleDeleteComponent = useCallback(() => {\n    deleteComponent(id, parentId);\n  }, [deleteComponent, id, parentId]);\n\n  const handleUpdateSliceName = useCallback(\n    (nextName: string) => {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            sliceNameOverride: nextName,\n          },\n        },\n      });\n    },\n    [component, updateComponents],\n  );\n\n  const handleToggleFullSize = useCallback(() => {\n    setFullSizeChartId(isFullSize ? null : chartId);\n  }, [chartId, isFullSize, setFullSizeChartId]);\n\n  const handleExtraControl = useCallback((name: string, value: unknown) => {\n    setExtraControls(current => ({\n      ...current,\n      [name]: value,\n    }));\n  }, []);\n\n  const renderChild = useCallback(\n    ({ dragSourceRef }) => (\n      <ResizableContainer\n        id={component.id}\n        adjustableWidth={parentComponent.type === ROW_TYPE}\n        adjustableHeight\n        widthStep={columnWidth}\n        widthMultiple={widthMultiple}\n        heightStep={GRID_BASE_UNIT}\n        heightMultiple={component.meta.height}\n        minWidthMultiple={GRID_MIN_COLUMN_COUNT}\n        minHeightMultiple={GRID_MIN_ROW_UNITS}\n        maxWidthMultiple={availableColumnCount + widthMultiple}\n        onResizeStart={onResizeStart}\n        onResize={onResize}\n        onResizeStop={onResizeStop}\n        editMode={editMode}\n      >\n        <div\n          ref={dragSourceRef}\n          data-test=\"dashboard-component-chart-holder\"\n          style={focusHighlightStyles}\n          css={isFullSize ? fullSizeStyle : undefined}\n          className={cx(\n            'dashboard-component',\n            'dashboard-component-chart-holder',\n            // The following class is added to support custom dashboard styling via the CSS editor\n            `dashboard-chart-id-${chartId}`,\n            outlinedComponentId ? 'fade-in' : 'fade-out',\n          )}\n        >\n          {!editMode && (\n            <AnchorLink\n              id={component.id}\n              scrollIntoView={outlinedComponentId === component.id}\n            />\n          )}\n          {!!outlinedComponentId && (\n            <style>\n              {`label[for=${outlinedColumnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n                  }`}\n            </style>\n          )}\n          <Chart\n            componentId={component.id}\n            id={component.meta.chartId}\n            dashboardId={dashboardId}\n            width={chartWidth}\n            height={chartHeight}\n            sliceName={\n              component.meta.sliceNameOverride || component.meta.sliceName || ''\n            }\n            updateSliceName={handleUpdateSliceName}\n            isComponentVisible={isComponentVisible}\n            handleToggleFullSize={handleToggleFullSize}\n            isFullSize={isFullSize}\n            setControlValue={handleExtraControl}\n            extraControls={extraControls}\n            isInView={isInView}\n          />\n          {editMode && (\n            <HoverMenu position=\"top\">\n              <div data-test=\"dashboard-delete-component-button\">\n                <DeleteComponentButton onDelete={handleDeleteComponent} />\n              </div>\n            </HoverMenu>\n          )}\n        </div>\n      </ResizableContainer>\n    ),\n    [\n      component.id,\n      component.meta.height,\n      component.meta.chartId,\n      component.meta.sliceNameOverride,\n      component.meta.sliceName,\n      parentComponent.type,\n      columnWidth,\n      widthMultiple,\n      availableColumnCount,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      editMode,\n      focusHighlightStyles,\n      isFullSize,\n      fullSizeStyle,\n      chartId,\n      outlinedComponentId,\n      outlinedColumnName,\n      dashboardId,\n      chartWidth,\n      chartHeight,\n      handleUpdateSliceName,\n      isComponentVisible,\n      handleToggleFullSize,\n      handleExtraControl,\n      extraControls,\n      isInView,\n      handleDeleteComponent,\n    ],\n  );\n\n  return (\n    <Draggable\n      component={component}\n      parentComponent={parentComponent}\n      orientation={parentComponent.type === ROW_TYPE ? 'column' : 'row'}\n      index={index}\n      depth={depth}\n      onDrop={handleComponentDrop}\n      disableDragDrop={false}\n      editMode={editMode}\n    >\n      {renderChild}\n    </Draggable>\n  );\n};\n\nexport default memo(ChartHolder);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}