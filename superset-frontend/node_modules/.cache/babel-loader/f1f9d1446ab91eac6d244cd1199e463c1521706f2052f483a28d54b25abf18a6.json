{"ast":null,"code":"var _getCategoricalScheme, _getCategoricalScheme2;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { getCategoricalSchemeRegistry, isFeatureEnabled, FeatureFlag } from '@superset-ui/core';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Avatar, AvatarGroup } from 'src/components/Avatar';\nimport { ensureAppRoot } from 'src/utils/pathUtils';\nimport { getRandomColor } from './utils';import { jsxs as _jsxs, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst colorList = (_getCategoricalScheme = (_getCategoricalScheme2 = getCategoricalSchemeRegistry().get()) == null ? void 0 : _getCategoricalScheme2.colors) != null ? _getCategoricalScheme : [];\nexport default function FacePile({ users, maxCount = 4 }) {\n  return _jsx(AvatarGroup, { max: { count: maxCount }, children:\n    users.map((user) => {var _first_name$, _last_name$;\n      const { first_name, last_name, id } = user;\n      const name = getOwnerName(user);\n      const uniqueKey = `${id}-${first_name}-${last_name}`;\n      const color = getRandomColor(uniqueKey, colorList);\n      const avatarUrl = isFeatureEnabled(FeatureFlag.SlackEnableAvatars) ?\n      ensureAppRoot(`/api/v1/user/${id}/avatar.png`) :\n      undefined;\n      return _jsx(Tooltip, { title: name, placement: \"top\", children:\n        _jsxs(Avatar, { style: {\n            backgroundColor: color,\n            borderColor: color\n          }, src: avatarUrl, children: [\n          first_name == null ? void 0 : (_first_name$ = first_name[0]) == null ? void 0 : _first_name$.toLocaleUpperCase(),\n          last_name == null ? void 0 : (_last_name$ = last_name[0]) == null ? void 0 : _last_name$.toLocaleUpperCase()] }, name\n        ) }, name\n      );\n    }) }\n  );\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(colorList, \"colorList\", \"/Users/aryurkov/superset/superset-frontend/src/components/FacePile/index.tsx\");reactHotLoader.register(FacePile, \"FacePile\", \"/Users/aryurkov/superset/superset-frontend/src/components/FacePile/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getCategoricalSchemeRegistry","isFeatureEnabled","FeatureFlag","getOwnerName","Tooltip","Avatar","AvatarGroup","ensureAppRoot","getRandomColor","jsxs","_jsxs","jsx","_jsx","colorList","_getCategoricalScheme","_getCategoricalScheme2","get","colors","FacePile","users","maxCount","max","count","children","map","user","_first_name$","_last_name$","first_name","last_name","id","name","uniqueKey","color","avatarUrl","SlackEnableAvatars","undefined","title","placement","style","backgroundColor","borderColor","src","toLocaleUpperCase","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/FacePile/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport type Owner from 'src/types/Owner';\nimport {\n  getCategoricalSchemeRegistry,\n  isFeatureEnabled,\n  FeatureFlag,\n} from '@superset-ui/core';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Avatar, AvatarGroup } from 'src/components/Avatar';\nimport { ensureAppRoot } from 'src/utils/pathUtils';\nimport { getRandomColor } from './utils';\n\ninterface FacePileProps {\n  users: Owner[];\n  maxCount?: number;\n}\n\nconst colorList = getCategoricalSchemeRegistry().get()?.colors ?? [];\n\nexport default function FacePile({ users, maxCount = 4 }: FacePileProps) {\n  return (\n    <AvatarGroup max={{ count: maxCount }}>\n      {users.map(user => {\n        const { first_name, last_name, id } = user;\n        const name = getOwnerName(user);\n        const uniqueKey = `${id}-${first_name}-${last_name}`;\n        const color = getRandomColor(uniqueKey, colorList);\n        const avatarUrl = isFeatureEnabled(FeatureFlag.SlackEnableAvatars)\n          ? ensureAppRoot(`/api/v1/user/${id}/avatar.png`)\n          : undefined;\n        return (\n          <Tooltip key={name} title={name} placement=\"top\">\n            <Avatar\n              key={name}\n              style={{\n                backgroundColor: color,\n                borderColor: color,\n              }}\n              src={avatarUrl}\n            >\n              {first_name?.[0]?.toLocaleUpperCase()}\n              {last_name?.[0]?.toLocaleUpperCase()}\n            </Avatar>\n          </Tooltip>\n        );\n      })}\n    </AvatarGroup>\n  );\n}\n"],"mappings":"yVAmBA,SACEA,4BAA4B,EAC5BC,gBAAgB,EAChBC,WAAW,QACN,mBAAmB;AAC1B,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,MAAM,EAAEC,WAAW,QAAQ,uBAAuB;AAC3D,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,cAAc,QAAQ,SAAS,CAAC,SAAAC,IAAA,IAAAC,KAAA,EAAAC,GAAA,IAAAC,IAAA;AAOzC,MAAMC,SAAS,IAAAC,qBAAA,IAAAC,sBAAA,GAAGf,4BAA4B,EAAE,CAACgB,GAAG,EAAE,qBAApCD,sBAAA,CAAsCE,MAAM,YAAAH,qBAAA,GAAI,EAAE;AAEpE,eAAc,SAAUI,QAAQA,CAAC,EAAEC,KAAK,EAAEC,QAAQ,GAAG,CAAC,EAAiB;EACrE,OACER,IAAA,CAACN,WAAW,IAACe,GAAG,EAAE,EAAEC,KAAK,EAAEF,QAAQ,EAAG,EAAAG,QAAA;IACnCJ,KAAK,CAACK,GAAG,CAAC,CAAAC,IAAI,KAAG,KAAAC,YAAA,EAAAC,WAAA;MAChB,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAEC,EAAE,EAAE,GAAGL,IAAI;MAC1C,MAAMM,IAAI,GAAG5B,YAAY,CAACsB,IAAI,CAAC;MAC/B,MAAMO,SAAS,GAAG,GAAGF,EAAE,IAAIF,UAAU,IAAIC,SAAS,EAAE;MACpD,MAAMI,KAAK,GAAGzB,cAAc,CAACwB,SAAS,EAAEnB,SAAS,CAAC;MAClD,MAAMqB,SAAS,GAAGjC,gBAAgB,CAACC,WAAW,CAACiC,kBAAkB,CAAC;MAC9D5B,aAAa,CAAC,gBAAgBuB,EAAE,aAAa,CAAC;MAC9CM,SAAS;MACb,OACExB,IAAA,CAACR,OAAO,IAAYiC,KAAK,EAAEN,IAAK,EAACO,SAAS,EAAC,KAAK,EAAAf,QAAA;QAC9Cb,KAAA,CAACL,MAAM,IAELkC,KAAK,EAAE;YACLC,eAAe,EAAEP,KAAK;YACtBQ,WAAW,EAAER;WACb,EACFS,GAAG,EAAER,SAAU,EAAAX,QAAA;UAEdK,UAAU,qBAAAF,YAAA,GAAVE,UAAU,CAAG,CAAC,CAAC,qBAAfF,YAAA,CAAiBiB,iBAAiB,EAAE;UACpCd,SAAS,qBAAAF,WAAA,GAATE,SAAS,CAAG,CAAC,CAAC,qBAAdF,WAAA,CAAgBgB,iBAAiB,EAAE,KAR/BZ;QASC,CACV,IAZcA;MAYL,CAAC;IAEd,CAAC,CAAC;EACS,CAAC;AAElB,CAAC,mBAAAa,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAV,SAAA,MAAAQ,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA/BKlC,SAAS,+FAAA+B,cAAA,CAAAG,QAAA,CAES7B,QAAQ,sHAAA8B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAZ,SAAA,CAAAY,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}