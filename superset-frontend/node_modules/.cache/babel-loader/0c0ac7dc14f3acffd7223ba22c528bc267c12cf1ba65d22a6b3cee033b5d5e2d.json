{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { css, t, SupersetClient, useTheme } from '@superset-ui/core';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport RoleListAddModal from 'src/features/roles/RoleListAddModal';\nimport RoleListEditModal from 'src/features/roles/RoleListEditModal';\nimport RoleListDuplicateModal from 'src/features/roles/RoleListDuplicateModal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu from 'src/features/home/SubMenu';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport { Icons } from 'src/components/Icons';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst PAGE_SIZE = 25;\nvar ModalType;\n(function (ModalType) {\n  ModalType[\"ADD\"] = \"add\";\n  ModalType[\"EDIT\"] = \"edit\";\n  ModalType[\"DUPLICATE\"] = \"duplicate\";\n})(ModalType || (ModalType = {}));\nfunction RolesList({ addDangerToast, addSuccessToast, user }) {\n  const theme = useTheme();\n  const { state: { loading, resourceCount: rolesCount, resourceCollection: roles, bulkSelectEnabled }, fetchData, refreshData, toggleBulkSelect } = useListViewResource('security/roles/search', t('Role'), addDangerToast, false);\n  const [modalState, setModalState] = useState({\n    edit: false,\n    add: false,\n    duplicate: false\n  });\n  const openModal = (type) => setModalState((prev) => ({ ...prev, [type]: true }));\n  const closeModal = (type) => setModalState((prev) => ({ ...prev, [type]: false }));\n  const [currentRole, setCurrentRole] = useState(null);\n  const [roleCurrentlyDeleting, setRoleCurrentlyDeleting] = useState(null);\n  const [permissions, setPermissions] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loadingState, setLoadingState] = useState({\n    permissions: true,\n    users: true\n  });\n  const isAdmin = useMemo(() => isUserAdmin(user), [user]);\n  const fetchPermissions = useCallback(async () => {\n    try {\n      const pageSize = 100;\n      const fetchPage = async (pageIndex) => {\n        const response = await SupersetClient.get({\n          endpoint: `api/v1/security/permissions-resources/?q=(page_size:${pageSize},page:${pageIndex})`\n        });\n        return {\n          count: response.json.count,\n          results: response.json.result.map(({ permission, view_menu, id }) => ({\n            label: `${permission.name.replace(/_/g, ' ')} ${view_menu.name.replace(/_/g, ' ')}`,\n            value: `${permission.name}__${view_menu.name}`,\n            id\n          }))\n        };\n      };\n      const initialResponse = await fetchPage(0);\n      const totalPermissions = initialResponse.count;\n      const firstPageResults = initialResponse.results;\n      if (firstPageResults.length >= totalPermissions) {\n        setPermissions(firstPageResults);\n        return;\n      }\n      const totalPages = Math.ceil(totalPermissions / pageSize);\n      const permissionRequests = Array.from({ length: totalPages - 1 }, (_, i) => fetchPage(i + 1));\n      const remainingResults = await Promise.all(permissionRequests);\n      setPermissions([\n      ...firstPageResults,\n      ...remainingResults.flatMap((res) => res.results)]\n      );\n    }\n    catch (err) {\n      addDangerToast(t('Error while fetching permissions'));\n    } finally\n    {\n      setLoadingState((prev) => ({ ...prev, permissions: false }));\n    }\n  }, []);\n  const fetchUsers = useCallback(async () => {\n    try {\n      const pageSize = 100;\n      const fetchPage = async (pageIndex) => {\n        const response = await SupersetClient.get({\n          endpoint: `api/v1/security/users/?q=(page_size:${pageSize},page:${pageIndex})`\n        });\n        return response.json;\n      };\n      const initialResponse = await fetchPage(0);\n      const totalUsers = initialResponse.count;\n      const firstPageResults = initialResponse.result;\n      if (pageSize >= totalUsers) {\n        setUsers(firstPageResults);\n        return;\n      }\n      const totalPages = Math.ceil(totalUsers / pageSize);\n      const userRequests = Array.from({ length: totalPages - 1 }, (_, i) => fetchPage(i + 1));\n      const remainingResults = await Promise.all(userRequests);\n      setUsers([\n      ...firstPageResults,\n      ...remainingResults.flatMap((res) => res.result)]\n      );\n    }\n    catch (err) {\n      addDangerToast(t('Error while fetching users'));\n    } finally\n    {\n      setLoadingState((prev) => ({ ...prev, users: false }));\n    }\n  }, []);\n  useEffect(() => {\n    fetchPermissions();\n  }, [fetchPermissions]);\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n  const handleRoleDelete = async ({ id, name }) => {\n    try {\n      await SupersetClient.delete({\n        endpoint: `/api/v1/security/roles/${id}`\n      });\n      refreshData();\n      setRoleCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted role: %s', name));\n    }\n    catch (error) {\n      addDangerToast(t('There was an issue deleting %s', name));\n    }\n  };\n  const handleBulkRolesDelete = async (rolesToDelete) => {\n    const deletedRoleNames = [];\n    await Promise.all(rolesToDelete.map(async (role) => {\n      try {\n        await SupersetClient.delete({\n          endpoint: `api/v1/security/roles/${role.id}`\n        });\n        deletedRoleNames.push(role.name);\n      }\n      catch (error) {\n        addDangerToast(t('Error deleting %s', role.name));\n      }\n    }));\n    if (deletedRoleNames.length > 0) {\n      addSuccessToast(t('Deleted roles: %s', deletedRoleNames.join(', ')));\n    }\n    refreshData();\n  };\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'name',\n    Header: t('Name'),\n    Cell: ({ row: { original: { name } } }) => _jsx(\"span\", { children: name })\n  },\n  {\n    accessor: 'user_ids',\n    Header: t('Users'),\n    hidden: true,\n    Cell: ({ row: { original } }) => original.user_ids.join(', ')\n  },\n  {\n    accessor: 'permission_ids',\n    Header: t('Permissions'),\n    hidden: true,\n    Cell: ({ row: { original } }) => original.permission_ids.join(', ')\n  },\n  {\n    Cell: ({ row: { original } }) => {\n      const handleEdit = () => {\n        setCurrentRole(original);\n        openModal(ModalType.EDIT);\n      };\n      const handleDelete = () => setRoleCurrentlyDeleting(original);\n      const handleDuplicate = () => {\n        setCurrentRole(original);\n        openModal(ModalType.DUPLICATE);\n      };\n      const actions = isAdmin ?\n      [\n      {\n        label: 'role-list-edit-action',\n        tooltip: t('Edit role'),\n        placement: 'bottom',\n        icon: 'EditOutlined',\n        onClick: handleEdit\n      },\n      {\n        label: 'role-list-duplicate-action',\n        tooltip: t('Duplicate role'),\n        placement: 'bottom',\n        icon: 'CopyOutlined',\n        onClick: handleDuplicate\n      },\n      {\n        label: 'role-list-delete-action',\n        tooltip: t('Delete role'),\n        placement: 'bottom',\n        icon: 'DeleteOutlined',\n        onClick: handleDelete\n      }] :\n\n      [];\n      return _jsx(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    hidden: !isAdmin,\n    size: 'xl'\n  }],\n  [isAdmin]);\n  const subMenuButtons = [];\n  if (isAdmin) {\n    subMenuButtons.push({\n      name: _jsxs(_Fragment, { children: [\n        _jsx(Icons.PlusOutlined, { iconColor: theme.colors.primary.light5, iconSize: \"m\", css: css`\n                margin: auto ${theme.gridUnit * 2}px auto 0;\n                vertical-align: text-top;\n              ` }),\n        t('Role')] }\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        openModal(ModalType.ADD);\n      },\n      loading: loadingState.permissions,\n      'data-test': 'add-role-button'\n    }, {\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary'\n    });\n  }\n  const filters = useMemo(() => [\n  {\n    Header: t('Name'),\n    key: 'name',\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Users'),\n    key: 'user_ids',\n    id: 'user_ids',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: t('All'),\n    selects: users == null ? void 0 : users.map((user) => ({\n      label: user.username,\n      value: user.id\n    })),\n    loading: loadingState.users\n  },\n  {\n    Header: t('Permissions'),\n    key: 'permission_ids',\n    id: 'permission_ids',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: t('All'),\n    selects: permissions == null ? void 0 : permissions.map((permission) => ({\n      label: permission.label,\n      value: permission.id\n    })),\n    loading: loadingState.permissions\n  }],\n  [permissions, users, loadingState.users, loadingState.permissions]);\n  const emptyState = {\n    title: t('No roles yet'),\n    image: 'filter-results.svg',\n    ...(isAdmin && {\n      buttonAction: () => {\n        openModal(ModalType.ADD);\n      },\n      buttonText: _jsxs(_Fragment, { children: [\n        _jsx(Icons.PlusOutlined, { iconColor: theme.colors.primary.light5, iconSize: \"m\", css: css`\n              margin: auto ${theme.gridUnit * 2}px auto 0;\n              vertical-align: text-top;\n            ` }),\n        t('Role')] }\n      )\n    })\n  };\n  return _jsxs(_Fragment, { children: [\n    _jsx(SubMenu, { name: t('List Roles'), buttons: subMenuButtons }),\n    _jsx(RoleListAddModal, { onHide: () => closeModal(ModalType.ADD), show: modalState.add, onSave: () => {\n        refreshData();\n        closeModal(ModalType.ADD);\n      }, permissions: permissions }),\n    modalState.edit && currentRole && _jsx(RoleListEditModal, { role: currentRole, show: modalState.edit, onHide: () => closeModal(ModalType.EDIT), onSave: () => {\n        refreshData();\n        closeModal(ModalType.EDIT);\n        fetchUsers();\n      }, permissions: permissions, users: users }),\n    modalState.duplicate && currentRole && _jsx(RoleListDuplicateModal, { role: currentRole, show: modalState.duplicate, onHide: () => closeModal(ModalType.DUPLICATE), onSave: () => {\n        refreshData();\n        closeModal(ModalType.DUPLICATE);\n      } }),\n    roleCurrentlyDeleting && _jsx(DeleteModal, { description: t('This action will permanently delete the role.'), onConfirm: () => {\n        if (roleCurrentlyDeleting) {\n          handleRoleDelete(roleCurrentlyDeleting);\n        }\n      }, onHide: () => setRoleCurrentlyDeleting(null), open: true, title: t('Delete Role?') }),\n    _jsx(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected roles?'), onConfirm: handleBulkRolesDelete, children:\n      (confirmDelete) => {\n        const bulkActions = isAdmin ?\n        [\n        {\n          key: 'delete',\n          name: t('Delete'),\n          onSelect: confirmDelete,\n          type: 'danger'\n        }] :\n\n        [];\n        return _jsx(ListView, { className: \"role-list-view\", columns: columns, count: rolesCount, data: roles, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, emptyState: emptyState, refreshData: refreshData });\n      } }\n    )] }\n  );\n}__signature__(RolesList, \"useTheme{theme}\\nuseListViewResource{{ state: { loading, resourceCount: rolesCount, resourceCollection: roles, bulkSelectEnabled, }, fetchData, refreshData, toggleBulkSelect, }}\\nuseState{[modalState, setModalState]({\\n        edit: false,\\n        add: false,\\n        duplicate: false,\\n    })}\\nuseState{[currentRole, setCurrentRole](null)}\\nuseState{[roleCurrentlyDeleting, setRoleCurrentlyDeleting](null)}\\nuseState{[permissions, setPermissions]([])}\\nuseState{[users, setUsers]([])}\\nuseState{[loadingState, setLoadingState]({\\n        permissions: true,\\n        users: true,\\n    })}\\nuseMemo{isAdmin}\\nuseCallback{fetchPermissions}\\nuseCallback{fetchUsers}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useTheme, useListViewResource]);const _default =\nwithToasts(RolesList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/Users/aryurkov/superset/superset-frontend/src/pages/RolesList/index.tsx\");reactHotLoader.register(ModalType, \"ModalType\", \"/Users/aryurkov/superset/superset-frontend/src/pages/RolesList/index.tsx\");reactHotLoader.register(RolesList, \"RolesList\", \"/Users/aryurkov/superset/superset-frontend/src/pages/RolesList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/pages/RolesList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","css","t","SupersetClient","useTheme","useListViewResource","RoleListAddModal","RoleListEditModal","RoleListDuplicateModal","withToasts","SubMenu","ActionsBar","ListView","FilterOperator","DeleteModal","ConfirmStatusChange","isUserAdmin","Icons","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PAGE_SIZE","ModalType","RolesList","addDangerToast","addSuccessToast","user","theme","state","loading","resourceCount","rolesCount","resourceCollection","roles","bulkSelectEnabled","fetchData","refreshData","toggleBulkSelect","modalState","setModalState","edit","add","duplicate","openModal","type","prev","closeModal","currentRole","setCurrentRole","roleCurrentlyDeleting","setRoleCurrentlyDeleting","permissions","setPermissions","users","setUsers","loadingState","setLoadingState","isAdmin","fetchPermissions","pageSize","fetchPage","pageIndex","response","get","endpoint","count","json","results","result","map","permission","view_menu","id","label","name","replace","value","initialResponse","totalPermissions","firstPageResults","length","totalPages","Math","ceil","permissionRequests","Array","from","_","i","remainingResults","Promise","all","flatMap","res","err","fetchUsers","totalUsers","userRequests","handleRoleDelete","delete","error","handleBulkRolesDelete","rolesToDelete","deletedRoleNames","role","push","join","initialSort","desc","columns","accessor","Header","Cell","row","original","children","hidden","user_ids","permission_ids","handleEdit","EDIT","handleDelete","handleDuplicate","DUPLICATE","actions","tooltip","placement","icon","onClick","disableSortBy","size","subMenuButtons","PlusOutlined","iconColor","colors","primary","light5","iconSize","gridUnit","buttonStyle","ADD","filters","key","input","operator","Contains","RelationOneMany","unfilteredLabel","selects","username","emptyState","title","image","buttonAction","buttonText","buttons","onHide","show","onSave","description","onConfirm","open","confirmDelete","bulkActions","onSelect","className","data","disableBulkSelect","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/pages/RolesList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { css, t, SupersetClient, useTheme } from '@superset-ui/core';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport RoleListAddModal from 'src/features/roles/RoleListAddModal';\nimport RoleListEditModal from 'src/features/roles/RoleListEditModal';\nimport RoleListDuplicateModal from 'src/features/roles/RoleListDuplicateModal';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport {\n  FormattedPermission,\n  PermissionResource,\n  UserObject,\n} from 'src/features/roles/types';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport { Icons } from 'src/components/Icons';\n\nconst PAGE_SIZE = 25;\n\ninterface RolesListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n    roles: object;\n  };\n}\n\nexport type RoleObject = {\n  id: number;\n  name: string;\n  permission_ids: number[];\n  users?: Array<UserObject>;\n  user_ids: number[];\n};\n\nenum ModalType {\n  ADD = 'add',\n  EDIT = 'edit',\n  DUPLICATE = 'duplicate',\n}\n\nfunction RolesList({ addDangerToast, addSuccessToast, user }: RolesListProps) {\n  const theme = useTheme();\n  const {\n    state: {\n      loading,\n      resourceCount: rolesCount,\n      resourceCollection: roles,\n      bulkSelectEnabled,\n    },\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<RoleObject>(\n    'security/roles/search',\n    t('Role'),\n    addDangerToast,\n    false,\n  );\n  const [modalState, setModalState] = useState({\n    edit: false,\n    add: false,\n    duplicate: false,\n  });\n  const openModal = (type: ModalType) =>\n    setModalState(prev => ({ ...prev, [type]: true }));\n  const closeModal = (type: ModalType) =>\n    setModalState(prev => ({ ...prev, [type]: false }));\n\n  const [currentRole, setCurrentRole] = useState<RoleObject | null>(null);\n  const [roleCurrentlyDeleting, setRoleCurrentlyDeleting] =\n    useState<RoleObject | null>(null);\n  const [permissions, setPermissions] = useState<FormattedPermission[]>([]);\n  const [users, setUsers] = useState<UserObject[]>([]);\n  const [loadingState, setLoadingState] = useState({\n    permissions: true,\n    users: true,\n  });\n\n  const isAdmin = useMemo(() => isUserAdmin(user), [user]);\n\n  const fetchPermissions = useCallback(async () => {\n    try {\n      const pageSize = 100;\n\n      const fetchPage = async (pageIndex: number) => {\n        const response = await SupersetClient.get({\n          endpoint: `api/v1/security/permissions-resources/?q=(page_size:${pageSize},page:${pageIndex})`,\n        });\n\n        return {\n          count: response.json.count,\n          results: response.json.result.map(\n            ({ permission, view_menu, id }: PermissionResource) => ({\n              label: `${permission.name.replace(/_/g, ' ')} ${view_menu.name.replace(/_/g, ' ')}`,\n              value: `${permission.name}__${view_menu.name}`,\n              id,\n            }),\n          ),\n        };\n      };\n\n      const initialResponse = await fetchPage(0);\n      const totalPermissions = initialResponse.count;\n      const firstPageResults = initialResponse.results;\n\n      if (firstPageResults.length >= totalPermissions) {\n        setPermissions(firstPageResults);\n        return;\n      }\n\n      const totalPages = Math.ceil(totalPermissions / pageSize);\n\n      const permissionRequests = Array.from(\n        { length: totalPages - 1 },\n        (_, i) => fetchPage(i + 1),\n      );\n      const remainingResults = await Promise.all(permissionRequests);\n\n      setPermissions([\n        ...firstPageResults,\n        ...remainingResults.flatMap(res => res.results),\n      ]);\n    } catch (err) {\n      addDangerToast(t('Error while fetching permissions'));\n    } finally {\n      setLoadingState(prev => ({ ...prev, permissions: false }));\n    }\n  }, []);\n\n  const fetchUsers = useCallback(async () => {\n    try {\n      const pageSize = 100;\n\n      const fetchPage = async (pageIndex: number) => {\n        const response = await SupersetClient.get({\n          endpoint: `api/v1/security/users/?q=(page_size:${pageSize},page:${pageIndex})`,\n        });\n        return response.json;\n      };\n\n      const initialResponse = await fetchPage(0);\n      const totalUsers = initialResponse.count;\n      const firstPageResults = initialResponse.result;\n\n      if (pageSize >= totalUsers) {\n        setUsers(firstPageResults);\n        return;\n      }\n\n      const totalPages = Math.ceil(totalUsers / pageSize);\n\n      const userRequests = Array.from({ length: totalPages - 1 }, (_, i) =>\n        fetchPage(i + 1),\n      );\n      const remainingResults = await Promise.all(userRequests);\n\n      setUsers([\n        ...firstPageResults,\n        ...remainingResults.flatMap(res => res.result),\n      ]);\n    } catch (err) {\n      addDangerToast(t('Error while fetching users'));\n    } finally {\n      setLoadingState(prev => ({ ...prev, users: false }));\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPermissions();\n  }, [fetchPermissions]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  const handleRoleDelete = async ({ id, name }: RoleObject) => {\n    try {\n      await SupersetClient.delete({\n        endpoint: `/api/v1/security/roles/${id}`,\n      });\n\n      refreshData();\n      setRoleCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted role: %s', name));\n    } catch (error) {\n      addDangerToast(t('There was an issue deleting %s', name));\n    }\n  };\n\n  const handleBulkRolesDelete = async (rolesToDelete: RoleObject[]) => {\n    const deletedRoleNames: string[] = [];\n\n    await Promise.all(\n      rolesToDelete.map(async role => {\n        try {\n          await SupersetClient.delete({\n            endpoint: `api/v1/security/roles/${role.id}`,\n          });\n\n          deletedRoleNames.push(role.name);\n        } catch (error) {\n          addDangerToast(t('Error deleting %s', role.name));\n        }\n      }),\n    );\n\n    if (deletedRoleNames.length > 0) {\n      addSuccessToast(t('Deleted roles: %s', deletedRoleNames.join(', ')));\n    }\n\n    refreshData();\n  };\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { name },\n          },\n        }: any) => <span>{name}</span>,\n      },\n      {\n        accessor: 'user_ids',\n        Header: t('Users'),\n        hidden: true,\n        Cell: ({ row: { original } }: any) => original.user_ids.join(', '),\n      },\n      {\n        accessor: 'permission_ids',\n        Header: t('Permissions'),\n        hidden: true,\n        Cell: ({ row: { original } }: any) =>\n          original.permission_ids.join(', '),\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => {\n            setCurrentRole(original);\n            openModal(ModalType.EDIT);\n          };\n          const handleDelete = () => setRoleCurrentlyDeleting(original);\n          const handleDuplicate = () => {\n            setCurrentRole(original);\n            openModal(ModalType.DUPLICATE);\n          };\n\n          const actions = isAdmin\n            ? [\n                {\n                  label: 'role-list-edit-action',\n                  tooltip: t('Edit role'),\n                  placement: 'bottom',\n                  icon: 'EditOutlined',\n                  onClick: handleEdit,\n                },\n                {\n                  label: 'role-list-duplicate-action',\n                  tooltip: t('Duplicate role'),\n                  placement: 'bottom',\n                  icon: 'CopyOutlined',\n                  onClick: handleDuplicate,\n                },\n                {\n                  label: 'role-list-delete-action',\n                  tooltip: t('Delete role'),\n                  placement: 'bottom',\n                  icon: 'DeleteOutlined',\n                  onClick: handleDelete,\n                },\n              ]\n            : [];\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !isAdmin,\n        size: 'xl',\n      },\n    ],\n    [isAdmin],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (isAdmin) {\n    subMenuButtons.push(\n      {\n        name: (\n          <>\n            <Icons.PlusOutlined\n              iconColor={theme.colors.primary.light5}\n              iconSize=\"m\"\n              css={css`\n                margin: auto ${theme.gridUnit * 2}px auto 0;\n                vertical-align: text-top;\n              `}\n            />\n            {t('Role')}\n          </>\n        ),\n        buttonStyle: 'primary',\n        onClick: () => {\n          openModal(ModalType.ADD);\n        },\n        loading: loadingState.permissions,\n        'data-test': 'add-role-button',\n      },\n      {\n        name: t('Bulk select'),\n        onClick: toggleBulkSelect,\n        buttonStyle: 'secondary',\n      },\n    );\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'name',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Users'),\n        key: 'user_ids',\n        id: 'user_ids',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        selects: users?.map(user => ({\n          label: user.username,\n          value: user.id,\n        })),\n        loading: loadingState.users,\n      },\n      {\n        Header: t('Permissions'),\n        key: 'permission_ids',\n        id: 'permission_ids',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        selects: permissions?.map(permission => ({\n          label: permission.label,\n          value: permission.id,\n        })),\n        loading: loadingState.permissions,\n      },\n    ],\n    [permissions, users, loadingState.users, loadingState.permissions],\n  );\n\n  const emptyState = {\n    title: t('No roles yet'),\n    image: 'filter-results.svg',\n    ...(isAdmin && {\n      buttonAction: () => {\n        openModal(ModalType.ADD);\n      },\n      buttonText: (\n        <>\n          <Icons.PlusOutlined\n            iconColor={theme.colors.primary.light5}\n            iconSize=\"m\"\n            css={css`\n              margin: auto ${theme.gridUnit * 2}px auto 0;\n              vertical-align: text-top;\n            `}\n          />\n          {t('Role')}\n        </>\n      ),\n    }),\n  };\n\n  return (\n    <>\n      <SubMenu name={t('List Roles')} buttons={subMenuButtons} />\n      <RoleListAddModal\n        onHide={() => closeModal(ModalType.ADD)}\n        show={modalState.add}\n        onSave={() => {\n          refreshData();\n          closeModal(ModalType.ADD);\n        }}\n        permissions={permissions}\n      />\n      {modalState.edit && currentRole && (\n        <RoleListEditModal\n          role={currentRole}\n          show={modalState.edit}\n          onHide={() => closeModal(ModalType.EDIT)}\n          onSave={() => {\n            refreshData();\n            closeModal(ModalType.EDIT);\n            fetchUsers();\n          }}\n          permissions={permissions}\n          users={users}\n        />\n      )}\n      {modalState.duplicate && currentRole && (\n        <RoleListDuplicateModal\n          role={currentRole}\n          show={modalState.duplicate}\n          onHide={() => closeModal(ModalType.DUPLICATE)}\n          onSave={() => {\n            refreshData();\n            closeModal(ModalType.DUPLICATE);\n          }}\n        />\n      )}\n      {roleCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the role.')}\n          onConfirm={() => {\n            if (roleCurrentlyDeleting) {\n              handleRoleDelete(roleCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setRoleCurrentlyDeleting(null)}\n          open\n          title={t('Delete Role?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected roles?')}\n        onConfirm={handleBulkRolesDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = isAdmin\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<RoleObject>\n              className=\"role-list-view\"\n              columns={columns}\n              count={rolesCount}\n              data={roles}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              emptyState={emptyState}\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(RolesList);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}