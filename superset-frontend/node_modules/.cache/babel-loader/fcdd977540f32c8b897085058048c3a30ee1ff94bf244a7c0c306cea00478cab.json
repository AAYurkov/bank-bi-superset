{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { t, useTheme } from '@superset-ui/core';\nimport Popover from 'src/components/Popover';\nimport { FiltersContainer, FiltersDetailsContainer, Separator, SectionName } from 'src/dashboard/components/FiltersBadge/Styles';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DetailsPanelPopover = ({ appliedCrossFilterIndicators = [], appliedIndicators = [], onHighlightFilterSource, children, popoverVisible, popoverContentRef, popoverTriggerRef, setPopoverVisible }) => {\n  const activeTabs = useSelector((state) => {var _state$dashboardState;return (_state$dashboardState = state.dashboardState) == null ? void 0 : _state$dashboardState.activeTabs;});\n  // Combined ref array for all filter indicator elements\n  const indicatorRefs = useRef([]);\n  const handleKeyDown = (event) => {\n    switch (event.key) {\n      case 'Escape':\n      case 'Enter':\n        // timing out to allow for filter selection to happen first\n        setTimeout(() => {var _popoverTriggerRef$cu;\n          // move back to the popover trigger element\n          popoverTriggerRef == null ? void 0 : (_popoverTriggerRef$cu = popoverTriggerRef.current) == null ? void 0 : _popoverTriggerRef$cu.focus();\n          // Close popover on ESC or ENTER\n          setPopoverVisible(false);\n        });\n        break;\n      case 'ArrowDown':\n      case 'ArrowUp':{var _indicatorRefs$curren;\n          event.preventDefault(); // Prevent scrolling\n          // Navigate through filters with arrows up/down\n          const currentFocusIndex = indicatorRefs.current.findIndex((ref) => ref === document.activeElement);\n          const maxIndex = indicatorRefs.current.length - 1;\n          let nextFocusIndex = 0;\n          if (event.key === 'ArrowDown') {\n            nextFocusIndex =\n            currentFocusIndex >= maxIndex ? 0 : currentFocusIndex + 1;\n          } else\n          if (event.key === 'ArrowUp') {\n            nextFocusIndex =\n            currentFocusIndex <= 0 ? maxIndex : currentFocusIndex - 1;\n          }\n          (_indicatorRefs$curren = indicatorRefs.current[nextFocusIndex]) == null ? void 0 : _indicatorRefs$curren.focus();\n          break;\n        }\n      case 'Tab':\n        // forcing popover context until ESC or ENTER are pressed\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  };\n  const handleVisibility = (isOpen) => {\n    setPopoverVisible(isOpen);\n  };\n  // we don't need to clean up useEffect, setting { once: true } removes the event listener after handle function is called\n  useEffect(() => {\n    if (popoverVisible) {\n      window.addEventListener('resize', () => setPopoverVisible(false), {\n        once: true\n      });\n    }\n  }, [popoverVisible]);\n  // if tabs change, popover doesn't close automatically\n  useEffect(() => {\n    setPopoverVisible(false);\n  }, [activeTabs]);\n  const indicatorKey = (indicator) => `${indicator.column} - ${indicator.name}`;\n  const theme = useTheme();\n  const content = _jsx(FiltersDetailsContainer, { ref: popoverContentRef, tabIndex: -1, onMouseLeave: () => setPopoverVisible(false), onKeyDown: handleKeyDown, role: \"menu\", children:\n    _jsxs(\"div\", { children: [\n      appliedCrossFilterIndicators.length ? _jsxs(\"div\", { children: [\n        _jsx(SectionName, { children:\n          t('Applied cross-filters (%d)', appliedCrossFilterIndicators.length) }\n        ),\n        _jsx(FiltersContainer, { children:\n          appliedCrossFilterIndicators.map((indicator) => _jsx(FilterIndicator, { ref: (el) => indicatorRefs.current.push(el), indicator: indicator, onClick: onHighlightFilterSource }, indicatorKey(indicator))) }\n        )] }\n      ) : null,\n      appliedCrossFilterIndicators.length && appliedIndicators.length ? _jsx(Separator, {}) : null,\n      appliedIndicators.length ? _jsxs(\"div\", { children: [\n        _jsx(SectionName, { children:\n          t('Applied filters (%d)', appliedIndicators.length) }\n        ),\n        _jsx(FiltersContainer, { children:\n          appliedIndicators.map((indicator) => _jsx(FilterIndicator, { ref: (el) => indicatorRefs.current.push(el), indicator: indicator, onClick: onHighlightFilterSource }, indicatorKey(indicator))) }\n        )] }\n      ) : null] }\n    ) }\n  );\n  return _jsx(Popover, { color: `${theme.colors.grayscale.dark2}cc`, content: content, open: popoverVisible, onOpenChange: handleVisibility, placement: \"bottomRight\", trigger: ['hover'], \"data-test\": \"filter-status-popover\", children:\n    children }\n  );\n};__signature__(DetailsPanelPopover, \"useSelector{activeTabs}\\nuseRef{indicatorRefs}\\nuseEffect{}\\nuseEffect{}\\nuseTheme{theme}\", () => [useSelector, useTheme]);const _default =\nDetailsPanelPopover;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DetailsPanelPopover, \"DetailsPanelPopover\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useRef","useSelector","t","useTheme","Popover","FiltersContainer","FiltersDetailsContainer","Separator","SectionName","FilterIndicator","jsx","_jsx","jsxs","_jsxs","DetailsPanelPopover","appliedCrossFilterIndicators","appliedIndicators","onHighlightFilterSource","children","popoverVisible","popoverContentRef","popoverTriggerRef","setPopoverVisible","activeTabs","state","_state$dashboardState","dashboardState","indicatorRefs","handleKeyDown","event","key","setTimeout","_popoverTriggerRef$cu","current","focus","_indicatorRefs$curren","preventDefault","currentFocusIndex","findIndex","ref","document","activeElement","maxIndex","length","nextFocusIndex","handleVisibility","isOpen","window","addEventListener","once","indicatorKey","indicator","column","name","theme","content","tabIndex","onMouseLeave","onKeyDown","role","map","el","push","onClick","color","colors","grayscale","dark2","open","onOpenChange","placement","trigger","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/FiltersBadge/DetailsPanel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RefObject, useEffect, useRef, KeyboardEvent } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { t, useTheme } from '@superset-ui/core';\nimport Popover from 'src/components/Popover';\nimport {\n  FiltersContainer,\n  FiltersDetailsContainer,\n  Separator,\n  SectionName,\n} from 'src/dashboard/components/FiltersBadge/Styles';\nimport { Indicator } from 'src/dashboard/components/nativeFilters/selectors';\nimport FilterIndicator from 'src/dashboard/components/FiltersBadge/FilterIndicator';\nimport { RootState } from 'src/dashboard/types';\n\nexport interface DetailsPanelProps {\n  appliedCrossFilterIndicators: Indicator[];\n  appliedIndicators: Indicator[];\n  onHighlightFilterSource: (path: string[]) => void;\n  children: JSX.Element;\n  popoverVisible: boolean;\n  popoverContentRef: RefObject<HTMLDivElement>;\n  popoverTriggerRef: RefObject<HTMLDivElement>;\n  setPopoverVisible: (visible: boolean) => void;\n}\n\nconst DetailsPanelPopover = ({\n  appliedCrossFilterIndicators = [],\n  appliedIndicators = [],\n  onHighlightFilterSource,\n  children,\n  popoverVisible,\n  popoverContentRef,\n  popoverTriggerRef,\n  setPopoverVisible,\n}: DetailsPanelProps) => {\n  const activeTabs = useSelector<RootState>(\n    state => state.dashboardState?.activeTabs,\n  );\n  // Combined ref array for all filter indicator elements\n  const indicatorRefs = useRef<(HTMLButtonElement | null)[]>([]);\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\n    switch (event.key) {\n      case 'Escape':\n      case 'Enter':\n        // timing out to allow for filter selection to happen first\n        setTimeout(() => {\n          // move back to the popover trigger element\n          popoverTriggerRef?.current?.focus();\n          // Close popover on ESC or ENTER\n          setPopoverVisible(false);\n        });\n        break;\n      case 'ArrowDown':\n      case 'ArrowUp': {\n        event.preventDefault(); // Prevent scrolling\n        // Navigate through filters with arrows up/down\n        const currentFocusIndex = indicatorRefs.current.findIndex(\n          ref => ref === document.activeElement,\n        );\n        const maxIndex = indicatorRefs.current.length - 1;\n        let nextFocusIndex = 0;\n\n        if (event.key === 'ArrowDown') {\n          nextFocusIndex =\n            currentFocusIndex >= maxIndex ? 0 : currentFocusIndex + 1;\n        } else if (event.key === 'ArrowUp') {\n          nextFocusIndex =\n            currentFocusIndex <= 0 ? maxIndex : currentFocusIndex - 1;\n        }\n        indicatorRefs.current[nextFocusIndex]?.focus();\n        break;\n      }\n      case 'Tab':\n        // forcing popover context until ESC or ENTER are pressed\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleVisibility = (isOpen: boolean) => {\n    setPopoverVisible(isOpen);\n  };\n\n  // we don't need to clean up useEffect, setting { once: true } removes the event listener after handle function is called\n  useEffect(() => {\n    if (popoverVisible) {\n      window.addEventListener('resize', () => setPopoverVisible(false), {\n        once: true,\n      });\n    }\n  }, [popoverVisible]);\n\n  // if tabs change, popover doesn't close automatically\n  useEffect(() => {\n    setPopoverVisible(false);\n  }, [activeTabs]);\n\n  const indicatorKey = (indicator: Indicator): string =>\n    `${indicator.column} - ${indicator.name}`;\n  const theme = useTheme();\n  const content = (\n    <FiltersDetailsContainer\n      ref={popoverContentRef}\n      tabIndex={-1}\n      onMouseLeave={() => setPopoverVisible(false)}\n      onKeyDown={handleKeyDown}\n      role=\"menu\"\n    >\n      <div>\n        {appliedCrossFilterIndicators.length ? (\n          <div>\n            <SectionName>\n              {t(\n                'Applied cross-filters (%d)',\n                appliedCrossFilterIndicators.length,\n              )}\n            </SectionName>\n            <FiltersContainer>\n              {appliedCrossFilterIndicators.map(indicator => (\n                <FilterIndicator\n                  ref={el => indicatorRefs.current.push(el)}\n                  key={indicatorKey(indicator)}\n                  indicator={indicator}\n                  onClick={onHighlightFilterSource}\n                />\n              ))}\n            </FiltersContainer>\n          </div>\n        ) : null}\n        {appliedCrossFilterIndicators.length && appliedIndicators.length ? (\n          <Separator />\n        ) : null}\n        {appliedIndicators.length ? (\n          <div>\n            <SectionName>\n              {t('Applied filters (%d)', appliedIndicators.length)}\n            </SectionName>\n            <FiltersContainer>\n              {appliedIndicators.map(indicator => (\n                <FilterIndicator\n                  ref={el => indicatorRefs.current.push(el)}\n                  key={indicatorKey(indicator)}\n                  indicator={indicator}\n                  onClick={onHighlightFilterSource}\n                />\n              ))}\n            </FiltersContainer>\n          </div>\n        ) : null}\n      </div>\n    </FiltersDetailsContainer>\n  );\n\n  return (\n    <Popover\n      color={`${theme.colors.grayscale.dark2}cc`}\n      content={content}\n      open={popoverVisible}\n      onOpenChange={handleVisibility}\n      placement=\"bottomRight\"\n      trigger={['hover']}\n      data-test=\"filter-status-popover\"\n    >\n      {children}\n    </Popover>\n  );\n};\n\nexport default DetailsPanelPopover;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}