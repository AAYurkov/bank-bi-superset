{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useCallback, useEffect } from 'react';\n/* eslint camelcase: 0 */\nimport URI from 'urijs';\nimport {\n  buildQueryContext,\n  ensureIsArray,\n  getChartBuildQueryRegistry,\n  getChartMetadataRegistry,\n  SupersetClient } from\n'@superset-ui/core';\nimport { availableDomains } from 'src/utils/hostNamesConfig';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { optionLabel } from 'src/utils/common';\nimport { ensureAppRoot } from 'src/utils/pathUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport {\n  DISABLE_INPUT_OPERATORS,\n  MULTI_OPERATORS,\n  OPERATOR_ENUM_TO_OPERATOR_TYPE,\n  UNSAVED_CHART_ID } from\n'src/explore/constants';\nimport { DashboardStandaloneMode } from 'src/dashboard/util/constants';\n\nexport function getChartKey(explore) {var _ref, _slice$slice_id;\n  const { slice, form_data } = explore;\n  return (_ref = (_slice$slice_id = slice == null ? void 0 : slice.slice_id) != null ? _slice$slice_id : form_data == null ? void 0 : form_data.slice_id) != null ? _ref : UNSAVED_CHART_ID;\n}\n\nlet requestCounter = 0;\nexport function getHostName(allowDomainSharding = false) {\n  let currentIndex = 0;\n  if (allowDomainSharding) {\n    currentIndex = requestCounter % availableDomains.length;\n    requestCounter += 1;\n\n    // if domain sharding is enabled, skip main domain for fetching chart API\n    // leave main domain free for other calls like fav star, save change, etc.\n    // to make dashboard be responsive when it's loading large number of charts\n    if (currentIndex === 0) {\n      currentIndex += 1;\n      requestCounter += 1;\n    }\n  }\n  return availableDomains[currentIndex];\n}\n\nexport function getAnnotationJsonUrl(slice_id, force) {\n  if (slice_id === null || slice_id === undefined) {\n    return null;\n  }\n\n  const uri = URI(window.location.search);\n  return uri.\n  pathname(ensureAppRoot('/api/v1/chart/data')).\n  search({\n    form_data: safeStringify({ slice_id }),\n    force\n  }).\n  toString();\n}\n\nexport function getURIDirectory(endpointType = 'base') {\n  // Building the directory part of the URI\n  if (\n  ['full', 'json', 'csv', 'query', 'results', 'samples'].includes(\n    endpointType\n  ))\n  {\n    return ensureAppRoot('/superset/explore_json/');\n  }\n  return ensureAppRoot('/explore/');\n}\n\nexport function mountExploreUrl(endpointType, extraSearch = {}, force = false) {\n  const uri = new URI('/');\n  const directory = getURIDirectory(endpointType);\n  const search = uri.search(true);\n  Object.keys(extraSearch).forEach((key) => {\n    search[key] = extraSearch[key];\n  });\n  if (endpointType === URL_PARAMS.standalone.name) {\n    if (force) {\n      search.force = '1';\n    }\n    search.standalone = DashboardStandaloneMode.HideNav;\n  }\n  return uri.directory(directory).search(search).toString();\n}\n\nexport function getChartDataUri({ path, qs, allowDomainSharding = false }) {\n  // The search params from the window.location are carried through,\n  // but can be specified with curUrl (used for unit tests to spoof\n  // the window.location).\n  let uri = new URI({\n    protocol: window.location.protocol.slice(0, -1),\n    hostname: getHostName(allowDomainSharding),\n    port: window.location.port ? window.location.port : '',\n    path: ensureAppRoot(path)\n  });\n  if (qs) {\n    uri = uri.search(qs);\n  }\n  return uri;\n}\n\n/**\n * This gets the minimal url for the given form data.\n * If there are dashboard overrides present in the form data,\n * they will not be included in the url.\n */\nexport function getExploreUrl({\n  formData,\n  endpointType = 'base',\n  force = false,\n  curUrl = null,\n  requestParams = {},\n  allowDomainSharding = false,\n  method = 'POST'\n}) {\n  if (!formData.datasource) {\n    return null;\n  }\n\n  // label_colors should not pollute the URL\n  // eslint-disable-next-line no-param-reassign\n  delete formData.label_colors;\n\n  let uri = getChartDataUri({\n    path: '/',\n    allowDomainSharding\n  });\n  if (curUrl) {\n    uri = URI(URI(curUrl).search());\n  }\n\n  const directory = getURIDirectory(endpointType);\n\n  // Building the querystring (search) part of the URI\n  const search = uri.search(true);\n  const { slice_id, extra_filters, adhoc_filters, viz_type } = formData;\n  if (slice_id) {\n    const form_data = { slice_id };\n    if (method === 'GET') {\n      form_data.viz_type = viz_type;\n      if (extra_filters && extra_filters.length) {\n        form_data.extra_filters = extra_filters;\n      }\n      if (adhoc_filters && adhoc_filters.length) {\n        form_data.adhoc_filters = adhoc_filters;\n      }\n    }\n    search.form_data = safeStringify(form_data);\n  }\n  if (force) {\n    search.force = 'true';\n  }\n  if (endpointType === 'csv') {\n    search.csv = 'true';\n  }\n  if (endpointType === URL_PARAMS.standalone.name) {\n    search.standalone = '1';\n  }\n  if (endpointType === 'query') {\n    search.query = 'true';\n  }\n  if (endpointType === 'results') {\n    search.results = 'true';\n  }\n  if (endpointType === 'samples') {\n    search.samples = 'true';\n  }\n  const paramNames = Object.keys(requestParams);\n  if (paramNames.length) {\n    paramNames.forEach((name) => {\n      if (requestParams.hasOwnProperty(name)) {\n        search[name] = requestParams[name];\n      }\n    });\n  }\n  return uri.search(search).directory(directory).toString();\n}\n\nexport const getQuerySettings = (formData) => {var _vizMetadata$useLegac, _vizMetadata$parseMet;\n  const vizMetadata = getChartMetadataRegistry().get(formData.viz_type);\n  return [(_vizMetadata$useLegac =\n  vizMetadata == null ? void 0 : vizMetadata.useLegacyApi) != null ? _vizMetadata$useLegac : false, (_vizMetadata$parseMet =\n  vizMetadata == null ? void 0 : vizMetadata.parseMethod) != null ? _vizMetadata$parseMet : 'json-bigint'];\n\n};\n\nexport const buildV1ChartDataPayload = ({\n  formData,\n  force,\n  resultFormat,\n  resultType,\n  setDataMask,\n  ownState\n}) => {var _getChartBuildQueryRe;\n  const buildQuery = (_getChartBuildQueryRe =\n  getChartBuildQueryRegistry().get(formData.viz_type)) != null ? _getChartBuildQueryRe :\n  (buildQueryformData) =>\n  buildQueryContext(buildQueryformData, (baseQueryObject) => [\n  {\n    ...baseQueryObject\n  }]\n  );\n  return buildQuery(\n    {\n      ...formData,\n      force,\n      result_format: resultFormat,\n      result_type: resultType\n    },\n    {\n      ownState,\n      hooks: {\n        setDataMask\n      }\n    }\n  );\n};\n\nexport const getLegacyEndpointType = ({ resultType, resultFormat }) =>\nresultFormat === 'csv' ? resultFormat : resultType;\n\nexport const exportChart = ({\n  formData,\n  resultFormat = 'json',\n  resultType = 'full',\n  force = false,\n  ownState = {}\n}) => {\n  let url;\n  let payload;\n  const [useLegacyApi, parseMethod] = getQuerySettings(formData);\n  if (useLegacyApi) {\n    const endpointType = getLegacyEndpointType({ resultFormat, resultType });\n    url = getExploreUrl({\n      formData,\n      endpointType,\n      allowDomainSharding: false\n    });\n    payload = formData;\n  } else {\n    url = ensureAppRoot('/api/v1/chart/data');\n    payload = buildV1ChartDataPayload({\n      formData,\n      force,\n      resultFormat,\n      resultType,\n      ownState,\n      parseMethod\n    });\n  }\n\n  SupersetClient.postForm(url, { form_data: safeStringify(payload) });\n};\n\nexport const exploreChart = (formData, requestParams) => {\n  const url = getExploreUrl({\n    formData,\n    endpointType: 'base',\n    allowDomainSharding: false,\n    requestParams\n  });\n  SupersetClient.postForm(url, { form_data: safeStringify(formData) });\n};\n\nexport const useDebouncedEffect = (effect, delay, deps) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const callback = useCallback(effect, deps);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      callback();\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [callback, delay]);\n};__signature__(useDebouncedEffect, \"useCallback{callback}\\nuseEffect{}\");\n\nexport const getSimpleSQLExpression = (subject, operator, comparator) => {var _subject$column_name;\n  const isMulti =\n  [...MULTI_OPERATORS].\n  map((op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation).\n  indexOf(operator) >= 0;\n  const showComparator =\n  DISABLE_INPUT_OPERATORS.map(\n    (op) => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation\n  ).indexOf(operator) === -1;\n  // If returned value is an object after changing dataset\n  let expression =\n  typeof subject === 'object' ? (_subject$column_name =\n  subject == null ? void 0 : subject.column_name) != null ? _subject$column_name : '' :\n  subject != null ? subject : '';\n  if (subject && operator) {\n    expression += ` ${operator}`;\n    const firstValue =\n    isMulti && Array.isArray(comparator) ? comparator[0] : comparator;\n    const comparatorArray = ensureIsArray(comparator);\n    const isString =\n    firstValue !== undefined && Number.isNaN(Number(firstValue));\n    const quote = isString ? \"'\" : '';\n    const [prefix, suffix] = isMulti ? ['(', ')'] : ['', ''];\n    if (comparatorArray.length > 0 && showComparator) {\n      const formattedComparators = comparatorArray.\n      map((val) => optionLabel(val)).\n      map(\n        (val) =>\n        `${quote}${isString ? String(val).replace(/'/g, \"''\") : val}${quote}`\n      );\n      expression += ` ${prefix}${formattedComparators.join(', ')}${suffix}`;\n    }\n  }\n  return expression;\n};\n\nexport function formatSelectOptions(options) {\n  return options.map((opt) => [opt, opt.toString()]);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getChartKey, \"getChartKey\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(requestCounter, \"requestCounter\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getHostName, \"getHostName\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getAnnotationJsonUrl, \"getAnnotationJsonUrl\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getURIDirectory, \"getURIDirectory\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(mountExploreUrl, \"mountExploreUrl\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getChartDataUri, \"getChartDataUri\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getExploreUrl, \"getExploreUrl\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getQuerySettings, \"getQuerySettings\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(buildV1ChartDataPayload, \"buildV1ChartDataPayload\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getLegacyEndpointType, \"getLegacyEndpointType\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(exportChart, \"exportChart\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(exploreChart, \"exploreChart\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(useDebouncedEffect, \"useDebouncedEffect\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(getSimpleSQLExpression, \"getSimpleSQLExpression\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");reactHotLoader.register(formatSelectOptions, \"formatSelectOptions\", \"/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","URI","buildQueryContext","ensureIsArray","getChartBuildQueryRegistry","getChartMetadataRegistry","SupersetClient","availableDomains","safeStringify","optionLabel","ensureAppRoot","URL_PARAMS","DISABLE_INPUT_OPERATORS","MULTI_OPERATORS","OPERATOR_ENUM_TO_OPERATOR_TYPE","UNSAVED_CHART_ID","DashboardStandaloneMode","getChartKey","explore","_ref","_slice$slice_id","slice","form_data","slice_id","requestCounter","getHostName","allowDomainSharding","currentIndex","length","getAnnotationJsonUrl","force","undefined","uri","window","location","search","pathname","toString","getURIDirectory","endpointType","includes","mountExploreUrl","extraSearch","directory","Object","keys","forEach","key","standalone","name","HideNav","getChartDataUri","path","qs","protocol","hostname","port","getExploreUrl","formData","curUrl","requestParams","method","datasource","label_colors","extra_filters","adhoc_filters","viz_type","csv","query","results","samples","paramNames","hasOwnProperty","getQuerySettings","_vizMetadata$useLegac","_vizMetadata$parseMet","vizMetadata","get","useLegacyApi","parseMethod","buildV1ChartDataPayload","resultFormat","resultType","setDataMask","ownState","_getChartBuildQueryRe","buildQuery","buildQueryformData","baseQueryObject","result_format","result_type","hooks","getLegacyEndpointType","exportChart","url","payload","postForm","exploreChart","useDebouncedEffect","effect","delay","deps","callback","handler","setTimeout","clearTimeout","__signature__","getSimpleSQLExpression","subject","operator","comparator","_subject$column_name","isMulti","map","op","operation","indexOf","showComparator","expression","column_name","firstValue","Array","isArray","comparatorArray","isString","Number","isNaN","quote","prefix","suffix","formattedComparators","val","String","replace","join","formatSelectOptions","options","opt","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/exploreUtils/index.js"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useCallback, useEffect } from 'react';\n/* eslint camelcase: 0 */\nimport URI from 'urijs';\nimport {\n  buildQueryContext,\n  ensureIsArray,\n  getChartBuildQueryRegistry,\n  getChartMetadataRegistry,\n  SupersetClient,\n} from '@superset-ui/core';\nimport { availableDomains } from 'src/utils/hostNamesConfig';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { optionLabel } from 'src/utils/common';\nimport { ensureAppRoot } from 'src/utils/pathUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport {\n  DISABLE_INPUT_OPERATORS,\n  MULTI_OPERATORS,\n  OPERATOR_ENUM_TO_OPERATOR_TYPE,\n  UNSAVED_CHART_ID,\n} from 'src/explore/constants';\nimport { DashboardStandaloneMode } from 'src/dashboard/util/constants';\n\nexport function getChartKey(explore) {\n  const { slice, form_data } = explore;\n  return slice?.slice_id ?? form_data?.slice_id ?? UNSAVED_CHART_ID;\n}\n\nlet requestCounter = 0;\nexport function getHostName(allowDomainSharding = false) {\n  let currentIndex = 0;\n  if (allowDomainSharding) {\n    currentIndex = requestCounter % availableDomains.length;\n    requestCounter += 1;\n\n    // if domain sharding is enabled, skip main domain for fetching chart API\n    // leave main domain free for other calls like fav star, save change, etc.\n    // to make dashboard be responsive when it's loading large number of charts\n    if (currentIndex === 0) {\n      currentIndex += 1;\n      requestCounter += 1;\n    }\n  }\n  return availableDomains[currentIndex];\n}\n\nexport function getAnnotationJsonUrl(slice_id, force) {\n  if (slice_id === null || slice_id === undefined) {\n    return null;\n  }\n\n  const uri = URI(window.location.search);\n  return uri\n    .pathname(ensureAppRoot('/api/v1/chart/data'))\n    .search({\n      form_data: safeStringify({ slice_id }),\n      force,\n    })\n    .toString();\n}\n\nexport function getURIDirectory(endpointType = 'base') {\n  // Building the directory part of the URI\n  if (\n    ['full', 'json', 'csv', 'query', 'results', 'samples'].includes(\n      endpointType,\n    )\n  ) {\n    return ensureAppRoot('/superset/explore_json/');\n  }\n  return ensureAppRoot('/explore/');\n}\n\nexport function mountExploreUrl(endpointType, extraSearch = {}, force = false) {\n  const uri = new URI('/');\n  const directory = getURIDirectory(endpointType);\n  const search = uri.search(true);\n  Object.keys(extraSearch).forEach(key => {\n    search[key] = extraSearch[key];\n  });\n  if (endpointType === URL_PARAMS.standalone.name) {\n    if (force) {\n      search.force = '1';\n    }\n    search.standalone = DashboardStandaloneMode.HideNav;\n  }\n  return uri.directory(directory).search(search).toString();\n}\n\nexport function getChartDataUri({ path, qs, allowDomainSharding = false }) {\n  // The search params from the window.location are carried through,\n  // but can be specified with curUrl (used for unit tests to spoof\n  // the window.location).\n  let uri = new URI({\n    protocol: window.location.protocol.slice(0, -1),\n    hostname: getHostName(allowDomainSharding),\n    port: window.location.port ? window.location.port : '',\n    path: ensureAppRoot(path),\n  });\n  if (qs) {\n    uri = uri.search(qs);\n  }\n  return uri;\n}\n\n/**\n * This gets the minimal url for the given form data.\n * If there are dashboard overrides present in the form data,\n * they will not be included in the url.\n */\nexport function getExploreUrl({\n  formData,\n  endpointType = 'base',\n  force = false,\n  curUrl = null,\n  requestParams = {},\n  allowDomainSharding = false,\n  method = 'POST',\n}) {\n  if (!formData.datasource) {\n    return null;\n  }\n\n  // label_colors should not pollute the URL\n  // eslint-disable-next-line no-param-reassign\n  delete formData.label_colors;\n\n  let uri = getChartDataUri({\n    path: '/',\n    allowDomainSharding,\n  });\n  if (curUrl) {\n    uri = URI(URI(curUrl).search());\n  }\n\n  const directory = getURIDirectory(endpointType);\n\n  // Building the querystring (search) part of the URI\n  const search = uri.search(true);\n  const { slice_id, extra_filters, adhoc_filters, viz_type } = formData;\n  if (slice_id) {\n    const form_data = { slice_id };\n    if (method === 'GET') {\n      form_data.viz_type = viz_type;\n      if (extra_filters && extra_filters.length) {\n        form_data.extra_filters = extra_filters;\n      }\n      if (adhoc_filters && adhoc_filters.length) {\n        form_data.adhoc_filters = adhoc_filters;\n      }\n    }\n    search.form_data = safeStringify(form_data);\n  }\n  if (force) {\n    search.force = 'true';\n  }\n  if (endpointType === 'csv') {\n    search.csv = 'true';\n  }\n  if (endpointType === URL_PARAMS.standalone.name) {\n    search.standalone = '1';\n  }\n  if (endpointType === 'query') {\n    search.query = 'true';\n  }\n  if (endpointType === 'results') {\n    search.results = 'true';\n  }\n  if (endpointType === 'samples') {\n    search.samples = 'true';\n  }\n  const paramNames = Object.keys(requestParams);\n  if (paramNames.length) {\n    paramNames.forEach(name => {\n      if (requestParams.hasOwnProperty(name)) {\n        search[name] = requestParams[name];\n      }\n    });\n  }\n  return uri.search(search).directory(directory).toString();\n}\n\nexport const getQuerySettings = formData => {\n  const vizMetadata = getChartMetadataRegistry().get(formData.viz_type);\n  return [\n    vizMetadata?.useLegacyApi ?? false,\n    vizMetadata?.parseMethod ?? 'json-bigint',\n  ];\n};\n\nexport const buildV1ChartDataPayload = ({\n  formData,\n  force,\n  resultFormat,\n  resultType,\n  setDataMask,\n  ownState,\n}) => {\n  const buildQuery =\n    getChartBuildQueryRegistry().get(formData.viz_type) ??\n    (buildQueryformData =>\n      buildQueryContext(buildQueryformData, baseQueryObject => [\n        {\n          ...baseQueryObject,\n        },\n      ]));\n  return buildQuery(\n    {\n      ...formData,\n      force,\n      result_format: resultFormat,\n      result_type: resultType,\n    },\n    {\n      ownState,\n      hooks: {\n        setDataMask,\n      },\n    },\n  );\n};\n\nexport const getLegacyEndpointType = ({ resultType, resultFormat }) =>\n  resultFormat === 'csv' ? resultFormat : resultType;\n\nexport const exportChart = ({\n  formData,\n  resultFormat = 'json',\n  resultType = 'full',\n  force = false,\n  ownState = {},\n}) => {\n  let url;\n  let payload;\n  const [useLegacyApi, parseMethod] = getQuerySettings(formData);\n  if (useLegacyApi) {\n    const endpointType = getLegacyEndpointType({ resultFormat, resultType });\n    url = getExploreUrl({\n      formData,\n      endpointType,\n      allowDomainSharding: false,\n    });\n    payload = formData;\n  } else {\n    url = ensureAppRoot('/api/v1/chart/data');\n    payload = buildV1ChartDataPayload({\n      formData,\n      force,\n      resultFormat,\n      resultType,\n      ownState,\n      parseMethod,\n    });\n  }\n\n  SupersetClient.postForm(url, { form_data: safeStringify(payload) });\n};\n\nexport const exploreChart = (formData, requestParams) => {\n  const url = getExploreUrl({\n    formData,\n    endpointType: 'base',\n    allowDomainSharding: false,\n    requestParams,\n  });\n  SupersetClient.postForm(url, { form_data: safeStringify(formData) });\n};\n\nexport const useDebouncedEffect = (effect, delay, deps) => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const callback = useCallback(effect, deps);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      callback();\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [callback, delay]);\n};\n\nexport const getSimpleSQLExpression = (subject, operator, comparator) => {\n  const isMulti =\n    [...MULTI_OPERATORS]\n      .map(op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation)\n      .indexOf(operator) >= 0;\n  const showComparator =\n    DISABLE_INPUT_OPERATORS.map(\n      op => OPERATOR_ENUM_TO_OPERATOR_TYPE[op].operation,\n    ).indexOf(operator) === -1;\n  // If returned value is an object after changing dataset\n  let expression =\n    typeof subject === 'object'\n      ? (subject?.column_name ?? '')\n      : (subject ?? '');\n  if (subject && operator) {\n    expression += ` ${operator}`;\n    const firstValue =\n      isMulti && Array.isArray(comparator) ? comparator[0] : comparator;\n    const comparatorArray = ensureIsArray(comparator);\n    const isString =\n      firstValue !== undefined && Number.isNaN(Number(firstValue));\n    const quote = isString ? \"'\" : '';\n    const [prefix, suffix] = isMulti ? ['(', ')'] : ['', ''];\n    if (comparatorArray.length > 0 && showComparator) {\n      const formattedComparators = comparatorArray\n        .map(val => optionLabel(val))\n        .map(\n          val =>\n            `${quote}${isString ? String(val).replace(/'/g, \"''\") : val}${quote}`,\n        );\n      expression += ` ${prefix}${formattedComparators.join(', ')}${suffix}`;\n    }\n  }\n  return expression;\n};\n\nexport function formatSelectOptions(options) {\n  return options.map(opt => [opt, opt.toString()]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}