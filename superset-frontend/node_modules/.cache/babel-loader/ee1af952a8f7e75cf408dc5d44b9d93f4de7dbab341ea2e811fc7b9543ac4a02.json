{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Icons } from 'src/components/Icons';\nimport { css, styled, t } from '@superset-ui/core';\n// eslint-disable-next-line no-restricted-imports\nimport { Button, Tree } from 'antd'; // TODO: Remove antd\nimport { forwardRef } from 'react';\nimport { handleDrop } from './dragDropUtil';\nimport LayerTreeItem from './LayerTreeItem';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const StyledLayerTreeItem = styled(LayerTreeItem)`\n  ${({ theme }) => css`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    padding: unset;\n\n    border: none;\n    border-radius: ${theme.borderRadius}px;\n    background-color: ${theme.colors.grayscale.light3};\n    font-size: ${theme.typography.sizes.s}px;\n    font-weight: ${theme.typography.weights.normal};\n\n    &:hover {\n      background-color: ${theme.colors.grayscale.light3};\n    }\n\n    & .layer-tree-item-close {\n      border-right: solid;\n      border-right-width: 1px;\n      border-right-color: ${theme.colors.grayscale.light2};\n    }\n\n    & .layer-tree-item-edit {\n      border-left: solid;\n      border-left-width: 1px;\n      border-left-color: ${theme.colors.grayscale.light2};\n    }\n\n    & .layer-tree-item-title {\n      flex: 1;\n      padding-left: 4px;\n    }\n\n    & .layer-tree-item-type {\n      padding-left: 4px;\n      font-size: ${theme.typography.sizes.xs}px;\n      font-family: ${theme.typography.families.monospace};\n    }\n\n    & > button {\n      border: none;\n      background-color: unset;\n      color: ${theme.colors.grayscale.light1};\n    }\n\n    & > button:hover {\n      background-color: unset;\n      color: ${theme.colors.grayscale.light1};\n    }\n  `}\n`;\n// forwardRef is needed here in order for emotion and antd tree to work properly\nexport const FlatLayerTree = /*#__PURE__*/forwardRef(({ layerConfigs, onAddLayer = () => {}, onRemoveLayer = () => {}, onEditLayer = () => {}, onMoveLayer = () => {}, draggable, className }, ref) => {\n  const layerConfigsToTreeData = (configs) => configs.map((config, idx) => ({\n    layerConf: config,\n    key: idx,\n    title: _jsx(StyledLayerTreeItem, { layerConf: config, onEditClick: () => onEditLayer(config, idx), onRemoveClick: () => onRemoveLayer(idx) }),\n    selectable: false,\n    isLeaf: true,\n    checkable: false\n  }));\n  const treeDataToLayerConfigs = (treeData) => treeData.map((data) => data.layerConf);\n  const treeData = layerConfigsToTreeData(layerConfigs);\n  const onDrop = (info) => {\n    const data = handleDrop(info, treeData);\n    const movedLayerConfigs = treeDataToLayerConfigs(data);\n    onMoveLayer(movedLayerConfigs);\n  };\n  const addLayerLabel = t('Click to add new layer');\n  return _jsxs(\"div\", { className: className, ref: ref, children: [\n    _jsx(Button, { className: \"add-layer-btn\", onClick: onAddLayer, size: \"small\", type: \"dashed\", icon: _jsx(Icons.PlusOutlined, { iconSize: \"m\" }), children:\n      addLayerLabel }\n    ),\n    _jsx(Tree, { treeData: treeData, draggable: draggable, onDrop: onDrop })] }\n  );\n});const _default =\nFlatLayerTree;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledLayerTreeItem, \"StyledLayerTreeItem\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/FlatLayerTree.tsx\");reactHotLoader.register(FlatLayerTree, \"FlatLayerTree\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/FlatLayerTree.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/FlatLayerTree.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Icons","css","styled","t","Button","Tree","forwardRef","handleDrop","LayerTreeItem","jsx","_jsx","jsxs","_jsxs","StyledLayerTreeItem","theme","borderRadius","colors","grayscale","light3","typography","sizes","s","weights","normal","light2","xs","families","monospace","light1","FlatLayerTree","layerConfigs","onAddLayer","onRemoveLayer","onEditLayer","onMoveLayer","draggable","className","ref","layerConfigsToTreeData","configs","map","config","idx","layerConf","key","title","onEditClick","onRemoveClick","selectable","isLeaf","checkable","treeDataToLayerConfigs","treeData","data","onDrop","info","movedLayerConfigs","addLayerLabel","children","onClick","size","type","icon","PlusOutlined","iconSize","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/FlatLayerTree.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Icons } from 'src/components/Icons';\nimport { css, styled, t } from '@superset-ui/core';\n// eslint-disable-next-line no-restricted-imports\nimport { Button, Tree } from 'antd'; // TODO: Remove antd\n// eslint-disable-next-line no-restricted-imports\nimport { TreeProps } from 'antd/lib/tree'; // TODO: Remove antd\nimport { forwardRef } from 'react';\nimport { FlatLayerDataNode, FlatLayerTreeProps, LayerConf } from './types';\nimport { handleDrop } from './dragDropUtil';\nimport LayerTreeItem from './LayerTreeItem';\n\nexport const StyledLayerTreeItem = styled(LayerTreeItem)`\n  ${({ theme }) => css`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    padding: unset;\n\n    border: none;\n    border-radius: ${theme.borderRadius}px;\n    background-color: ${theme.colors.grayscale.light3};\n    font-size: ${theme.typography.sizes.s}px;\n    font-weight: ${theme.typography.weights.normal};\n\n    &:hover {\n      background-color: ${theme.colors.grayscale.light3};\n    }\n\n    & .layer-tree-item-close {\n      border-right: solid;\n      border-right-width: 1px;\n      border-right-color: ${theme.colors.grayscale.light2};\n    }\n\n    & .layer-tree-item-edit {\n      border-left: solid;\n      border-left-width: 1px;\n      border-left-color: ${theme.colors.grayscale.light2};\n    }\n\n    & .layer-tree-item-title {\n      flex: 1;\n      padding-left: 4px;\n    }\n\n    & .layer-tree-item-type {\n      padding-left: 4px;\n      font-size: ${theme.typography.sizes.xs}px;\n      font-family: ${theme.typography.families.monospace};\n    }\n\n    & > button {\n      border: none;\n      background-color: unset;\n      color: ${theme.colors.grayscale.light1};\n    }\n\n    & > button:hover {\n      background-color: unset;\n      color: ${theme.colors.grayscale.light1};\n    }\n  `}\n`;\n\n// forwardRef is needed here in order for emotion and antd tree to work properly\nexport const FlatLayerTree = forwardRef<HTMLDivElement, FlatLayerTreeProps>(\n  (\n    {\n      layerConfigs,\n      onAddLayer = () => {},\n      onRemoveLayer = () => {},\n      onEditLayer = () => {},\n      onMoveLayer = () => {},\n      draggable,\n      className,\n    },\n    ref,\n  ) => {\n    const layerConfigsToTreeData = (\n      configs: LayerConf[],\n    ): FlatLayerDataNode[] =>\n      configs.map((config, idx) => ({\n        layerConf: config,\n        key: idx,\n        title: (\n          <StyledLayerTreeItem\n            layerConf={config}\n            onEditClick={() => onEditLayer(config, idx)}\n            onRemoveClick={() => onRemoveLayer(idx)}\n          />\n        ),\n        selectable: false,\n        isLeaf: true,\n        checkable: false,\n      }));\n\n    const treeDataToLayerConfigs = (\n      treeData: FlatLayerDataNode[],\n    ): LayerConf[] => treeData.map(data => data.layerConf);\n\n    const treeData = layerConfigsToTreeData(layerConfigs);\n\n    const onDrop: TreeProps['onDrop'] = info => {\n      const data = handleDrop(info, treeData);\n      const movedLayerConfigs = treeDataToLayerConfigs(data);\n      onMoveLayer(movedLayerConfigs);\n    };\n\n    const addLayerLabel = t('Click to add new layer');\n\n    return (\n      <div className={className} ref={ref}>\n        <Button\n          className=\"add-layer-btn\"\n          onClick={onAddLayer}\n          size=\"small\"\n          type=\"dashed\"\n          icon={<Icons.PlusOutlined iconSize=\"m\" />}\n        >\n          {addLayerLabel}\n        </Button>\n        <Tree treeData={treeData} draggable={draggable} onDrop={onDrop} />\n      </div>\n    );\n  },\n);\n\nexport default FlatLayerTree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}