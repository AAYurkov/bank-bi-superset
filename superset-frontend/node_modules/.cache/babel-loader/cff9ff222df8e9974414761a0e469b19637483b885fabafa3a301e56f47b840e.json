{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, ChartMetadata, ChartPlugin } from '@superset-ui/core';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nimport thumbnail from '../images/thumbnail.png';\nimport example1 from '../images/example1.png';\nimport example2 from '../images/example2.png';\nimport { getLayerConfig } from '../util/controlPanelUtil';\nexport default class CartodiagramPlugin extends ChartPlugin {\n  constructor(opts) {\n    const metadata = new ChartMetadata({\n      description: 'Display charts on a map. For using this plugin, users first have to create any other chart that can then be placed on the map.',\n      name: t('Cartodiagram'),\n      thumbnail,\n      tags: [t('Geo'), t('2D'), t('Spatial'), t('Experimental')],\n      category: t('Map'),\n      exampleGallery: [\n      { url: example1, caption: t('Pie charts on a map') },\n      { url: example2, caption: t('Line charts on a map') }]\n\n    });\n    if (opts.defaultLayers) {\n      const layerConfig = getLayerConfig(controlPanel);\n      // set defaults for layer config if found\n      if (layerConfig) {\n        layerConfig.config.default = opts.defaultLayers;\n      } else\n      {\n        // eslint-disable-next-line no-console\n        console.warn('Cannot set defaultLayers. layerConfig not found in control panel. Please check if the path to layerConfig should be adjusted.');\n      }\n    }\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../CartodiagramPlugin'),\n      metadata,\n      transformProps\n    });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CartodiagramPlugin, \"CartodiagramPlugin\", \"/Users/aryurkov/superset/superset-frontend/plugins/plugin-chart-cartodiagram/src/plugin/index.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","ChartMetadata","ChartPlugin","buildQuery","controlPanel","transformProps","thumbnail","example1","example2","getLayerConfig","CartodiagramPlugin","constructor","opts","metadata","description","name","tags","category","exampleGallery","url","caption","defaultLayers","layerConfig","config","default","console","warn","loadChart","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/plugins/plugin-chart-cartodiagram/src/plugin/index.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, ChartMetadata, ChartPlugin } from '@superset-ui/core';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nimport thumbnail from '../images/thumbnail.png';\nimport example1 from '../images/example1.png';\nimport example2 from '../images/example2.png';\nimport { CartodiagramPluginConstructorOpts } from '../types';\nimport { getLayerConfig } from '../util/controlPanelUtil';\n\nexport default class CartodiagramPlugin extends ChartPlugin {\n  constructor(opts: CartodiagramPluginConstructorOpts) {\n    const metadata = new ChartMetadata({\n      description:\n        'Display charts on a map. For using this plugin, users first have to create any other chart that can then be placed on the map.',\n      name: t('Cartodiagram'),\n      thumbnail,\n      tags: [t('Geo'), t('2D'), t('Spatial'), t('Experimental')],\n      category: t('Map'),\n      exampleGallery: [\n        { url: example1, caption: t('Pie charts on a map') },\n        { url: example2, caption: t('Line charts on a map') },\n      ],\n    });\n\n    if (opts.defaultLayers) {\n      const layerConfig = getLayerConfig(controlPanel);\n\n      // set defaults for layer config if found\n      if (layerConfig) {\n        layerConfig.config.default = opts.defaultLayers;\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Cannot set defaultLayers. layerConfig not found in control panel. Please check if the path to layerConfig should be adjusted.',\n        );\n      }\n    }\n\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../CartodiagramPlugin'),\n      metadata,\n      transformProps,\n    });\n  }\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAC,EAAEC,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AACjE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,eAAc,MAAOC,kBAAmB,SAAQR,WAAW;EACzDS,YAAYC,IAAuC;IACjD,MAAMC,QAAQ,GAAG,IAAIZ,aAAa,CAAC;MACjCa,WAAW,EACT,gIAAgI;MAClIC,IAAI,EAAEf,CAAC,CAAC,cAAc,CAAC;MACvBM,SAAS;MACTU,IAAI,EAAE,CAAChB,CAAC,CAAC,KAAK,CAAC,EAAEA,CAAC,CAAC,IAAI,CAAC,EAAEA,CAAC,CAAC,SAAS,CAAC,EAAEA,CAAC,CAAC,cAAc,CAAC,CAAC;MAC1DiB,QAAQ,EAAEjB,CAAC,CAAC,KAAK,CAAC;MAClBkB,cAAc,EAAE;MACd,EAAEC,GAAG,EAAEZ,QAAQ,EAAEa,OAAO,EAAEpB,CAAC,CAAC,qBAAqB,CAAC,EAAE;MACpD,EAAEmB,GAAG,EAAEX,QAAQ,EAAEY,OAAO,EAAEpB,CAAC,CAAC,sBAAsB,CAAC,EAAE;;KAExD,CAAC;IAEF,IAAIY,IAAI,CAACS,aAAa,EAAE;MACtB,MAAMC,WAAW,GAAGb,cAAc,CAACL,YAAY,CAAC;MAEhD;MACA,IAAIkB,WAAW,EAAE;QACfA,WAAW,CAACC,MAAM,CAACC,OAAO,GAAGZ,IAAI,CAACS,aAAa;OAChD;MAAM;QACL;QACAI,OAAO,CAACC,IAAI,CACV,+HAA+H,CAChI;;;IAIL,KAAK,CAAC;MACJvB,UAAU;MACVC,YAAY;MACZuB,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;MAChDd,QAAQ;MACRR;KACD,CAAC;EACJ,CAAC;EAAAuB,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CACF,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAT,OAAA,GAAAU,SAAA,MAAAF,cAAA,WAAAA,cAAA,CAAAG,QAAA,CArCoBzB,kBAAmB,oJAAA0B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}