{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ControlHeader } from '@superset-ui/chart-controls';\nimport { css, styled, t } from '@superset-ui/core';\nimport Popover from 'src/components/Popover';\nimport { useState } from 'react';\nimport LayerConfigsPopoverContent from './LayerConfigsPopoverContent';\nimport FlatLayerTree from './FlatLayerTree';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const StyledFlatLayerTree = styled(FlatLayerTree)`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n\n    border: solid;\n    border-width: 1px;\n    border-radius: ${theme.borderRadius}px;\n    border-color: ${theme.colors.grayscale.light2};\n\n    & .add-layer-btn {\n      display: flex;\n      align-items: center;\n\n      margin: 4px;\n\n      color: ${theme.colors.grayscale.light1};\n      font-size: ${theme.typography.sizes.s}px;\n      font-weight: ${theme.typography.weights.normal};\n\n      &:hover {\n        background-color: ${theme.colors.grayscale.light4};\n        border-color: ${theme.colors.grayscale.light2};\n      }\n    }\n\n    & .ant-tree .ant-tree-treenode {\n      display: block;\n    }\n\n    & .ant-tree-list-holder-inner {\n      display: block !important;\n    }\n\n    & .ant-tree-node-content-wrapper {\n      display: block;\n    }\n\n    & .ant-tree-node-content-wrapper:hover {\n      background-color: unset;\n    }\n  `}\n`;\nconst getEmptyEditItem = () => ({\n  idx: NaN,\n  layerConf: {\n    type: 'WMS',\n    version: '1.3.0',\n    title: '',\n    url: '',\n    layersParam: ''\n  }\n});\nexport const LayerConfigsControl = ({ value, onChange = () => {}, name, label, description, renderTrigger, hovered, validationErrors }) => {\n  const [popoverVisible, setPopoverVisible] = useState(false);\n  const [editItem, setEditItem] = useState(getEmptyEditItem());\n  const onAddClick = () => {\n    setEditItem(getEmptyEditItem());\n    setPopoverVisible(true);\n  };\n  const onEditClick = (layerConf, idx) => {\n    if (popoverVisible) {\n      return;\n    }\n    setEditItem({\n      idx,\n      layerConf: { ...layerConf }\n    });\n    setPopoverVisible(true);\n  };\n  const onRemoveClick = (idx) => {\n    const newValue = value ? [...value] : [];\n    newValue.splice(idx, 1);\n    onChange(newValue);\n  };\n  const onPopoverClose = () => {\n    setPopoverVisible(false);\n  };\n  const computeNewValue = (layerConf) => {\n    const newValue = value ? [...value] : [];\n    if (!editItem) {\n      return undefined;\n    }\n    if (Number.isNaN(editItem.idx)) {\n      newValue.unshift(layerConf);\n    } else\n    if (editItem) {\n      newValue[editItem.idx] = layerConf;\n    }\n    return newValue;\n  };\n  const onPopoverSave = (layerConf) => {\n    const newValue = computeNewValue(layerConf);\n    setPopoverVisible(false);\n    if (!newValue) {\n      return;\n    }\n    onChange(newValue);\n  };\n  const onMoveLayer = (newConfigs) => {\n    onChange(newConfigs);\n  };\n  const popoverTitle = editItem.layerConf.title ?\n  editItem.layerConf.title :\n  t('Add Layer');\n  const controlHeaderProps = {\n    name,\n    label,\n    description,\n    renderTrigger,\n    hovered,\n    validationErrors\n  };\n  return _jsxs(\"div\", { children: [\n    _jsx(ControlHeader, { ...controlHeaderProps }),\n    _jsx(Popover, { open: popoverVisible, trigger: \"click\", title: popoverTitle, placement: \"right\", overlayStyle: {\n        maxWidth: '400px',\n        maxHeight: '700px',\n        overflowY: 'auto'\n      }, content: _jsx(LayerConfigsPopoverContent, { layerConf: editItem.layerConf, onClose: onPopoverClose, onSave: onPopoverSave }), children:\n      _jsx(StyledFlatLayerTree, { layerConfigs: value != null ? value : [], onMoveLayer: onMoveLayer, onEditLayer: onEditClick, onRemoveLayer: onRemoveClick, onAddLayer: onAddClick, draggable: !popoverVisible }) }\n    )] }\n  );\n};__signature__(LayerConfigsControl, \"useState{[popoverVisible, setPopoverVisible](false)}\\nuseState{[editItem, setEditItem](getEmptyEditItem())}\");const _default =\nLayerConfigsControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledFlatLayerTree, \"StyledFlatLayerTree\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/LayerConfigsControl.tsx\");reactHotLoader.register(getEmptyEditItem, \"getEmptyEditItem\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/LayerConfigsControl.tsx\");reactHotLoader.register(LayerConfigsControl, \"LayerConfigsControl\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/LayerConfigsControl.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/LayerConfigsControl.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ControlHeader","css","styled","t","Popover","useState","LayerConfigsPopoverContent","FlatLayerTree","jsx","_jsx","jsxs","_jsxs","StyledFlatLayerTree","theme","borderRadius","colors","grayscale","light2","light1","typography","sizes","s","weights","normal","light4","getEmptyEditItem","idx","NaN","layerConf","type","version","title","url","layersParam","LayerConfigsControl","value","onChange","name","label","description","renderTrigger","hovered","validationErrors","popoverVisible","setPopoverVisible","editItem","setEditItem","onAddClick","onEditClick","onRemoveClick","newValue","splice","onPopoverClose","computeNewValue","undefined","Number","isNaN","unshift","onPopoverSave","onMoveLayer","newConfigs","popoverTitle","controlHeaderProps","children","open","trigger","placement","overlayStyle","maxWidth","maxHeight","overflowY","content","onClose","onSave","layerConfigs","onEditLayer","onRemoveLayer","onAddLayer","draggable","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/LayerConfigsControl/LayerConfigsControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ControlHeader } from '@superset-ui/chart-controls';\nimport { css, styled, t } from '@superset-ui/core';\nimport Popover from 'src/components/Popover';\nimport { FC, useState } from 'react';\nimport { EditItem, LayerConf, LayerConfigsControlProps } from './types';\nimport LayerConfigsPopoverContent from './LayerConfigsPopoverContent';\nimport FlatLayerTree from './FlatLayerTree';\n\nexport const StyledFlatLayerTree = styled(FlatLayerTree)`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n\n    border: solid;\n    border-width: 1px;\n    border-radius: ${theme.borderRadius}px;\n    border-color: ${theme.colors.grayscale.light2};\n\n    & .add-layer-btn {\n      display: flex;\n      align-items: center;\n\n      margin: 4px;\n\n      color: ${theme.colors.grayscale.light1};\n      font-size: ${theme.typography.sizes.s}px;\n      font-weight: ${theme.typography.weights.normal};\n\n      &:hover {\n        background-color: ${theme.colors.grayscale.light4};\n        border-color: ${theme.colors.grayscale.light2};\n      }\n    }\n\n    & .ant-tree .ant-tree-treenode {\n      display: block;\n    }\n\n    & .ant-tree-list-holder-inner {\n      display: block !important;\n    }\n\n    & .ant-tree-node-content-wrapper {\n      display: block;\n    }\n\n    & .ant-tree-node-content-wrapper:hover {\n      background-color: unset;\n    }\n  `}\n`;\n\nconst getEmptyEditItem = (): EditItem => ({\n  idx: NaN,\n  layerConf: {\n    type: 'WMS',\n    version: '1.3.0',\n    title: '',\n    url: '',\n    layersParam: '',\n  },\n});\n\nexport const LayerConfigsControl: FC<LayerConfigsControlProps> = ({\n  value,\n  onChange = () => {},\n  name,\n  label,\n  description,\n  renderTrigger,\n  hovered,\n  validationErrors,\n}) => {\n  const [popoverVisible, setPopoverVisible] = useState<boolean>(false);\n  const [editItem, setEditItem] = useState<EditItem>(getEmptyEditItem());\n\n  const onAddClick = () => {\n    setEditItem(getEmptyEditItem());\n    setPopoverVisible(true);\n  };\n\n  const onEditClick = (layerConf: LayerConf, idx: number) => {\n    if (popoverVisible) {\n      return;\n    }\n    setEditItem({\n      idx,\n      layerConf: { ...layerConf },\n    });\n    setPopoverVisible(true);\n  };\n\n  const onRemoveClick = (idx: number) => {\n    const newValue = value ? [...value] : [];\n    newValue.splice(idx, 1);\n    onChange(newValue);\n  };\n\n  const onPopoverClose = () => {\n    setPopoverVisible(false);\n  };\n\n  const computeNewValue = (layerConf: LayerConf) => {\n    const newValue = value ? [...value] : [];\n    if (!editItem) {\n      return undefined;\n    }\n    if (Number.isNaN(editItem.idx)) {\n      newValue.unshift(layerConf);\n    } else if (editItem) {\n      newValue[editItem.idx] = layerConf;\n    }\n    return newValue;\n  };\n\n  const onPopoverSave = (layerConf: LayerConf) => {\n    const newValue = computeNewValue(layerConf);\n    setPopoverVisible(false);\n    if (!newValue) {\n      return;\n    }\n    onChange(newValue);\n  };\n\n  const onMoveLayer = (newConfigs: LayerConf[]) => {\n    onChange(newConfigs);\n  };\n\n  const popoverTitle = editItem.layerConf.title\n    ? editItem.layerConf.title\n    : t('Add Layer');\n  const controlHeaderProps = {\n    name,\n    label,\n    description,\n    renderTrigger,\n    hovered,\n    validationErrors,\n  };\n\n  return (\n    <div>\n      <ControlHeader {...controlHeaderProps} />\n      <Popover\n        open={popoverVisible}\n        trigger=\"click\"\n        title={popoverTitle}\n        placement=\"right\"\n        overlayStyle={{\n          maxWidth: '400px',\n          maxHeight: '700px',\n          overflowY: 'auto',\n        }}\n        content={\n          <LayerConfigsPopoverContent\n            layerConf={editItem.layerConf}\n            onClose={onPopoverClose}\n            onSave={onPopoverSave}\n          />\n        }\n      >\n        <StyledFlatLayerTree\n          layerConfigs={value ?? []}\n          onMoveLayer={onMoveLayer}\n          onEditLayer={onEditClick}\n          onRemoveLayer={onRemoveClick}\n          onAddLayer={onAddClick}\n          draggable={!popoverVisible}\n        />\n      </Popover>\n    </div>\n  );\n};\n\nexport default LayerConfigsControl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}