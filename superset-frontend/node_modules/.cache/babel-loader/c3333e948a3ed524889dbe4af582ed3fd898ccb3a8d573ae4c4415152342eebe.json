{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};export const getRelevantDataMask = (dataMask, prop) => Object.values(dataMask).\nfilter((item) => item[prop]).\nreduce((prev, next) => ({\n  ...prev,\n  [next.id]: prop ? next[prop] : next\n}), {});\nexport const getAllActiveFilters = ({ chartConfiguration, nativeFilters, dataMask, allSliceIds }) => {\n  const activeFilters = {};\n  // Combine native filters with cross filters, because they have similar logic\n  Object.values(dataMask).forEach(({ id: filterId, extraFormData = {} }) => {var _ref, _ref2, _nativeFilters$filter, _nativeFilters$filter2, _chartConfiguration$p, _chartConfiguration$p2, _nativeFilters$filter3, _nativeFilters$filter4, _nativeFilters$filter5;\n    const scope = (_ref = (_ref2 = (_nativeFilters$filter = nativeFilters == null ? void 0 : (_nativeFilters$filter2 = nativeFilters[filterId]) == null ? void 0 : _nativeFilters$filter2.chartsInScope) != null ? _nativeFilters$filter :\n    chartConfiguration == null ? void 0 : (_chartConfiguration$p = chartConfiguration[parseInt(filterId, 10)]) == null ? void 0 : (_chartConfiguration$p2 = _chartConfiguration$p.crossFilters) == null ? void 0 : _chartConfiguration$p2.\n    chartsInScope) != null ? _ref2 :\n    allSliceIds) != null ? _ref :\n    [];\n    const filterType = nativeFilters == null ? void 0 : (_nativeFilters$filter3 = nativeFilters[filterId]) == null ? void 0 : _nativeFilters$filter3.filterType;\n    const targets = (_nativeFilters$filter4 = nativeFilters == null ? void 0 : (_nativeFilters$filter5 = nativeFilters[filterId]) == null ? void 0 : _nativeFilters$filter5.targets) != null ? _nativeFilters$filter4 : scope;\n    // Iterate over all roots to find all affected charts\n    activeFilters[filterId] = {\n      scope,\n      filterType,\n      targets,\n      values: extraFormData\n    };\n  });\n  return activeFilters;\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getRelevantDataMask, \"getRelevantDataMask\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/activeAllDashboardFilters.ts\");reactHotLoader.register(getAllActiveFilters, \"getAllActiveFilters\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/util/activeAllDashboardFilters.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getRelevantDataMask","dataMask","prop","Object","values","filter","item","reduce","prev","next","id","getAllActiveFilters","chartConfiguration","nativeFilters","allSliceIds","activeFilters","forEach","filterId","extraFormData","_ref","_ref2","_nativeFilters$filter","_nativeFilters$filter2","_chartConfiguration$p","_chartConfiguration$p2","_nativeFilters$filter3","_nativeFilters$filter4","_nativeFilters$filter5","scope","chartsInScope","parseInt","crossFilters","filterType","targets","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/util/activeAllDashboardFilters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataMaskStateWithId,\n  PartialFilters,\n  JsonObject,\n  DataMaskWithId,\n} from '@superset-ui/core';\nimport { ActiveFilters, ChartConfiguration } from '../types';\n\nexport const getRelevantDataMask = (\n  dataMask: DataMaskStateWithId,\n  prop: string,\n): JsonObject | DataMaskStateWithId =>\n  Object.values(dataMask)\n    .filter(item => item[prop as keyof DataMaskWithId])\n    .reduce(\n      (prev, next) => ({\n        ...prev,\n        [next.id]: prop ? next[prop as keyof DataMaskWithId] : next,\n      }),\n      {},\n    );\n\nexport const getAllActiveFilters = ({\n  chartConfiguration,\n  nativeFilters,\n  dataMask,\n  allSliceIds,\n}: {\n  chartConfiguration: ChartConfiguration;\n  dataMask: DataMaskStateWithId;\n  nativeFilters: PartialFilters;\n  allSliceIds: number[];\n}): ActiveFilters => {\n  const activeFilters: ActiveFilters = {};\n\n  // Combine native filters with cross filters, because they have similar logic\n  Object.values(dataMask).forEach(({ id: filterId, extraFormData = {} }) => {\n    const scope =\n      nativeFilters?.[filterId]?.chartsInScope ??\n      chartConfiguration?.[parseInt(filterId, 10)]?.crossFilters\n        ?.chartsInScope ??\n      allSliceIds ??\n      [];\n    const filterType = nativeFilters?.[filterId]?.filterType;\n    const targets = nativeFilters?.[filterId]?.targets ?? scope;\n    // Iterate over all roots to find all affected charts\n    activeFilters[filterId] = {\n      scope,\n      filterType,\n      targets,\n      values: extraFormData,\n    };\n  });\n  return activeFilters;\n};\n"],"mappings":"uSA0BA,OAAO,MAAMA,mBAAmB,GAAGA,CACjCC,QAA6B,EAC7BC,IAAY,KAEZC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAAC;AACpBI,MAAM,CAAC,CAAAC,IAAI,KAAIA,IAAI,CAACJ,IAA4B,CAAC,CAAC;AAClDK,MAAM,CACL,CAACC,IAAI,EAAEC,IAAI,MAAM;EACf,GAAGD,IAAI;EACP,CAACC,IAAI,CAACC,EAAE,GAAGR,IAAI,GAAGO,IAAI,CAACP,IAA4B,CAAC,GAAGO;CACxD,CAAC,EACF,EAAE,CACH;AAEL,OAAO,MAAME,mBAAmB,GAAGA,CAAC,EAClCC,kBAAkB,EAClBC,aAAa,EACbZ,QAAQ,EACRa,WAAW,EAMZ,KAAmB;EAClB,MAAMC,aAAa,GAAkB,EAAE;EAEvC;EACAZ,MAAM,CAACC,MAAM,CAACH,QAAQ,CAAC,CAACe,OAAO,CAAC,CAAC,EAAEN,EAAE,EAAEO,QAAQ,EAAEC,aAAa,GAAG,EAAE,EAAE,KAAI,KAAAC,IAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACvE,MAAMC,KAAK,IAAAT,IAAA,IAAAC,KAAA,IAAAC,qBAAA,GACTR,aAAa,qBAAAS,sBAAA,GAAbT,aAAa,CAAGI,QAAQ,CAAC,qBAAzBK,sBAAA,CAA2BO,aAAa,YAAAR,qBAAA;IACxCT,kBAAkB,qBAAAW,qBAAA,GAAlBX,kBAAkB,CAAGkB,QAAQ,CAACb,QAAQ,EAAE,EAAE,CAAC,CAAC,sBAAAO,sBAAA,GAA5CD,qBAAA,CAA8CQ,YAAY,qBAA1DP,sBAAA;IACIK,aAAa,YAAAT,KAAA;IACjBN,WAAW,YAAAK,IAAA;IACX,EAAE;IACJ,MAAMa,UAAU,GAAGnB,aAAa,qBAAAY,sBAAA,GAAbZ,aAAa,CAAGI,QAAQ,CAAC,qBAAzBQ,sBAAA,CAA2BO,UAAU;IACxD,MAAMC,OAAO,IAAAP,sBAAA,GAAGb,aAAa,qBAAAc,sBAAA,GAAbd,aAAa,CAAGI,QAAQ,CAAC,qBAAzBU,sBAAA,CAA2BM,OAAO,YAAAP,sBAAA,GAAIE,KAAK;IAC3D;IACAb,aAAa,CAACE,QAAQ,CAAC,GAAG;MACxBW,KAAK;MACLI,UAAU;MACVC,OAAO;MACP7B,MAAM,EAAEc;KACT;EACH,CAAC,CAAC;EACF,OAAOH,aAAa;AACtB,CAAC,CAAC,mBAAAmB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA9CWtC,mBAAmB,uHAAAkC,cAAA,CAAAI,QAAA,CAcnB3B,mBAAmB,+IAAA4B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}