{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { t } from '@superset-ui/core';\nimport { sanitizeFormData } from 'src/explore/exploreUtils/formData';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport Label from 'src/components/Label';\nimport { Icons } from 'src/components/Icons';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const alterForComparison = (value) => {\n  // Treat `null`, `undefined`, and empty strings as equivalent\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  // Treat empty arrays and objects as equivalent to null\n  if (Array.isArray(value) && value.length === 0) {\n    return null;\n  }\n  if (typeof value === 'object' && Object.keys(value).length === 0) {\n    return null;\n  }\n  return value;\n};\nexport const formatValueHandler = (value, key, controlsMap) => {var _controlsMap$key, _controlsMap$key2, _controlsMap$key3, _controlsMap$key4;\n  if (value === undefined) {\n    return 'N/A';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  if (typeof value === 'boolean') {\n    return value ? 'true' : 'false';\n  }\n  if (((_controlsMap$key = controlsMap[key]) == null ? void 0 : _controlsMap$key.type) === 'AdhocFilterControl' && Array.isArray(value)) {\n    if (!value.length) {\n      return '[]';\n    }\n    return value.\n    map((v) => {\n      const filterVal = v.comparator && v.comparator.constructor === Array ?\n      `[${v.comparator.join(', ')}]` :\n      v.comparator;\n      return `${v.subject} ${v.operator} ${filterVal}`;\n    }).\n    join(', ');\n  }\n  if (((_controlsMap$key2 = controlsMap[key]) == null ? void 0 : _controlsMap$key2.type) === 'BoundsControl' && Array.isArray(value)) {\n    return `Min: ${value[0]}, Max: ${value[1]}`;\n  }\n  if (((_controlsMap$key3 = controlsMap[key]) == null ? void 0 : _controlsMap$key3.type) === 'CollectionControl' && Array.isArray(value)) {\n    return value.map((v) => safeStringify(v)).join(', ');\n  }\n  if (((_controlsMap$key4 = controlsMap[key]) == null ? void 0 : _controlsMap$key4.type) === 'MetricsControl' &&\n  value.constructor === Array) {\n    const formattedValue = value.map((v) => {var _v$label;return (_v$label = v == null ? void 0 : v.label) != null ? _v$label : v;});\n    return formattedValue.length ? formattedValue.join(', ') : '[]';\n  }\n  if (Array.isArray(value)) {\n    const formattedValue = value.map((v) => {var _v$label2;return (_v$label2 = v == null ? void 0 : v.label) != null ? _v$label2 : v;});\n    return formattedValue.length ? formattedValue.join(', ') : '[]';\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    return value;\n  }\n  return safeStringify(value);\n};\nexport const getRowsFromDiffs = (diffs, controlsMap) => Object.entries(diffs).map(([key, diff]) => {var _controlsMap$key5;return {\n    control: ((_controlsMap$key5 = controlsMap[key]) == null ? void 0 : _controlsMap$key5.label) || key,\n    before: formatValueHandler(diff.before, key, controlsMap),\n    after: formatValueHandler(diff.after, key, controlsMap)\n  };});\nexport const isEqualish = (val1, val2) => _isEqual(alterForComparison(val1), alterForComparison(val2));\nconst AlteredSliceTag = (props) => {var _props$origFormData2;\n  const [rows, setRows] = useState([]);\n  const [hasDiffs, setHasDiffs] = useState(false);\n  const getDiffs = useCallback(() => {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = sanitizeFormData(props.origFormData);\n    const cfd = sanitizeFormData(props.currentFormData);\n    const fdKeys = Object.keys(cfd);\n    const diffs = {};\n    fdKeys.forEach((fdKey) => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }, [props.currentFormData, props.origFormData]);\n  useEffect(() => {var _props$origFormData;\n    const diffs = getDiffs();\n    const controlsMap = getControlsForVizType((_props$origFormData = props.origFormData) == null ? void 0 : _props$origFormData.viz_type);\n    setRows(getRowsFromDiffs(diffs, controlsMap));\n    setHasDiffs(!_isEmpty(diffs));\n  }, [getDiffs, (_props$origFormData2 = props.origFormData) == null ? void 0 : _props$origFormData2.viz_type]);\n  const modalBody = useMemo(() => {\n    const columns = [\n    {\n      accessor: 'control',\n      Header: t('Control')\n    },\n    {\n      accessor: 'before',\n      Header: t('Before')\n    },\n    {\n      accessor: 'after',\n      Header: t('After')\n    }];\n\n    // set the wrap text in the specific columns.\n    const columnsForWrapText = ['Control', 'Before', 'After'];\n    return _jsx(TableView, { columns: columns, data: rows, pageSize: 50, className: \"table-condensed\", columnsForWrapText: columnsForWrapText });\n  }, [rows]);\n  const triggerNode = useMemo(() => _jsx(Tooltip, { id: \"difference-tooltip\", title: t('Click to see difference'), children:\n    _jsx(Label, { icon: _jsx(Icons.ExclamationCircleOutlined, { iconSize: \"m\" }), className: \"label\", type: \"warning\", onClick: () => {}, children:\n      t('Altered') }\n    ) }\n  ), []);\n  if (!hasDiffs) {\n    return null;\n  }\n  return _jsx(ModalTrigger, { triggerNode: triggerNode, modalTitle: t('Chart changes'), modalBody: modalBody, responsive: true });\n};__signature__(AlteredSliceTag, \"useState{[rows, setRows]([])}\\nuseState{[hasDiffs, setHasDiffs](false)}\\nuseCallback{getDiffs}\\nuseEffect{}\\nuseMemo{modalBody}\\nuseMemo{triggerNode}\");const _default =\nAlteredSliceTag;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(alterForComparison, \"alterForComparison\", \"/Users/aryurkov/superset/superset-frontend/src/components/AlteredSliceTag/index.tsx\");reactHotLoader.register(formatValueHandler, \"formatValueHandler\", \"/Users/aryurkov/superset/superset-frontend/src/components/AlteredSliceTag/index.tsx\");reactHotLoader.register(getRowsFromDiffs, \"getRowsFromDiffs\", \"/Users/aryurkov/superset/superset-frontend/src/components/AlteredSliceTag/index.tsx\");reactHotLoader.register(isEqualish, \"isEqualish\", \"/Users/aryurkov/superset/superset-frontend/src/components/AlteredSliceTag/index.tsx\");reactHotLoader.register(AlteredSliceTag, \"AlteredSliceTag\", \"/Users/aryurkov/superset/superset-frontend/src/components/AlteredSliceTag/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/components/AlteredSliceTag/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","t","sanitizeFormData","getControlsForVizType","Label","Icons","safeStringify","Tooltip","ModalTrigger","TableView","jsx","_jsx","alterForComparison","value","undefined","Array","isArray","length","Object","keys","formatValueHandler","key","controlsMap","_controlsMap$key","_controlsMap$key2","_controlsMap$key3","_controlsMap$key4","type","map","v","filterVal","comparator","constructor","join","subject","operator","formattedValue","_v$label","label","_v$label2","getRowsFromDiffs","diffs","entries","diff","_controlsMap$key5","control","before","after","isEqualish","val1","val2","_isEqual","AlteredSliceTag","props","_props$origFormData2","rows","setRows","hasDiffs","setHasDiffs","getDiffs","ofd","origFormData","cfd","currentFormData","fdKeys","forEach","fdKey","includes","_props$origFormData","viz_type","_isEmpty","modalBody","columns","accessor","Header","columnsForWrapText","data","pageSize","className","triggerNode","id","title","children","icon","ExclamationCircleOutlined","iconSize","onClick","modalTitle","responsive","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/AlteredSliceTag/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useMemo, useState, FC } from 'react';\n\nimport { isEqual, isEmpty } from 'lodash';\nimport { QueryFormData, t } from '@superset-ui/core';\nimport { sanitizeFormData } from 'src/explore/exploreUtils/formData';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport Label from 'src/components/Label';\nimport { Icons } from 'src/components/Icons';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';\n\ninterface AlteredSliceTagProps {\n  origFormData: QueryFormData;\n  currentFormData: QueryFormData;\n}\n\nexport interface ControlMap {\n  [key: string]: {\n    label?: string;\n    type?: string;\n  };\n}\n\ntype FilterItemType = {\n  comparator?: string | string[];\n  subject: string;\n  operator: string;\n  label?: string;\n};\n\nexport type DiffItemType<\n  T = FilterItemType | number | string | Record<string | number, any>,\n> =\n  | T[]\n  | boolean\n  | number\n  | string\n  | Record<string | number, any>\n  | null\n  | undefined;\n\nexport type DiffType = {\n  before: DiffItemType;\n  after: DiffItemType;\n};\n\nexport type RowType = {\n  before: string | number;\n  after: string | number;\n  control: string;\n};\n\nexport const alterForComparison = (\n  value?: string | null | [],\n): string | null => {\n  // Treat `null`, `undefined`, and empty strings as equivalent\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  // Treat empty arrays and objects as equivalent to null\n  if (Array.isArray(value) && value.length === 0) {\n    return null;\n  }\n  if (typeof value === 'object' && Object.keys(value).length === 0) {\n    return null;\n  }\n  return value;\n};\n\nexport const formatValueHandler = (\n  value: DiffItemType,\n  key: string,\n  controlsMap: ControlMap,\n): string | number => {\n  if (value === undefined) {\n    return 'N/A';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  if (typeof value === 'boolean') {\n    return value ? 'true' : 'false';\n  }\n  if (controlsMap[key]?.type === 'AdhocFilterControl' && Array.isArray(value)) {\n    if (!value.length) {\n      return '[]';\n    }\n    return value\n      .map((v: FilterItemType) => {\n        const filterVal =\n          v.comparator && v.comparator.constructor === Array\n            ? `[${v.comparator.join(', ')}]`\n            : v.comparator;\n        return `${v.subject} ${v.operator} ${filterVal}`;\n      })\n      .join(', ');\n  }\n  if (controlsMap[key]?.type === 'BoundsControl' && Array.isArray(value)) {\n    return `Min: ${value[0]}, Max: ${value[1]}`;\n  }\n  if (controlsMap[key]?.type === 'CollectionControl' && Array.isArray(value)) {\n    return value.map((v: FilterItemType) => safeStringify(v)).join(', ');\n  }\n  if (\n    controlsMap[key]?.type === 'MetricsControl' &&\n    value.constructor === Array\n  ) {\n    const formattedValue = value.map((v: FilterItemType) => v?.label ?? v);\n    return formattedValue.length ? formattedValue.join(', ') : '[]';\n  }\n  if (Array.isArray(value)) {\n    const formattedValue = value.map((v: FilterItemType) => v?.label ?? v);\n    return formattedValue.length ? formattedValue.join(', ') : '[]';\n  }\n  if (typeof value === 'string' || typeof value === 'number') {\n    return value;\n  }\n  return safeStringify(value);\n};\n\nexport const getRowsFromDiffs = (\n  diffs: { [key: string]: DiffType },\n  controlsMap: ControlMap,\n): RowType[] =>\n  Object.entries(diffs).map(([key, diff]) => ({\n    control: controlsMap[key]?.label || key,\n    before: formatValueHandler(diff.before, key, controlsMap),\n    after: formatValueHandler(diff.after, key, controlsMap),\n  }));\n\nexport const isEqualish = (val1: string, val2: string): boolean =>\n  isEqual(alterForComparison(val1), alterForComparison(val2));\n\nconst AlteredSliceTag: FC<AlteredSliceTagProps> = props => {\n  const [rows, setRows] = useState<RowType[]>([]);\n  const [hasDiffs, setHasDiffs] = useState<boolean>(false);\n\n  const getDiffs = useCallback(() => {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = sanitizeFormData(props.origFormData);\n    const cfd = sanitizeFormData(props.currentFormData);\n\n    const fdKeys = Object.keys(cfd);\n    const diffs: { [key: string]: DiffType } = {};\n    fdKeys.forEach(fdKey => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }, [props.currentFormData, props.origFormData]);\n\n  useEffect(() => {\n    const diffs = getDiffs();\n    const controlsMap = getControlsForVizType(\n      props.origFormData?.viz_type,\n    ) as ControlMap;\n    setRows(getRowsFromDiffs(diffs, controlsMap));\n    setHasDiffs(!isEmpty(diffs));\n  }, [getDiffs, props.origFormData?.viz_type]);\n\n  const modalBody = useMemo(() => {\n    const columns = [\n      {\n        accessor: 'control',\n        Header: t('Control'),\n      },\n      {\n        accessor: 'before',\n        Header: t('Before'),\n      },\n      {\n        accessor: 'after',\n        Header: t('After'),\n      },\n    ];\n    // set the wrap text in the specific columns.\n    const columnsForWrapText = ['Control', 'Before', 'After'];\n\n    return (\n      <TableView\n        columns={columns}\n        data={rows}\n        pageSize={50}\n        className=\"table-condensed\"\n        columnsForWrapText={columnsForWrapText}\n      />\n    );\n  }, [rows]);\n\n  const triggerNode = useMemo(\n    () => (\n      <Tooltip id=\"difference-tooltip\" title={t('Click to see difference')}>\n        <Label\n          icon={<Icons.ExclamationCircleOutlined iconSize=\"m\" />}\n          className=\"label\"\n          type=\"warning\"\n          onClick={() => {}}\n        >\n          {t('Altered')}\n        </Label>\n      </Tooltip>\n    ),\n    [],\n  );\n\n  if (!hasDiffs) {\n    return null;\n  }\n\n  return (\n    <ModalTrigger\n      triggerNode={triggerNode}\n      modalTitle={t('Chart changes')}\n      modalBody={modalBody}\n      responsive\n    />\n  );\n};\n\nexport default AlteredSliceTag;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}