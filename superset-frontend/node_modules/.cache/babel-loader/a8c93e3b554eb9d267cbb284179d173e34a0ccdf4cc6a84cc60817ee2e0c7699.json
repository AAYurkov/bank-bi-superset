{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { css, GenericDataType, styled, t } from '@superset-ui/core';\nimport { ClockCircleOutlined, QuestionOutlined, FunctionOutlined, FieldBinaryOutlined, FieldStringOutlined, NumberOutlined } from '@ant-design/icons';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst TypeIconWrapper = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${theme.gridUnit * 6}px;\n    height: ${theme.gridUnit * 6}px;\n    margin-right: ${theme.gridUnit}px;\n\n    && svg {\n      margin-right: 0;\n      margin-left: 0;\n      width: 100%;\n      height: 100%;\n    }\n  `};\n`;\nexport function ColumnTypeLabel({ type }) {\n  let typeIcon = _jsx(QuestionOutlined, { \"aria-label\": t('unknown type icon') });\n  if (type === '' || type === 'expression') {\n    typeIcon = _jsx(FunctionOutlined, { \"aria-label\": t('function type icon') });\n  } else\n  if (type === GenericDataType.String) {\n    typeIcon = _jsx(FieldStringOutlined, { \"aria-label\": t('string type icon') });\n  } else\n  if (type === GenericDataType.Numeric) {\n    typeIcon = _jsx(NumberOutlined, { \"aria-label\": t('numeric type icon') });\n  } else\n  if (type === GenericDataType.Boolean) {\n    typeIcon = _jsx(FieldBinaryOutlined, { \"aria-label\": t('boolean type icon') });\n  } else\n  if (type === GenericDataType.Temporal) {\n    typeIcon = _jsx(ClockCircleOutlined, { \"aria-label\": t('temporal type icon') });\n  }\n  return _jsx(TypeIconWrapper, { children: typeIcon });\n}const _default =\nColumnTypeLabel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TypeIconWrapper, \"TypeIconWrapper\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnTypeLabel/ColumnTypeLabel.tsx\");reactHotLoader.register(ColumnTypeLabel, \"ColumnTypeLabel\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnTypeLabel/ColumnTypeLabel.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnTypeLabel/ColumnTypeLabel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["css","GenericDataType","styled","t","ClockCircleOutlined","QuestionOutlined","FunctionOutlined","FieldBinaryOutlined","FieldStringOutlined","NumberOutlined","jsx","_jsx","TypeIconWrapper","div","theme","gridUnit","ColumnTypeLabel","type","typeIcon","String","Numeric","Boolean","Temporal","children","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnTypeLabel/ColumnTypeLabel.tsx"],"sourcesContent":["/* eslint-disable no-nested-ternary */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode } from 'react';\nimport { css, GenericDataType, styled, t } from '@superset-ui/core';\nimport {\n  ClockCircleOutlined,\n  QuestionOutlined,\n  FunctionOutlined,\n  FieldBinaryOutlined,\n  FieldStringOutlined,\n  NumberOutlined,\n} from '@ant-design/icons';\n\nexport type ColumnLabelExtendedType = 'expression' | '';\n\nexport type ColumnTypeLabelProps = {\n  type?: ColumnLabelExtendedType | GenericDataType;\n};\n\nconst TypeIconWrapper = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${theme.gridUnit * 6}px;\n    height: ${theme.gridUnit * 6}px;\n    margin-right: ${theme.gridUnit}px;\n\n    && svg {\n      margin-right: 0;\n      margin-left: 0;\n      width: 100%;\n      height: 100%;\n    }\n  `};\n`;\n\nexport function ColumnTypeLabel({ type }: ColumnTypeLabelProps) {\n  let typeIcon: ReactNode = (\n    <QuestionOutlined aria-label={t('unknown type icon')} />\n  );\n\n  if (type === '' || type === 'expression') {\n    typeIcon = <FunctionOutlined aria-label={t('function type icon')} />;\n  } else if (type === GenericDataType.String) {\n    typeIcon = <FieldStringOutlined aria-label={t('string type icon')} />;\n  } else if (type === GenericDataType.Numeric) {\n    typeIcon = <NumberOutlined aria-label={t('numeric type icon')} />;\n  } else if (type === GenericDataType.Boolean) {\n    typeIcon = <FieldBinaryOutlined aria-label={t('boolean type icon')} />;\n  } else if (type === GenericDataType.Temporal) {\n    typeIcon = <ClockCircleOutlined aria-label={t('temporal type icon')} />;\n  }\n\n  return <TypeIconWrapper>{typeIcon}</TypeIconWrapper>;\n}\n\nexport default ColumnTypeLabel;\n"],"mappings":"uSAoBA,SAASA,GAAG,EAAEC,eAAe,EAAEC,MAAM,EAAEC,CAAC,QAAQ,mBAAmB;AACnE,SACEC,mBAAmB,EACnBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,cAAc,QACT,mBAAmB,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAQ3B,MAAMC,eAAe,GAAGV,MAAM,CAACW,GAAG;IAC9B,CAAC,EAAEC,KAAK,EAAE,KAAKd,GAAG;;;;aAITc,KAAK,CAACC,QAAQ,GAAG,CAAC;cACjBD,KAAK,CAACC,QAAQ,GAAG,CAAC;oBACZD,KAAK,CAACC,QAAQ;;;;;;;;GAQ/B;CACF;AAED,OAAM,SAAUC,eAAeA,CAAC,EAAEC,IAAI,EAAwB;EAC5D,IAAIC,QAAQ,GACVP,IAAA,CAACN,gBAAgB,IAAC,cAAYF,CAAC,CAAC,mBAAmB,CAAE,GACtD;EAED,IAAIc,IAAI,KAAK,EAAE,IAAIA,IAAI,KAAK,YAAY,EAAE;IACxCC,QAAQ,GAAGP,IAAA,CAACL,gBAAgB,IAAC,cAAYH,CAAC,CAAC,oBAAoB,CAAE,GAAG;GACrE;EAAM,IAAIc,IAAI,KAAKhB,eAAe,CAACkB,MAAM,EAAE;IAC1CD,QAAQ,GAAGP,IAAA,CAACH,mBAAmB,IAAC,cAAYL,CAAC,CAAC,kBAAkB,CAAE,GAAG;GACtE;EAAM,IAAIc,IAAI,KAAKhB,eAAe,CAACmB,OAAO,EAAE;IAC3CF,QAAQ,GAAGP,IAAA,CAACF,cAAc,IAAC,cAAYN,CAAC,CAAC,mBAAmB,CAAE,GAAG;GAClE;EAAM,IAAIc,IAAI,KAAKhB,eAAe,CAACoB,OAAO,EAAE;IAC3CH,QAAQ,GAAGP,IAAA,CAACJ,mBAAmB,IAAC,cAAYJ,CAAC,CAAC,mBAAmB,CAAE,GAAG;GACvE;EAAM,IAAIc,IAAI,KAAKhB,eAAe,CAACqB,QAAQ,EAAE;IAC5CJ,QAAQ,GAAGP,IAAA,CAACP,mBAAmB,IAAC,cAAYD,CAAC,CAAC,oBAAoB,CAAE,GAAG;;EAGzE,OAAOQ,IAAA,CAACC,eAAe,IAAAW,QAAA,EAAEL,QAAQ,EAAkB,CAAC;AACtD,CAAC,MAAAM,QAAA;AAEcR,eAAe,CAA9B,eAAAQ,QAAA,CAA+B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAtCzBjB,eAAe,0JAAAa,cAAA,CAAAI,QAAA,CAkBLb,eAAe,0JAAAS,cAAA,CAAAI,QAAA,CAAAL,QAAA,0KAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}