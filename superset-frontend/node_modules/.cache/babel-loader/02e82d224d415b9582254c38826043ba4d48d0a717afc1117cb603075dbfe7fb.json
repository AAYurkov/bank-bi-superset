{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport FiltersConfigModal from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigModal';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const useFilterConfigModal = ({ createNewOnOpen = false, dashboardId, initialFilterId }) => {\n  const dispatch = useDispatch();\n  const [isFilterConfigModalOpen, setIsFilterConfigModalOpen] = useState(false);\n  const openFilterConfigModal = useCallback(() => {\n    setIsFilterConfigModalOpen(true);\n  }, []);\n  const closeFilterConfigModal = useCallback(() => {\n    setIsFilterConfigModalOpen(false);\n  }, []);\n  const handleFilterSave = useCallback(async (filterChanges) => {\n    dispatch(await setFilterConfiguration(filterChanges));\n    closeFilterConfigModal();\n  }, [dispatch, closeFilterConfigModal]);\n  const FilterConfigModalComponent = isFilterConfigModalOpen ? _jsx(FiltersConfigModal, { isOpen: isFilterConfigModalOpen, onSave: handleFilterSave, onCancel: closeFilterConfigModal, createNewOnOpen: createNewOnOpen, initialFilterId: initialFilterId }, `filters-for-${dashboardId}`) : null;\n  return {\n    isFilterConfigModalOpen,\n    openFilterConfigModal,\n    closeFilterConfigModal,\n    handleFilterSave,\n    FilterConfigModalComponent\n  };\n};__signature__(useFilterConfigModal, \"useDispatch{dispatch}\\nuseState{[isFilterConfigModalOpen, setIsFilterConfigModalOpen](false)}\\nuseCallback{openFilterConfigModal}\\nuseCallback{closeFilterConfigModal}\\nuseCallback{handleFilterSave}\", () => [useDispatch]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterConfigModal, \"useFilterConfigModal\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/useFilterConfigModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useState","useDispatch","setFilterConfiguration","FiltersConfigModal","jsx","_jsx","useFilterConfigModal","createNewOnOpen","dashboardId","initialFilterId","dispatch","isFilterConfigModalOpen","setIsFilterConfigModalOpen","openFilterConfigModal","closeFilterConfigModal","handleFilterSave","filterChanges","FilterConfigModalComponent","isOpen","onSave","onCancel","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink/useFilterConfigModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport { SaveFilterChangesType } from 'src/dashboard/components/nativeFilters/FiltersConfigModal/types';\nimport FiltersConfigModal from 'src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigModal';\n\ninterface UseFilterConfigModalProps {\n  createNewOnOpen?: boolean;\n  dashboardId: number;\n  initialFilterId?: string;\n}\n\ninterface UseFilterConfigModalReturn {\n  isFilterConfigModalOpen: boolean;\n  openFilterConfigModal: () => void;\n  closeFilterConfigModal: () => void;\n  handleFilterSave: (filterChanges: SaveFilterChangesType) => Promise<void>;\n  FilterConfigModalComponent: JSX.Element | null;\n}\n\nexport const useFilterConfigModal = ({\n  createNewOnOpen = false,\n  dashboardId,\n  initialFilterId,\n}: UseFilterConfigModalProps): UseFilterConfigModalReturn => {\n  const dispatch = useDispatch();\n  const [isFilterConfigModalOpen, setIsFilterConfigModalOpen] = useState(false);\n\n  const openFilterConfigModal = useCallback(() => {\n    setIsFilterConfigModalOpen(true);\n  }, []);\n\n  const closeFilterConfigModal = useCallback(() => {\n    setIsFilterConfigModalOpen(false);\n  }, []);\n\n  const handleFilterSave = useCallback(\n    async (filterChanges: SaveFilterChangesType) => {\n      dispatch(await setFilterConfiguration(filterChanges));\n      closeFilterConfigModal();\n    },\n    [dispatch, closeFilterConfigModal],\n  );\n\n  const FilterConfigModalComponent = isFilterConfigModalOpen ? (\n    <FiltersConfigModal\n      isOpen={isFilterConfigModalOpen}\n      onSave={handleFilterSave}\n      onCancel={closeFilterConfigModal}\n      key={`filters-for-${dashboardId}`}\n      createNewOnOpen={createNewOnOpen}\n      initialFilterId={initialFilterId}\n    />\n  ) : null;\n\n  return {\n    isFilterConfigModalOpen,\n    openFilterConfigModal,\n    closeFilterConfigModal,\n    handleFilterSave,\n    FilterConfigModalComponent,\n  };\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,sBAAsB,QAAQ,qCAAqC;AAE5E,OAAOC,kBAAkB,MAAM,8EAA8E,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAgB9G,OAAO,MAAMC,oBAAoB,GAAGA,CAAC,EACnCC,eAAe,GAAG,KAAK,EACvBC,WAAW,EACXC,eAAe,EACW,KAAgC;EAC1D,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAM,CAACU,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7E,MAAMa,qBAAqB,GAAGd,WAAW,CAAC,MAAK;IAC7Ca,0BAA0B,CAAC,IAAI,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,sBAAsB,GAAGf,WAAW,CAAC,MAAK;IAC9Ca,0BAA0B,CAAC,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAGhB,WAAW,CAClC,OAAOiB,aAAoC,KAAI;IAC7CN,QAAQ,CAAC,MAAMR,sBAAsB,CAACc,aAAa,CAAC,CAAC;IACrDF,sBAAsB,EAAE;EAC1B,CAAC,EACD,CAACJ,QAAQ,EAAEI,sBAAsB,CAAC,CACnC;EAED,MAAMG,0BAA0B,GAAGN,uBAAuB,GACxDN,IAAA,CAACF,kBAAkB,IACjBe,MAAM,EAAEP,uBAAwB,EAChCQ,MAAM,EAAEJ,gBAAiB,EACzBK,QAAQ,EAAEN,sBAAuB,EAEjCP,eAAe,EAAEA,eAAgB,EACjCE,eAAe,EAAEA,eAAgB,IAF5B,eAAeD,WAAW,EAEE,CACjC,GACA,IAAI;EAER,OAAO;IACLG,uBAAuB;IACvBE,qBAAqB;IACrBC,sBAAsB;IACtBC,gBAAgB;IAChBE;GACD;AACH,CAAC,CAACI,aAAA,CA1CWf,oBAAoB,kNAKdL,WAAW,sBAAAqB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CALjBpB,oBAAoB,kMAAAqB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}