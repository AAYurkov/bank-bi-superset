{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { Form } from 'src/components/Form';\nimport { FormFieldOrder, FORM_FIELD_MAP } from './constants';\nimport { formScrollableStyles, validatedFormStyles } from '../styles';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst DatabaseConnectionForm = ({ dbModel, db, editNewDb, getPlaceholder, getValidation, isEditMode = false, onAddTableCatalog, onChange, onExtraInputChange, onEncryptedExtraInputChange, onParametersChange, onParametersUploadFileChange, onQueryChange, onRemoveTableCatalog, sslForced, validationErrors, clearValidationErrors }) => {\n  const parameters = dbModel == null ? void 0 : dbModel.parameters;\n  return _jsx(Form, { children:\n    _jsx(\"div\", {\n      // @ts-ignore\n      css: (theme) => [\n      formScrollableStyles,\n      validatedFormStyles(theme)], children:\n\n      parameters &&\n      FormFieldOrder.filter((key) => Object.keys(parameters.properties).includes(key) ||\n      key === 'database_name').map((field) => {var _parameters$required, _parameters$propertie, _parameters$propertie2;return (\n          // @ts-ignore TODO: fix ComponentClass for SSHTunnelSwitchComponent not having call signature.\n          FORM_FIELD_MAP[field]({\n            required: (_parameters$required = parameters.required) == null ? void 0 : _parameters$required.includes(field),\n            changeMethods: {\n              onParametersChange,\n              onChange,\n              onQueryChange,\n              onParametersUploadFileChange,\n              onAddTableCatalog,\n              onRemoveTableCatalog,\n              onExtraInputChange,\n              onEncryptedExtraInputChange\n            },\n            validationErrors,\n            getValidation,\n            clearValidationErrors,\n            db,\n            key: field,\n            field,\n            default_value: (_parameters$propertie = parameters.properties[field]) == null ? void 0 : _parameters$propertie.default,\n            description: (_parameters$propertie2 = parameters.properties[field]) == null ? void 0 : _parameters$propertie2.description,\n            isEditMode,\n            sslForced,\n            editNewDb,\n            placeholder: getPlaceholder ? getPlaceholder(field) : undefined\n          }));}) }\n    ) }\n  );\n};\nexport const FormFieldMap = FORM_FIELD_MAP;const _default =\nDatabaseConnectionForm;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatabaseConnectionForm, \"DatabaseConnectionForm\", \"/Users/aryurkov/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/index.tsx\");reactHotLoader.register(FormFieldMap, \"FormFieldMap\", \"/Users/aryurkov/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Form","FormFieldOrder","FORM_FIELD_MAP","formScrollableStyles","validatedFormStyles","jsx","_jsx","DatabaseConnectionForm","dbModel","db","editNewDb","getPlaceholder","getValidation","isEditMode","onAddTableCatalog","onChange","onExtraInputChange","onEncryptedExtraInputChange","onParametersChange","onParametersUploadFileChange","onQueryChange","onRemoveTableCatalog","sslForced","validationErrors","clearValidationErrors","parameters","children","css","theme","filter","key","Object","keys","properties","includes","map","field","_parameters$required","_parameters$propertie","_parameters$propertie2","required","changeMethods","default_value","default","description","placeholder","undefined","FormFieldMap","_default","reactHotLoader","reactHotLoaderGlobal","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetTheme } from '@superset-ui/core';\nimport { Form } from 'src/components/Form';\nimport { FormFieldOrder, FORM_FIELD_MAP } from './constants';\nimport { formScrollableStyles, validatedFormStyles } from '../styles';\nimport { DatabaseConnectionFormProps } from '../../types';\n\nconst DatabaseConnectionForm = ({\n  dbModel,\n  db,\n  editNewDb,\n  getPlaceholder,\n  getValidation,\n  isEditMode = false,\n  onAddTableCatalog,\n  onChange,\n  onExtraInputChange,\n  onEncryptedExtraInputChange,\n  onParametersChange,\n  onParametersUploadFileChange,\n  onQueryChange,\n  onRemoveTableCatalog,\n  sslForced,\n  validationErrors,\n  clearValidationErrors,\n}: DatabaseConnectionFormProps) => {\n  const parameters = dbModel?.parameters as {\n    properties: {\n      [key: string]: {\n        default?: any;\n        description?: string;\n      };\n    };\n    required?: string[];\n  };\n\n  return (\n    <Form>\n      <div\n        // @ts-ignore\n        css={(theme: SupersetTheme) => [\n          formScrollableStyles,\n          validatedFormStyles(theme),\n        ]}\n      >\n        {parameters &&\n          FormFieldOrder.filter(\n            (key: string) =>\n              Object.keys(parameters.properties).includes(key) ||\n              key === 'database_name',\n          ).map(field =>\n            // @ts-ignore TODO: fix ComponentClass for SSHTunnelSwitchComponent not having call signature.\n            FORM_FIELD_MAP[field]({\n              required: parameters.required?.includes(field),\n              changeMethods: {\n                onParametersChange,\n                onChange,\n                onQueryChange,\n                onParametersUploadFileChange,\n                onAddTableCatalog,\n                onRemoveTableCatalog,\n                onExtraInputChange,\n                onEncryptedExtraInputChange,\n              },\n              validationErrors,\n              getValidation,\n              clearValidationErrors,\n              db,\n              key: field,\n              field,\n              default_value: parameters.properties[field]?.default,\n              description: parameters.properties[field]?.description,\n              isEditMode,\n              sslForced,\n              editNewDb,\n              placeholder: getPlaceholder ? getPlaceholder(field) : undefined,\n            }),\n          )}\n      </div>\n    </Form>\n  );\n};\nexport const FormFieldMap = FORM_FIELD_MAP;\n\nexport default DatabaseConnectionForm;\n"],"mappings":"uSAmBA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAC5D,SAASC,oBAAoB,EAAEC,mBAAmB,QAAQ,WAAW,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAGtE,MAAMC,sBAAsB,GAAGA,CAAC,EAC9BC,OAAO,EACPC,EAAE,EACFC,SAAS,EACTC,cAAc,EACdC,aAAa,EACbC,UAAU,GAAG,KAAK,EAClBC,iBAAiB,EACjBC,QAAQ,EACRC,kBAAkB,EAClBC,2BAA2B,EAC3BC,kBAAkB,EAClBC,4BAA4B,EAC5BC,aAAa,EACbC,oBAAoB,EACpBC,SAAS,EACTC,gBAAgB,EAChBC,qBAAqB,EACO,KAAI;EAChC,MAAMC,UAAU,GAAGjB,OAAO,oBAAPA,OAAO,CAAEiB,UAQ3B;EAED,OACEnB,IAAA,CAACN,IAAI,IAAA0B,QAAA;IACHpB,IAAA;MACE;MACAqB,GAAG,EAAEA,CAACC,KAAoB,KAAK;MAC7BzB,oBAAoB;MACpBC,mBAAmB,CAACwB,KAAK,CAAC,CAC1B,EAAAF,QAAA;;MAEDD,UAAU;MACTxB,cAAc,CAAC4B,MAAM,CACnB,CAACC,GAAW,KACVC,MAAM,CAACC,IAAI,CAACP,UAAU,CAACQ,UAAU,CAAC,CAACC,QAAQ,CAACJ,GAAG,CAAC;MAChDA,GAAG,KAAK,eAAe,CAC1B,CAACK,GAAG,CAAC,CAAAC,KAAK,UAAAC,oBAAA,EAAAC,qBAAA,EAAAC,sBAAA;UACT;UACArC,cAAc,CAACkC,KAAK,CAAC,CAAC;YACpBI,QAAQ,GAAAH,oBAAA,GAAEZ,UAAU,CAACe,QAAQ,qBAAnBH,oBAAA,CAAqBH,QAAQ,CAACE,KAAK,CAAC;YAC9CK,aAAa,EAAE;cACbvB,kBAAkB;cAClBH,QAAQ;cACRK,aAAa;cACbD,4BAA4B;cAC5BL,iBAAiB;cACjBO,oBAAoB;cACpBL,kBAAkB;cAClBC;aACD;YACDM,gBAAgB;YAChBX,aAAa;YACbY,qBAAqB;YACrBf,EAAE;YACFqB,GAAG,EAAEM,KAAK;YACVA,KAAK;YACLM,aAAa,GAAAJ,qBAAA,GAAEb,UAAU,CAACQ,UAAU,CAACG,KAAK,CAAC,qBAA5BE,qBAAA,CAA8BK,OAAO;YACpDC,WAAW,GAAAL,sBAAA,GAAEd,UAAU,CAACQ,UAAU,CAACG,KAAK,CAAC,qBAA5BG,sBAAA,CAA8BK,WAAW;YACtD/B,UAAU;YACVS,SAAS;YACTZ,SAAS;YACTmC,WAAW,EAAElC,cAAc,GAAGA,cAAc,CAACyB,KAAK,CAAC,GAAGU;WACvD,CAAC,IACH;IACA,CACP;EAAM,CAAC;AAEX,CAAC;AACD,OAAO,MAAMC,YAAY,GAAG7C,cAAc,CAAC,MAAA8C,QAAA;AAE5BzC,sBAAsB,CAArC,eAAAyC,QAAA,CAAsC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAP,OAAA,GAAAG,SAAA,MAAAG,cAAA,WAAAA,cAAA,CAAAE,QAAA,CA7EhC5C,sBAAsB,gJAAA0C,cAAA,CAAAE,QAAA,CA2EfJ,YAAY,sIAAAE,cAAA,CAAAE,QAAA,CAAAH,QAAA,yJAAAI,WAAA,UAAAF,oBAAA,mBAAAA,oBAAA,CAAAE,WAAA,GAAAN,SAAA,CAAAM,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}