{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DragLayer } from 'react-dnd';\nimport AddSliceCard from '../AddSliceCard';\nimport { NEW_COMPONENT_SOURCE_TYPE, CHART_TYPE } from '../../util/componentTypes';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst staticCardStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  top: 0,\n  left: 0,\n  zIndex: 101,\n  width: 376 - 2 * 16\n};\nconst AddSliceDragPreview = ({ dragItem, slices, isDragging, currentOffset }) => {\n  if (!isDragging || !currentOffset || !dragItem || !slices)\n  return null;\n  const slice = slices[dragItem.index];\n  // make sure it's a new component and a chart\n  const shouldRender = slice &&\n  dragItem.parentType === NEW_COMPONENT_SOURCE_TYPE &&\n  dragItem.type === CHART_TYPE;\n  return !shouldRender ? null : _jsx(AddSliceCard, { style: {\n      ...staticCardStyles,\n      transform: `translate(${currentOffset.x}px, ${currentOffset.y}px)`\n    }, sliceName: slice.slice_name, lastModified: slice.changed_on_humanized, visType: slice.viz_type, datasourceUrl: slice.datasource_url, datasourceName: slice.datasource_name });\n};\n// This injects these props into the component\nconst _default = DragLayer((monitor) => ({\n  dragItem: monitor.getItem(),\n  currentOffset: monitor.getSourceClientOffset(),\n  isDragging: monitor.isDragging()\n}))(AddSliceDragPreview);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(staticCardStyles, \"staticCardStyles\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/AddSliceDragPreview.tsx\");reactHotLoader.register(AddSliceDragPreview, \"AddSliceDragPreview\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/AddSliceDragPreview.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/AddSliceDragPreview.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["DragLayer","AddSliceCard","NEW_COMPONENT_SOURCE_TYPE","CHART_TYPE","jsx","_jsx","staticCardStyles","position","pointerEvents","top","left","zIndex","width","AddSliceDragPreview","dragItem","slices","isDragging","currentOffset","slice","index","shouldRender","parentType","type","style","transform","x","y","sliceName","slice_name","lastModified","changed_on_humanized","visType","viz_type","datasourceUrl","datasource_url","datasourceName","datasource_name","_default","monitor","getItem","getSourceClientOffset","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/dnd/AddSliceDragPreview.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DragLayer, XYCoord } from 'react-dnd';\nimport { Slice } from 'src/dashboard/types';\nimport AddSliceCard from '../AddSliceCard';\nimport {\n  NEW_COMPONENT_SOURCE_TYPE,\n  CHART_TYPE,\n} from '../../util/componentTypes';\n\ninterface DragItem {\n  index: number;\n  parentType: string;\n  type: string;\n}\n\ninterface AddSliceDragPreviewProps {\n  dragItem: DragItem | null;\n  slices: Slice[] | null;\n  isDragging: boolean;\n  currentOffset: XYCoord | null;\n}\n\nconst staticCardStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  top: 0,\n  left: 0,\n  zIndex: 101, // this should be higher than top-level tabs\n  width: 376 - 2 * 16,\n};\n\nconst AddSliceDragPreview: React.FC<AddSliceDragPreviewProps> = ({\n  dragItem,\n  slices,\n  isDragging,\n  currentOffset,\n}) => {\n  if (!isDragging || !currentOffset || !dragItem || !slices) return null;\n\n  const slice = slices[dragItem.index];\n\n  // make sure it's a new component and a chart\n  const shouldRender =\n    slice &&\n    dragItem.parentType === NEW_COMPONENT_SOURCE_TYPE &&\n    dragItem.type === CHART_TYPE;\n\n  return !shouldRender ? null : (\n    <AddSliceCard\n      style={{\n        ...staticCardStyles,\n        transform: `translate(${currentOffset.x}px, ${currentOffset.y}px)`,\n      }}\n      sliceName={slice.slice_name}\n      lastModified={slice.changed_on_humanized}\n      visType={slice.viz_type}\n      datasourceUrl={slice.datasource_url}\n      datasourceName={slice.datasource_name}\n    />\n  );\n};\n\n// This injects these props into the component\nexport default DragLayer(monitor => ({\n  dragItem: monitor.getItem() as DragItem | null,\n  currentOffset: monitor.getSourceClientOffset(),\n  isDragging: monitor.isDragging(),\n}))(AddSliceDragPreview);\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,QAAiB,WAAW;AAE9C,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,SACEC,yBAAyB,EACzBC,UAAU,QACL,2BAA2B,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAenC,MAAMC,gBAAgB,GAAwB;EAC5CC,QAAQ,EAAE,OAAO;EACjBC,aAAa,EAAE,MAAM;EACrBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,GAAG,GAAG,CAAC,GAAG;CAClB;AAED,MAAMC,mBAAmB,GAAuCA,CAAC,EAC/DC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,aAAa,EACd,KAAI;EACH,IAAI,CAACD,UAAU,IAAI,CAACC,aAAa,IAAI,CAACH,QAAQ,IAAI,CAACC,MAAM;EAAE,OAAO,IAAI;EAEtE,MAAMG,KAAK,GAAGH,MAAM,CAACD,QAAQ,CAACK,KAAK,CAAC;EAEpC;EACA,MAAMC,YAAY,GAChBF,KAAK;EACLJ,QAAQ,CAACO,UAAU,KAAKnB,yBAAyB;EACjDY,QAAQ,CAACQ,IAAI,KAAKnB,UAAU;EAE9B,OAAO,CAACiB,YAAY,GAAG,IAAI,GACzBf,IAAA,CAACJ,YAAY,IACXsB,KAAK,EAAE;MACL,GAAGjB,gBAAgB;MACnBkB,SAAS,EAAE,aAAaP,aAAa,CAACQ,CAAC,OAAOR,aAAa,CAACS,CAAC;KAC7D,EACFC,SAAS,EAAET,KAAK,CAACU,UAAW,EAC5BC,YAAY,EAAEX,KAAK,CAACY,oBAAqB,EACzCC,OAAO,EAAEb,KAAK,CAACc,QAAS,EACxBC,aAAa,EAAEf,KAAK,CAACgB,cAAe,EACpCC,cAAc,EAAEjB,KAAK,CAACkB,eAAgB,GAEzC;AACH,CAAC;AAED;AAAA,MAAAC,QAAA,GACerC,SAAS,CAAC,CAAAsC,OAAO,MAAK;EACnCxB,QAAQ,EAAEwB,OAAO,CAACC,OAAO,EAAqB;EAC9CtB,aAAa,EAAEqB,OAAO,CAACE,qBAAqB,EAAE;EAC9CxB,UAAU,EAAEsB,OAAO,CAACtB,UAAU;CAC/B,CAAC,CAAC,CAACH,mBAAmB,CAAC,CAJxB,eAAAwB,QAAA,CAIyB,mBAAAI,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA7CnBvC,gBAAgB,yHAAAmC,cAAA,CAAAI,QAAA,CAShBhC,mBAAmB,4HAAA4B,cAAA,CAAAI,QAAA,CAAAR,QAAA,wIAAAS,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}