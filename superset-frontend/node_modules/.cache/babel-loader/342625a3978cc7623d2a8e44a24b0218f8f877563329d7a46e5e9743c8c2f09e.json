{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { t, SupersetClient, getClientErrorObject } from '@superset-ui/core';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Select } from 'src/components';\nimport withToasts from 'src/components/MessageToasts/withToasts';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nfunction isLabeledValue(arg) {\n  return arg.value !== undefined;\n}\nconst SelectAsyncControl = ({ addDangerToast, allowClear = true, ariaLabel, dataEndpoint, multi = true, mutator, onChange, placeholder, value, ...props }) => {\n  const [options, setOptions] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const handleOnChange = (val) => {\n    let onChangeVal = val;\n    if (Array.isArray(val)) {\n      const values = val.map((v) => isLabeledValue(v) ? v.value : v);\n      onChangeVal = values;\n    }\n    if (isLabeledValue(val)) {\n      onChangeVal = val.value;\n    }\n    onChange(onChangeVal);\n  };\n  const getValue = () => {\n    const currentValue = value || (props.default !== undefined ? props.default : undefined);\n    // safety check - the value is intended to be undefined but null was used\n    if (currentValue === null && !options.find((o) => o.value === null)) {\n      return undefined;\n    }\n    return currentValue;\n  };\n  useEffect(() => {\n    const onError = (response) => getClientErrorObject(response).then((e) => {\n      const { error } = e;\n      addDangerToast(t('Error while fetching data: %s', error));\n    });\n    const loadOptions = () => SupersetClient.get({\n      endpoint: dataEndpoint\n    }).\n    then((response) => {\n      const data = mutator ?\n      mutator(response.json, value) :\n      response.json.result;\n      setOptions(data);\n    }).\n    catch(onError).\n    finally(() => {\n      setLoaded(true);\n    });\n    if (!loaded) {\n      loadOptions();\n    }\n  }, [addDangerToast, dataEndpoint, mutator, value, loaded]);\n  return _jsx(Select, { allowClear: allowClear, ariaLabel: ariaLabel || t('Select ...'), value: getValue(), header: _jsx(ControlHeader, { ...props }), mode: multi ? 'multiple' : 'single', onChange: handleOnChange, options: options, placeholder: placeholder });\n};__signature__(SelectAsyncControl, \"useState{[options, setOptions]([])}\\nuseState{[loaded, setLoaded](false)}\\nuseEffect{}\");const _default =\nwithToasts(SelectAsyncControl);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isLabeledValue, \"isLabeledValue\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/SelectAsyncControl/index.tsx\");reactHotLoader.register(SelectAsyncControl, \"SelectAsyncControl\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/SelectAsyncControl/index.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/SelectAsyncControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useState","t","SupersetClient","getClientErrorObject","ControlHeader","Select","withToasts","jsx","_jsx","isLabeledValue","arg","value","undefined","SelectAsyncControl","addDangerToast","allowClear","ariaLabel","dataEndpoint","multi","mutator","onChange","placeholder","props","options","setOptions","loaded","setLoaded","handleOnChange","val","onChangeVal","Array","isArray","values","map","v","getValue","currentValue","default","find","o","onError","response","then","e","error","loadOptions","get","endpoint","data","json","result","catch","finally","header","mode","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/explore/components/controls/SelectAsyncControl/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { t, SupersetClient, getClientErrorObject } from '@superset-ui/core';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Select } from 'src/components';\nimport { SelectOptionsType, SelectProps } from 'src/components/Select/types';\n// eslint-disable-next-line no-restricted-imports\nimport { SelectValue, LabeledValue } from 'antd/lib/select'; // TODO: Remove antd\nimport withToasts from 'src/components/MessageToasts/withToasts';\n\ntype SelectAsyncProps = Omit<SelectProps, 'options' | 'ariaLabel' | 'onChange'>;\n\ninterface SelectAsyncControlProps extends SelectAsyncProps {\n  addDangerToast: (error: string) => void;\n  ariaLabel?: string;\n  dataEndpoint: string;\n  default?: SelectValue;\n  mutator?: (\n    response: Record<string, any>,\n    value: SelectValue | undefined,\n  ) => SelectOptionsType;\n  multi?: boolean;\n  onChange: (val: SelectValue) => void;\n  // ControlHeader related props\n  description?: string;\n  hovered?: boolean;\n  label?: string;\n}\n\nfunction isLabeledValue(arg: any): arg is LabeledValue {\n  return arg.value !== undefined;\n}\n\nconst SelectAsyncControl = ({\n  addDangerToast,\n  allowClear = true,\n  ariaLabel,\n  dataEndpoint,\n  multi = true,\n  mutator,\n  onChange,\n  placeholder,\n  value,\n  ...props\n}: SelectAsyncControlProps) => {\n  const [options, setOptions] = useState<SelectOptionsType>([]);\n  const [loaded, setLoaded] = useState<Boolean>(false);\n\n  const handleOnChange = (val: SelectValue) => {\n    let onChangeVal = val;\n    if (Array.isArray(val)) {\n      const values = val.map(v => (isLabeledValue(v) ? v.value : v));\n      onChangeVal = values;\n    }\n    if (isLabeledValue(val)) {\n      onChangeVal = val.value;\n    }\n    onChange(onChangeVal);\n  };\n\n  const getValue = () => {\n    const currentValue =\n      value || (props.default !== undefined ? props.default : undefined);\n\n    // safety check - the value is intended to be undefined but null was used\n    if (currentValue === null && !options.find(o => o.value === null)) {\n      return undefined;\n    }\n    return currentValue;\n  };\n\n  useEffect(() => {\n    const onError = (response: Response) =>\n      getClientErrorObject(response).then(e => {\n        const { error } = e;\n        addDangerToast(t('Error while fetching data: %s', error));\n      });\n    const loadOptions = () =>\n      SupersetClient.get({\n        endpoint: dataEndpoint,\n      })\n        .then(response => {\n          const data = mutator\n            ? mutator(response.json, value)\n            : response.json.result;\n          setOptions(data);\n        })\n        .catch(onError)\n        .finally(() => {\n          setLoaded(true);\n        });\n\n    if (!loaded) {\n      loadOptions();\n    }\n  }, [addDangerToast, dataEndpoint, mutator, value, loaded]);\n\n  return (\n    <Select\n      allowClear={allowClear}\n      ariaLabel={ariaLabel || t('Select ...')}\n      value={getValue()}\n      header={<ControlHeader {...props} />}\n      mode={multi ? 'multiple' : 'single'}\n      onChange={handleOnChange}\n      options={options}\n      placeholder={placeholder}\n    />\n  );\n};\n\nexport default withToasts(SelectAsyncControl);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}