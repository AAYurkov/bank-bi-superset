{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { logging, t } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport downloadAsPdf from 'src/utils/downloadAsPdf';\nimport { LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_PDF } from 'src/logger/LogUtils';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport default function DownloadAsPdf({ text, logEvent, dashboardTitle }) {\n  const SCREENSHOT_NODE_SELECTOR = '.dashboard';\n  const { addDangerToast } = useToasts();\n  const onDownloadPdf = async (e) => {\n    try {\n      downloadAsPdf(SCREENSHOT_NODE_SELECTOR, dashboardTitle, true)(e);\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n    logEvent == null ? void 0 : logEvent(LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_PDF);\n  };\n  return _jsx(Menu.Item, { onClick: (e) => {\n      onDownloadPdf(e.domEvent);\n    }, children:\n    text }, \"download-pdf\"\n  );\n}__signature__(DownloadAsPdf, \"useToasts{{ addDangerToast }}\", () => [useToasts]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DownloadAsPdf, \"DownloadAsPdf\", \"/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/DownloadMenuItems/DownloadAsPdf.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["logging","t","Menu","downloadAsPdf","LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_PDF","useToasts","jsx","_jsx","DownloadAsPdf","text","logEvent","dashboardTitle","SCREENSHOT_NODE_SELECTOR","addDangerToast","onDownloadPdf","e","error","Item","onClick","domEvent","children","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/dashboard/components/menu/DownloadMenuItems/DownloadAsPdf.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SyntheticEvent } from 'react';\nimport { logging, t } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport downloadAsPdf from 'src/utils/downloadAsPdf';\nimport { LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_PDF } from 'src/logger/LogUtils';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\n\nexport default function DownloadAsPdf({\n  text,\n  logEvent,\n  dashboardTitle,\n}: {\n  text: string;\n  dashboardTitle: string;\n  logEvent?: Function;\n}) {\n  const SCREENSHOT_NODE_SELECTOR = '.dashboard';\n  const { addDangerToast } = useToasts();\n  const onDownloadPdf = async (e: SyntheticEvent) => {\n    try {\n      downloadAsPdf(SCREENSHOT_NODE_SELECTOR, dashboardTitle, true)(e);\n    } catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n    logEvent?.(LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_PDF);\n  };\n\n  return (\n    <Menu.Item\n      key=\"download-pdf\"\n      onClick={e => {\n        onDownloadPdf(e.domEvent);\n      }}\n    >\n      {text}\n    </Menu.Item>\n  );\n}\n"],"mappings":"uSAmBA,SAASA,OAAO,EAAEC,CAAC,QAAQ,mBAAmB;AAC9C,SAASC,IAAI,QAAQ,qBAAqB;AAC1C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,SAASC,qCAAqC,QAAQ,qBAAqB;AAC3E,SAASC,SAAS,QAAQ,yCAAyC,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAEpE,eAAc,SAAUC,aAAaA,CAAC,EACpCC,IAAI,EACJC,QAAQ,EACRC,cAAc,EAKf;EACC,MAAMC,wBAAwB,GAAG,YAAY;EAC7C,MAAM,EAAEC,cAAc,EAAE,GAAGR,SAAS,EAAE;EACtC,MAAMS,aAAa,GAAG,MAAAA,CAAOC,CAAiB,KAAI;IAChD,IAAI;MACFZ,aAAa,CAACS,wBAAwB,EAAED,cAAc,EAAE,IAAI,CAAC,CAACI,CAAC,CAAC;;IAChE,OAAOC,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAACA,KAAK,CAAC;MACpBH,cAAc,CAACZ,CAAC,CAAC,+CAA+C,CAAC,CAAC;;IAEpES,QAAQ,oBAARA,QAAQ,CAAGN,qCAAqC,CAAC;EACnD,CAAC;EAED,OACEG,IAAA,CAACL,IAAI,CAACe,IAAI,IAERC,OAAO,EAAEA,CAAAH,CAAC,KAAG;MACXD,aAAa,CAACC,CAAC,CAACI,QAAQ,CAAC;IAC3B,CAAE,EAAAC,QAAA;IAEDX,IAAI,IALD;EAMK,CAAC;AAEhB,CAACY,aAAA,CA/BuBb,aAAa,0CAURH,SAAS,sBAAAiB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAVdlB,aAAa,2JAAAmB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}