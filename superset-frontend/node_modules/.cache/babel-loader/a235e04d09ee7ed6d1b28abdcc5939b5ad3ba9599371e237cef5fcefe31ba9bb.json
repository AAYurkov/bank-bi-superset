{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, ComparisonType } from '@superset-ui/core';\nimport { INVALID_DATE } from '..';\nconst fullChoices = [\n['1 day ago', t('1 day ago')],\n['1 week ago', t('1 week ago')],\n['28 days ago', t('28 days ago')],\n['30 days ago', t('30 days ago')],\n['1 month ago', t('1 month ago')],\n['52 weeks ago', t('52 weeks ago')],\n['1 year ago', t('1 year ago')],\n['104 weeks ago', t('104 weeks ago')],\n['2 years ago', t('2 years ago')],\n['156 weeks ago', t('156 weeks ago')],\n['3 years ago', t('3 years ago')],\n['custom', t('Custom date')],\n['inherit', t('Inherit range from time filter')]];\n\nconst reducedKeys = new Set([\n'1 day ago',\n'1 week ago',\n'1 month ago',\n'1 year ago',\n'custom',\n'inherit']\n);\n// Filter fullChoices to get only the entries whose keys are in reducedKeys\nconst reducedChoices = fullChoices.filter((choice) => reducedKeys.has(choice[0]));\nexport const timeComparisonControls = ({ multi = true, showCalculationType = true, showFullChoices = true }) => ({\n  label: t('Time Comparison'),\n  tabOverride: 'data',\n  description: t('Compare results with other time periods.'),\n  controlSetRows: [\n  [\n  {\n    name: 'time_compare',\n    config: {\n      type: 'SelectControl',\n      multi,\n      freeForm: true,\n      placeholder: t('Select or type a custom value...'),\n      label: t('Time shift'),\n      choices: showFullChoices ? fullChoices : reducedChoices,\n      description: t('Overlay results from a relative time period. ' +\n      'Expects relative time deltas ' +\n      'in natural language (example:  24 hours, 7 days, ' +\n      '52 weeks, 365 days). Free text is supported. ' +\n      'Use \"Inherit range from time filters\" ' +\n      'to shift the comparison time range ' +\n      'by the same length as your time range ' +\n      'and use \"Custom\" to set a custom comparison range.')\n    }\n  }],\n\n  [\n  {\n    name: 'start_date_offset',\n    config: {\n      type: 'TimeOffsetControl',\n      label: t('Shift start date'),\n      visibility: ({ controls }) => (controls == null ? void 0 : controls.time_compare.value) === 'custom',\n      mapStateToProps: (state, controlState) => {\n        const { form_data } = state;\n        const { time_compare } = form_data;\n        const newState = { ...controlState };\n        if (time_compare === 'custom' && (\n        controlState.value === '' || controlState.value === INVALID_DATE)) {\n          newState.externalValidationErrors = [\n          t('A date is required when using custom date shift')];\n\n        } else\n        {\n          newState.externalValidationErrors = [];\n        }\n        return newState;\n      }\n    }\n  }],\n\n  [\n  {\n    name: 'comparison_type',\n    config: {\n      type: 'SelectControl',\n      label: t('Calculation type'),\n      default: 'values',\n      choices: [\n      [ComparisonType.Values, t('Actual values')],\n      [ComparisonType.Difference, t('Difference')],\n      [ComparisonType.Percentage, t('Percentage change')],\n      [ComparisonType.Ratio, t('Ratio')]],\n\n      description: t('How to display time shifts: as individual lines; as the ' +\n      'difference between the main time series and each time shift; ' +\n      'as the percentage change; or as the ratio between series and time shifts.'),\n      hidden: () => Boolean(showCalculationType)\n    }\n  }],\n\n  [\n  {\n    name: 'comparison_range_label',\n    config: {\n      type: 'ComparisonRangeLabel',\n      multi,\n      visibility: ({ controls }) => Boolean(controls == null ? void 0 : controls.time_compare.value)\n    }\n  }]]\n\n\n});;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(fullChoices, \"fullChoices\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/timeComparison.tsx\");reactHotLoader.register(reducedKeys, \"reducedKeys\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/timeComparison.tsx\");reactHotLoader.register(reducedChoices, \"reducedChoices\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/timeComparison.tsx\");reactHotLoader.register(timeComparisonControls, \"timeComparisonControls\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/timeComparison.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","ComparisonType","INVALID_DATE","fullChoices","reducedKeys","Set","reducedChoices","filter","choice","has","timeComparisonControls","multi","showCalculationType","showFullChoices","label","tabOverride","description","controlSetRows","name","config","type","freeForm","placeholder","choices","visibility","controls","time_compare","value","mapStateToProps","state","controlState","form_data","newState","externalValidationErrors","default","Values","Difference","Percentage","Ratio","hidden","Boolean","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/packages/superset-ui-chart-controls/src/sections/timeComparison.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, ComparisonType } from '@superset-ui/core';\n\nimport {\n  ControlPanelSectionConfig,\n  ControlPanelState,\n  ControlState,\n} from '../types';\nimport { INVALID_DATE } from '..';\n\nconst fullChoices = [\n  ['1 day ago', t('1 day ago')],\n  ['1 week ago', t('1 week ago')],\n  ['28 days ago', t('28 days ago')],\n  ['30 days ago', t('30 days ago')],\n  ['1 month ago', t('1 month ago')],\n  ['52 weeks ago', t('52 weeks ago')],\n  ['1 year ago', t('1 year ago')],\n  ['104 weeks ago', t('104 weeks ago')],\n  ['2 years ago', t('2 years ago')],\n  ['156 weeks ago', t('156 weeks ago')],\n  ['3 years ago', t('3 years ago')],\n  ['custom', t('Custom date')],\n  ['inherit', t('Inherit range from time filter')],\n];\n\nconst reducedKeys = new Set([\n  '1 day ago',\n  '1 week ago',\n  '1 month ago',\n  '1 year ago',\n  'custom',\n  'inherit',\n]);\n\n// Filter fullChoices to get only the entries whose keys are in reducedKeys\nconst reducedChoices = fullChoices.filter(choice => reducedKeys.has(choice[0]));\n\ntype TimeComparisonControlsType = {\n  multi?: boolean;\n  showCalculationType?: boolean;\n  showFullChoices?: boolean;\n};\nexport const timeComparisonControls: ({\n  multi,\n  showCalculationType,\n  showFullChoices,\n}: TimeComparisonControlsType) => ControlPanelSectionConfig = ({\n  multi = true,\n  showCalculationType = true,\n  showFullChoices = true,\n}) => ({\n  label: t('Time Comparison'),\n  tabOverride: 'data',\n  description: t('Compare results with other time periods.'),\n  controlSetRows: [\n    [\n      {\n        name: 'time_compare',\n        config: {\n          type: 'SelectControl',\n          multi,\n          freeForm: true,\n          placeholder: t('Select or type a custom value...'),\n          label: t('Time shift'),\n          choices: showFullChoices ? fullChoices : reducedChoices,\n          description: t(\n            'Overlay results from a relative time period. ' +\n              'Expects relative time deltas ' +\n              'in natural language (example:  24 hours, 7 days, ' +\n              '52 weeks, 365 days). Free text is supported. ' +\n              'Use \"Inherit range from time filters\" ' +\n              'to shift the comparison time range ' +\n              'by the same length as your time range ' +\n              'and use \"Custom\" to set a custom comparison range.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'start_date_offset',\n        config: {\n          type: 'TimeOffsetControl',\n          label: t('Shift start date'),\n          visibility: ({ controls }) =>\n            controls?.time_compare.value === 'custom',\n          mapStateToProps: (\n            state: ControlPanelState,\n            controlState: ControlState,\n          ) => {\n            const { form_data } = state;\n            const { time_compare } = form_data;\n            const newState = { ...controlState };\n            if (\n              time_compare === 'custom' &&\n              (controlState.value === '' || controlState.value === INVALID_DATE)\n            ) {\n              newState.externalValidationErrors = [\n                t('A date is required when using custom date shift'),\n              ];\n            } else {\n              newState.externalValidationErrors = [];\n            }\n            return newState;\n          },\n        },\n      },\n    ],\n    [\n      {\n        name: 'comparison_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Calculation type'),\n          default: 'values',\n          choices: [\n            [ComparisonType.Values, t('Actual values')],\n            [ComparisonType.Difference, t('Difference')],\n            [ComparisonType.Percentage, t('Percentage change')],\n            [ComparisonType.Ratio, t('Ratio')],\n          ],\n          description: t(\n            'How to display time shifts: as individual lines; as the ' +\n              'difference between the main time series and each time shift; ' +\n              'as the percentage change; or as the ratio between series and time shifts.',\n          ),\n          hidden: () => Boolean(showCalculationType),\n        },\n      },\n    ],\n    [\n      {\n        name: 'comparison_range_label',\n        config: {\n          type: 'ComparisonRangeLabel',\n          multi,\n          visibility: ({ controls }) => Boolean(controls?.time_compare.value),\n        },\n      },\n    ],\n  ],\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}