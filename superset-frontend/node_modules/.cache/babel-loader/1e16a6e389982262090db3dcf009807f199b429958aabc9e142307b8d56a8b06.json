{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useChartOwnerNames } from 'src/hooks/apiResources';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst DEFAULT_CHART_ERROR = 'Data error';\nexport const ChartErrorMessage = ({ chartId, error, ...props }) => {\n  // fetches the chart owners and adds them to the extra data of the error message\n  const { result: owners } = useChartOwnerNames(chartId);\n  // don't mutate props\n  const ownedError = error && {\n    ...error,\n    extra: { ...error.extra, owners }\n  };\n  return _jsx(ErrorMessageWithStackTrace, { ...props, error: ownedError, title: DEFAULT_CHART_ERROR });\n};__signature__(ChartErrorMessage, \"useChartOwnerNames{{ result: owners }}\", () => [useChartOwnerNames]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_CHART_ERROR, \"DEFAULT_CHART_ERROR\", \"/Users/aryurkov/superset/superset-frontend/src/components/Chart/ChartErrorMessage.tsx\");reactHotLoader.register(ChartErrorMessage, \"ChartErrorMessage\", \"/Users/aryurkov/superset/superset-frontend/src/components/Chart/ChartErrorMessage.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useChartOwnerNames","ErrorMessageWithStackTrace","jsx","_jsx","DEFAULT_CHART_ERROR","ChartErrorMessage","chartId","error","props","result","owners","ownedError","extra","title","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/Users/aryurkov/superset/superset-frontend/src/components/Chart/ChartErrorMessage.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ClientErrorObject, SupersetError } from '@superset-ui/core';\nimport { FC } from 'react';\nimport { useChartOwnerNames } from 'src/hooks/apiResources';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { ChartSource } from 'src/types/ChartSource';\n\nexport type Props = {\n  chartId: string;\n  error?: SupersetError;\n  subtitle: React.ReactNode;\n  link?: string;\n  source: ChartSource;\n  stackTrace?: string;\n} & Omit<ClientErrorObject, 'error'>;\n\nconst DEFAULT_CHART_ERROR = 'Data error';\n\nexport const ChartErrorMessage: FC<Props> = ({ chartId, error, ...props }) => {\n  // fetches the chart owners and adds them to the extra data of the error message\n  const { result: owners } = useChartOwnerNames(chartId);\n\n  // don't mutate props\n  const ownedError = error && {\n    ...error,\n    extra: { ...error.extra, owners },\n  };\n\n  return (\n    <ErrorMessageWithStackTrace\n      {...props}\n      error={ownedError}\n      title={DEFAULT_CHART_ERROR}\n    />\n  );\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAqBA,SAASA,kBAAkB,QAAQ,wBAAwB;AAC3D,OAAOC,0BAA0B,MAAM,wDAAwD,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAYhG,MAAMC,mBAAmB,GAAG,YAAY;AAExC,OAAO,MAAMC,iBAAiB,GAAcA,CAAC,EAAEC,OAAO,EAAEC,KAAK,EAAE,GAAGC,KAAK,EAAE,KAAI;EAC3E;EACA,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,GAAGV,kBAAkB,CAACM,OAAO,CAAC;EAEtD;EACA,MAAMK,UAAU,GAAGJ,KAAK,IAAI;IAC1B,GAAGA,KAAK;IACRK,KAAK,EAAE,EAAE,GAAGL,KAAK,CAACK,KAAK,EAAEF,MAAM;GAChC;EAED,OACEP,IAAA,CAACF,0BAA0B,OACrBO,KAAK,EACTD,KAAK,EAAEI,UAAW,EAClBE,KAAK,EAAET,mBAAoB,GAC3B;AAEN,CAAC,CAACU,aAAA,CAjBWT,iBAAiB,mDAEDL,kBAAkB,sBAAAe,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAJzCf,mBAAmB,kHAAAW,cAAA,CAAAI,QAAA,CAEZd,iBAAiB,wIAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}