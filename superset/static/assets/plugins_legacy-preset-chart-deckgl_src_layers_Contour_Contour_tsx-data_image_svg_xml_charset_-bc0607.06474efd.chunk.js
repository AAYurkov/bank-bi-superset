"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["plugins_legacy-preset-chart-deckgl_src_layers_Contour_Contour_tsx-data_image_svg_xml_charset_-bc0607"],{

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregation-layer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregation-layer.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/lib/composite-layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/lib/attribute/attribute-manager.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nclass AggregationLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /** Allow this layer to participates in the draw cycle */\n    get isDrawable() {\n        return true;\n    }\n    initializeState() {\n        this.getAttributeManager().remove(['instancePickingColors']);\n    }\n    // Extend Layer.updateState to update the Aggregator instance\n    // returns true if aggregator is changed\n    updateState(params) {\n        super.updateState(params);\n        const aggregatorType = this.getAggregatorType();\n        if (params.changeFlags.extensionsChanged || this.state.aggregatorType !== aggregatorType) {\n            this.state.aggregator?.destroy();\n            const aggregator = this.createAggregator(aggregatorType);\n            aggregator.setProps({\n                attributes: this.getAttributeManager()?.attributes\n            });\n            this.setState({ aggregator, aggregatorType });\n            return true;\n        }\n        return false;\n    }\n    // Override Layer.finalizeState to dispose the Aggregator instance\n    finalizeState(context) {\n        super.finalizeState(context);\n        this.state.aggregator.destroy();\n    }\n    // Override Layer.updateAttributes to update the aggregator\n    updateAttributes(changedAttributes) {\n        const { aggregator } = this.state;\n        aggregator.setProps({\n            attributes: changedAttributes\n        });\n        for (const id in changedAttributes) {\n            this.onAttributeChange(id);\n        }\n        // In aggregator.update() the aggregator allocates the buffers to store its output\n        // These buffers will be exposed by aggregator.getResults() and passed to the sublayers\n        // Therefore update() must be called before renderLayers()\n        // CPUAggregator's output is populated right here in update()\n        // GPUAggregator's output is pre-allocated and populated in preDraw(), see comments below\n        aggregator.update();\n    }\n    draw({ shaderModuleProps }) {\n        // GPU aggregation needs `shaderModuleProps` for projection/filter uniforms which are only accessible at draw time\n        // GPUAggregator's Buffers are pre-allocated during `update()` and passed down to the sublayer attributes in renderLayers()\n        // Although the Buffers have been bound to the sublayer's Model, their content are not populated yet\n        // GPUAggregator.preDraw() is called in the draw cycle here right before Buffers are used by sublayer.draw()\n        const { aggregator } = this.state;\n        // @ts-expect-error only used by GPU aggregators\n        aggregator.setProps({ shaderModuleProps });\n        aggregator.preDraw();\n    }\n    // override CompositeLayer._getAttributeManager to create AttributeManager instance\n    _getAttributeManager() {\n        return new _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.context.device, {\n            id: this.props.id,\n            stats: this.context.stats\n        });\n    }\n}\nAggregationLayer.layerName = 'AggregationLayer';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AggregationLayer);\n//# sourceMappingURL=aggregation-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0aW9uLWxheWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb21tb24vYWdncmVnYXRpb24tbGF5ZXIuanM/NmE1MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZWNrLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmltcG9ydCB7IENvbXBvc2l0ZUxheWVyLCBBdHRyaWJ1dGVNYW5hZ2VyIH0gZnJvbSAnQGRlY2suZ2wvY29yZSc7XG5jbGFzcyBBZ2dyZWdhdGlvbkxheWVyIGV4dGVuZHMgQ29tcG9zaXRlTGF5ZXIge1xuICAgIC8qKiBBbGxvdyB0aGlzIGxheWVyIHRvIHBhcnRpY2lwYXRlcyBpbiB0aGUgZHJhdyBjeWNsZSAqL1xuICAgIGdldCBpc0RyYXdhYmxlKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaW5pdGlhbGl6ZVN0YXRlKCkge1xuICAgICAgICB0aGlzLmdldEF0dHJpYnV0ZU1hbmFnZXIoKS5yZW1vdmUoWydpbnN0YW5jZVBpY2tpbmdDb2xvcnMnXSk7XG4gICAgfVxuICAgIC8vIEV4dGVuZCBMYXllci51cGRhdGVTdGF0ZSB0byB1cGRhdGUgdGhlIEFnZ3JlZ2F0b3IgaW5zdGFuY2VcbiAgICAvLyByZXR1cm5zIHRydWUgaWYgYWdncmVnYXRvciBpcyBjaGFuZ2VkXG4gICAgdXBkYXRlU3RhdGUocGFyYW1zKSB7XG4gICAgICAgIHN1cGVyLnVwZGF0ZVN0YXRlKHBhcmFtcyk7XG4gICAgICAgIGNvbnN0IGFnZ3JlZ2F0b3JUeXBlID0gdGhpcy5nZXRBZ2dyZWdhdG9yVHlwZSgpO1xuICAgICAgICBpZiAocGFyYW1zLmNoYW5nZUZsYWdzLmV4dGVuc2lvbnNDaGFuZ2VkIHx8IHRoaXMuc3RhdGUuYWdncmVnYXRvclR5cGUgIT09IGFnZ3JlZ2F0b3JUeXBlKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmFnZ3JlZ2F0b3I/LmRlc3Ryb3koKTtcbiAgICAgICAgICAgIGNvbnN0IGFnZ3JlZ2F0b3IgPSB0aGlzLmNyZWF0ZUFnZ3JlZ2F0b3IoYWdncmVnYXRvclR5cGUpO1xuICAgICAgICAgICAgYWdncmVnYXRvci5zZXRQcm9wcyh7XG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogdGhpcy5nZXRBdHRyaWJ1dGVNYW5hZ2VyKCk/LmF0dHJpYnV0ZXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGFnZ3JlZ2F0b3IsIGFnZ3JlZ2F0b3JUeXBlIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBPdmVycmlkZSBMYXllci5maW5hbGl6ZVN0YXRlIHRvIGRpc3Bvc2UgdGhlIEFnZ3JlZ2F0b3IgaW5zdGFuY2VcbiAgICBmaW5hbGl6ZVN0YXRlKGNvbnRleHQpIHtcbiAgICAgICAgc3VwZXIuZmluYWxpemVTdGF0ZShjb250ZXh0KTtcbiAgICAgICAgdGhpcy5zdGF0ZS5hZ2dyZWdhdG9yLmRlc3Ryb3koKTtcbiAgICB9XG4gICAgLy8gT3ZlcnJpZGUgTGF5ZXIudXBkYXRlQXR0cmlidXRlcyB0byB1cGRhdGUgdGhlIGFnZ3JlZ2F0b3JcbiAgICB1cGRhdGVBdHRyaWJ1dGVzKGNoYW5nZWRBdHRyaWJ1dGVzKSB7XG4gICAgICAgIGNvbnN0IHsgYWdncmVnYXRvciB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgYWdncmVnYXRvci5zZXRQcm9wcyh7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBjaGFuZ2VkQXR0cmlidXRlc1xuICAgICAgICB9KTtcbiAgICAgICAgZm9yIChjb25zdCBpZCBpbiBjaGFuZ2VkQXR0cmlidXRlcykge1xuICAgICAgICAgICAgdGhpcy5vbkF0dHJpYnV0ZUNoYW5nZShpZCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSW4gYWdncmVnYXRvci51cGRhdGUoKSB0aGUgYWdncmVnYXRvciBhbGxvY2F0ZXMgdGhlIGJ1ZmZlcnMgdG8gc3RvcmUgaXRzIG91dHB1dFxuICAgICAgICAvLyBUaGVzZSBidWZmZXJzIHdpbGwgYmUgZXhwb3NlZCBieSBhZ2dyZWdhdG9yLmdldFJlc3VsdHMoKSBhbmQgcGFzc2VkIHRvIHRoZSBzdWJsYXllcnNcbiAgICAgICAgLy8gVGhlcmVmb3JlIHVwZGF0ZSgpIG11c3QgYmUgY2FsbGVkIGJlZm9yZSByZW5kZXJMYXllcnMoKVxuICAgICAgICAvLyBDUFVBZ2dyZWdhdG9yJ3Mgb3V0cHV0IGlzIHBvcHVsYXRlZCByaWdodCBoZXJlIGluIHVwZGF0ZSgpXG4gICAgICAgIC8vIEdQVUFnZ3JlZ2F0b3IncyBvdXRwdXQgaXMgcHJlLWFsbG9jYXRlZCBhbmQgcG9wdWxhdGVkIGluIHByZURyYXcoKSwgc2VlIGNvbW1lbnRzIGJlbG93XG4gICAgICAgIGFnZ3JlZ2F0b3IudXBkYXRlKCk7XG4gICAgfVxuICAgIGRyYXcoeyBzaGFkZXJNb2R1bGVQcm9wcyB9KSB7XG4gICAgICAgIC8vIEdQVSBhZ2dyZWdhdGlvbiBuZWVkcyBgc2hhZGVyTW9kdWxlUHJvcHNgIGZvciBwcm9qZWN0aW9uL2ZpbHRlciB1bmlmb3JtcyB3aGljaCBhcmUgb25seSBhY2Nlc3NpYmxlIGF0IGRyYXcgdGltZVxuICAgICAgICAvLyBHUFVBZ2dyZWdhdG9yJ3MgQnVmZmVycyBhcmUgcHJlLWFsbG9jYXRlZCBkdXJpbmcgYHVwZGF0ZSgpYCBhbmQgcGFzc2VkIGRvd24gdG8gdGhlIHN1YmxheWVyIGF0dHJpYnV0ZXMgaW4gcmVuZGVyTGF5ZXJzKClcbiAgICAgICAgLy8gQWx0aG91Z2ggdGhlIEJ1ZmZlcnMgaGF2ZSBiZWVuIGJvdW5kIHRvIHRoZSBzdWJsYXllcidzIE1vZGVsLCB0aGVpciBjb250ZW50IGFyZSBub3QgcG9wdWxhdGVkIHlldFxuICAgICAgICAvLyBHUFVBZ2dyZWdhdG9yLnByZURyYXcoKSBpcyBjYWxsZWQgaW4gdGhlIGRyYXcgY3ljbGUgaGVyZSByaWdodCBiZWZvcmUgQnVmZmVycyBhcmUgdXNlZCBieSBzdWJsYXllci5kcmF3KClcbiAgICAgICAgY29uc3QgeyBhZ2dyZWdhdG9yIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIG9ubHkgdXNlZCBieSBHUFUgYWdncmVnYXRvcnNcbiAgICAgICAgYWdncmVnYXRvci5zZXRQcm9wcyh7IHNoYWRlck1vZHVsZVByb3BzIH0pO1xuICAgICAgICBhZ2dyZWdhdG9yLnByZURyYXcoKTtcbiAgICB9XG4gICAgLy8gb3ZlcnJpZGUgQ29tcG9zaXRlTGF5ZXIuX2dldEF0dHJpYnV0ZU1hbmFnZXIgdG8gY3JlYXRlIEF0dHJpYnV0ZU1hbmFnZXIgaW5zdGFuY2VcbiAgICBfZ2V0QXR0cmlidXRlTWFuYWdlcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBdHRyaWJ1dGVNYW5hZ2VyKHRoaXMuY29udGV4dC5kZXZpY2UsIHtcbiAgICAgICAgICAgIGlkOiB0aGlzLnByb3BzLmlkLFxuICAgICAgICAgICAgc3RhdHM6IHRoaXMuY29udGV4dC5zdGF0c1xuICAgICAgICB9KTtcbiAgICB9XG59XG5BZ2dyZWdhdGlvbkxheWVyLmxheWVyTmFtZSA9ICdBZ2dyZWdhdGlvbkxheWVyJztcbmV4cG9ydCBkZWZhdWx0IEFnZ3JlZ2F0aW9uTGF5ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2dyZWdhdGlvbi1sYXllci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregation-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/aggregate.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/aggregate.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BUILT_IN_OPERATIONS: () => (/* binding */ BUILT_IN_OPERATIONS),\n/* harmony export */   aggregate: () => (/* binding */ aggregate)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst count = pointIndices => {\n    return pointIndices.length;\n};\nconst sum = (pointIndices, getValue) => {\n    let result = 0;\n    for (const i of pointIndices) {\n        result += getValue(i);\n    }\n    return result;\n};\nconst mean = (pointIndices, getValue) => {\n    if (pointIndices.length === 0) {\n        return NaN;\n    }\n    return sum(pointIndices, getValue) / pointIndices.length;\n};\nconst min = (pointIndices, getValue) => {\n    let result = Infinity;\n    for (const i of pointIndices) {\n        const value = getValue(i);\n        if (value < result) {\n            result = value;\n        }\n    }\n    return result;\n};\nconst max = (pointIndices, getValue) => {\n    let result = -Infinity;\n    for (const i of pointIndices) {\n        const value = getValue(i);\n        if (value > result) {\n            result = value;\n        }\n    }\n    return result;\n};\nconst BUILT_IN_OPERATIONS = {\n    COUNT: count,\n    SUM: sum,\n    MEAN: mean,\n    MIN: min,\n    MAX: max\n};\n/**\n * Performs the aggregation step. See interface Aggregator comments.\n * @returns Floa32Array of aggregated values, one for each bin, and the [min,max] of the values\n */\nfunction aggregate({ bins, getValue, operation, target }) {\n    if (!target || target.length < bins.length) {\n        target = new Float32Array(bins.length);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    let min = Infinity;\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    let max = -Infinity;\n    for (let j = 0; j < bins.length; j++) {\n        const { points } = bins[j];\n        target[j] = operation(points, getValue);\n        if (target[j] < min)\n            min = target[j];\n        if (target[j] > max)\n            max = target[j];\n    }\n    return { value: target, domain: [min, max] };\n}\n//# sourceMappingURL=aggregate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0b3IvY3B1LWFnZ3JlZ2F0b3IvYWdncmVnYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb21tb24vYWdncmVnYXRvci9jcHUtYWdncmVnYXRvci9hZ2dyZWdhdGUuanM/NTBiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZWNrLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmNvbnN0IGNvdW50ID0gcG9pbnRJbmRpY2VzID0+IHtcbiAgICByZXR1cm4gcG9pbnRJbmRpY2VzLmxlbmd0aDtcbn07XG5jb25zdCBzdW0gPSAocG9pbnRJbmRpY2VzLCBnZXRWYWx1ZSkgPT4ge1xuICAgIGxldCByZXN1bHQgPSAwO1xuICAgIGZvciAoY29uc3QgaSBvZiBwb2ludEluZGljZXMpIHtcbiAgICAgICAgcmVzdWx0ICs9IGdldFZhbHVlKGkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmNvbnN0IG1lYW4gPSAocG9pbnRJbmRpY2VzLCBnZXRWYWx1ZSkgPT4ge1xuICAgIGlmIChwb2ludEluZGljZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBOYU47XG4gICAgfVxuICAgIHJldHVybiBzdW0ocG9pbnRJbmRpY2VzLCBnZXRWYWx1ZSkgLyBwb2ludEluZGljZXMubGVuZ3RoO1xufTtcbmNvbnN0IG1pbiA9IChwb2ludEluZGljZXMsIGdldFZhbHVlKSA9PiB7XG4gICAgbGV0IHJlc3VsdCA9IEluZmluaXR5O1xuICAgIGZvciAoY29uc3QgaSBvZiBwb2ludEluZGljZXMpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBnZXRWYWx1ZShpKTtcbiAgICAgICAgaWYgKHZhbHVlIDwgcmVzdWx0KSB7XG4gICAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmNvbnN0IG1heCA9IChwb2ludEluZGljZXMsIGdldFZhbHVlKSA9PiB7XG4gICAgbGV0IHJlc3VsdCA9IC1JbmZpbml0eTtcbiAgICBmb3IgKGNvbnN0IGkgb2YgcG9pbnRJbmRpY2VzKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZ2V0VmFsdWUoaSk7XG4gICAgICAgIGlmICh2YWx1ZSA+IHJlc3VsdCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5leHBvcnQgY29uc3QgQlVJTFRfSU5fT1BFUkFUSU9OUyA9IHtcbiAgICBDT1VOVDogY291bnQsXG4gICAgU1VNOiBzdW0sXG4gICAgTUVBTjogbWVhbixcbiAgICBNSU46IG1pbixcbiAgICBNQVg6IG1heFxufTtcbi8qKlxuICogUGVyZm9ybXMgdGhlIGFnZ3JlZ2F0aW9uIHN0ZXAuIFNlZSBpbnRlcmZhY2UgQWdncmVnYXRvciBjb21tZW50cy5cbiAqIEByZXR1cm5zIEZsb2EzMkFycmF5IG9mIGFnZ3JlZ2F0ZWQgdmFsdWVzLCBvbmUgZm9yIGVhY2ggYmluLCBhbmQgdGhlIFttaW4sbWF4XSBvZiB0aGUgdmFsdWVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZ2dyZWdhdGUoeyBiaW5zLCBnZXRWYWx1ZSwgb3BlcmF0aW9uLCB0YXJnZXQgfSkge1xuICAgIGlmICghdGFyZ2V0IHx8IHRhcmdldC5sZW5ndGggPCBiaW5zLmxlbmd0aCkge1xuICAgICAgICB0YXJnZXQgPSBuZXcgRmxvYXQzMkFycmF5KGJpbnMubGVuZ3RoKTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1zaGFkb3dcbiAgICBsZXQgbWluID0gSW5maW5pdHk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1zaGFkb3dcbiAgICBsZXQgbWF4ID0gLUluZmluaXR5O1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgYmlucy5sZW5ndGg7IGorKykge1xuICAgICAgICBjb25zdCB7IHBvaW50cyB9ID0gYmluc1tqXTtcbiAgICAgICAgdGFyZ2V0W2pdID0gb3BlcmF0aW9uKHBvaW50cywgZ2V0VmFsdWUpO1xuICAgICAgICBpZiAodGFyZ2V0W2pdIDwgbWluKVxuICAgICAgICAgICAgbWluID0gdGFyZ2V0W2pdO1xuICAgICAgICBpZiAodGFyZ2V0W2pdID4gbWF4KVxuICAgICAgICAgICAgbWF4ID0gdGFyZ2V0W2pdO1xuICAgIH1cbiAgICByZXR1cm4geyB2YWx1ZTogdGFyZ2V0LCBkb21haW46IFttaW4sIG1heF0gfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFnZ3JlZ2F0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/aggregate.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/cpu-aggregator.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/cpu-aggregator.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CPUAggregator: () => (/* binding */ CPUAggregator)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/utils/deep-equal.js\");\n/* harmony import */ var _sort_bins_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sort-bins.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/sort-bins.js\");\n/* harmony import */ var _aggregate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aggregate.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/aggregate.js\");\n/* harmony import */ var _vertex_accessor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vertex-accessor.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/vertex-accessor.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n\n/** An Aggregator implementation that calculates aggregation on the CPU */\nclass CPUAggregator {\n    constructor(props) {\n        this.bins = [];\n        this.binIds = null;\n        this.results = [];\n        this.dimensions = props.dimensions;\n        this.channelCount = props.getValue.length;\n        this.props = {\n            ...props,\n            binOptions: {},\n            pointCount: 0,\n            operations: [],\n            customOperations: [],\n            attributes: {}\n        };\n        this.needsUpdate = true;\n        this.setProps(props);\n    }\n    destroy() { }\n    get binCount() {\n        return this.bins.length;\n    }\n    /** Update aggregation props */\n    // eslint-disable-next-line complexity\n    setProps(props) {\n        const oldProps = this.props;\n        if (props.binOptions) {\n            if (!(0,_deck_gl_core__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(props.binOptions, oldProps.binOptions, 2)) {\n                this.setNeedsUpdate();\n            }\n        }\n        if (props.operations) {\n            for (let channel = 0; channel < this.channelCount; channel++) {\n                if (props.operations[channel] !== oldProps.operations[channel]) {\n                    this.setNeedsUpdate(channel);\n                }\n            }\n        }\n        if (props.customOperations) {\n            for (let channel = 0; channel < this.channelCount; channel++) {\n                if (Boolean(props.customOperations[channel]) !== Boolean(oldProps.customOperations[channel])) {\n                    this.setNeedsUpdate(channel);\n                }\n            }\n        }\n        if (props.pointCount !== undefined && props.pointCount !== oldProps.pointCount) {\n            this.setNeedsUpdate();\n        }\n        if (props.attributes) {\n            props.attributes = { ...oldProps.attributes, ...props.attributes };\n        }\n        Object.assign(this.props, props);\n    }\n    /** Flags a channel to need update\n     * This is called internally by setProps() if certain props change\n     * Users of this class still need to manually set the dirty flag sometimes, because even if no props changed\n     * the underlying buffers could have been updated and require rerunning the aggregation\n     * @param {number} channel - mark the given channel as dirty. If not provided, all channels will be updated.\n     */\n    setNeedsUpdate(channel) {\n        if (channel === undefined) {\n            this.needsUpdate = true;\n        }\n        else if (this.needsUpdate !== true) {\n            this.needsUpdate = this.needsUpdate || [];\n            this.needsUpdate[channel] = true;\n        }\n    }\n    /** Run aggregation */\n    update() {\n        if (this.needsUpdate === true) {\n            this.bins = (0,_sort_bins_js__WEBPACK_IMPORTED_MODULE_1__.sortBins)({\n                pointCount: this.props.pointCount,\n                getBinId: (0,_vertex_accessor_js__WEBPACK_IMPORTED_MODULE_2__.evaluateVertexAccessor)(this.props.getBin, this.props.attributes, this.props.binOptions)\n            });\n            const value = (0,_sort_bins_js__WEBPACK_IMPORTED_MODULE_1__.packBinIds)({\n                bins: this.bins,\n                dimensions: this.dimensions,\n                // Reuse allocated typed array\n                target: this.binIds?.value\n            });\n            this.binIds = { value, type: 'float32', size: this.dimensions };\n        }\n        for (let channel = 0; channel < this.channelCount; channel++) {\n            if (this.needsUpdate === true || this.needsUpdate[channel]) {\n                const operation = this.props.customOperations[channel] ||\n                    _aggregate_js__WEBPACK_IMPORTED_MODULE_3__.BUILT_IN_OPERATIONS[this.props.operations[channel]];\n                const { value, domain } = (0,_aggregate_js__WEBPACK_IMPORTED_MODULE_3__.aggregate)({\n                    bins: this.bins,\n                    getValue: (0,_vertex_accessor_js__WEBPACK_IMPORTED_MODULE_2__.evaluateVertexAccessor)(this.props.getValue[channel], this.props.attributes, undefined),\n                    operation,\n                    // Reuse allocated typed array\n                    target: this.results[channel]?.value\n                });\n                this.results[channel] = { value, domain, type: 'float32', size: 1 };\n                this.props.onUpdate?.({ channel });\n            }\n        }\n        this.needsUpdate = false;\n    }\n    preDraw() { }\n    /** Returns an accessor to the bins. */\n    getBins() {\n        return this.binIds;\n    }\n    /** Returns an accessor to the output for a given channel. */\n    getResult(channel) {\n        return this.results[channel];\n    }\n    /** Returns the [min, max] of aggregated values for a given channel. */\n    getResultDomain(channel) {\n        return this.results[channel]?.domain ?? [Infinity, -Infinity];\n    }\n    /** Returns the information for a given bin. */\n    getBin(index) {\n        const bin = this.bins[index];\n        if (!bin) {\n            return null;\n        }\n        const value = new Array(this.channelCount);\n        for (let i = 0; i < value.length; i++) {\n            const result = this.results[i];\n            value[i] = result?.value[index];\n        }\n        return {\n            id: bin.id,\n            value,\n            count: bin.points.length,\n            pointIndices: bin.points\n        };\n    }\n}\n//# sourceMappingURL=cpu-aggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/cpu-aggregator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/sort-bins.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/sort-bins.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   packBinIds: () => (/* binding */ packBinIds),\n/* harmony export */   sortBins: () => (/* binding */ sortBins)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Group data points into bins */\nfunction sortBins({ pointCount, getBinId }) {\n    const binsById = new Map();\n    for (let i = 0; i < pointCount; i++) {\n        const id = getBinId(i);\n        if (id === null) {\n            continue;\n        }\n        let bin = binsById.get(String(id));\n        if (bin) {\n            bin.points.push(i);\n        }\n        else {\n            bin = {\n                id,\n                index: binsById.size,\n                points: [i]\n            };\n            binsById.set(String(id), bin);\n        }\n    }\n    return Array.from(binsById.values());\n}\n/** Pack bin ids into a typed array */\nfunction packBinIds({ bins, dimensions, target }) {\n    const targetLength = bins.length * dimensions;\n    if (!target || target.length < targetLength) {\n        target = new Float32Array(targetLength);\n    }\n    for (let i = 0; i < bins.length; i++) {\n        const { id } = bins[i];\n        if (Array.isArray(id)) {\n            target.set(id, i * dimensions);\n        }\n        else {\n            target[i] = id;\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=sort-bins.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0b3IvY3B1LWFnZ3JlZ2F0b3Ivc29ydC1iaW5zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0b3IvY3B1LWFnZ3JlZ2F0b3Ivc29ydC1iaW5zLmpzPzUyMjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG4vKiogR3JvdXAgZGF0YSBwb2ludHMgaW50byBiaW5zICovXG5leHBvcnQgZnVuY3Rpb24gc29ydEJpbnMoeyBwb2ludENvdW50LCBnZXRCaW5JZCB9KSB7XG4gICAgY29uc3QgYmluc0J5SWQgPSBuZXcgTWFwKCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludENvdW50OyBpKyspIHtcbiAgICAgICAgY29uc3QgaWQgPSBnZXRCaW5JZChpKTtcbiAgICAgICAgaWYgKGlkID09PSBudWxsKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYmluID0gYmluc0J5SWQuZ2V0KFN0cmluZyhpZCkpO1xuICAgICAgICBpZiAoYmluKSB7XG4gICAgICAgICAgICBiaW4ucG9pbnRzLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBiaW4gPSB7XG4gICAgICAgICAgICAgICAgaWQsXG4gICAgICAgICAgICAgICAgaW5kZXg6IGJpbnNCeUlkLnNpemUsXG4gICAgICAgICAgICAgICAgcG9pbnRzOiBbaV1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBiaW5zQnlJZC5zZXQoU3RyaW5nKGlkKSwgYmluKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gQXJyYXkuZnJvbShiaW5zQnlJZC52YWx1ZXMoKSk7XG59XG4vKiogUGFjayBiaW4gaWRzIGludG8gYSB0eXBlZCBhcnJheSAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhY2tCaW5JZHMoeyBiaW5zLCBkaW1lbnNpb25zLCB0YXJnZXQgfSkge1xuICAgIGNvbnN0IHRhcmdldExlbmd0aCA9IGJpbnMubGVuZ3RoICogZGltZW5zaW9ucztcbiAgICBpZiAoIXRhcmdldCB8fCB0YXJnZXQubGVuZ3RoIDwgdGFyZ2V0TGVuZ3RoKSB7XG4gICAgICAgIHRhcmdldCA9IG5ldyBGbG9hdDMyQXJyYXkodGFyZ2V0TGVuZ3RoKTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiaW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHsgaWQgfSA9IGJpbnNbaV07XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGlkKSkge1xuICAgICAgICAgICAgdGFyZ2V0LnNldChpZCwgaSAqIGRpbWVuc2lvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGFyZ2V0W2ldID0gaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvcnQtYmlucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/sort-bins.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/vertex-accessor.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/vertex-accessor.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   evaluateVertexAccessor: () => (/* binding */ evaluateVertexAccessor)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Evaluate a VertexAccessor with a set of attributes */\nfunction evaluateVertexAccessor(accessor, attributes, options) {\n    const vertexReaders = {};\n    for (const id of accessor.sources || []) {\n        const attribute = attributes[id];\n        if (attribute) {\n            vertexReaders[id] = getVertexReader(attribute);\n        }\n        else {\n            throw new Error(`Cannot find attribute ${id}`);\n        }\n    }\n    const data = {};\n    return (vertexIndex) => {\n        for (const id in vertexReaders) {\n            data[id] = vertexReaders[id](vertexIndex);\n        }\n        return accessor.getValue(data, vertexIndex, options);\n    };\n}\n/** Read value out of a deck.gl Attribute by vertex */\nfunction getVertexReader(attribute) {\n    const value = attribute.value;\n    const { offset = 0, stride, size } = attribute.getAccessor();\n    const bytesPerElement = value.BYTES_PER_ELEMENT;\n    const elementOffset = offset / bytesPerElement;\n    const elementStride = stride ? stride / bytesPerElement : size;\n    if (size === 1) {\n        // Size 1, returns (i: number) => number\n        if (attribute.isConstant) {\n            return () => value[0];\n        }\n        return (vertexIndex) => {\n            const i = elementOffset + elementStride * vertexIndex;\n            return value[i];\n        };\n    }\n    // Size >1, returns (i: number) => number[]\n    let result;\n    if (attribute.isConstant) {\n        result = Array.from(value);\n        return () => result;\n    }\n    result = new Array(size);\n    return (vertexIndex) => {\n        const i = elementOffset + elementStride * vertexIndex;\n        for (let j = 0; j < size; j++) {\n            result[j] = value[i + j];\n        }\n        return result;\n    };\n}\n//# sourceMappingURL=vertex-accessor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0b3IvY3B1LWFnZ3JlZ2F0b3IvdmVydGV4LWFjY2Vzc29yLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb21tb24vYWdncmVnYXRvci9jcHUtYWdncmVnYXRvci92ZXJ0ZXgtYWNjZXNzb3IuanM/ODFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZWNrLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbi8qKiBFdmFsdWF0ZSBhIFZlcnRleEFjY2Vzc29yIHdpdGggYSBzZXQgb2YgYXR0cmlidXRlcyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV2YWx1YXRlVmVydGV4QWNjZXNzb3IoYWNjZXNzb3IsIGF0dHJpYnV0ZXMsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB2ZXJ0ZXhSZWFkZXJzID0ge307XG4gICAgZm9yIChjb25zdCBpZCBvZiBhY2Nlc3Nvci5zb3VyY2VzIHx8IFtdKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNbaWRdO1xuICAgICAgICBpZiAoYXR0cmlidXRlKSB7XG4gICAgICAgICAgICB2ZXJ0ZXhSZWFkZXJzW2lkXSA9IGdldFZlcnRleFJlYWRlcihhdHRyaWJ1dGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZmluZCBhdHRyaWJ1dGUgJHtpZH1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBkYXRhID0ge307XG4gICAgcmV0dXJuICh2ZXJ0ZXhJbmRleCkgPT4ge1xuICAgICAgICBmb3IgKGNvbnN0IGlkIGluIHZlcnRleFJlYWRlcnMpIHtcbiAgICAgICAgICAgIGRhdGFbaWRdID0gdmVydGV4UmVhZGVyc1tpZF0odmVydGV4SW5kZXgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2Nlc3Nvci5nZXRWYWx1ZShkYXRhLCB2ZXJ0ZXhJbmRleCwgb3B0aW9ucyk7XG4gICAgfTtcbn1cbi8qKiBSZWFkIHZhbHVlIG91dCBvZiBhIGRlY2suZ2wgQXR0cmlidXRlIGJ5IHZlcnRleCAqL1xuZnVuY3Rpb24gZ2V0VmVydGV4UmVhZGVyKGF0dHJpYnV0ZSkge1xuICAgIGNvbnN0IHZhbHVlID0gYXR0cmlidXRlLnZhbHVlO1xuICAgIGNvbnN0IHsgb2Zmc2V0ID0gMCwgc3RyaWRlLCBzaXplIH0gPSBhdHRyaWJ1dGUuZ2V0QWNjZXNzb3IoKTtcbiAgICBjb25zdCBieXRlc1BlckVsZW1lbnQgPSB2YWx1ZS5CWVRFU19QRVJfRUxFTUVOVDtcbiAgICBjb25zdCBlbGVtZW50T2Zmc2V0ID0gb2Zmc2V0IC8gYnl0ZXNQZXJFbGVtZW50O1xuICAgIGNvbnN0IGVsZW1lbnRTdHJpZGUgPSBzdHJpZGUgPyBzdHJpZGUgLyBieXRlc1BlckVsZW1lbnQgOiBzaXplO1xuICAgIGlmIChzaXplID09PSAxKSB7XG4gICAgICAgIC8vIFNpemUgMSwgcmV0dXJucyAoaTogbnVtYmVyKSA9PiBudW1iZXJcbiAgICAgICAgaWYgKGF0dHJpYnV0ZS5pc0NvbnN0YW50KSB7XG4gICAgICAgICAgICByZXR1cm4gKCkgPT4gdmFsdWVbMF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICh2ZXJ0ZXhJbmRleCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaSA9IGVsZW1lbnRPZmZzZXQgKyBlbGVtZW50U3RyaWRlICogdmVydGV4SW5kZXg7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVbaV07XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIFNpemUgPjEsIHJldHVybnMgKGk6IG51bWJlcikgPT4gbnVtYmVyW11cbiAgICBsZXQgcmVzdWx0O1xuICAgIGlmIChhdHRyaWJ1dGUuaXNDb25zdGFudCkge1xuICAgICAgICByZXN1bHQgPSBBcnJheS5mcm9tKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHJlc3VsdDtcbiAgICB9XG4gICAgcmVzdWx0ID0gbmV3IEFycmF5KHNpemUpO1xuICAgIHJldHVybiAodmVydGV4SW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgaSA9IGVsZW1lbnRPZmZzZXQgKyBlbGVtZW50U3RyaWRlICogdmVydGV4SW5kZXg7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2l6ZTsgaisrKSB7XG4gICAgICAgICAgICByZXN1bHRbal0gPSB2YWx1ZVtpICsgal07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVydGV4LWFjY2Vzc29yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/vertex-accessor.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/aggregation-transform-uniforms.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/aggregation-transform-uniforms.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aggregatorTransformUniforms: () => (/* binding */ aggregatorTransformUniforms)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = /* glsl */ `\\\nuniform aggregatorTransformUniforms {\n  ivec4 binIdRange;\n  bvec3 isCount;\n  bvec3 isMean;\n  float naN;\n} aggregatorTransform;\n`;\nconst aggregatorTransformUniforms = {\n    name: 'aggregatorTransform',\n    vs: uniformBlock,\n    uniformTypes: {\n        binIdRange: 'vec4<i32>',\n        isCount: 'vec3<f32>',\n        isMean: 'vec3<f32>'\n    }\n};\n//# sourceMappingURL=aggregation-transform-uniforms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0b3IvZ3B1LWFnZ3JlZ2F0b3IvYWdncmVnYXRpb24tdHJhbnNmb3JtLXVuaWZvcm1zLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2FnZ3JlZ2F0aW9uLWxheWVycy9kaXN0L2NvbW1vbi9hZ2dyZWdhdG9yL2dwdS1hZ2dyZWdhdG9yL2FnZ3JlZ2F0aW9uLXRyYW5zZm9ybS11bmlmb3Jtcy5qcz8xNmY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlY2suZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuY29uc3QgdW5pZm9ybUJsb2NrID0gLyogZ2xzbCAqLyBgXFxcbnVuaWZvcm0gYWdncmVnYXRvclRyYW5zZm9ybVVuaWZvcm1zIHtcbiAgaXZlYzQgYmluSWRSYW5nZTtcbiAgYnZlYzMgaXNDb3VudDtcbiAgYnZlYzMgaXNNZWFuO1xuICBmbG9hdCBuYU47XG59IGFnZ3JlZ2F0b3JUcmFuc2Zvcm07XG5gO1xuZXhwb3J0IGNvbnN0IGFnZ3JlZ2F0b3JUcmFuc2Zvcm1Vbmlmb3JtcyA9IHtcbiAgICBuYW1lOiAnYWdncmVnYXRvclRyYW5zZm9ybScsXG4gICAgdnM6IHVuaWZvcm1CbG9jayxcbiAgICB1bmlmb3JtVHlwZXM6IHtcbiAgICAgICAgYmluSWRSYW5nZTogJ3ZlYzQ8aTMyPicsXG4gICAgICAgIGlzQ291bnQ6ICd2ZWMzPGYzMj4nLFxuICAgICAgICBpc01lYW46ICd2ZWMzPGYzMj4nXG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFnZ3JlZ2F0aW9uLXRyYW5zZm9ybS11bmlmb3Jtcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/aggregation-transform-uniforms.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/bin-sorter-uniforms.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/bin-sorter-uniforms.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   binSorterUniforms: () => (/* binding */ binSorterUniforms)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = /* glsl */ `\\\nuniform binSorterUniforms {\n  ivec4 binIdRange;\n  ivec2 targetSize;\n} binSorter;\n`;\nconst binSorterUniforms = {\n    name: 'binSorter',\n    vs: uniformBlock,\n    uniformTypes: {\n        binIdRange: 'vec4<i32>',\n        targetSize: 'vec2<i32>'\n    }\n};\n//# sourceMappingURL=bin-sorter-uniforms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0b3IvZ3B1LWFnZ3JlZ2F0b3IvYmluLXNvcnRlci11bmlmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb21tb24vYWdncmVnYXRvci9ncHUtYWdncmVnYXRvci9iaW4tc29ydGVyLXVuaWZvcm1zLmpzP2JhOTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5jb25zdCB1bmlmb3JtQmxvY2sgPSAvKiBnbHNsICovIGBcXFxudW5pZm9ybSBiaW5Tb3J0ZXJVbmlmb3JtcyB7XG4gIGl2ZWM0IGJpbklkUmFuZ2U7XG4gIGl2ZWMyIHRhcmdldFNpemU7XG59IGJpblNvcnRlcjtcbmA7XG5leHBvcnQgY29uc3QgYmluU29ydGVyVW5pZm9ybXMgPSB7XG4gICAgbmFtZTogJ2JpblNvcnRlcicsXG4gICAgdnM6IHVuaWZvcm1CbG9jayxcbiAgICB1bmlmb3JtVHlwZXM6IHtcbiAgICAgICAgYmluSWRSYW5nZTogJ3ZlYzQ8aTMyPicsXG4gICAgICAgIHRhcmdldFNpemU6ICd2ZWMyPGkzMj4nXG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJpbi1zb3J0ZXItdW5pZm9ybXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/bin-sorter-uniforms.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/utils.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/utils.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRenderTarget: () => (/* binding */ createRenderTarget)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Create a float texture to store aggregation result\n */\nfunction createRenderTarget(device, width, height) {\n    return device.createFramebuffer({\n        width,\n        height,\n        colorAttachments: [\n            device.createTexture({\n                width,\n                height,\n                format: 'rgba32float',\n                mipmaps: false,\n                sampler: {\n                    minFilter: 'nearest',\n                    magFilter: 'nearest'\n                }\n            })\n        ]\n    });\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL2FnZ3JlZ2F0b3IvZ3B1LWFnZ3JlZ2F0b3IvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb21tb24vYWdncmVnYXRvci9ncHUtYWdncmVnYXRvci91dGlscy5qcz81MGJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlY2suZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuLyoqXG4gKiBDcmVhdGUgYSBmbG9hdCB0ZXh0dXJlIHRvIHN0b3JlIGFnZ3JlZ2F0aW9uIHJlc3VsdFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVuZGVyVGFyZ2V0KGRldmljZSwgd2lkdGgsIGhlaWdodCkge1xuICAgIHJldHVybiBkZXZpY2UuY3JlYXRlRnJhbWVidWZmZXIoe1xuICAgICAgICB3aWR0aCxcbiAgICAgICAgaGVpZ2h0LFxuICAgICAgICBjb2xvckF0dGFjaG1lbnRzOiBbXG4gICAgICAgICAgICBkZXZpY2UuY3JlYXRlVGV4dHVyZSh7XG4gICAgICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgICAgICAgIGZvcm1hdDogJ3JnYmEzMmZsb2F0JyxcbiAgICAgICAgICAgICAgICBtaXBtYXBzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzYW1wbGVyOiB7XG4gICAgICAgICAgICAgICAgICAgIG1pbkZpbHRlcjogJ25lYXJlc3QnLFxuICAgICAgICAgICAgICAgICAgICBtYWdGaWx0ZXI6ICduZWFyZXN0J1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregation-transform.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregation-transform.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebGLAggregationTransform: () => (/* binding */ WebGLAggregationTransform)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/engine */ \"./node_modules/@luma.gl/engine/dist/compute/buffer-transform.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/utils.js\");\n/* harmony import */ var _webgl_bin_sorter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./webgl-bin-sorter.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-bin-sorter.js\");\n/* harmony import */ var _aggregation_transform_uniforms_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aggregation-transform-uniforms.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/aggregation-transform-uniforms.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n\nconst MAX_FLOAT32 = 3e38;\nclass WebGLAggregationTransform {\n    constructor(device, props) {\n        /** Packed from bin ids */\n        this.binBuffer = null;\n        /** Packed values from each channel of each bin\n         * Stride is number of channels * 4 bytes (float32)\n         */\n        this.valueBuffer = null;\n        /** Aggregated [min, max] for each channel */\n        this._domains = null;\n        this.device = device;\n        this.channelCount = props.channelCount;\n        this.transform = createTransform(device, props);\n        this.domainFBO = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createRenderTarget)(device, 2, 1);\n    }\n    destroy() {\n        this.transform.destroy();\n        this.binBuffer?.destroy();\n        this.valueBuffer?.destroy();\n        this.domainFBO.colorAttachments[0].texture.destroy();\n        this.domainFBO.destroy();\n    }\n    get domains() {\n        if (!this._domains) {\n            // Domain model has run, but result has not been read to CPU\n            const buffer = this.device.readPixelsToArrayWebGL(this.domainFBO).buffer;\n            const domain = new Float32Array(buffer);\n            this._domains = [\n                [-domain[4], domain[0]],\n                [-domain[5], domain[1]],\n                [-domain[6], domain[2]]\n            ].slice(0, this.channelCount);\n        }\n        return this._domains;\n    }\n    setDimensions(binCount, binIdRange) {\n        const { model, transformFeedback } = this.transform;\n        model.setVertexCount(binCount);\n        const aggregatorTransformProps = {\n            binIdRange: [\n                binIdRange[0][0],\n                binIdRange[0][1],\n                binIdRange[1]?.[0] || 0,\n                binIdRange[1]?.[1] || 0\n            ]\n        };\n        model.shaderInputs.setProps({ aggregatorTransform: aggregatorTransformProps });\n        // Only destroy existing buffer if it is not large enough\n        const binBufferByteLength = binCount * binIdRange.length * 4;\n        if (!this.binBuffer || this.binBuffer.byteLength < binBufferByteLength) {\n            this.binBuffer?.destroy();\n            this.binBuffer = this.device.createBuffer({ byteLength: binBufferByteLength });\n            transformFeedback.setBuffer('binIds', this.binBuffer);\n        }\n        const valueBufferByteLength = binCount * this.channelCount * 4;\n        if (!this.valueBuffer || this.valueBuffer.byteLength < valueBufferByteLength) {\n            this.valueBuffer?.destroy();\n            this.valueBuffer = this.device.createBuffer({ byteLength: valueBufferByteLength });\n            transformFeedback.setBuffer('values', this.valueBuffer);\n        }\n    }\n    update(bins, operations) {\n        if (!bins) {\n            return;\n        }\n        const transform = this.transform;\n        const target = this.domainFBO;\n        const isCount = [0, 1, 2].map(i => (operations[i] === 'COUNT' ? 1 : 0));\n        const isMean = [0, 1, 2].map(i => (operations[i] === 'MEAN' ? 1 : 0));\n        const aggregatorTransformProps = {\n            isCount: isCount,\n            isMean: isMean,\n            bins\n        };\n        transform.model.shaderInputs.setProps({ aggregatorTransform: aggregatorTransformProps });\n        transform.run({\n            id: 'gpu-aggregation-domain',\n            framebuffer: target,\n            parameters: {\n                viewport: [0, 0, 2, 1]\n            },\n            clearColor: [-MAX_FLOAT32, -MAX_FLOAT32, -MAX_FLOAT32, 0],\n            clearDepth: false,\n            clearStencil: false\n        });\n        // Clear the last read results. This will be lazy-populated if used.\n        this._domains = null;\n    }\n}\nfunction createTransform(device, props) {\n    const vs = /* glsl */ `\\\n#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-vertex\n\nuniform sampler2D bins;\n\n#if NUM_DIMS == 1\nout float binIds;\n#else\nout vec2 binIds;\n#endif\n\n#if NUM_CHANNELS == 1\nflat out float values;\n#elif NUM_CHANNELS == 2\nflat out vec2 values;\n#else\nflat out vec3 values;\n#endif\n\nconst float NAN = intBitsToFloat(-1);\n\nvoid main() {\n  int row = gl_VertexID / SAMPLER_WIDTH;\n  int col = gl_VertexID - row * SAMPLER_WIDTH;\n  vec4 weights = texelFetch(bins, ivec2(col, row), 0);\n  vec3 value3 = mix(\n    mix(weights.rgb, vec3(weights.a), aggregatorTransform.isCount),\n    weights.rgb / max(weights.a, 1.0),\n    aggregatorTransform.isMean\n  );\n  if (weights.a == 0.0) {\n    value3 = vec3(NAN);\n  }\n\n#if NUM_DIMS == 1\n  binIds = float(gl_VertexID + aggregatorTransform.binIdRange.x);\n#else\n  int y = gl_VertexID / (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  int x = gl_VertexID - y * (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  binIds.y = float(y + aggregatorTransform.binIdRange.z);\n  binIds.x = float(x + aggregatorTransform.binIdRange.x);\n#endif\n\n#if NUM_CHANNELS == 3\n  values = value3;\n#elif NUM_CHANNELS == 2\n  values = value3.xy;\n#else\n  values = value3.x;\n#endif\n\n  gl_Position = vec4(0., 0., 0., 1.);\n  // This model renders into a 2x1 texture to obtain min and max simultaneously.\n  // See comments in fragment shader\n  gl_PointSize = 2.0;\n}\n`;\n    const fs = /* glsl */ `\\\n#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-fragment\n\nprecision highp float;\n\n#if NUM_CHANNELS == 1\nflat in float values;\n#elif NUM_CHANNELS == 2\nflat in vec2 values;\n#else\nflat in vec3 values;\n#endif\n\nout vec4 fragColor;\n\nvoid main() {\n  vec3 value3;\n#if NUM_CHANNELS == 3\n  value3 = values;\n#elif NUM_CHANNELS == 2\n  value3.xy = values;\n#else\n  value3.x = values;\n#endif\n  if (isnan(value3.x)) discard;\n  // This shader renders into a 2x1 texture with blending=max\n  // The left pixel yields the max value of each channel\n  // The right pixel yields the min value of each channel\n  if (gl_FragCoord.x < 1.0) {\n    fragColor = vec4(value3, 1.0);\n  } else {\n    fragColor = vec4(-value3, 1.0);\n  }\n}\n`;\n    return new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_1__.BufferTransform(device, {\n        vs,\n        fs,\n        topology: 'point-list',\n        modules: [_aggregation_transform_uniforms_js__WEBPACK_IMPORTED_MODULE_2__.aggregatorTransformUniforms],\n        parameters: {\n            blend: true,\n            blendColorSrcFactor: 'one',\n            blendColorDstFactor: 'one',\n            blendColorOperation: 'max',\n            blendAlphaSrcFactor: 'one',\n            blendAlphaDstFactor: 'one',\n            blendAlphaOperation: 'max'\n        },\n        defines: {\n            NUM_DIMS: props.dimensions,\n            NUM_CHANNELS: props.channelCount,\n            SAMPLER_WIDTH: _webgl_bin_sorter_js__WEBPACK_IMPORTED_MODULE_3__.TEXTURE_WIDTH\n        },\n        varyings: ['binIds', 'values'],\n        disableWarnings: true\n    });\n}\n//# sourceMappingURL=webgl-aggregation-transform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregation-transform.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregator.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregator.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebGLAggregator: () => (/* binding */ WebGLAggregator)\n/* harmony export */ });\n/* harmony import */ var _webgl_bin_sorter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webgl-bin-sorter.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-bin-sorter.js\");\n/* harmony import */ var _webgl_aggregation_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webgl-aggregation-transform.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregation-transform.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/utils/deep-equal.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/utils/log.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n/** An Aggregator implementation that calculates aggregation on the GPU */\nclass WebGLAggregator {\n    /** Checks if the current device supports GPU aggregation */\n    static isSupported(device) {\n        return (device.features.has('float32-renderable-webgl') &&\n            device.features.has('texture-blend-float-webgl'));\n    }\n    constructor(device, props) {\n        this.binCount = 0;\n        /** Cached outputs */\n        this.binIds = null;\n        this.results = [];\n        this.device = device;\n        this.dimensions = props.dimensions;\n        this.channelCount = props.channelCount;\n        this.props = {\n            ...props,\n            pointCount: 0,\n            binIdRange: [[0, 0]],\n            operations: [],\n            attributes: {},\n            binOptions: {}\n        };\n        this.needsUpdate = new Array(this.channelCount).fill(true);\n        this.binSorter = new _webgl_bin_sorter_js__WEBPACK_IMPORTED_MODULE_0__.WebGLBinSorter(device, props);\n        this.aggregationTransform = new _webgl_aggregation_transform_js__WEBPACK_IMPORTED_MODULE_1__.WebGLAggregationTransform(device, props);\n        this.setProps(props);\n    }\n    getBins() {\n        const buffer = this.aggregationTransform.binBuffer;\n        if (!buffer) {\n            return null;\n        }\n        if (this.binIds?.buffer !== buffer) {\n            // deck.gl Attribute.setBinaryValue uses shallow comparison to determine if attribute value has changed\n            // For performance, only create a new binary attribute descriptor when Buffer changes\n            this.binIds = { buffer, type: 'float32', size: this.dimensions };\n        }\n        return this.binIds;\n    }\n    /** Returns an accessor to the output for a given channel. */\n    getResult(channel) {\n        const buffer = this.aggregationTransform.valueBuffer;\n        if (!buffer || channel >= this.channelCount) {\n            return null;\n        }\n        if (this.results[channel]?.buffer !== buffer) {\n            this.results[channel] = {\n                buffer,\n                type: 'float32',\n                size: 1,\n                stride: this.channelCount * 4,\n                offset: channel * 4\n            };\n        }\n        return this.results[channel];\n    }\n    /** Returns the [min, max] of aggregated values for a given channel. */\n    getResultDomain(channel) {\n        return this.aggregationTransform.domains[channel];\n    }\n    /** Returns the information for a given bin. */\n    getBin(index) {\n        if (index < 0 || index >= this.binCount) {\n            return null;\n        }\n        const { binIdRange } = this.props;\n        let id;\n        if (this.dimensions === 1) {\n            id = [index + binIdRange[0][0]];\n        }\n        else {\n            const [[x0, x1], [y0]] = binIdRange;\n            const width = x1 - x0;\n            id = [(index % width) + x0, Math.floor(index / width) + y0];\n        }\n        const pixel = this.binSorter.getBinValues(index);\n        if (!pixel) {\n            return null;\n        }\n        const count = pixel[3];\n        const value = [];\n        for (let channel = 0; channel < this.channelCount; channel++) {\n            const operation = this.props.operations[channel];\n            if (operation === 'COUNT') {\n                value[channel] = count;\n            }\n            else if (count === 0) {\n                value[channel] = NaN;\n            }\n            else {\n                value[channel] = operation === 'MEAN' ? pixel[channel] / count : pixel[channel];\n            }\n        }\n        return { id, value, count };\n    }\n    /** Release GPU resources */\n    destroy() {\n        this.binSorter.destroy();\n        this.aggregationTransform.destroy();\n    }\n    /** Update aggregation props. Normalize prop values and set change flags. */\n    // eslint-disable-next-line complexity, max-statements\n    setProps(props) {\n        const oldProps = this.props;\n        // Update local settings. These will set the flag this._needsUpdate\n        if ('binIdRange' in props && !(0,_deck_gl_core__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(props.binIdRange, oldProps.binIdRange, 2)) {\n            const binIdRange = props.binIdRange;\n            _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].assert(binIdRange.length === this.dimensions);\n            if (this.dimensions === 1) {\n                const [[x0, x1]] = binIdRange;\n                this.binCount = x1 - x0;\n            }\n            else {\n                const [[x0, x1], [y0, y1]] = binIdRange;\n                this.binCount = (x1 - x0) * (y1 - y0);\n            }\n            this.binSorter.setDimensions(this.binCount, binIdRange);\n            this.aggregationTransform.setDimensions(this.binCount, binIdRange);\n            this.setNeedsUpdate();\n        }\n        if (props.operations) {\n            for (let channel = 0; channel < this.channelCount; channel++) {\n                if (props.operations[channel] !== oldProps.operations[channel]) {\n                    this.setNeedsUpdate(channel);\n                }\n            }\n        }\n        if (props.pointCount !== undefined && props.pointCount !== oldProps.pointCount) {\n            this.binSorter.setModelProps({ vertexCount: props.pointCount });\n            this.setNeedsUpdate();\n        }\n        if (props.binOptions) {\n            if (!(0,_deck_gl_core__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(props.binOptions, oldProps.binOptions, 2)) {\n                this.setNeedsUpdate();\n            }\n            this.binSorter.model.shaderInputs.setProps({ binOptions: props.binOptions });\n        }\n        if (props.attributes) {\n            const attributeBuffers = {};\n            const constantAttributes = {};\n            for (const attribute of Object.values(props.attributes)) {\n                for (const [attributeName, value] of Object.entries(attribute.getValue())) {\n                    if (ArrayBuffer.isView(value)) {\n                        constantAttributes[attributeName] = value;\n                    }\n                    else if (value) {\n                        attributeBuffers[attributeName] = value;\n                    }\n                }\n            }\n            this.binSorter.setModelProps({ attributes: attributeBuffers, constantAttributes });\n        }\n        if (props.shaderModuleProps) {\n            this.binSorter.setModelProps({ shaderModuleProps: props.shaderModuleProps });\n        }\n        Object.assign(this.props, props);\n    }\n    /** Flags a channel to need update.\n     * This is called internally by setProps() if certain props change\n     * Users of this class still need to manually set the dirty flag sometimes, because even if no props changed\n     * the underlying buffers could have been updated and require rerunning the aggregation\n     * @param {number} channel - mark the given channel as dirty. If not provided, all channels will be updated.\n     */\n    setNeedsUpdate(channel) {\n        if (channel === undefined) {\n            this.needsUpdate.fill(true);\n        }\n        else {\n            this.needsUpdate[channel] = true;\n        }\n    }\n    update() { }\n    /** Run aggregation */\n    preDraw() {\n        if (!this.needsUpdate.some(Boolean)) {\n            return;\n        }\n        const { operations } = this.props;\n        const operationsToUpdate = this.needsUpdate.map((needsUpdate, i) => needsUpdate ? operations[i] : null);\n        // Render data to bins\n        this.binSorter.update(operationsToUpdate);\n        // Read to buffer and calculate domain\n        this.aggregationTransform.update(this.binSorter.texture, operations);\n        for (let i = 0; i < this.channelCount; i++) {\n            if (this.needsUpdate[i]) {\n                this.needsUpdate[i] = false;\n                this.props.onUpdate?.({ channel: i });\n            }\n        }\n        // Uncomment to debug\n        // console.log('binsFBO', new Float32Array(this.device.readPixelsToArrayWebGL(this.binSorter.texture!).buffer));\n        // console.log('binsBuffer', new Float32Array(this.aggregationTransform.binBuffer?.readSyncWebGL().buffer!));\n        // console.log('resultBuffer', new Float32Array(this.aggregationTransform.valueBuffer?.readSyncWebGL().buffer!));\n    }\n}\n//# sourceMappingURL=webgl-aggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-bin-sorter.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-bin-sorter.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TEXTURE_WIDTH: () => (/* binding */ TEXTURE_WIDTH),\n/* harmony export */   WebGLBinSorter: () => (/* binding */ WebGLBinSorter)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/engine */ \"./node_modules/@luma.gl/engine/dist/model/model.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/utils.js\");\n/* harmony import */ var _bin_sorter_uniforms_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bin-sorter-uniforms.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/bin-sorter-uniforms.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\nconst COLOR_CHANNELS = [0x1, 0x2, 0x4, 0x8]; // GPU color mask RED, GREEN, BLUE, ALPHA\nconst MAX_FLOAT32 = 3e38;\nconst EMPTY_MASKS = { SUM: 0, MEAN: 0, MIN: 0, MAX: 0, COUNT: 0 };\nconst TEXTURE_WIDTH = 1024;\n/**\n * This class manages the resources for performing the first step of aggregation\n * Sort a list of data points into a number of bins\n */\nclass WebGLBinSorter {\n    constructor(device, props) {\n        /**\n         * A packed texture in which each pixel represents a bin.\n         * The index of the pixel in the memory layout is the bin index.\n         * Alpha value is the count of data points that fall into this bin\n         * R,G,B values are the aggregated values of each channel:\n         *   - Sum of all data points if operation is 'SUM', or 'MEAN'\n         *   - Min of all data points if operation is 'MIN'\n         *   - Max of all data points if operation is 'MAX'\n         */\n        this.binsFBO = null;\n        this.device = device;\n        this.model = createModel(device, props);\n    }\n    get texture() {\n        return this.binsFBO ? this.binsFBO.colorAttachments[0].texture : null;\n    }\n    destroy() {\n        this.model.destroy();\n        this.binsFBO?.colorAttachments[0].texture.destroy();\n        this.binsFBO?.destroy();\n    }\n    getBinValues(index) {\n        if (!this.binsFBO) {\n            return null;\n        }\n        const x = index % TEXTURE_WIDTH;\n        const y = Math.floor(index / TEXTURE_WIDTH);\n        const buffer = this.device.readPixelsToArrayWebGL(this.binsFBO, {\n            sourceX: x,\n            sourceY: y,\n            sourceWidth: 1,\n            sourceHeight: 1\n        }).buffer;\n        return new Float32Array(buffer);\n    }\n    setDimensions(binCount, binIdRange) {\n        const width = TEXTURE_WIDTH;\n        const height = Math.ceil(binCount / width);\n        // Only destroy existing texture if it is not large enough\n        if (!this.binsFBO) {\n            this.binsFBO = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createRenderTarget)(this.device, width, height);\n        }\n        else if (this.binsFBO.height < height) {\n            this.binsFBO.resize({ width, height });\n        }\n        const binSorterProps = {\n            binIdRange: [\n                binIdRange[0][0],\n                binIdRange[0][1],\n                binIdRange[1]?.[0] || 0,\n                binIdRange[1]?.[1] || 0\n            ],\n            targetSize: [this.binsFBO.width, this.binsFBO.height]\n        };\n        this.model.shaderInputs.setProps({ binSorter: binSorterProps });\n    }\n    setModelProps(props) {\n        const model = this.model;\n        if (props.attributes) {\n            model.setAttributes(props.attributes);\n        }\n        if (props.constantAttributes) {\n            model.setConstantAttributes(props.constantAttributes);\n        }\n        if (props.vertexCount !== undefined) {\n            model.setVertexCount(props.vertexCount);\n        }\n        if (props.shaderModuleProps) {\n            model.shaderInputs.setProps(props.shaderModuleProps);\n        }\n    }\n    /** Update aggregation */\n    update(\n    /** The aggregation operation for each channel. Use null to skip update. */\n    operations) {\n        if (!this.binsFBO) {\n            return;\n        }\n        const masks = getMaskByOperation(operations);\n        this._updateBins('SUM', masks.SUM + masks.MEAN);\n        this._updateBins('MIN', masks.MIN);\n        this._updateBins('MAX', masks.MAX);\n    }\n    /** Recalculate aggregation on the given channels using the given operation */\n    _updateBins(operation, \n    /** GPU bit mask of one or more channels that should be updated */\n    colorMask) {\n        if (colorMask === 0) {\n            return;\n        }\n        colorMask |= COLOR_CHANNELS[3]; // Also renders to the alpha channel (point count)\n        const model = this.model;\n        const target = this.binsFBO;\n        const initialValue = operation === 'MAX' ? -MAX_FLOAT32 : operation === 'MIN' ? MAX_FLOAT32 : 0;\n        const renderPass = this.device.beginRenderPass({\n            id: `gpu-aggregation-${operation}`,\n            framebuffer: target,\n            parameters: {\n                viewport: [0, 0, target.width, target.height],\n                colorMask\n            },\n            clearColor: [initialValue, initialValue, initialValue, 0],\n            clearDepth: false,\n            clearStencil: false\n        });\n        model.setParameters({\n            blend: true,\n            blendColorSrcFactor: 'one',\n            blendColorDstFactor: 'one',\n            blendAlphaSrcFactor: 'one',\n            blendAlphaDstFactor: 'one',\n            blendColorOperation: operation === 'MAX' ? 'max' : operation === 'MIN' ? 'min' : 'add',\n            blendAlphaOperation: 'add'\n        });\n        model.draw(renderPass);\n        renderPass.end();\n    }\n}\n/** Convert a [channel -> operation] map to a [operation -> GPU color mask] map */\nfunction getMaskByOperation(operations) {\n    const result = { ...EMPTY_MASKS };\n    for (let channel = 0; channel < operations.length; channel++) {\n        const op = operations[channel];\n        if (op) {\n            result[op] += COLOR_CHANNELS[channel];\n        }\n    }\n    return result;\n}\nfunction createModel(device, props) {\n    let userVs = props.vs;\n    if (props.dimensions === 2) {\n        // If user provides 2d bin IDs, convert them to 1d indices for data packing\n        userVs += /* glsl */ `\nvoid getBin(out int binId) {\n  ivec2 binId2;\n  getBin(binId2);\n  if (binId2.x < binSorter.binIdRange.x || binId2.x >= binSorter.binIdRange.y) {\n    binId = -1;\n  } else {\n    binId = (binId2.y - binSorter.binIdRange.z) * (binSorter.binIdRange.y - binSorter.binIdRange.x) + binId2.x;\n  }\n}\n`;\n    }\n    const vs = `\\\n#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-vertex\n\n${userVs}\n\nout vec3 v_Value;\n\nvoid main() {\n  int binIndex;\n  getBin(binIndex);\n  binIndex = binIndex - binSorter.binIdRange.x;\n  if (binIndex < 0) {\n    gl_Position = vec4(0.);\n    return;\n  }\n  int row = binIndex / binSorter.targetSize.x;\n  int col = binIndex - row * binSorter.targetSize.x;\n  vec2 position = (vec2(col, row) + 0.5) / vec2(binSorter.targetSize) * 2.0 - 1.0;\n  gl_Position = vec4(position, 0.0, 1.0);\n  gl_PointSize = 1.0;\n\n#if NUM_CHANNELS == 3\n  getValue(v_Value);\n#elif NUM_CHANNELS == 2\n  getValue(v_Value.xy);\n#else\n  getValue(v_Value.x);\n#endif\n}\n`;\n    const fs = /* glsl */ `\\\n#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-fragment\n\nprecision highp float;\n\nin vec3 v_Value;\nout vec4 fragColor;\n\nvoid main() {\n  fragColor.xyz = v_Value;\n\n  #ifdef MODULE_GEOMETRY\n  geometry.uv = vec2(0.);\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n  #endif\n\n  fragColor.w = 1.0;\n}\n`;\n    const model = new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_1__.Model(device, {\n        bufferLayout: props.bufferLayout,\n        modules: [...(props.modules || []), _bin_sorter_uniforms_js__WEBPACK_IMPORTED_MODULE_2__.binSorterUniforms],\n        defines: { ...props.defines, NON_INSTANCED_MODEL: 1, NUM_CHANNELS: props.channelCount },\n        isInstanced: false,\n        vs,\n        fs,\n        topology: 'point-list',\n        disableWarnings: true\n    });\n    return model;\n}\n//# sourceMappingURL=webgl-bin-sorter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-bin-sorter.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/common/utils/bounds-utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/common/utils/bounds-utils.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBinIdRange: () => (/* binding */ getBinIdRange)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Utility to estimate binIdRange as expected by AggregatorProps */\nfunction getBinIdRange({ dataBounds, getBinId, padding = 0 }) {\n    const corners = [\n        dataBounds[0],\n        dataBounds[1],\n        [dataBounds[0][0], dataBounds[1][1]],\n        [dataBounds[1][0], dataBounds[0][1]]\n    ].map(p => getBinId(p));\n    const minX = Math.min(...corners.map(p => p[0])) - padding;\n    const minY = Math.min(...corners.map(p => p[1])) - padding;\n    const maxX = Math.max(...corners.map(p => p[0])) + padding + 1;\n    const maxY = Math.max(...corners.map(p => p[1])) + padding + 1;\n    return [\n        [minX, maxX],\n        [minY, maxY]\n    ];\n}\n//# sourceMappingURL=bounds-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29tbW9uL3V0aWxzL2JvdW5kcy11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb21tb24vdXRpbHMvYm91bmRzLXV0aWxzLmpzPzFiZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG4vKiogVXRpbGl0eSB0byBlc3RpbWF0ZSBiaW5JZFJhbmdlIGFzIGV4cGVjdGVkIGJ5IEFnZ3JlZ2F0b3JQcm9wcyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJpbklkUmFuZ2UoeyBkYXRhQm91bmRzLCBnZXRCaW5JZCwgcGFkZGluZyA9IDAgfSkge1xuICAgIGNvbnN0IGNvcm5lcnMgPSBbXG4gICAgICAgIGRhdGFCb3VuZHNbMF0sXG4gICAgICAgIGRhdGFCb3VuZHNbMV0sXG4gICAgICAgIFtkYXRhQm91bmRzWzBdWzBdLCBkYXRhQm91bmRzWzFdWzFdXSxcbiAgICAgICAgW2RhdGFCb3VuZHNbMV1bMF0sIGRhdGFCb3VuZHNbMF1bMV1dXG4gICAgXS5tYXAocCA9PiBnZXRCaW5JZChwKSk7XG4gICAgY29uc3QgbWluWCA9IE1hdGgubWluKC4uLmNvcm5lcnMubWFwKHAgPT4gcFswXSkpIC0gcGFkZGluZztcbiAgICBjb25zdCBtaW5ZID0gTWF0aC5taW4oLi4uY29ybmVycy5tYXAocCA9PiBwWzFdKSkgLSBwYWRkaW5nO1xuICAgIGNvbnN0IG1heFggPSBNYXRoLm1heCguLi5jb3JuZXJzLm1hcChwID0+IHBbMF0pKSArIHBhZGRpbmcgKyAxO1xuICAgIGNvbnN0IG1heFkgPSBNYXRoLm1heCguLi5jb3JuZXJzLm1hcChwID0+IHBbMV0pKSArIHBhZGRpbmcgKyAxO1xuICAgIHJldHVybiBbXG4gICAgICAgIFttaW5YLCBtYXhYXSxcbiAgICAgICAgW21pblksIG1heFldXG4gICAgXTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJvdW5kcy11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/common/utils/bounds-utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/bin-options-uniforms.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/bin-options-uniforms.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   binOptionsUniforms: () => (/* binding */ binOptionsUniforms)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = /* glsl */ `\\\nuniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n`;\nconst binOptionsUniforms = {\n    name: 'binOptions',\n    vs: uniformBlock,\n    uniformTypes: {\n        cellOriginCommon: 'vec2<f32>',\n        cellSizeCommon: 'vec2<f32>'\n    }\n};\n//# sourceMappingURL=bin-options-uniforms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29udG91ci1sYXllci9iaW4tb3B0aW9ucy11bmlmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb250b3VyLWxheWVyL2Jpbi1vcHRpb25zLXVuaWZvcm1zLmpzPzk5N2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5jb25zdCB1bmlmb3JtQmxvY2sgPSAvKiBnbHNsICovIGBcXFxudW5pZm9ybSBiaW5PcHRpb25zVW5pZm9ybXMge1xuICB2ZWMyIGNlbGxPcmlnaW5Db21tb247XG4gIHZlYzIgY2VsbFNpemVDb21tb247XG59IGJpbk9wdGlvbnM7XG5gO1xuZXhwb3J0IGNvbnN0IGJpbk9wdGlvbnNVbmlmb3JtcyA9IHtcbiAgICBuYW1lOiAnYmluT3B0aW9ucycsXG4gICAgdnM6IHVuaWZvcm1CbG9jayxcbiAgICB1bmlmb3JtVHlwZXM6IHtcbiAgICAgICAgY2VsbE9yaWdpbkNvbW1vbjogJ3ZlYzI8ZjMyPicsXG4gICAgICAgIGNlbGxTaXplQ29tbW9uOiAndmVjMjxmMzI+J1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iaW4tb3B0aW9ucy11bmlmb3Jtcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/bin-options-uniforms.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-layer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-layer.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/utils/deep-equal.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/viewports/viewport.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/lib/constants.js\");\n/* harmony import */ var _deck_gl_layers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @deck.gl/layers */ \"./node_modules/@deck.gl/layers/dist/path-layer/path-layer.js\");\n/* harmony import */ var _deck_gl_layers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @deck.gl/layers */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer.js\");\n/* harmony import */ var _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/aggregator/index.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregator.js\");\n/* harmony import */ var _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/aggregator/index.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/cpu-aggregator.js\");\n/* harmony import */ var _common_aggregation_layer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/aggregation-layer.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregation-layer.js\");\n/* harmony import */ var _contour_utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contour-utils.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-utils.js\");\n/* harmony import */ var _value_reader_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./value-reader.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/value-reader.js\");\n/* harmony import */ var _common_utils_bounds_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/utils/bounds-utils.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/utils/bounds-utils.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @math.gl/core */ \"./node_modules/@math.gl/core/dist/classes/matrix4.js\");\n/* harmony import */ var _bin_options_uniforms_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bin-options-uniforms.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/bin-options-uniforms.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n\n\n\n\n\n\nconst DEFAULT_COLOR = [255, 255, 255, 255];\nconst DEFAULT_STROKE_WIDTH = 1;\nconst defaultProps = {\n    // grid aggregation\n    cellSize: { type: 'number', min: 1, value: 1000 },\n    gridOrigin: { type: 'array', compare: true, value: [0, 0] },\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getWeight: { type: 'accessor', value: 1 },\n    gpuAggregation: true,\n    aggregation: 'SUM',\n    // contour lines\n    contours: {\n        type: 'object',\n        value: [{ threshold: 1 }],\n        optional: true,\n        compare: 3\n    },\n    zOffset: 0.005\n};\n/** Aggregate data into a grid-based heatmap. The color and height of a cell are determined based on the objects it contains. */\nclass GridLayer extends _common_aggregation_layer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    getAggregatorType() {\n        return this.props.gpuAggregation && _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_1__.WebGLAggregator.isSupported(this.context.device)\n            ? 'gpu'\n            : 'cpu';\n    }\n    createAggregator(type) {\n        if (type === 'cpu') {\n            return new _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_2__.CPUAggregator({\n                dimensions: 2,\n                getBin: {\n                    sources: ['positions'],\n                    getValue: ({ positions }, index, opts) => {\n                        const viewport = this.state.aggregatorViewport;\n                        // project to common space\n                        const p = viewport.projectPosition(positions);\n                        const { cellSizeCommon, cellOriginCommon } = opts;\n                        return [\n                            Math.floor((p[0] - cellOriginCommon[0]) / cellSizeCommon[0]),\n                            Math.floor((p[1] - cellOriginCommon[1]) / cellSizeCommon[1])\n                        ];\n                    }\n                },\n                getValue: [{ sources: ['counts'], getValue: ({ counts }) => counts }],\n                onUpdate: this._onAggregationUpdate.bind(this)\n            });\n        }\n        return new _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_1__.WebGLAggregator(this.context.device, {\n            dimensions: 2,\n            channelCount: 1,\n            bufferLayout: this.getAttributeManager().getBufferLayouts({ isInstanced: false }),\n            ...super.getShaders({\n                modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _bin_options_uniforms_js__WEBPACK_IMPORTED_MODULE_4__.binOptionsUniforms],\n                vs: /* glsl */ `\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float value) {\n    value = counts;\n  }\n  `\n            }),\n            onUpdate: this._onAggregationUpdate.bind(this)\n        });\n    }\n    initializeState() {\n        super.initializeState();\n        const attributeManager = this.getAttributeManager();\n        attributeManager.add({\n            positions: {\n                size: 3,\n                accessor: 'getPosition',\n                type: 'float64',\n                fp64: this.use64bitPositions()\n            },\n            counts: { size: 1, accessor: 'getWeight' }\n        });\n    }\n    updateState(params) {\n        const aggregatorChanged = super.updateState(params);\n        const { props, oldProps, changeFlags } = params;\n        const { aggregator } = this.state;\n        if (aggregatorChanged ||\n            changeFlags.dataChanged ||\n            props.cellSize !== oldProps.cellSize ||\n            !(0,_deck_gl_core__WEBPACK_IMPORTED_MODULE_5__.deepEqual)(props.gridOrigin, oldProps.gridOrigin, 1) ||\n            props.aggregation !== oldProps.aggregation) {\n            this._updateBinOptions();\n            const { cellSizeCommon, cellOriginCommon, binIdRange } = this.state;\n            aggregator.setProps({\n                // @ts-expect-error only used by GPUAggregator\n                binIdRange,\n                pointCount: this.getNumInstances(),\n                operations: [props.aggregation],\n                binOptions: {\n                    cellSizeCommon,\n                    cellOriginCommon\n                }\n            });\n        }\n        if (!(0,_deck_gl_core__WEBPACK_IMPORTED_MODULE_5__.deepEqual)(oldProps.contours, props.contours, 2)) {\n            // Recalculate contours\n            this.setState({ contourData: null });\n        }\n        return aggregatorChanged;\n    }\n    _updateBinOptions() {\n        const bounds = this.getBounds();\n        const cellSizeCommon = [1, 1];\n        let cellOriginCommon = [0, 0];\n        let binIdRange = [\n            [0, 1],\n            [0, 1]\n        ];\n        let viewport = this.context.viewport;\n        if (bounds && Number.isFinite(bounds[0][0])) {\n            let centroid = [(bounds[0][0] + bounds[1][0]) / 2, (bounds[0][1] + bounds[1][1]) / 2];\n            const { cellSize, gridOrigin } = this.props;\n            const { unitsPerMeter } = viewport.getDistanceScales(centroid);\n            cellSizeCommon[0] = unitsPerMeter[0] * cellSize;\n            cellSizeCommon[1] = unitsPerMeter[1] * cellSize;\n            // Offset common space to center at the origin of the grid cell where the data center is in\n            // This improves precision without affecting the cell positions\n            const centroidCommon = viewport.projectFlat(centroid);\n            cellOriginCommon = [\n                Math.floor((centroidCommon[0] - gridOrigin[0]) / cellSizeCommon[0]) * cellSizeCommon[0] +\n                    gridOrigin[0],\n                Math.floor((centroidCommon[1] - gridOrigin[1]) / cellSizeCommon[1]) * cellSizeCommon[1] +\n                    gridOrigin[1]\n            ];\n            centroid = viewport.unprojectFlat(cellOriginCommon);\n            const ViewportType = viewport.constructor;\n            // We construct a viewport for the GPU aggregator's project module\n            // This viewport is determined by data\n            // removes arbitrary precision variance that depends on initial view state\n            viewport = viewport.isGeospatial\n                ? new ViewportType({ longitude: centroid[0], latitude: centroid[1], zoom: 12 })\n                : new _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({ position: [centroid[0], centroid[1], 0], zoom: 12 });\n            // Round to the nearest 32-bit float to match CPU and GPU results\n            cellOriginCommon = [Math.fround(viewport.center[0]), Math.fround(viewport.center[1])];\n            binIdRange = (0,_common_utils_bounds_utils_js__WEBPACK_IMPORTED_MODULE_7__.getBinIdRange)({\n                dataBounds: bounds,\n                getBinId: (p) => {\n                    const positionCommon = viewport.projectFlat(p);\n                    return [\n                        Math.floor((positionCommon[0] - cellOriginCommon[0]) / cellSizeCommon[0]),\n                        Math.floor((positionCommon[1] - cellOriginCommon[1]) / cellSizeCommon[1])\n                    ];\n                }\n            });\n        }\n        this.setState({ cellSizeCommon, cellOriginCommon, binIdRange, aggregatorViewport: viewport });\n    }\n    draw(opts) {\n        // Replaces render time viewport with our own\n        if (opts.shaderModuleProps.project) {\n            opts.shaderModuleProps.project.viewport = this.state.aggregatorViewport;\n        }\n        super.draw(opts);\n    }\n    _onAggregationUpdate() {\n        const { aggregator, binIdRange } = this.state;\n        this.setState({\n            aggregatedValueReader: (0,_value_reader_js__WEBPACK_IMPORTED_MODULE_8__.getAggregatorValueReader)({ aggregator, binIdRange, channel: 0 }),\n            contourData: null\n        });\n    }\n    _getContours() {\n        const { aggregatedValueReader } = this.state;\n        if (!aggregatedValueReader) {\n            return null;\n        }\n        if (!this.state.contourData) {\n            const { binIdRange } = this.state;\n            const { contours } = this.props;\n            const contourData = (0,_contour_utils_js__WEBPACK_IMPORTED_MODULE_9__.generateContours)({\n                contours,\n                getValue: aggregatedValueReader,\n                xRange: binIdRange[0],\n                yRange: binIdRange[1]\n            });\n            this.state.contourData = contourData;\n        }\n        return this.state.contourData;\n    }\n    onAttributeChange(id) {\n        const { aggregator } = this.state;\n        switch (id) {\n            case 'positions':\n                aggregator.setNeedsUpdate();\n                this._updateBinOptions();\n                const { cellSizeCommon, cellOriginCommon, binIdRange } = this.state;\n                aggregator.setProps({\n                    // @ts-expect-error only used by GPUAggregator\n                    binIdRange,\n                    binOptions: {\n                        cellSizeCommon,\n                        cellOriginCommon\n                    }\n                });\n                break;\n            case 'counts':\n                aggregator.setNeedsUpdate(0);\n                break;\n            default:\n            // This should not happen\n        }\n    }\n    renderLayers() {\n        const contourData = this._getContours();\n        if (!contourData) {\n            return null;\n        }\n        const { lines, polygons } = contourData;\n        const { zOffset } = this.props;\n        const { cellOriginCommon, cellSizeCommon } = this.state;\n        const LinesSubLayerClass = this.getSubLayerClass('lines', _deck_gl_layers__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n        const BandsSubLayerClass = this.getSubLayerClass('bands', _deck_gl_layers__WEBPACK_IMPORTED_MODULE_11__[\"default\"]);\n        const modelMatrix = new _math_gl_core__WEBPACK_IMPORTED_MODULE_12__.Matrix4()\n            .translate([cellOriginCommon[0], cellOriginCommon[1], 0])\n            .scale([cellSizeCommon[0], cellSizeCommon[1], zOffset]);\n        // Contour lines layer\n        const lineLayer = lines &&\n            lines.length > 0 &&\n            new LinesSubLayerClass(this.getSubLayerProps({\n                id: 'lines'\n            }), {\n                data: lines,\n                coordinateSystem: _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__.COORDINATE_SYSTEM.CARTESIAN,\n                modelMatrix,\n                getPath: d => d.vertices,\n                getColor: d => d.contour.color ?? DEFAULT_COLOR,\n                getWidth: d => d.contour.strokeWidth ?? DEFAULT_STROKE_WIDTH,\n                widthUnits: 'pixels'\n            });\n        // Contour bands layer\n        const bandsLayer = polygons &&\n            polygons.length > 0 &&\n            new BandsSubLayerClass(this.getSubLayerProps({\n                id: 'bands'\n            }), {\n                data: polygons,\n                coordinateSystem: _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__.COORDINATE_SYSTEM.CARTESIAN,\n                modelMatrix,\n                getPolygon: d => d.vertices,\n                getFillColor: d => d.contour.color ?? DEFAULT_COLOR\n            });\n        return [lineLayer, bandsLayer];\n    }\n    getPickingInfo(params) {\n        const info = params.info;\n        const { object } = info;\n        if (object) {\n            info.object = {\n                contour: object.contour\n            };\n        }\n        return info;\n    }\n}\nGridLayer.layerName = 'ContourLayer';\nGridLayer.defaultProps = defaultProps;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GridLayer);\n//# sourceMappingURL=contour-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-utils.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-utils.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateContours: () => (/* binding */ generateContours)\n/* harmony export */ });\n/* harmony import */ var _marching_squares_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marching-squares.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Given all the cell weights, generates contours for each threshold.\n/* eslint-disable max-depth */\nfunction generateContours({ contours, getValue, xRange, yRange }) {\n    const contourLines = [];\n    const contourPolygons = [];\n    let segmentIndex = 0;\n    let polygonIndex = 0;\n    for (let i = 0; i < contours.length; i++) {\n        const contour = contours[i];\n        const z = contour.zIndex ?? i;\n        const { threshold } = contour;\n        for (let x = xRange[0] - 1; x < xRange[1]; x++) {\n            for (let y = yRange[0] - 1; y < yRange[1]; y++) {\n                // Get the MarchingSquares code based on neighbor cell weights.\n                const { code, meanCode } = (0,_marching_squares_js__WEBPACK_IMPORTED_MODULE_0__.getCode)({\n                    getValue,\n                    threshold,\n                    x,\n                    y,\n                    xRange,\n                    yRange\n                });\n                const opts = {\n                    x,\n                    y,\n                    z,\n                    code,\n                    meanCode\n                };\n                if (Array.isArray(threshold)) {\n                    // ISO bands\n                    const polygons = (0,_marching_squares_js__WEBPACK_IMPORTED_MODULE_0__.getPolygons)(opts);\n                    for (const polygon of polygons) {\n                        contourPolygons[polygonIndex++] = {\n                            vertices: polygon,\n                            contour\n                        };\n                    }\n                }\n                else {\n                    // ISO lines\n                    const path = (0,_marching_squares_js__WEBPACK_IMPORTED_MODULE_0__.getLines)(opts);\n                    if (path.length > 0) {\n                        contourLines[segmentIndex++] = {\n                            vertices: path,\n                            contour\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return { lines: contourLines, polygons: contourPolygons };\n}\n/* eslint-enable max-depth */\n//# sourceMappingURL=contour-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29udG91ci1sYXllci9jb250b3VyLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9jb250b3VyLWxheWVyL2NvbnRvdXItdXRpbHMuanM/Y2NmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZWNrLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmltcG9ydCB7IGdldENvZGUsIGdldExpbmVzLCBnZXRQb2x5Z29ucyB9IGZyb20gXCIuL21hcmNoaW5nLXNxdWFyZXMuanNcIjtcbi8vIEdpdmVuIGFsbCB0aGUgY2VsbCB3ZWlnaHRzLCBnZW5lcmF0ZXMgY29udG91cnMgZm9yIGVhY2ggdGhyZXNob2xkLlxuLyogZXNsaW50LWRpc2FibGUgbWF4LWRlcHRoICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVDb250b3Vycyh7IGNvbnRvdXJzLCBnZXRWYWx1ZSwgeFJhbmdlLCB5UmFuZ2UgfSkge1xuICAgIGNvbnN0IGNvbnRvdXJMaW5lcyA9IFtdO1xuICAgIGNvbnN0IGNvbnRvdXJQb2x5Z29ucyA9IFtdO1xuICAgIGxldCBzZWdtZW50SW5kZXggPSAwO1xuICAgIGxldCBwb2x5Z29uSW5kZXggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29udG91cnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29udG91ciA9IGNvbnRvdXJzW2ldO1xuICAgICAgICBjb25zdCB6ID0gY29udG91ci56SW5kZXggPz8gaTtcbiAgICAgICAgY29uc3QgeyB0aHJlc2hvbGQgfSA9IGNvbnRvdXI7XG4gICAgICAgIGZvciAobGV0IHggPSB4UmFuZ2VbMF0gLSAxOyB4IDwgeFJhbmdlWzFdOyB4KyspIHtcbiAgICAgICAgICAgIGZvciAobGV0IHkgPSB5UmFuZ2VbMF0gLSAxOyB5IDwgeVJhbmdlWzFdOyB5KyspIHtcbiAgICAgICAgICAgICAgICAvLyBHZXQgdGhlIE1hcmNoaW5nU3F1YXJlcyBjb2RlIGJhc2VkIG9uIG5laWdoYm9yIGNlbGwgd2VpZ2h0cy5cbiAgICAgICAgICAgICAgICBjb25zdCB7IGNvZGUsIG1lYW5Db2RlIH0gPSBnZXRDb2RlKHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0VmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIHRocmVzaG9sZCxcbiAgICAgICAgICAgICAgICAgICAgeCxcbiAgICAgICAgICAgICAgICAgICAgeSxcbiAgICAgICAgICAgICAgICAgICAgeFJhbmdlLFxuICAgICAgICAgICAgICAgICAgICB5UmFuZ2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCBvcHRzID0ge1xuICAgICAgICAgICAgICAgICAgICB4LFxuICAgICAgICAgICAgICAgICAgICB5LFxuICAgICAgICAgICAgICAgICAgICB6LFxuICAgICAgICAgICAgICAgICAgICBjb2RlLFxuICAgICAgICAgICAgICAgICAgICBtZWFuQ29kZVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGhyZXNob2xkKSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBJU08gYmFuZHNcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9seWdvbnMgPSBnZXRQb2x5Z29ucyhvcHRzKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBwb2x5Z29uIG9mIHBvbHlnb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250b3VyUG9seWdvbnNbcG9seWdvbkluZGV4KytdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnRpY2VzOiBwb2x5Z29uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRvdXJcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIElTTyBsaW5lc1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXRoID0gZ2V0TGluZXMob3B0cyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRvdXJMaW5lc1tzZWdtZW50SW5kZXgrK10gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljZXM6IHBhdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udG91clxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBsaW5lczogY29udG91ckxpbmVzLCBwb2x5Z29uczogY29udG91clBvbHlnb25zIH07XG59XG4vKiBlc2xpbnQtZW5hYmxlIG1heC1kZXB0aCAqL1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udG91ci11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares-codes.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares-codes.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ISOBANDS_CODE_OFFSET_MAP: () => (/* binding */ ISOBANDS_CODE_OFFSET_MAP),\n/* harmony export */   ISOLINES_CODE_OFFSET_MAP: () => (/* binding */ ISOLINES_CODE_OFFSET_MAP)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Code to Offsets Map needed to implement Marching Squares algorithm\n// Ref: https://en.wikipedia.org/wiki/Marching_squares\n// Table to map code to the intersection offsets\n// All offsets are relative to the center of marching cell (which is top right corner of grid-cell, and center of marching-square)\nconst HALF = 0.5;\nconst ONE6TH = 1 / 6;\nconst OFFSET = {\n    N: [0, HALF], // NORTH\n    E: [HALF, 0], // EAST\n    S: [0, -HALF], // SOUTH\n    W: [-HALF, 0], // WEST\n    // CORNERS\n    NE: [HALF, HALF],\n    NW: [-HALF, HALF],\n    SE: [HALF, -HALF],\n    SW: [-HALF, -HALF]\n};\n// NOTE: vertices are ordered in CCW direction, starting from NW corner\n// Triangles\nconst SW_TRIANGLE = [OFFSET.W, OFFSET.SW, OFFSET.S];\nconst SE_TRIANGLE = [OFFSET.S, OFFSET.SE, OFFSET.E];\nconst NE_TRIANGLE = [OFFSET.E, OFFSET.NE, OFFSET.N];\nconst NW_TRIANGLE = [OFFSET.NW, OFFSET.W, OFFSET.N];\n// Trapezoids\nconst SW_TRAPEZOID = [\n    [-HALF, ONE6TH],\n    [-HALF, -ONE6TH],\n    [-ONE6TH, -HALF],\n    [ONE6TH, -HALF]\n];\nconst SE_TRAPEZOID = [\n    [-ONE6TH, -HALF],\n    [ONE6TH, -HALF],\n    [HALF, -ONE6TH],\n    [HALF, ONE6TH]\n];\nconst NE_TRAPEZOID = [\n    [HALF, -ONE6TH],\n    [HALF, ONE6TH],\n    [ONE6TH, HALF],\n    [-ONE6TH, HALF]\n];\nconst NW_TRAPEZOID = [\n    [-HALF, ONE6TH],\n    [-HALF, -ONE6TH],\n    [ONE6TH, HALF],\n    [-ONE6TH, HALF]\n];\n// Rectangles\nconst S_RECTANGLE = [OFFSET.W, OFFSET.SW, OFFSET.SE, OFFSET.E];\nconst E_RECTANGLE = [OFFSET.S, OFFSET.SE, OFFSET.NE, OFFSET.N];\nconst N_RECTANGLE = [OFFSET.NW, OFFSET.W, OFFSET.E, OFFSET.NE];\nconst W_RECTANGLE = [OFFSET.NW, OFFSET.SW, OFFSET.S, OFFSET.N];\nconst EW_RECTANGEL = [\n    [-HALF, ONE6TH],\n    [-HALF, -ONE6TH],\n    [HALF, -ONE6TH],\n    [HALF, ONE6TH]\n];\nconst SN_RECTANGEL = [\n    [-ONE6TH, -HALF],\n    [ONE6TH, -HALF],\n    [ONE6TH, HALF],\n    [-ONE6TH, HALF]\n];\n// Square\nconst SQUARE = [OFFSET.NW, OFFSET.SW, OFFSET.SE, OFFSET.NE];\n// Pentagons\nconst SW_PENTAGON = [OFFSET.NW, OFFSET.SW, OFFSET.SE, OFFSET.E, OFFSET.N];\nconst SE_PENTAGON = [OFFSET.W, OFFSET.SW, OFFSET.SE, OFFSET.NE, OFFSET.N];\nconst NE_PENTAGON = [OFFSET.NW, OFFSET.W, OFFSET.S, OFFSET.SE, OFFSET.NE];\nconst NW_PENTAGON = [OFFSET.NW, OFFSET.SW, OFFSET.S, OFFSET.E, OFFSET.NE];\nconst NW_N_PENTAGON = [OFFSET.NW, OFFSET.W, [HALF, -ONE6TH], [HALF, ONE6TH], OFFSET.N];\nconst NE_E_PENTAGON = [[-ONE6TH, -HALF], [ONE6TH, -HALF], OFFSET.E, OFFSET.NE, OFFSET.N];\nconst SE_S_PENTAGON = [[-HALF, ONE6TH], [-HALF, -ONE6TH], OFFSET.S, OFFSET.SE, OFFSET.E];\nconst SW_W_PENTAGON = [OFFSET.W, OFFSET.SW, OFFSET.S, [ONE6TH, HALF], [-ONE6TH, HALF]];\nconst NW_W_PENTAGON = [OFFSET.NW, OFFSET.W, [-ONE6TH, -HALF], [ONE6TH, -HALF], OFFSET.N];\nconst NE_N_PENTAGON = [[-HALF, ONE6TH], [-HALF, -ONE6TH], OFFSET.E, OFFSET.NE, OFFSET.N];\nconst SE_E_PENTAGON = [OFFSET.S, OFFSET.SE, OFFSET.E, [ONE6TH, HALF], [-ONE6TH, HALF]];\nconst SW_S_PENTAGON = [OFFSET.W, OFFSET.SW, OFFSET.S, [HALF, -ONE6TH], [HALF, ONE6TH]];\n// Hexagon\nconst S_HEXAGON = [OFFSET.W, OFFSET.SW, OFFSET.SE, OFFSET.E, [ONE6TH, HALF], [-ONE6TH, HALF]];\nconst E_HEXAGON = [[-HALF, ONE6TH], [-HALF, -ONE6TH], OFFSET.S, OFFSET.SE, OFFSET.NE, OFFSET.N];\nconst N_HEXAGON = [OFFSET.NW, OFFSET.W, [-ONE6TH, -HALF], [ONE6TH, -HALF], OFFSET.E, OFFSET.NE];\nconst W_HEXAGON = [OFFSET.NW, OFFSET.SW, OFFSET.S, [HALF, -ONE6TH], [HALF, ONE6TH], OFFSET.N];\nconst SW_NE_HEXAGON = [OFFSET.W, OFFSET.SW, OFFSET.S, OFFSET.E, OFFSET.NE, OFFSET.N];\nconst NW_SE_HEXAGON = [OFFSET.NW, OFFSET.W, OFFSET.S, OFFSET.SE, OFFSET.E, OFFSET.N];\n// Heptagon (7-sided)\nconst NE_HEPTAGON = [\n    [-HALF, ONE6TH],\n    [-HALF, -ONE6TH],\n    [-ONE6TH, -HALF],\n    [ONE6TH, -HALF],\n    OFFSET.E,\n    OFFSET.NE,\n    OFFSET.N\n];\nconst SW_HEPTAGON = [\n    OFFSET.W,\n    OFFSET.SW,\n    OFFSET.S,\n    [HALF, -ONE6TH],\n    [HALF, ONE6TH],\n    [ONE6TH, HALF],\n    [-ONE6TH, HALF]\n];\nconst NW_HEPTAGON = [\n    OFFSET.NW,\n    OFFSET.W,\n    [-ONE6TH, -HALF],\n    [ONE6TH, -HALF],\n    [HALF, -ONE6TH],\n    [HALF, ONE6TH],\n    OFFSET.N\n];\nconst SE_HEPTAGON = [\n    [-HALF, ONE6TH],\n    [-HALF, -ONE6TH],\n    OFFSET.S,\n    OFFSET.SE,\n    OFFSET.E,\n    [ONE6TH, HALF],\n    [-ONE6TH, HALF]\n];\n// Octagon\nconst OCTAGON = [\n    [-HALF, ONE6TH],\n    [-HALF, -ONE6TH],\n    [-ONE6TH, -HALF],\n    [ONE6TH, -HALF],\n    [HALF, -ONE6TH],\n    [HALF, ONE6TH],\n    [ONE6TH, HALF],\n    [-ONE6TH, HALF]\n];\n// Note: above wiki page invertes white/black dots for generating the code, we don't\nconst ISOLINES_CODE_OFFSET_MAP = {\n    // key is equal to the code of 4 vertices (invert the code specified in wiki)\n    // value can be an array or an Object\n    // Array : [line] or [line, line], where each line is [start-point, end-point], and each point is [x, y]\n    // Object : to handle saddle cases, whos output depends on mean value of all 4 corners\n    //  key: code of mean value (0 or 1)\n    //  value: Array , as above defines one or two line segments\n    0: [],\n    1: [[OFFSET.W, OFFSET.S]],\n    2: [[OFFSET.S, OFFSET.E]],\n    3: [[OFFSET.W, OFFSET.E]],\n    4: [[OFFSET.N, OFFSET.E]],\n    5: {\n        0: [\n            [OFFSET.W, OFFSET.S],\n            [OFFSET.N, OFFSET.E]\n        ],\n        1: [\n            [OFFSET.W, OFFSET.N],\n            [OFFSET.S, OFFSET.E]\n        ]\n    },\n    6: [[OFFSET.N, OFFSET.S]],\n    7: [[OFFSET.W, OFFSET.N]],\n    8: [[OFFSET.W, OFFSET.N]],\n    9: [[OFFSET.N, OFFSET.S]],\n    10: {\n        0: [\n            [OFFSET.W, OFFSET.N],\n            [OFFSET.S, OFFSET.E]\n        ],\n        1: [\n            [OFFSET.W, OFFSET.S],\n            [OFFSET.N, OFFSET.E]\n        ]\n    },\n    11: [[OFFSET.N, OFFSET.E]],\n    12: [[OFFSET.W, OFFSET.E]],\n    13: [[OFFSET.S, OFFSET.E]],\n    14: [[OFFSET.W, OFFSET.S]],\n    15: []\n};\nfunction ternaryToIndex(ternary) {\n    return parseInt(ternary, 4);\n}\nconst ISOBANDS_CODE_OFFSET_MAP = {\n    // Below list of cases, follow the same order as in above mentioned wiki page.\n    // Each case has its code on first commented line // T,TR,R,C\n    // where T: Top, TR: Top-right, R: Right and C: current, each will be either 0, 1 or 2\n    // final code is binary representation of above code , where takes 2 digits\n    // for example:  code 2-2-2-1 => 10-10-10-01 => 10101001 => 169\n    // no contours\n    [ternaryToIndex('0000')]: [],\n    [ternaryToIndex('2222')]: [],\n    // single triangle\n    [ternaryToIndex('2221')]: [SW_TRIANGLE],\n    [ternaryToIndex('2212')]: [SE_TRIANGLE],\n    [ternaryToIndex('2122')]: [NE_TRIANGLE],\n    [ternaryToIndex('1222')]: [NW_TRIANGLE],\n    [ternaryToIndex('0001')]: [SW_TRIANGLE],\n    [ternaryToIndex('0010')]: [SE_TRIANGLE],\n    [ternaryToIndex('0100')]: [NE_TRIANGLE],\n    [ternaryToIndex('1000')]: [NW_TRIANGLE],\n    // single trapezoid\n    [ternaryToIndex('2220')]: [SW_TRAPEZOID],\n    [ternaryToIndex('2202')]: [SE_TRAPEZOID],\n    [ternaryToIndex('2022')]: [NE_TRAPEZOID],\n    [ternaryToIndex('0222')]: [NW_TRAPEZOID],\n    [ternaryToIndex('0002')]: [SW_TRAPEZOID],\n    [ternaryToIndex('0020')]: [SE_TRAPEZOID],\n    [ternaryToIndex('0200')]: [NE_TRAPEZOID],\n    [ternaryToIndex('2000')]: [NW_TRAPEZOID],\n    // single rectangle\n    [ternaryToIndex('0011')]: [S_RECTANGLE],\n    [ternaryToIndex('0110')]: [E_RECTANGLE],\n    [ternaryToIndex('1100')]: [N_RECTANGLE],\n    [ternaryToIndex('1001')]: [W_RECTANGLE],\n    [ternaryToIndex('2211')]: [S_RECTANGLE],\n    [ternaryToIndex('2112')]: [E_RECTANGLE],\n    [ternaryToIndex('1122')]: [N_RECTANGLE],\n    [ternaryToIndex('1221')]: [W_RECTANGLE],\n    [ternaryToIndex('2200')]: [EW_RECTANGEL],\n    [ternaryToIndex('2002')]: [SN_RECTANGEL],\n    [ternaryToIndex('0022')]: [EW_RECTANGEL],\n    [ternaryToIndex('0220')]: [SN_RECTANGEL],\n    // single square\n    // 1111\n    [ternaryToIndex('1111')]: [SQUARE],\n    // single pentagon\n    [ternaryToIndex('1211')]: [SW_PENTAGON],\n    [ternaryToIndex('2111')]: [SE_PENTAGON],\n    [ternaryToIndex('1112')]: [NE_PENTAGON],\n    [ternaryToIndex('1121')]: [NW_PENTAGON],\n    [ternaryToIndex('1011')]: [SW_PENTAGON],\n    [ternaryToIndex('0111')]: [SE_PENTAGON],\n    [ternaryToIndex('1110')]: [NE_PENTAGON],\n    [ternaryToIndex('1101')]: [NW_PENTAGON],\n    [ternaryToIndex('1200')]: [NW_N_PENTAGON],\n    [ternaryToIndex('0120')]: [NE_E_PENTAGON],\n    [ternaryToIndex('0012')]: [SE_S_PENTAGON],\n    [ternaryToIndex('2001')]: [SW_W_PENTAGON],\n    [ternaryToIndex('1022')]: [NW_N_PENTAGON],\n    [ternaryToIndex('2102')]: [NE_E_PENTAGON],\n    [ternaryToIndex('2210')]: [SE_S_PENTAGON],\n    [ternaryToIndex('0221')]: [SW_W_PENTAGON],\n    [ternaryToIndex('1002')]: [NW_W_PENTAGON],\n    [ternaryToIndex('2100')]: [NE_N_PENTAGON],\n    [ternaryToIndex('0210')]: [SE_E_PENTAGON],\n    [ternaryToIndex('0021')]: [SW_S_PENTAGON],\n    [ternaryToIndex('1220')]: [NW_W_PENTAGON],\n    [ternaryToIndex('0122')]: [NE_N_PENTAGON],\n    [ternaryToIndex('2012')]: [SE_E_PENTAGON],\n    [ternaryToIndex('2201')]: [SW_S_PENTAGON],\n    // single hexagon\n    [ternaryToIndex('0211')]: [S_HEXAGON],\n    [ternaryToIndex('2110')]: [E_HEXAGON],\n    [ternaryToIndex('1102')]: [N_HEXAGON],\n    [ternaryToIndex('1021')]: [W_HEXAGON],\n    [ternaryToIndex('2011')]: [S_HEXAGON],\n    [ternaryToIndex('0112')]: [E_HEXAGON],\n    [ternaryToIndex('1120')]: [N_HEXAGON],\n    [ternaryToIndex('1201')]: [W_HEXAGON],\n    [ternaryToIndex('2101')]: [SW_NE_HEXAGON],\n    [ternaryToIndex('0121')]: [SW_NE_HEXAGON],\n    [ternaryToIndex('1012')]: [NW_SE_HEXAGON],\n    [ternaryToIndex('1210')]: [NW_SE_HEXAGON],\n    // 6-sided polygons based on mean weight\n    // NOTE: merges mean value codes for extreme changes (as per above Wiki doc)\n    [ternaryToIndex('0101')]: {\n        0: [SW_TRIANGLE, NE_TRIANGLE],\n        1: [SW_NE_HEXAGON],\n        2: [SW_NE_HEXAGON]\n    },\n    [ternaryToIndex('1010')]: {\n        0: [NW_TRIANGLE, SE_TRIANGLE],\n        1: [NW_SE_HEXAGON],\n        2: [NW_SE_HEXAGON]\n    },\n    [ternaryToIndex('2121')]: {\n        0: [SW_NE_HEXAGON],\n        1: [SW_NE_HEXAGON],\n        2: [SW_TRIANGLE, NE_TRIANGLE]\n    },\n    [ternaryToIndex('1212')]: {\n        0: [NW_SE_HEXAGON],\n        1: [NW_SE_HEXAGON],\n        2: [NW_TRIANGLE, SE_TRIANGLE]\n    },\n    // 7-sided polygons based on mean weight\n    [ternaryToIndex('2120')]: {\n        0: [NE_HEPTAGON],\n        1: [NE_HEPTAGON],\n        2: [SW_TRAPEZOID, NE_TRIANGLE]\n    },\n    [ternaryToIndex('2021')]: {\n        0: [SW_HEPTAGON],\n        1: [SW_HEPTAGON],\n        2: [SW_TRIANGLE, NE_TRAPEZOID]\n    },\n    [ternaryToIndex('1202')]: {\n        0: [NW_HEPTAGON],\n        1: [NW_HEPTAGON],\n        2: [NW_TRIANGLE, SE_TRAPEZOID]\n    },\n    [ternaryToIndex('0212')]: {\n        0: [SE_HEPTAGON],\n        1: [SE_HEPTAGON],\n        2: [SE_TRIANGLE, NW_TRAPEZOID]\n    },\n    [ternaryToIndex('0102')]: {\n        0: [SW_TRAPEZOID, NE_TRIANGLE],\n        1: [NE_HEPTAGON],\n        2: [NE_HEPTAGON]\n    },\n    [ternaryToIndex('0201')]: {\n        0: [SW_TRIANGLE, NE_TRAPEZOID],\n        1: [SW_HEPTAGON],\n        2: [SW_HEPTAGON]\n    },\n    [ternaryToIndex('1020')]: {\n        0: [NW_TRIANGLE, SE_TRAPEZOID],\n        1: [NW_HEPTAGON],\n        2: [NW_HEPTAGON]\n    },\n    [ternaryToIndex('2010')]: {\n        0: [SE_TRIANGLE, NW_TRAPEZOID],\n        1: [SE_HEPTAGON],\n        2: [SE_HEPTAGON]\n    },\n    // 8-sided polygons based on mean weight\n    [ternaryToIndex('2020')]: {\n        0: [NW_TRAPEZOID, SE_TRAPEZOID],\n        1: [OCTAGON],\n        2: [SW_TRAPEZOID, NE_TRAPEZOID]\n    },\n    [ternaryToIndex('0202')]: {\n        0: [NE_TRAPEZOID, SW_TRAPEZOID],\n        1: [OCTAGON],\n        2: [NW_TRAPEZOID, SE_TRAPEZOID]\n    }\n};\n//# sourceMappingURL=marching-squares-codes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares-codes.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCode: () => (/* binding */ getCode),\n/* harmony export */   getLines: () => (/* binding */ getLines),\n/* harmony export */   getPolygons: () => (/* binding */ getPolygons)\n/* harmony export */ });\n/* harmony import */ var _marching_squares_codes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./marching-squares-codes.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares-codes.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// All utility methods needed to implement Marching Squares algorithm\n// Ref: https://en.wikipedia.org/wiki/Marching_squares\n\n// Utility methods\nfunction getVertexCode(weight, threshold) {\n    // threshold must be a single value or a range (array of size 2)\n    if (Number.isNaN(weight)) {\n        return 0;\n    }\n    // Iso-bands\n    if (Array.isArray(threshold)) {\n        if (weight < threshold[0]) {\n            return 0;\n        }\n        return weight < threshold[1] ? 1 : 2;\n    }\n    // Iso-lines\n    return weight >= threshold ? 1 : 0;\n}\n// Returns marching square code for given cell\n/* eslint-disable complexity, max-statements*/\nfunction getCode(opts) {\n    // Assumptions\n    // Origin is on bottom-left , and X increase to right, Y to top\n    // When processing one cell, we process 4 cells, by extending row to top and on column to right\n    // to create a 2X2 cell grid\n    const { x, y, xRange, yRange, getValue, threshold } = opts;\n    const isLeftBoundary = x < xRange[0];\n    const isRightBoundary = x >= xRange[1] - 1;\n    const isBottomBoundary = y < yRange[0];\n    const isTopBoundary = y >= yRange[1] - 1;\n    const isBoundary = isLeftBoundary || isRightBoundary || isBottomBoundary || isTopBoundary;\n    let weights = 0;\n    let current;\n    let right;\n    let top;\n    let topRight;\n    // TOP\n    if (isLeftBoundary || isTopBoundary) {\n        top = 0;\n    }\n    else {\n        const w = getValue(x, y + 1);\n        top = getVertexCode(w, threshold);\n        weights += w;\n    }\n    // TOP-RIGHT\n    if (isRightBoundary || isTopBoundary) {\n        topRight = 0;\n    }\n    else {\n        const w = getValue(x + 1, y + 1);\n        topRight = getVertexCode(w, threshold);\n        weights += w;\n    }\n    // RIGHT\n    if (isRightBoundary || isBottomBoundary) {\n        right = 0;\n    }\n    else {\n        const w = getValue(x + 1, y);\n        right = getVertexCode(w, threshold);\n        weights += w;\n    }\n    // CURRENT\n    if (isLeftBoundary || isBottomBoundary) {\n        current = 0;\n    }\n    else {\n        const w = getValue(x, y);\n        current = getVertexCode(w, threshold);\n        weights += w;\n    }\n    let code = -1;\n    if (Number.isFinite(threshold)) {\n        code = (top << 3) | (topRight << 2) | (right << 1) | current;\n    }\n    if (Array.isArray(threshold)) {\n        code = (top << 6) | (topRight << 4) | (right << 2) | current;\n    }\n    let meanCode = 0;\n    // meanCode is only needed for saddle cases, and they should\n    // only occur when we are not processing a cell on boundary\n    // because when on a boundary either, bottom-row, top-row, left-column or right-column will have both 0 codes\n    if (!isBoundary) {\n        meanCode = getVertexCode(weights / 4, threshold);\n    }\n    return { code, meanCode };\n}\n/* eslint-enable complexity, max-statements*/\n// Returns intersection vertices for given cellindex\n// [x, y] refers current marching cell, reference vertex is always top-right corner\nfunction getPolygons(opts) {\n    const { x, y, z, code, meanCode } = opts;\n    let offsets = _marching_squares_codes_js__WEBPACK_IMPORTED_MODULE_0__.ISOBANDS_CODE_OFFSET_MAP[code];\n    // handle saddle cases\n    if (!Array.isArray(offsets)) {\n        offsets = offsets[meanCode];\n    }\n    // Reference vertex is at top-right move to top-right corner\n    const rX = x + 1;\n    const rY = y + 1;\n    // offsets format\n    // [[1A, 1B, 1C, ...], [2A, 2B, 2C, ...]],\n    // vertices format\n    // [\n    //   [[x1A, y1A], [x1B, y1B], [x1C, y1C] ... ],\n    //        ...\n    // ]\n    const polygons = [];\n    offsets.forEach(polygonOffsets => {\n        const polygon = [];\n        polygonOffsets.forEach(xyOffset => {\n            const vX = rX + xyOffset[0];\n            const vY = rY + xyOffset[1];\n            polygon.push([vX, vY, z]);\n        });\n        polygons.push(polygon);\n    });\n    return polygons;\n}\n// Returns intersection vertices for given cellindex\n// [x, y] refers current marching cell, reference vertex is always top-right corner\nfunction getLines(opts) {\n    const { x, y, z, code, meanCode } = opts;\n    let offsets = _marching_squares_codes_js__WEBPACK_IMPORTED_MODULE_0__.ISOLINES_CODE_OFFSET_MAP[code];\n    // handle saddle cases\n    if (!Array.isArray(offsets)) {\n        offsets = offsets[meanCode];\n    }\n    // Reference vertex is at top-right move to top-right corner\n    const rX = x + 1;\n    const rY = y + 1;\n    // offsets format\n    // [[1A, 1B], [2A, 2B]],\n    // vertices format\n    // [[x1A, y1A], [x1B, y1B], [x2A, x2B], ...],\n    const lines = [];\n    offsets.forEach(xyOffsets => {\n        xyOffsets.forEach(offset => {\n            const vX = rX + offset[0];\n            const vY = rY + offset[1];\n            lines.push([vX, vY, z]);\n        });\n    });\n    return lines;\n}\n//# sourceMappingURL=marching-squares.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/marching-squares.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/value-reader.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/value-reader.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAggregatorValueReader: () => (/* binding */ getAggregatorValueReader)\n/* harmony export */ });\n/* harmony import */ var _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/aggregator/index.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/gpu-aggregator/webgl-aggregator.js\");\n/* harmony import */ var _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/aggregator/index.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/common/aggregator/cpu-aggregator/cpu-aggregator.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/** Returns an accessor to the aggregated values from bin id */\nfunction getAggregatorValueReader(opts) {\n    const { aggregator, binIdRange, channel } = opts;\n    if (aggregator instanceof _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_0__.WebGLAggregator) {\n        const buffer = aggregator.getResult(channel)?.buffer;\n        if (buffer) {\n            const values = new Float32Array(buffer.readSyncWebGL().buffer);\n            return getWebGLAggregatorValueReader(values, binIdRange);\n        }\n    }\n    if (aggregator instanceof _common_aggregator_index_js__WEBPACK_IMPORTED_MODULE_1__.CPUAggregator) {\n        const values = aggregator.getResult(channel)?.value;\n        const ids = aggregator.getBins()?.value;\n        if (ids && values) {\n            return getCPUAggregatorValueReader(values, ids, aggregator.binCount);\n        }\n    }\n    return null;\n}\nfunction getWebGLAggregatorValueReader(values, binIdRange) {\n    const [[minX, maxX], [minY, maxY]] = binIdRange;\n    const width = maxX - minX;\n    const height = maxY - minY;\n    return (x, y) => {\n        x -= minX;\n        y -= minY;\n        if (x < 0 || x >= width || y < 0 || y >= height) {\n            return NaN;\n        }\n        return values[y * width + x];\n    };\n}\nfunction getCPUAggregatorValueReader(values, ids, count) {\n    const idMap = {};\n    for (let i = 0; i < count; i++) {\n        const x = ids[i * 2];\n        const y = ids[i * 2 + 1];\n        idMap[x] = idMap[x] || {};\n        idMap[x][y] = values[i];\n    }\n    return (x, y) => idMap[x]?.[y] ?? NaN;\n}\n//# sourceMappingURL=value-reader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29udG91ci1sYXllci92YWx1ZS1yZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvY29udG91ci1sYXllci92YWx1ZS1yZWFkZXIuanM/NWJiZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZWNrLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmltcG9ydCB7IENQVUFnZ3JlZ2F0b3IsIFdlYkdMQWdncmVnYXRvciB9IGZyb20gXCIuLi9jb21tb24vYWdncmVnYXRvci9pbmRleC5qc1wiO1xuLyoqIFJldHVybnMgYW4gYWNjZXNzb3IgdG8gdGhlIGFnZ3JlZ2F0ZWQgdmFsdWVzIGZyb20gYmluIGlkICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWdncmVnYXRvclZhbHVlUmVhZGVyKG9wdHMpIHtcbiAgICBjb25zdCB7IGFnZ3JlZ2F0b3IsIGJpbklkUmFuZ2UsIGNoYW5uZWwgfSA9IG9wdHM7XG4gICAgaWYgKGFnZ3JlZ2F0b3IgaW5zdGFuY2VvZiBXZWJHTEFnZ3JlZ2F0b3IpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gYWdncmVnYXRvci5nZXRSZXN1bHQoY2hhbm5lbCk/LmJ1ZmZlcjtcbiAgICAgICAgaWYgKGJ1ZmZlcikge1xuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gbmV3IEZsb2F0MzJBcnJheShidWZmZXIucmVhZFN5bmNXZWJHTCgpLmJ1ZmZlcik7XG4gICAgICAgICAgICByZXR1cm4gZ2V0V2ViR0xBZ2dyZWdhdG9yVmFsdWVSZWFkZXIodmFsdWVzLCBiaW5JZFJhbmdlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoYWdncmVnYXRvciBpbnN0YW5jZW9mIENQVUFnZ3JlZ2F0b3IpIHtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gYWdncmVnYXRvci5nZXRSZXN1bHQoY2hhbm5lbCk/LnZhbHVlO1xuICAgICAgICBjb25zdCBpZHMgPSBhZ2dyZWdhdG9yLmdldEJpbnMoKT8udmFsdWU7XG4gICAgICAgIGlmIChpZHMgJiYgdmFsdWVzKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0Q1BVQWdncmVnYXRvclZhbHVlUmVhZGVyKHZhbHVlcywgaWRzLCBhZ2dyZWdhdG9yLmJpbkNvdW50KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldFdlYkdMQWdncmVnYXRvclZhbHVlUmVhZGVyKHZhbHVlcywgYmluSWRSYW5nZSkge1xuICAgIGNvbnN0IFtbbWluWCwgbWF4WF0sIFttaW5ZLCBtYXhZXV0gPSBiaW5JZFJhbmdlO1xuICAgIGNvbnN0IHdpZHRoID0gbWF4WCAtIG1pblg7XG4gICAgY29uc3QgaGVpZ2h0ID0gbWF4WSAtIG1pblk7XG4gICAgcmV0dXJuICh4LCB5KSA9PiB7XG4gICAgICAgIHggLT0gbWluWDtcbiAgICAgICAgeSAtPSBtaW5ZO1xuICAgICAgICBpZiAoeCA8IDAgfHwgeCA+PSB3aWR0aCB8fCB5IDwgMCB8fCB5ID49IGhlaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuIE5hTjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWVzW3kgKiB3aWR0aCArIHhdO1xuICAgIH07XG59XG5mdW5jdGlvbiBnZXRDUFVBZ2dyZWdhdG9yVmFsdWVSZWFkZXIodmFsdWVzLCBpZHMsIGNvdW50KSB7XG4gICAgY29uc3QgaWRNYXAgPSB7fTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICAgICAgY29uc3QgeCA9IGlkc1tpICogMl07XG4gICAgICAgIGNvbnN0IHkgPSBpZHNbaSAqIDIgKyAxXTtcbiAgICAgICAgaWRNYXBbeF0gPSBpZE1hcFt4XSB8fCB7fTtcbiAgICAgICAgaWRNYXBbeF1beV0gPSB2YWx1ZXNbaV07XG4gICAgfVxuICAgIHJldHVybiAoeCwgeSkgPT4gaWRNYXBbeF0/Llt5XSA/PyBOYU47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWx1ZS1yZWFkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/value-reader.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/core/dist/lib/composite-layer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/lib/composite-layer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _layer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layer.js */ \"./node_modules/@deck.gl/core/dist/lib/layer.js\");\n/* harmony import */ var _debug_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug/index.js */ \"./node_modules/@deck.gl/core/dist/debug/index.js\");\n/* harmony import */ var _utils_flatten_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/flatten.js */ \"./node_modules/@deck.gl/core/dist/utils/flatten.js\");\n/* harmony import */ var _lifecycle_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lifecycle/constants.js */ \"./node_modules/@deck.gl/core/dist/lifecycle/constants.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\nclass CompositeLayer extends _layer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /** `true` if this layer renders other layers */\n    get isComposite() {\n        return true;\n    }\n    /** `true` if the layer renders to screen */\n    get isDrawable() {\n        return false;\n    }\n    /** Returns true if all async resources are loaded */\n    get isLoaded() {\n        return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n    }\n    /** Return last rendered sub layers */\n    getSubLayers() {\n        return (this.internalState && this.internalState.subLayers) || [];\n    }\n    // initializeState is usually not needed for composite layers\n    // Provide empty definition to disable check for missing definition\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    initializeState(context) { }\n    /** Updates selected state members and marks the composite layer to need rerender */\n    setState(updateObject) {\n        super.setState(updateObject);\n        // Trigger a layer update\n        // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n        // they are executed during different lifecycles.\n        // draw can be called without calling updateState (e.g. most viewport changes),\n        // while renderLayers can only be called during a recursive layer update.\n        this.setNeedsUpdate();\n    }\n    /** called to augment the info object that is bubbled up from a sublayer\n        override Layer.getPickingInfo() because decoding / setting uniform do\n        not apply to a composite layer. */\n    getPickingInfo({ info }) {\n        const { object } = info;\n        const isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n        if (!isDataWrapped) {\n            return info;\n        }\n        // override object with picked data\n        info.object = object.__source.object;\n        info.index = object.__source.index;\n        return info;\n    }\n    /**\n     * Filters sub layers at draw time. Return true if the sub layer should be drawn.\n     */\n    filterSubLayer(context) {\n        return true;\n    }\n    /** Returns true if sub layer needs to be rendered */\n    shouldRenderSubLayer(subLayerId, data) {\n        return data && data.length;\n    }\n    /** Returns sub layer class for a specific sublayer */\n    getSubLayerClass(subLayerId, DefaultLayerClass) {\n        const { _subLayerProps: overridingProps } = this.props;\n        return ((overridingProps &&\n            overridingProps[subLayerId] &&\n            overridingProps[subLayerId].type) ||\n            DefaultLayerClass);\n    }\n    /** When casting user data into another format to pass to sublayers,\n        add reference to the original object and object index */\n    getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n        // @ts-ignore (TS2339) adding undefined property\n        row.__source = {\n            parent: this,\n            object: sourceObject,\n            index: sourceObjectIndex\n        };\n        return row;\n    }\n    /** Some composite layers cast user data into another format before passing to sublayers\n      We need to unwrap them before calling the accessor so that they see the original data\n      objects */\n    getSubLayerAccessor(accessor) {\n        if (typeof accessor === 'function') {\n            const objectInfo = {\n                index: -1,\n                // @ts-ignore accessing resolved data\n                data: this.props.data,\n                target: []\n            };\n            return (x, i) => {\n                if (x && x.__source) {\n                    objectInfo.index = x.__source.index;\n                    // @ts-ignore (TS2349) Out is never a function\n                    return accessor(x.__source.object, objectInfo);\n                }\n                // @ts-ignore (TS2349) Out is never a function\n                return accessor(x, i);\n            };\n        }\n        return accessor;\n    }\n    /** Returns sub layer props for a specific sublayer */\n    // eslint-disable-next-line complexity\n    getSubLayerProps(sublayerProps = {}) {\n        const { opacity, pickable, visible, parameters, getPolygonOffset, highlightedObjectIndex, autoHighlight, highlightColor, coordinateSystem, coordinateOrigin, wrapLongitude, positionFormat, modelMatrix, extensions, fetch, operation, _subLayerProps: overridingProps } = this.props;\n        const newProps = {\n            id: '',\n            updateTriggers: {},\n            opacity,\n            pickable,\n            visible,\n            parameters,\n            getPolygonOffset,\n            highlightedObjectIndex,\n            autoHighlight,\n            highlightColor,\n            coordinateSystem,\n            coordinateOrigin,\n            wrapLongitude,\n            positionFormat,\n            modelMatrix,\n            extensions,\n            fetch,\n            operation\n        };\n        const overridingSublayerProps = overridingProps && sublayerProps.id && overridingProps[sublayerProps.id];\n        const overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n        const sublayerId = sublayerProps.id || 'sublayer';\n        if (overridingSublayerProps) {\n            const propTypes = this.props[_lifecycle_constants_js__WEBPACK_IMPORTED_MODULE_1__.PROP_TYPES_SYMBOL];\n            const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n            for (const key in overridingSublayerProps) {\n                const propType = subLayerPropTypes[key] || propTypes[key];\n                // eslint-disable-next-line\n                if (propType && propType.type === 'accessor') {\n                    overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n                }\n            }\n        }\n        Object.assign(newProps, sublayerProps, \n        // experimental feature that allows users to override sublayer props via parent layer prop\n        overridingSublayerProps);\n        newProps.id = `${this.props.id}-${sublayerId}`;\n        newProps.updateTriggers = {\n            all: this.props.updateTriggers?.all,\n            ...sublayerProps.updateTriggers,\n            ...overridingSublayerTriggers\n        };\n        // Pass through extension props\n        // @ts-ignore (TS2532) extensions is always defined after merging with default props\n        for (const extension of extensions) {\n            const passThroughProps = extension.getSubLayerProps.call(this, extension);\n            if (passThroughProps) {\n                Object.assign(newProps, passThroughProps, {\n                    updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n                });\n            }\n        }\n        return newProps;\n    }\n    /** Update sub layers to highlight the hovered object */\n    _updateAutoHighlight(info) {\n        for (const layer of this.getSubLayers()) {\n            layer.updateAutoHighlight(info);\n        }\n    }\n    /** Override base Layer method */\n    _getAttributeManager() {\n        return null;\n    }\n    /** (Internal) Called after an update to rerender sub layers */\n    _postUpdate(updateParams, forceUpdate) {\n        // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n        let subLayers = this.internalState.subLayers;\n        const shouldUpdate = !subLayers || this.needsUpdate();\n        if (shouldUpdate) {\n            const subLayersList = this.renderLayers();\n            // Flatten the returned array, removing any null, undefined or false\n            // this allows layers to render sublayers conditionally\n            // (see CompositeLayer.renderLayers docs)\n            subLayers = (0,_utils_flatten_js__WEBPACK_IMPORTED_MODULE_2__.flatten)(subLayersList, Boolean);\n            // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n            this.internalState.subLayers = subLayers;\n        }\n        (0,_debug_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n        // populate reference to parent layer (this layer)\n        // NOTE: needs to be done even when reusing layers as the parent may have changed\n        for (const layer of subLayers) {\n            layer.parent = this;\n        }\n    }\n}\nCompositeLayer.layerName = 'CompositeLayer';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CompositeLayer);\n//# sourceMappingURL=composite-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/core/dist/lib/composite-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/shadertools */ \"./node_modules/@luma.gl/shadertools/dist/modules/engine/picking/picking.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    ..._luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__.picking,\n    defaultUniforms: { ..._luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__.picking.defaultUniforms, useFloatColors: false },\n    inject: {\n        'vs:DECKGL_FILTER_GL_POSITION': `\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  `,\n        'vs:DECKGL_FILTER_COLOR': `\n  picking_setPickingColor(geometry.pickingColor);\n  `,\n        'fs:DECKGL_FILTER_COLOR': {\n            order: 99,\n            injection: `\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    `\n        }\n    }\n});\n//# sourceMappingURL=picking.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L3NoYWRlcmxpYi9waWNraW5nL3BpY2tpbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L3NoYWRlcmxpYi9waWNraW5nL3BpY2tpbmcuanM/NzhhZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZWNrLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmltcG9ydCB7IHBpY2tpbmcgfSBmcm9tICdAbHVtYS5nbC9zaGFkZXJ0b29scyc7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgLi4ucGlja2luZyxcbiAgICBkZWZhdWx0VW5pZm9ybXM6IHsgLi4ucGlja2luZy5kZWZhdWx0VW5pZm9ybXMsIHVzZUZsb2F0Q29sb3JzOiBmYWxzZSB9LFxuICAgIGluamVjdDoge1xuICAgICAgICAndnM6REVDS0dMX0ZJTFRFUl9HTF9QT1NJVElPTic6IGBcbiAgICAvLyBmb3IgcGlja2luZyBkZXB0aCB2YWx1ZXNcbiAgICBwaWNraW5nX3NldFBpY2tpbmdBdHRyaWJ1dGUocG9zaXRpb24ueiAvIHBvc2l0aW9uLncpO1xuICBgLFxuICAgICAgICAndnM6REVDS0dMX0ZJTFRFUl9DT0xPUic6IGBcbiAgcGlja2luZ19zZXRQaWNraW5nQ29sb3IoZ2VvbWV0cnkucGlja2luZ0NvbG9yKTtcbiAgYCxcbiAgICAgICAgJ2ZzOkRFQ0tHTF9GSUxURVJfQ09MT1InOiB7XG4gICAgICAgICAgICBvcmRlcjogOTksXG4gICAgICAgICAgICBpbmplY3Rpb246IGBcbiAgLy8gdXNlIGhpZ2hsaWdodCBjb2xvciBpZiB0aGlzIGZyYWdtZW50IGJlbG9uZ3MgdG8gdGhlIHNlbGVjdGVkIG9iamVjdC5cbiAgY29sb3IgPSBwaWNraW5nX2ZpbHRlckhpZ2hsaWdodENvbG9yKGNvbG9yKTtcblxuICAvLyB1c2UgcGlja2luZyBjb2xvciBpZiByZW5kZXJpbmcgdG8gcGlja2luZyBGQk8uXG4gIGNvbG9yID0gcGlja2luZ19maWx0ZXJQaWNraW5nQ29sb3IoY29sb3IpO1xuICAgIGBcbiAgICAgICAgfVxuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1waWNraW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/core/dist/utils/tesselator.js":
/*!*************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/utils/tesselator.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tesselator)\n/* harmony export */ });\n/* harmony import */ var _iterable_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iterable-utils.js */ \"./node_modules/@deck.gl/core/dist/utils/iterable-utils.js\");\n/* harmony import */ var _typed_array_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typed-array-manager.js */ \"./node_modules/@deck.gl/core/dist/utils/typed-array-manager.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@deck.gl/core/dist/utils/assert.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/adapter/resources/buffer.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n\nclass Tesselator {\n    constructor(opts) {\n        this.indexStarts = [0];\n        this.vertexStarts = [0];\n        this.vertexCount = 0;\n        this.instanceCount = 0;\n        const { attributes = {} } = opts;\n        this.typedArrayManager = _typed_array_manager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        this.attributes = {};\n        this._attributeDefs = attributes;\n        this.opts = opts;\n        this.updateGeometry(opts);\n    }\n    /* Public methods */\n    updateGeometry(opts) {\n        Object.assign(this.opts, opts);\n        const { data, buffers = {}, getGeometry, geometryBuffer, positionFormat, dataChanged, normalize = true } = this.opts;\n        this.data = data;\n        this.getGeometry = getGeometry;\n        this.positionSize =\n            // @ts-ignore (2339) when geometryBuffer is a luma Buffer, size falls back to positionFormat\n            (geometryBuffer && geometryBuffer.size) || (positionFormat === 'XY' ? 2 : 3);\n        this.buffers = buffers;\n        this.normalize = normalize;\n        // Handle external logical value\n        if (geometryBuffer) {\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(data.startIndices); // binary data missing startIndices\n            this.getGeometry = this.getGeometryFromBuffer(geometryBuffer);\n            if (!normalize) {\n                // skip packing and set attribute value directly\n                // TODO - avoid mutating user-provided object\n                buffers.vertexPositions = geometryBuffer;\n            }\n        }\n        this.geometryBuffer = buffers.vertexPositions;\n        if (Array.isArray(dataChanged)) {\n            // is partial update\n            for (const dataRange of dataChanged) {\n                this._rebuildGeometry(dataRange);\n            }\n        }\n        else {\n            this._rebuildGeometry();\n        }\n    }\n    updatePartialGeometry({ startRow, endRow }) {\n        this._rebuildGeometry({ startRow, endRow });\n    }\n    getGeometryFromBuffer(geometryBuffer) {\n        const value = geometryBuffer.value || geometryBuffer;\n        if (!ArrayBuffer.isView(value)) {\n            // Cannot read binary geometries\n            return null;\n        }\n        // @ts-ignore (2322) NumericArray not assignable to GeometryT\n        return (0,_iterable_utils_js__WEBPACK_IMPORTED_MODULE_2__.getAccessorFromBuffer)(value, {\n            size: this.positionSize,\n            offset: geometryBuffer.offset,\n            stride: geometryBuffer.stride,\n            startIndices: this.data.startIndices\n        });\n    }\n    /* Private utility methods */\n    _allocate(instanceCount, copy) {\n        // allocate attributes\n        const { attributes, buffers, _attributeDefs, typedArrayManager } = this;\n        for (const name in _attributeDefs) {\n            if (name in buffers) {\n                // Use external buffer\n                typedArrayManager.release(attributes[name]);\n                attributes[name] = null;\n            }\n            else {\n                const def = _attributeDefs[name];\n                // If dataRange is supplied, this is a partial update.\n                // In case we need to reallocate the typed array, it will need the old values copied\n                // before performing partial update.\n                def.copy = copy;\n                attributes[name] = typedArrayManager.allocate(attributes[name], instanceCount, def);\n            }\n        }\n    }\n    /**\n     * Visit all objects\n     * `data` is expected to be an iterable consistent with the base Layer expectation\n     */\n    _forEachGeometry(visitor, startRow, endRow) {\n        const { data, getGeometry } = this;\n        const { iterable, objectInfo } = (0,_iterable_utils_js__WEBPACK_IMPORTED_MODULE_2__.createIterable)(data, startRow, endRow);\n        for (const object of iterable) {\n            objectInfo.index++;\n            const geometry = getGeometry ? getGeometry(object, objectInfo) : null;\n            visitor(geometry, objectInfo.index);\n        }\n    }\n    /* eslint-disable complexity,max-statements */\n    _rebuildGeometry(dataRange) {\n        if (!this.data) {\n            return;\n        }\n        let { indexStarts, vertexStarts, instanceCount } = this;\n        const { data, geometryBuffer } = this;\n        const { startRow = 0, endRow = Infinity } = dataRange || {};\n        const normalizedData = {};\n        if (!dataRange) {\n            // Full update - regenerate buffer layout from scratch\n            indexStarts = [0];\n            vertexStarts = [0];\n        }\n        if (this.normalize || !geometryBuffer) {\n            this._forEachGeometry((geometry, dataIndex) => {\n                const normalizedGeometry = geometry && this.normalizeGeometry(geometry);\n                normalizedData[dataIndex] = normalizedGeometry;\n                vertexStarts[dataIndex + 1] =\n                    vertexStarts[dataIndex] +\n                        (normalizedGeometry ? this.getGeometrySize(normalizedGeometry) : 0);\n            }, startRow, endRow);\n            // count instances\n            instanceCount = vertexStarts[vertexStarts.length - 1];\n        }\n        else {\n            // assume user provided data is already normalized\n            vertexStarts = data.startIndices;\n            instanceCount = vertexStarts[data.length] || 0;\n            if (ArrayBuffer.isView(geometryBuffer)) {\n                instanceCount = instanceCount || geometryBuffer.length / this.positionSize;\n            }\n            else if (geometryBuffer instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__.Buffer) {\n                const byteStride = this.positionSize * 4;\n                instanceCount = instanceCount || geometryBuffer.byteLength / byteStride;\n            }\n            else if (geometryBuffer.buffer) {\n                const byteStride = geometryBuffer.stride || this.positionSize * 4;\n                instanceCount = instanceCount || geometryBuffer.buffer.byteLength / byteStride;\n            }\n            else if (geometryBuffer.value) {\n                const bufferValue = geometryBuffer.value;\n                const elementStride = \n                // @ts-ignore (2339) if stride is not specified, will fall through to positionSize\n                geometryBuffer.stride / bufferValue.BYTES_PER_ELEMENT || this.positionSize;\n                instanceCount = instanceCount || bufferValue.length / elementStride;\n            }\n        }\n        // allocate attributes\n        this._allocate(instanceCount, Boolean(dataRange));\n        this.indexStarts = indexStarts;\n        this.vertexStarts = vertexStarts;\n        this.instanceCount = instanceCount;\n        // @ts-ignore (2739) context will be populated in the loop\n        const context = {};\n        this._forEachGeometry((geometry, dataIndex) => {\n            const normalizedGeometry = normalizedData[dataIndex] || geometry;\n            context.vertexStart = vertexStarts[dataIndex];\n            context.indexStart = indexStarts[dataIndex];\n            const vertexEnd = dataIndex < vertexStarts.length - 1 ? vertexStarts[dataIndex + 1] : instanceCount;\n            context.geometrySize = vertexEnd - vertexStarts[dataIndex];\n            context.geometryIndex = dataIndex;\n            this.updateGeometryAttributes(normalizedGeometry, context);\n        }, startRow, endRow);\n        this.vertexCount = indexStarts[indexStarts.length - 1];\n    }\n}\n//# sourceMappingURL=tesselator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/core/dist/utils/tesselator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/path-layer/path-layer-fragment.glsl.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/path-layer/path-layer-fragment.glsl.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`\\\n#version 300 es\n#define SHADER_NAME path-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 vCornerOffset;\nin float vMiterLength;\nin vec2 vPathPosition;\nin float vPathLength;\nin float vJointType;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vPathPosition;\nif (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\nif (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\ndiscard;\n}\nif (vJointType < 0.5 && vMiterLength > path.miterLimit + 1.0) {\ndiscard;\n}\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`);\n//# sourceMappingURL=path-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvcGF0aC1sYXllci9wYXRoLWxheWVyLWZyYWdtZW50Lmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L3BhdGgtbGF5ZXIvcGF0aC1sYXllci1mcmFnbWVudC5nbHNsLmpzP2U2MmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5leHBvcnQgZGVmYXVsdCBgXFxcbiN2ZXJzaW9uIDMwMCBlc1xuI2RlZmluZSBTSEFERVJfTkFNRSBwYXRoLWxheWVyLWZyYWdtZW50LXNoYWRlclxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xuaW4gdmVjNCB2Q29sb3I7XG5pbiB2ZWMyIHZDb3JuZXJPZmZzZXQ7XG5pbiBmbG9hdCB2TWl0ZXJMZW5ndGg7XG5pbiB2ZWMyIHZQYXRoUG9zaXRpb247XG5pbiBmbG9hdCB2UGF0aExlbmd0aDtcbmluIGZsb2F0IHZKb2ludFR5cGU7XG5vdXQgdmVjNCBmcmFnQ29sb3I7XG52b2lkIG1haW4odm9pZCkge1xuZ2VvbWV0cnkudXYgPSB2UGF0aFBvc2l0aW9uO1xuaWYgKHZQYXRoUG9zaXRpb24ueSA8IDAuMCB8fCB2UGF0aFBvc2l0aW9uLnkgPiB2UGF0aExlbmd0aCkge1xuaWYgKHZKb2ludFR5cGUgPiAwLjUgJiYgbGVuZ3RoKHZDb3JuZXJPZmZzZXQpID4gMS4wKSB7XG5kaXNjYXJkO1xufVxuaWYgKHZKb2ludFR5cGUgPCAwLjUgJiYgdk1pdGVyTGVuZ3RoID4gcGF0aC5taXRlckxpbWl0ICsgMS4wKSB7XG5kaXNjYXJkO1xufVxufVxuZnJhZ0NvbG9yID0gdkNvbG9yO1xuREVDS0dMX0ZJTFRFUl9DT0xPUihmcmFnQ29sb3IsIGdlb21ldHJ5KTtcbn1cbmA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLWxheWVyLWZyYWdtZW50Lmdsc2wuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/path-layer/path-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/path-layer/path-layer-uniforms.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/path-layer/path-layer-uniforms.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathUniforms: () => (/* binding */ pathUniforms)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = `\\\nuniform pathUniforms {\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  float jointType;\n  float capType;\n  float miterLimit;\n  bool billboard;\n  highp int widthUnits;\n} path;\n`;\nconst pathUniforms = {\n    name: 'path',\n    vs: uniformBlock,\n    fs: uniformBlock,\n    uniformTypes: {\n        widthScale: 'f32',\n        widthMinPixels: 'f32',\n        widthMaxPixels: 'f32',\n        jointType: 'f32',\n        capType: 'f32',\n        miterLimit: 'f32',\n        billboard: 'f32',\n        widthUnits: 'i32'\n    }\n};\n//# sourceMappingURL=path-layer-uniforms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvcGF0aC1sYXllci9wYXRoLWxheWVyLXVuaWZvcm1zLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvcGF0aC1sYXllci9wYXRoLWxheWVyLXVuaWZvcm1zLmpzPzQ1YzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5jb25zdCB1bmlmb3JtQmxvY2sgPSBgXFxcbnVuaWZvcm0gcGF0aFVuaWZvcm1zIHtcbiAgZmxvYXQgd2lkdGhTY2FsZTtcbiAgZmxvYXQgd2lkdGhNaW5QaXhlbHM7XG4gIGZsb2F0IHdpZHRoTWF4UGl4ZWxzO1xuICBmbG9hdCBqb2ludFR5cGU7XG4gIGZsb2F0IGNhcFR5cGU7XG4gIGZsb2F0IG1pdGVyTGltaXQ7XG4gIGJvb2wgYmlsbGJvYXJkO1xuICBoaWdocCBpbnQgd2lkdGhVbml0cztcbn0gcGF0aDtcbmA7XG5leHBvcnQgY29uc3QgcGF0aFVuaWZvcm1zID0ge1xuICAgIG5hbWU6ICdwYXRoJyxcbiAgICB2czogdW5pZm9ybUJsb2NrLFxuICAgIGZzOiB1bmlmb3JtQmxvY2ssXG4gICAgdW5pZm9ybVR5cGVzOiB7XG4gICAgICAgIHdpZHRoU2NhbGU6ICdmMzInLFxuICAgICAgICB3aWR0aE1pblBpeGVsczogJ2YzMicsXG4gICAgICAgIHdpZHRoTWF4UGl4ZWxzOiAnZjMyJyxcbiAgICAgICAgam9pbnRUeXBlOiAnZjMyJyxcbiAgICAgICAgY2FwVHlwZTogJ2YzMicsXG4gICAgICAgIG1pdGVyTGltaXQ6ICdmMzInLFxuICAgICAgICBiaWxsYm9hcmQ6ICdmMzInLFxuICAgICAgICB3aWR0aFVuaXRzOiAnaTMyJ1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLWxheWVyLXVuaWZvcm1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/path-layer/path-layer-uniforms.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/path-layer/path-layer-vertex.glsl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/path-layer/path-layer-vertex.glsl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`\\\n#version 300 es\n#define SHADER_NAME path-layer-vertex-shader\nin vec2 positions;\nin float instanceTypes;\nin vec3 instanceStartPositions;\nin vec3 instanceEndPositions;\nin vec3 instanceLeftPositions;\nin vec3 instanceRightPositions;\nin vec3 instanceLeftPositions64Low;\nin vec3 instanceStartPositions64Low;\nin vec3 instanceEndPositions64Low;\nin vec3 instanceRightPositions64Low;\nin float instanceStrokeWidths;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nuniform float opacity;\nout vec4 vColor;\nout vec2 vCornerOffset;\nout float vMiterLength;\nout vec2 vPathPosition;\nout float vPathLength;\nout float vJointType;\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\nfloat flipIfTrue(bool flag) {\nreturn -(float(flag) * 2. - 1.);\n}\nvec3 getLineJoinOffset(\nvec3 prevPoint, vec3 currPoint, vec3 nextPoint,\nvec2 width\n) {\nbool isEnd = positions.x > 0.0;\nfloat sideOfPath = positions.y;\nfloat isJoint = float(sideOfPath == 0.0);\nvec3 deltaA3 = (currPoint - prevPoint);\nvec3 deltaB3 = (nextPoint - currPoint);\nmat3 rotationMatrix;\nbool needsRotation = !path.billboard && project_needs_rotation(currPoint, rotationMatrix);\nif (needsRotation) {\ndeltaA3 = deltaA3 * rotationMatrix;\ndeltaB3 = deltaB3 * rotationMatrix;\n}\nvec2 deltaA = deltaA3.xy / width;\nvec2 deltaB = deltaB3.xy / width;\nfloat lenA = length(deltaA);\nfloat lenB = length(deltaB);\nvec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\nvec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\nvec2 perpA = vec2(-dirA.y, dirA.x);\nvec2 perpB = vec2(-dirB.y, dirB.x);\nvec2 tangent = dirA + dirB;\ntangent = length(tangent) > 0. ? normalize(tangent) : perpA;\nvec2 miterVec = vec2(-tangent.y, tangent.x);\nvec2 dir = isEnd ? dirA : dirB;\nvec2 perp = isEnd ? perpA : perpB;\nfloat L = isEnd ? lenA : lenB;\nfloat sinHalfA = abs(dot(miterVec, perp));\nfloat cosHalfA = abs(dot(dirA, miterVec));\nfloat turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\nfloat cornerPosition = sideOfPath * turnDirection;\nfloat miterSize = 1.0 / max(sinHalfA, EPSILON);\nmiterSize = mix(\nmin(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\nmiterSize,\nstep(0.0, cornerPosition)\n);\nvec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n* (sideOfPath + isJoint * turnDirection);\nbool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\nbool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\nbool isCap = isStartCap || isEndCap;\nif (isCap) {\noffsetVec = mix(perp * sideOfPath, dir * path.capType * 4.0 * flipIfTrue(isStartCap), isJoint);\nvJointType = path.capType;\n} else {\nvJointType = path.jointType;\n}\nvPathLength = L;\nvCornerOffset = offsetVec;\nvMiterLength = dot(vCornerOffset, miterVec * turnDirection);\nvMiterLength = isCap ? isJoint : vMiterLength;\nvec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\nvPathPosition = vec2(\ndot(offsetFromStartOfPath, perp),\ndot(offsetFromStartOfPath, dir)\n);\ngeometry.uv = vPathPosition;\nfloat isValid = step(instanceTypes, 3.5);\nvec3 offset = vec3(offsetVec * width * isValid, 0.0);\nif (needsRotation) {\noffset = rotationMatrix * offset;\n}\nreturn offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\nif (position.w < EPSILON) {\nfloat r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\nposition = refPosition + (position - refPosition) * r;\n}\n}\nvoid main() {\ngeometry.pickingColor = instancePickingColors;\nvColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);\nfloat isEnd = positions.x;\nvec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\nvec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\nvec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\nvec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\nvec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\nvec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\ngeometry.worldPosition = currPosition;\nvec2 widthPixels = vec2(clamp(\nproject_size_to_pixel(instanceStrokeWidths * path.widthScale, path.widthUnits),\npath.widthMinPixels, path.widthMaxPixels) / 2.0);\nvec3 width;\nif (path.billboard) {\nvec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\nvec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\nvec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\nclipLine(prevPositionScreen, currPositionScreen);\nclipLine(nextPositionScreen, currPositionScreen);\nclipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\nwidth = vec3(widthPixels, 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(\nprevPositionScreen.xyz / prevPositionScreen.w,\ncurrPositionScreen.xyz / currPositionScreen.w,\nnextPositionScreen.xyz / nextPositionScreen.w,\nproject_pixel_size_to_clipspace(width.xy)\n);\nDECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\ngl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n} else {\nprevPosition = project_position(prevPosition, prevPosition64Low);\ncurrPosition = project_position(currPosition, currPosition64Low);\nnextPosition = project_position(nextPosition, nextPosition64Low);\nwidth = vec3(project_pixel_size(widthPixels), 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\ngeometry.position = vec4(currPosition + offset, 1.0);\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`);\n//# sourceMappingURL=path-layer-vertex.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/path-layer/path-layer-vertex.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/path-layer/path-layer.js":
/*!********************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/path-layer/path-layer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/lib/constants.js\");\n/* harmony import */ var _luma_gl_engine__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/engine */ \"./node_modules/@luma.gl/engine/dist/geometry/geometry.js\");\n/* harmony import */ var _luma_gl_engine__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/engine */ \"./node_modules/@luma.gl/engine/dist/model/model.js\");\n/* harmony import */ var _path_tesselator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./path-tesselator.js */ \"./node_modules/@deck.gl/layers/dist/path-layer/path-tesselator.js\");\n/* harmony import */ var _path_layer_uniforms_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./path-layer-uniforms.js */ \"./node_modules/@deck.gl/layers/dist/path-layer/path-layer-uniforms.js\");\n/* harmony import */ var _path_layer_vertex_glsl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-layer-vertex.glsl.js */ \"./node_modules/@deck.gl/layers/dist/path-layer/path-layer-vertex.glsl.js\");\n/* harmony import */ var _path_layer_fragment_glsl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-layer-fragment.glsl.js */ \"./node_modules/@deck.gl/layers/dist/path-layer/path-layer-fragment.glsl.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n\n\n\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    widthUnits: 'meters',\n    widthScale: { type: 'number', min: 0, value: 1 },\n    widthMinPixels: { type: 'number', min: 0, value: 0 },\n    widthMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER },\n    jointRounded: false,\n    capRounded: false,\n    miterLimit: { type: 'number', min: 0, value: 4 },\n    billboard: false,\n    _pathType: null,\n    getPath: { type: 'accessor', value: (object) => object.path },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getWidth: { type: 'accessor', value: 1 },\n    // deprecated props\n    rounded: { deprecatedFor: ['jointRounded', 'capRounded'] }\n};\nconst ATTRIBUTE_TRANSITION = {\n    enter: (value, chunk) => {\n        return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n    }\n};\n/** Render lists of coordinate points as extruded polylines with mitering. */\nclass PathLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    getShaders() {\n        return super.getShaders({ vs: _path_layer_vertex_glsl_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], fs: _path_layer_fragment_glsl_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"], _path_layer_uniforms_js__WEBPACK_IMPORTED_MODULE_5__.pathUniforms] }); // 'project' module added by default.\n    }\n    get wrapLongitude() {\n        return false;\n    }\n    getBounds() {\n        return this.getAttributeManager()?.getBounds(['vertexPositions']);\n    }\n    initializeState() {\n        const noAlloc = true;\n        const attributeManager = this.getAttributeManager();\n        /* eslint-disable max-len */\n        attributeManager.addInstanced({\n            vertexPositions: {\n                size: 3,\n                // Start filling buffer from 1 vertex in\n                vertexOffset: 1,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getPath',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculatePositions,\n                noAlloc,\n                shaderAttributes: {\n                    instanceLeftPositions: {\n                        vertexOffset: 0\n                    },\n                    instanceStartPositions: {\n                        vertexOffset: 1\n                    },\n                    instanceEndPositions: {\n                        vertexOffset: 2\n                    },\n                    instanceRightPositions: {\n                        vertexOffset: 3\n                    }\n                }\n            },\n            instanceTypes: {\n                size: 1,\n                type: 'uint8',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculateSegmentTypes,\n                noAlloc\n            },\n            instanceStrokeWidths: {\n                size: 1,\n                accessor: 'getWidth',\n                transition: ATTRIBUTE_TRANSITION,\n                defaultValue: 1\n            },\n            instanceColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                accessor: 'getColor',\n                transition: ATTRIBUTE_TRANSITION,\n                defaultValue: DEFAULT_COLOR\n            },\n            instancePickingColors: {\n                size: 4,\n                type: 'uint8',\n                accessor: (object, { index, target: value }) => this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n            }\n        });\n        /* eslint-enable max-len */\n        this.setState({\n            pathTesselator: new _path_tesselator_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n                fp64: this.use64bitPositions()\n            })\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, changeFlags } = params;\n        const attributeManager = this.getAttributeManager();\n        const geometryChanged = changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n        if (geometryChanged) {\n            const { pathTesselator } = this.state;\n            const buffers = props.data.attributes || {};\n            pathTesselator.updateGeometry({\n                data: props.data,\n                geometryBuffer: buffers.getPath,\n                buffers,\n                normalize: !props._pathType,\n                loop: props._pathType === 'loop',\n                getGeometry: props.getPath,\n                positionFormat: props.positionFormat,\n                wrapLongitude: props.wrapLongitude,\n                // TODO - move the flag out of the viewport\n                resolution: this.context.viewport.resolution,\n                dataChanged: changeFlags.dataChanged\n            });\n            this.setState({\n                numInstances: pathTesselator.instanceCount,\n                startIndices: pathTesselator.vertexStarts\n            });\n            if (!changeFlags.dataChanged) {\n                // Base `layer.updateState` only invalidates all attributes on data change\n                // Cover the rest of the scenarios here\n                attributeManager.invalidateAll();\n            }\n        }\n        if (changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            attributeManager.invalidateAll();\n        }\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index } = info;\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            info.object = data.find(d => d.__source.index === index);\n        }\n        return info;\n    }\n    /** Override base Layer method */\n    disablePickingIndex(objectIndex) {\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].__source.index === objectIndex) {\n                    this._disablePickingIndex(i);\n                }\n            }\n        }\n        else {\n            super.disablePickingIndex(objectIndex);\n        }\n    }\n    draw({ uniforms }) {\n        const { jointRounded, capRounded, billboard, miterLimit, widthUnits, widthScale, widthMinPixels, widthMaxPixels } = this.props;\n        const model = this.state.model;\n        const pathProps = {\n            jointType: Number(jointRounded),\n            capType: Number(capRounded),\n            billboard,\n            widthUnits: _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__.UNIT[widthUnits],\n            widthScale,\n            miterLimit,\n            widthMinPixels,\n            widthMaxPixels\n        };\n        model.shaderInputs.setProps({ path: pathProps });\n        model.draw(this.context.renderPass);\n    }\n    _getModel() {\n        /*\n         *       _\n         *        \"-_ 1                   3                       5\n         *     _     \"o---------------------o-------------------_-o\n         *       -   / \"\"--..__              '.             _.-' /\n         *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n         *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n         *       \"o----------------------------\"\"-o'    :     /\n         *      0,2                            4 / '.  :     /\n         *                                      /   '.:     /\n         *                                     /     :'.   /\n         *                                    /     :  ', /\n         *                                   /     :     o\n         */\n        // prettier-ignore\n        const SEGMENT_INDICES = [\n            // start corner\n            0, 1, 2,\n            // body\n            1, 4, 2,\n            1, 3, 4,\n            // end corner\n            3, 5, 4\n        ];\n        // [0] position on segment - 0: start, 1: end\n        // [1] side of path - -1: left, 0: center (joint), 1: right\n        // prettier-ignore\n        const SEGMENT_POSITIONS = [\n            // bevel start corner\n            0, 0,\n            // start inner corner\n            0, -1,\n            // start outer corner\n            0, 1,\n            // end inner corner\n            1, -1,\n            // end outer corner\n            1, 1,\n            // bevel end corner\n            1, 0\n        ];\n        return new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_8__.Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_9__.Geometry({\n                topology: 'triangle-list',\n                attributes: {\n                    indices: new Uint16Array(SEGMENT_INDICES),\n                    positions: { value: new Float32Array(SEGMENT_POSITIONS), size: 2 }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n    calculatePositions(attribute) {\n        const { pathTesselator } = this.state;\n        attribute.startIndices = pathTesselator.vertexStarts;\n        attribute.value = pathTesselator.get('positions');\n    }\n    calculateSegmentTypes(attribute) {\n        const { pathTesselator } = this.state;\n        attribute.startIndices = pathTesselator.vertexStarts;\n        attribute.value = pathTesselator.get('segmentTypes');\n    }\n}\nPathLayer.defaultProps = defaultProps;\nPathLayer.layerName = 'PathLayer';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PathLayer);\n//# sourceMappingURL=path-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/path-layer/path-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/path-layer/path-tesselator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/path-layer/path-tesselator.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PathTesselator)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/utils/tesselator.js\");\n/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path.js */ \"./node_modules/@deck.gl/layers/dist/path-layer/path.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\nconst START_CAP = 1;\nconst END_CAP = 2;\nconst INVALID = 4;\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nclass PathTesselator extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(opts) {\n        super({\n            ...opts,\n            attributes: {\n                // Padding covers shaderAttributes for last segment in largest case fp64\n                // additional vertex + hi & low parts, 3 * 6\n                positions: {\n                    size: 3,\n                    padding: 18,\n                    initialize: true,\n                    type: opts.fp64 ? Float64Array : Float32Array\n                },\n                segmentTypes: { size: 1, type: Uint8ClampedArray }\n            }\n        });\n    }\n    /** Get packed attribute by name */\n    get(attributeName) {\n        return this.attributes[attributeName];\n    }\n    /* Implement base Tesselator interface */\n    getGeometryFromBuffer(buffer) {\n        if (this.normalize) {\n            return super.getGeometryFromBuffer(buffer);\n        }\n        // we don't need to read the positions if no normalization\n        return null;\n    }\n    /* Implement base Tesselator interface */\n    normalizeGeometry(path) {\n        if (this.normalize) {\n            return (0,_path_js__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(path, this.positionSize, this.opts.resolution, this.opts.wrapLongitude);\n        }\n        return path;\n    }\n    /* Implement base Tesselator interface */\n    getGeometrySize(path) {\n        if (isCut(path)) {\n            let size = 0;\n            for (const subPath of path) {\n                size += this.getGeometrySize(subPath);\n            }\n            return size;\n        }\n        const numPoints = this.getPathLength(path);\n        if (numPoints < 2) {\n            // invalid path\n            return 0;\n        }\n        if (this.isClosed(path)) {\n            // minimum 3 vertices\n            return numPoints < 3 ? 0 : numPoints + 2;\n        }\n        return numPoints;\n    }\n    /* Implement base Tesselator interface */\n    updateGeometryAttributes(path, context) {\n        if (context.geometrySize === 0) {\n            return;\n        }\n        if (path && isCut(path)) {\n            for (const subPath of path) {\n                const geometrySize = this.getGeometrySize(subPath);\n                context.geometrySize = geometrySize;\n                this.updateGeometryAttributes(subPath, context);\n                context.vertexStart += geometrySize;\n            }\n        }\n        else {\n            this._updateSegmentTypes(path, context);\n            this._updatePositions(path, context);\n        }\n    }\n    _updateSegmentTypes(path, context) {\n        const segmentTypes = this.attributes.segmentTypes;\n        const isPathClosed = path ? this.isClosed(path) : false;\n        const { vertexStart, geometrySize } = context;\n        // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n        // segmentTypes     3  4  4  0  0  0  0  4  4\n        segmentTypes.fill(0, vertexStart, vertexStart + geometrySize);\n        if (isPathClosed) {\n            segmentTypes[vertexStart] = INVALID;\n            segmentTypes[vertexStart + geometrySize - 2] = INVALID;\n        }\n        else {\n            segmentTypes[vertexStart] += START_CAP;\n            segmentTypes[vertexStart + geometrySize - 2] += END_CAP;\n        }\n        segmentTypes[vertexStart + geometrySize - 1] = INVALID;\n    }\n    _updatePositions(path, context) {\n        const { positions } = this.attributes;\n        if (!positions || !path) {\n            return;\n        }\n        const { vertexStart, geometrySize } = context;\n        const p = new Array(3);\n        // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n        // segmentTypes     3  4  4  0  0  0  0  4  4\n        for (let i = vertexStart, ptIndex = 0; ptIndex < geometrySize; i++, ptIndex++) {\n            this.getPointOnPath(path, ptIndex, p);\n            positions[i * 3] = p[0];\n            positions[i * 3 + 1] = p[1];\n            positions[i * 3 + 2] = p[2];\n        }\n    }\n    // Utilities\n    /** Returns the number of points in the path */\n    getPathLength(path) {\n        return path.length / this.positionSize;\n    }\n    /** Returns a point on the path at the specified index */\n    getPointOnPath(path, index, target = []) {\n        const { positionSize } = this;\n        if (index * positionSize >= path.length) {\n            // loop\n            index += 1 - path.length / positionSize;\n        }\n        const i = index * positionSize;\n        target[0] = path[i];\n        target[1] = path[i + 1];\n        target[2] = (positionSize === 3 && path[i + 2]) || 0;\n        return target;\n    }\n    // Returns true if the first and last points are identical\n    isClosed(path) {\n        if (!this.normalize) {\n            return Boolean(this.opts.loop);\n        }\n        const { positionSize } = this;\n        const lastPointIndex = path.length - positionSize;\n        return (path[0] === path[lastPointIndex] &&\n            path[1] === path[lastPointIndex + 1] &&\n            (positionSize === 2 || path[2] === path[lastPointIndex + 2]));\n    }\n}\nfunction isCut(path) {\n    return Array.isArray(path[0]);\n}\n//# sourceMappingURL=path-tesselator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/path-layer/path-tesselator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/path-layer/path.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/path-layer/path.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizePath: () => (/* binding */ normalizePath)\n/* harmony export */ });\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/polygon */ \"./node_modules/@math.gl/polygon/dist/index.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * Flattens a nested path object\n * Cut the feature if needed (globe projection, wrap longitude, etc.)\n * Returns a flat array of path positions, or a list of flat arrays representing multiple paths\n */\nfunction normalizePath(path, size, gridResolution, wrapLongitude) {\n    let flatPath;\n    if (Array.isArray(path[0])) {\n        const length = path.length * size;\n        flatPath = new Array(length);\n        for (let i = 0; i < path.length; i++) {\n            for (let j = 0; j < size; j++) {\n                flatPath[i * size + j] = path[i][j] || 0;\n            }\n        }\n    }\n    else {\n        flatPath = path;\n    }\n    if (gridResolution) {\n        return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolylineByGrid)(flatPath, { size, gridResolution });\n    }\n    if (wrapLongitude) {\n        return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolylineByMercatorBounds)(flatPath, { size });\n    }\n    return flatPath;\n}\n//# sourceMappingURL=path.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvcGF0aC1sYXllci9wYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvcGF0aC1sYXllci9wYXRoLmpzPzYzNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5pbXBvcnQgeyBjdXRQb2x5bGluZUJ5R3JpZCwgY3V0UG9seWxpbmVCeU1lcmNhdG9yQm91bmRzIH0gZnJvbSAnQG1hdGguZ2wvcG9seWdvbic7XG4vKipcbiAqIEZsYXR0ZW5zIGEgbmVzdGVkIHBhdGggb2JqZWN0XG4gKiBDdXQgdGhlIGZlYXR1cmUgaWYgbmVlZGVkIChnbG9iZSBwcm9qZWN0aW9uLCB3cmFwIGxvbmdpdHVkZSwgZXRjLilcbiAqIFJldHVybnMgYSBmbGF0IGFycmF5IG9mIHBhdGggcG9zaXRpb25zLCBvciBhIGxpc3Qgb2YgZmxhdCBhcnJheXMgcmVwcmVzZW50aW5nIG11bHRpcGxlIHBhdGhzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVQYXRoKHBhdGgsIHNpemUsIGdyaWRSZXNvbHV0aW9uLCB3cmFwTG9uZ2l0dWRlKSB7XG4gICAgbGV0IGZsYXRQYXRoO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHBhdGhbMF0pKSB7XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IHBhdGgubGVuZ3RoICogc2l6ZTtcbiAgICAgICAgZmxhdFBhdGggPSBuZXcgQXJyYXkobGVuZ3RoKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgICAgICAgICAgIGZsYXRQYXRoW2kgKiBzaXplICsgal0gPSBwYXRoW2ldW2pdIHx8IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZsYXRQYXRoID0gcGF0aDtcbiAgICB9XG4gICAgaWYgKGdyaWRSZXNvbHV0aW9uKSB7XG4gICAgICAgIHJldHVybiBjdXRQb2x5bGluZUJ5R3JpZChmbGF0UGF0aCwgeyBzaXplLCBncmlkUmVzb2x1dGlvbiB9KTtcbiAgICB9XG4gICAgaWYgKHdyYXBMb25naXR1ZGUpIHtcbiAgICAgICAgcmV0dXJuIGN1dFBvbHlsaW5lQnlNZXJjYXRvckJvdW5kcyhmbGF0UGF0aCwgeyBzaXplIH0pO1xuICAgIH1cbiAgICByZXR1cm4gZmxhdFBhdGg7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/path-layer/path.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon-tesselator.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon-tesselator.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PolygonTesselator)\n/* harmony export */ });\n/* harmony import */ var _polygon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polygon.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/utils/tesselator.js\");\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/polygon */ \"./node_modules/@math.gl/polygon/dist/index.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Handles tesselation of polygons with holes\n// - 2D surfaces\n// - 2D outlines\n// - 3D surfaces (top and sides only)\n// - 3D wireframes (not yet)\n\n\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nclass PolygonTesselator extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(opts) {\n        const { fp64, IndexType = Uint32Array } = opts;\n        super({\n            ...opts,\n            attributes: {\n                positions: { size: 3, type: fp64 ? Float64Array : Float32Array },\n                vertexValid: { type: Uint16Array, size: 1 },\n                indices: { type: IndexType, size: 1 }\n            }\n        });\n    }\n    /** Get attribute by name */\n    get(attributeName) {\n        const { attributes } = this;\n        if (attributeName === 'indices') {\n            return attributes.indices && attributes.indices.subarray(0, this.vertexCount);\n        }\n        return attributes[attributeName];\n    }\n    /** Override base Tesselator method */\n    updateGeometry(opts) {\n        super.updateGeometry(opts);\n        const externalIndices = this.buffers.indices;\n        if (externalIndices) {\n            // @ts-ignore (2339) value is not defined on TypedArray (fall through)\n            this.vertexCount = (externalIndices.value || externalIndices).length;\n        }\n        else if (this.data && !this.getGeometry) {\n            throw new Error('missing indices buffer');\n        }\n    }\n    /** Implement base Tesselator interface */\n    normalizeGeometry(polygon) {\n        if (this.normalize) {\n            const normalizedPolygon = _polygon_js__WEBPACK_IMPORTED_MODULE_2__.normalize(polygon, this.positionSize);\n            if (this.opts.resolution) {\n                return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolygonByGrid)(_polygon_js__WEBPACK_IMPORTED_MODULE_2__.getPositions(normalizedPolygon), _polygon_js__WEBPACK_IMPORTED_MODULE_2__.getHoleIndices(normalizedPolygon), {\n                    size: this.positionSize,\n                    gridResolution: this.opts.resolution,\n                    edgeTypes: true\n                });\n            }\n            if (this.opts.wrapLongitude) {\n                return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolygonByMercatorBounds)(_polygon_js__WEBPACK_IMPORTED_MODULE_2__.getPositions(normalizedPolygon), _polygon_js__WEBPACK_IMPORTED_MODULE_2__.getHoleIndices(normalizedPolygon), {\n                    size: this.positionSize,\n                    maxLatitude: 86,\n                    edgeTypes: true\n                });\n            }\n            return normalizedPolygon;\n        }\n        // normalize is explicitly set to false, assume that user passed in already normalized polygons\n        return polygon;\n    }\n    /** Implement base Tesselator interface */\n    getGeometrySize(polygon) {\n        if (isCut(polygon)) {\n            let size = 0;\n            for (const subPolygon of polygon) {\n                size += this.getGeometrySize(subPolygon);\n            }\n            return size;\n        }\n        return _polygon_js__WEBPACK_IMPORTED_MODULE_2__.getPositions(polygon).length / this.positionSize;\n    }\n    /** Override base Tesselator method */\n    getGeometryFromBuffer(buffer) {\n        if (this.normalize || !this.buffers.indices) {\n            return super.getGeometryFromBuffer(buffer);\n        }\n        // we don't need to read the positions if no normalization/tesselation\n        return null;\n    }\n    /** Implement base Tesselator interface */\n    updateGeometryAttributes(polygon, context) {\n        if (polygon && isCut(polygon)) {\n            for (const subPolygon of polygon) {\n                const geometrySize = this.getGeometrySize(subPolygon);\n                context.geometrySize = geometrySize;\n                this.updateGeometryAttributes(subPolygon, context);\n                context.vertexStart += geometrySize;\n                context.indexStart = this.indexStarts[context.geometryIndex + 1];\n            }\n        }\n        else {\n            const normalizedPolygon = polygon;\n            this._updateIndices(normalizedPolygon, context);\n            this._updatePositions(normalizedPolygon, context);\n            this._updateVertexValid(normalizedPolygon, context);\n        }\n    }\n    // Flatten the indices array\n    _updateIndices(polygon, { geometryIndex, vertexStart: offset, indexStart }) {\n        const { attributes, indexStarts, typedArrayManager } = this;\n        let target = attributes.indices;\n        if (!target || !polygon) {\n            return;\n        }\n        let i = indexStart;\n        // 1. get triangulated indices for the internal areas\n        const indices = _polygon_js__WEBPACK_IMPORTED_MODULE_2__.getSurfaceIndices(polygon, this.positionSize, this.opts.preproject, this.opts.full3d);\n        // make sure the buffer is large enough\n        target = typedArrayManager.allocate(target, indexStart + indices.length, {\n            copy: true\n        });\n        // 2. offset each index by the number of indices in previous polygons\n        for (let j = 0; j < indices.length; j++) {\n            target[i++] = indices[j] + offset;\n        }\n        indexStarts[geometryIndex + 1] = indexStart + indices.length;\n        attributes.indices = target;\n    }\n    // Flatten out all the vertices of all the sub subPolygons\n    _updatePositions(polygon, { vertexStart, geometrySize }) {\n        const { attributes: { positions }, positionSize } = this;\n        if (!positions || !polygon) {\n            return;\n        }\n        const polygonPositions = _polygon_js__WEBPACK_IMPORTED_MODULE_2__.getPositions(polygon);\n        for (let i = vertexStart, j = 0; j < geometrySize; i++, j++) {\n            const x = polygonPositions[j * positionSize];\n            const y = polygonPositions[j * positionSize + 1];\n            const z = positionSize > 2 ? polygonPositions[j * positionSize + 2] : 0;\n            positions[i * 3] = x;\n            positions[i * 3 + 1] = y;\n            positions[i * 3 + 2] = z;\n        }\n    }\n    _updateVertexValid(polygon, { vertexStart, geometrySize }) {\n        const { positionSize } = this;\n        const vertexValid = this.attributes.vertexValid;\n        const holeIndices = polygon && _polygon_js__WEBPACK_IMPORTED_MODULE_2__.getHoleIndices(polygon);\n        /* We are reusing the some buffer for `nextPositions` by offseting one vertex\n         * to the left. As a result,\n         * the last vertex of each ring overlaps with the first vertex of the next ring.\n         * `vertexValid` is used to mark the end of each ring so we don't draw these\n         * segments:\n          positions      A0 A1 A2 A3 A4 B0 B1 B2 C0 ...\n          nextPositions  A1 A2 A3 A4 B0 B1 B2 C0 C1 ...\n          vertexValid    1  1  1  1  0  1  1  0  1 ...\n         */\n        if (polygon && polygon.edgeTypes) {\n            vertexValid.set(polygon.edgeTypes, vertexStart);\n        }\n        else {\n            vertexValid.fill(1, vertexStart, vertexStart + geometrySize);\n        }\n        if (holeIndices) {\n            for (let j = 0; j < holeIndices.length; j++) {\n                vertexValid[vertexStart + holeIndices[j] / positionSize - 1] = 0;\n            }\n        }\n        vertexValid[vertexStart + geometrySize - 1] = 0;\n    }\n}\nfunction isCut(polygon) {\n    return Array.isArray(polygon) && polygon.length > 0 && !Number.isFinite(polygon[0]);\n}\n//# sourceMappingURL=polygon-tesselator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9wb2x5Z29uLXRlc3NlbGF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L3NvbGlkLXBvbHlnb24tbGF5ZXIvcG9seWdvbi10ZXNzZWxhdG9yLmpzPzQ2ZTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG4vLyBIYW5kbGVzIHRlc3NlbGF0aW9uIG9mIHBvbHlnb25zIHdpdGggaG9sZXNcbi8vIC0gMkQgc3VyZmFjZXNcbi8vIC0gMkQgb3V0bGluZXNcbi8vIC0gM0Qgc3VyZmFjZXMgKHRvcCBhbmQgc2lkZXMgb25seSlcbi8vIC0gM0Qgd2lyZWZyYW1lcyAobm90IHlldClcbmltcG9ydCAqIGFzIFBvbHlnb24gZnJvbSBcIi4vcG9seWdvbi5qc1wiO1xuaW1wb3J0IHsgVGVzc2VsYXRvciB9IGZyb20gJ0BkZWNrLmdsL2NvcmUnO1xuaW1wb3J0IHsgY3V0UG9seWdvbkJ5R3JpZCwgY3V0UG9seWdvbkJ5TWVyY2F0b3JCb3VuZHMgfSBmcm9tICdAbWF0aC5nbC9wb2x5Z29uJztcbi8vIFRoaXMgY2xhc3MgaXMgc2V0IHVwIHRvIGFsbG93IHF1ZXJ5aW5nIG9uZSBhdHRyaWJ1dGUgYXQgYSB0aW1lXG4vLyB0aGUgd2F5IHRoZSBBdHRyaWJ1dGVNYW5hZ2VyIGV4cGVjdHMgaXRcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvbHlnb25UZXNzZWxhdG9yIGV4dGVuZHMgVGVzc2VsYXRvciB7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBjb25zdCB7IGZwNjQsIEluZGV4VHlwZSA9IFVpbnQzMkFycmF5IH0gPSBvcHRzO1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICAuLi5vcHRzLFxuICAgICAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uczogeyBzaXplOiAzLCB0eXBlOiBmcDY0ID8gRmxvYXQ2NEFycmF5IDogRmxvYXQzMkFycmF5IH0sXG4gICAgICAgICAgICAgICAgdmVydGV4VmFsaWQ6IHsgdHlwZTogVWludDE2QXJyYXksIHNpemU6IDEgfSxcbiAgICAgICAgICAgICAgICBpbmRpY2VzOiB7IHR5cGU6IEluZGV4VHlwZSwgc2l6ZTogMSB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiogR2V0IGF0dHJpYnV0ZSBieSBuYW1lICovXG4gICAgZ2V0KGF0dHJpYnV0ZU5hbWUpIHtcbiAgICAgICAgY29uc3QgeyBhdHRyaWJ1dGVzIH0gPSB0aGlzO1xuICAgICAgICBpZiAoYXR0cmlidXRlTmFtZSA9PT0gJ2luZGljZXMnKSB7XG4gICAgICAgICAgICByZXR1cm4gYXR0cmlidXRlcy5pbmRpY2VzICYmIGF0dHJpYnV0ZXMuaW5kaWNlcy5zdWJhcnJheSgwLCB0aGlzLnZlcnRleENvdW50KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXTtcbiAgICB9XG4gICAgLyoqIE92ZXJyaWRlIGJhc2UgVGVzc2VsYXRvciBtZXRob2QgKi9cbiAgICB1cGRhdGVHZW9tZXRyeShvcHRzKSB7XG4gICAgICAgIHN1cGVyLnVwZGF0ZUdlb21ldHJ5KG9wdHMpO1xuICAgICAgICBjb25zdCBleHRlcm5hbEluZGljZXMgPSB0aGlzLmJ1ZmZlcnMuaW5kaWNlcztcbiAgICAgICAgaWYgKGV4dGVybmFsSW5kaWNlcykge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAoMjMzOSkgdmFsdWUgaXMgbm90IGRlZmluZWQgb24gVHlwZWRBcnJheSAoZmFsbCB0aHJvdWdoKVxuICAgICAgICAgICAgdGhpcy52ZXJ0ZXhDb3VudCA9IChleHRlcm5hbEluZGljZXMudmFsdWUgfHwgZXh0ZXJuYWxJbmRpY2VzKS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5kYXRhICYmICF0aGlzLmdldEdlb21ldHJ5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ21pc3NpbmcgaW5kaWNlcyBidWZmZXInKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiogSW1wbGVtZW50IGJhc2UgVGVzc2VsYXRvciBpbnRlcmZhY2UgKi9cbiAgICBub3JtYWxpemVHZW9tZXRyeShwb2x5Z29uKSB7XG4gICAgICAgIGlmICh0aGlzLm5vcm1hbGl6ZSkge1xuICAgICAgICAgICAgY29uc3Qgbm9ybWFsaXplZFBvbHlnb24gPSBQb2x5Z29uLm5vcm1hbGl6ZShwb2x5Z29uLCB0aGlzLnBvc2l0aW9uU2l6ZSk7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRzLnJlc29sdXRpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3V0UG9seWdvbkJ5R3JpZChQb2x5Z29uLmdldFBvc2l0aW9ucyhub3JtYWxpemVkUG9seWdvbiksIFBvbHlnb24uZ2V0SG9sZUluZGljZXMobm9ybWFsaXplZFBvbHlnb24pLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IHRoaXMucG9zaXRpb25TaXplLFxuICAgICAgICAgICAgICAgICAgICBncmlkUmVzb2x1dGlvbjogdGhpcy5vcHRzLnJlc29sdXRpb24sXG4gICAgICAgICAgICAgICAgICAgIGVkZ2VUeXBlczogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMub3B0cy53cmFwTG9uZ2l0dWRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGN1dFBvbHlnb25CeU1lcmNhdG9yQm91bmRzKFBvbHlnb24uZ2V0UG9zaXRpb25zKG5vcm1hbGl6ZWRQb2x5Z29uKSwgUG9seWdvbi5nZXRIb2xlSW5kaWNlcyhub3JtYWxpemVkUG9seWdvbiksIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogdGhpcy5wb3NpdGlvblNpemUsXG4gICAgICAgICAgICAgICAgICAgIG1heExhdGl0dWRlOiA4NixcbiAgICAgICAgICAgICAgICAgICAgZWRnZVR5cGVzOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbm9ybWFsaXplZFBvbHlnb247XG4gICAgICAgIH1cbiAgICAgICAgLy8gbm9ybWFsaXplIGlzIGV4cGxpY2l0bHkgc2V0IHRvIGZhbHNlLCBhc3N1bWUgdGhhdCB1c2VyIHBhc3NlZCBpbiBhbHJlYWR5IG5vcm1hbGl6ZWQgcG9seWdvbnNcbiAgICAgICAgcmV0dXJuIHBvbHlnb247XG4gICAgfVxuICAgIC8qKiBJbXBsZW1lbnQgYmFzZSBUZXNzZWxhdG9yIGludGVyZmFjZSAqL1xuICAgIGdldEdlb21ldHJ5U2l6ZShwb2x5Z29uKSB7XG4gICAgICAgIGlmIChpc0N1dChwb2x5Z29uKSkge1xuICAgICAgICAgICAgbGV0IHNpemUgPSAwO1xuICAgICAgICAgICAgZm9yIChjb25zdCBzdWJQb2x5Z29uIG9mIHBvbHlnb24pIHtcbiAgICAgICAgICAgICAgICBzaXplICs9IHRoaXMuZ2V0R2VvbWV0cnlTaXplKHN1YlBvbHlnb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNpemU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFBvbHlnb24uZ2V0UG9zaXRpb25zKHBvbHlnb24pLmxlbmd0aCAvIHRoaXMucG9zaXRpb25TaXplO1xuICAgIH1cbiAgICAvKiogT3ZlcnJpZGUgYmFzZSBUZXNzZWxhdG9yIG1ldGhvZCAqL1xuICAgIGdldEdlb21ldHJ5RnJvbUJ1ZmZlcihidWZmZXIpIHtcbiAgICAgICAgaWYgKHRoaXMubm9ybWFsaXplIHx8ICF0aGlzLmJ1ZmZlcnMuaW5kaWNlcykge1xuICAgICAgICAgICAgcmV0dXJuIHN1cGVyLmdldEdlb21ldHJ5RnJvbUJ1ZmZlcihidWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHdlIGRvbid0IG5lZWQgdG8gcmVhZCB0aGUgcG9zaXRpb25zIGlmIG5vIG5vcm1hbGl6YXRpb24vdGVzc2VsYXRpb25cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8qKiBJbXBsZW1lbnQgYmFzZSBUZXNzZWxhdG9yIGludGVyZmFjZSAqL1xuICAgIHVwZGF0ZUdlb21ldHJ5QXR0cmlidXRlcyhwb2x5Z29uLCBjb250ZXh0KSB7XG4gICAgICAgIGlmIChwb2x5Z29uICYmIGlzQ3V0KHBvbHlnb24pKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHN1YlBvbHlnb24gb2YgcG9seWdvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGdlb21ldHJ5U2l6ZSA9IHRoaXMuZ2V0R2VvbWV0cnlTaXplKHN1YlBvbHlnb24pO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuZ2VvbWV0cnlTaXplID0gZ2VvbWV0cnlTaXplO1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlR2VvbWV0cnlBdHRyaWJ1dGVzKHN1YlBvbHlnb24sIGNvbnRleHQpO1xuICAgICAgICAgICAgICAgIGNvbnRleHQudmVydGV4U3RhcnQgKz0gZ2VvbWV0cnlTaXplO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuaW5kZXhTdGFydCA9IHRoaXMuaW5kZXhTdGFydHNbY29udGV4dC5nZW9tZXRyeUluZGV4ICsgMV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBub3JtYWxpemVkUG9seWdvbiA9IHBvbHlnb247XG4gICAgICAgICAgICB0aGlzLl91cGRhdGVJbmRpY2VzKG5vcm1hbGl6ZWRQb2x5Z29uLCBjb250ZXh0KTtcbiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZVBvc2l0aW9ucyhub3JtYWxpemVkUG9seWdvbiwgY29udGV4dCk7XG4gICAgICAgICAgICB0aGlzLl91cGRhdGVWZXJ0ZXhWYWxpZChub3JtYWxpemVkUG9seWdvbiwgY29udGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gRmxhdHRlbiB0aGUgaW5kaWNlcyBhcnJheVxuICAgIF91cGRhdGVJbmRpY2VzKHBvbHlnb24sIHsgZ2VvbWV0cnlJbmRleCwgdmVydGV4U3RhcnQ6IG9mZnNldCwgaW5kZXhTdGFydCB9KSB7XG4gICAgICAgIGNvbnN0IHsgYXR0cmlidXRlcywgaW5kZXhTdGFydHMsIHR5cGVkQXJyYXlNYW5hZ2VyIH0gPSB0aGlzO1xuICAgICAgICBsZXQgdGFyZ2V0ID0gYXR0cmlidXRlcy5pbmRpY2VzO1xuICAgICAgICBpZiAoIXRhcmdldCB8fCAhcG9seWdvbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpID0gaW5kZXhTdGFydDtcbiAgICAgICAgLy8gMS4gZ2V0IHRyaWFuZ3VsYXRlZCBpbmRpY2VzIGZvciB0aGUgaW50ZXJuYWwgYXJlYXNcbiAgICAgICAgY29uc3QgaW5kaWNlcyA9IFBvbHlnb24uZ2V0U3VyZmFjZUluZGljZXMocG9seWdvbiwgdGhpcy5wb3NpdGlvblNpemUsIHRoaXMub3B0cy5wcmVwcm9qZWN0LCB0aGlzLm9wdHMuZnVsbDNkKTtcbiAgICAgICAgLy8gbWFrZSBzdXJlIHRoZSBidWZmZXIgaXMgbGFyZ2UgZW5vdWdoXG4gICAgICAgIHRhcmdldCA9IHR5cGVkQXJyYXlNYW5hZ2VyLmFsbG9jYXRlKHRhcmdldCwgaW5kZXhTdGFydCArIGluZGljZXMubGVuZ3RoLCB7XG4gICAgICAgICAgICBjb3B5OiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICAvLyAyLiBvZmZzZXQgZWFjaCBpbmRleCBieSB0aGUgbnVtYmVyIG9mIGluZGljZXMgaW4gcHJldmlvdXMgcG9seWdvbnNcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBpbmRpY2VzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICB0YXJnZXRbaSsrXSA9IGluZGljZXNbal0gKyBvZmZzZXQ7XG4gICAgICAgIH1cbiAgICAgICAgaW5kZXhTdGFydHNbZ2VvbWV0cnlJbmRleCArIDFdID0gaW5kZXhTdGFydCArIGluZGljZXMubGVuZ3RoO1xuICAgICAgICBhdHRyaWJ1dGVzLmluZGljZXMgPSB0YXJnZXQ7XG4gICAgfVxuICAgIC8vIEZsYXR0ZW4gb3V0IGFsbCB0aGUgdmVydGljZXMgb2YgYWxsIHRoZSBzdWIgc3ViUG9seWdvbnNcbiAgICBfdXBkYXRlUG9zaXRpb25zKHBvbHlnb24sIHsgdmVydGV4U3RhcnQsIGdlb21ldHJ5U2l6ZSB9KSB7XG4gICAgICAgIGNvbnN0IHsgYXR0cmlidXRlczogeyBwb3NpdGlvbnMgfSwgcG9zaXRpb25TaXplIH0gPSB0aGlzO1xuICAgICAgICBpZiAoIXBvc2l0aW9ucyB8fCAhcG9seWdvbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBvbHlnb25Qb3NpdGlvbnMgPSBQb2x5Z29uLmdldFBvc2l0aW9ucyhwb2x5Z29uKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IHZlcnRleFN0YXJ0LCBqID0gMDsgaiA8IGdlb21ldHJ5U2l6ZTsgaSsrLCBqKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHggPSBwb2x5Z29uUG9zaXRpb25zW2ogKiBwb3NpdGlvblNpemVdO1xuICAgICAgICAgICAgY29uc3QgeSA9IHBvbHlnb25Qb3NpdGlvbnNbaiAqIHBvc2l0aW9uU2l6ZSArIDFdO1xuICAgICAgICAgICAgY29uc3QgeiA9IHBvc2l0aW9uU2l6ZSA+IDIgPyBwb2x5Z29uUG9zaXRpb25zW2ogKiBwb3NpdGlvblNpemUgKyAyXSA6IDA7XG4gICAgICAgICAgICBwb3NpdGlvbnNbaSAqIDNdID0geDtcbiAgICAgICAgICAgIHBvc2l0aW9uc1tpICogMyArIDFdID0geTtcbiAgICAgICAgICAgIHBvc2l0aW9uc1tpICogMyArIDJdID0gejtcbiAgICAgICAgfVxuICAgIH1cbiAgICBfdXBkYXRlVmVydGV4VmFsaWQocG9seWdvbiwgeyB2ZXJ0ZXhTdGFydCwgZ2VvbWV0cnlTaXplIH0pIHtcbiAgICAgICAgY29uc3QgeyBwb3NpdGlvblNpemUgfSA9IHRoaXM7XG4gICAgICAgIGNvbnN0IHZlcnRleFZhbGlkID0gdGhpcy5hdHRyaWJ1dGVzLnZlcnRleFZhbGlkO1xuICAgICAgICBjb25zdCBob2xlSW5kaWNlcyA9IHBvbHlnb24gJiYgUG9seWdvbi5nZXRIb2xlSW5kaWNlcyhwb2x5Z29uKTtcbiAgICAgICAgLyogV2UgYXJlIHJldXNpbmcgdGhlIHNvbWUgYnVmZmVyIGZvciBgbmV4dFBvc2l0aW9uc2AgYnkgb2Zmc2V0aW5nIG9uZSB2ZXJ0ZXhcbiAgICAgICAgICogdG8gdGhlIGxlZnQuIEFzIGEgcmVzdWx0LFxuICAgICAgICAgKiB0aGUgbGFzdCB2ZXJ0ZXggb2YgZWFjaCByaW5nIG92ZXJsYXBzIHdpdGggdGhlIGZpcnN0IHZlcnRleCBvZiB0aGUgbmV4dCByaW5nLlxuICAgICAgICAgKiBgdmVydGV4VmFsaWRgIGlzIHVzZWQgdG8gbWFyayB0aGUgZW5kIG9mIGVhY2ggcmluZyBzbyB3ZSBkb24ndCBkcmF3IHRoZXNlXG4gICAgICAgICAqIHNlZ21lbnRzOlxuICAgICAgICAgIHBvc2l0aW9ucyAgICAgIEEwIEExIEEyIEEzIEE0IEIwIEIxIEIyIEMwIC4uLlxuICAgICAgICAgIG5leHRQb3NpdGlvbnMgIEExIEEyIEEzIEE0IEIwIEIxIEIyIEMwIEMxIC4uLlxuICAgICAgICAgIHZlcnRleFZhbGlkICAgIDEgIDEgIDEgIDEgIDAgIDEgIDEgIDAgIDEgLi4uXG4gICAgICAgICAqL1xuICAgICAgICBpZiAocG9seWdvbiAmJiBwb2x5Z29uLmVkZ2VUeXBlcykge1xuICAgICAgICAgICAgdmVydGV4VmFsaWQuc2V0KHBvbHlnb24uZWRnZVR5cGVzLCB2ZXJ0ZXhTdGFydCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2ZXJ0ZXhWYWxpZC5maWxsKDEsIHZlcnRleFN0YXJ0LCB2ZXJ0ZXhTdGFydCArIGdlb21ldHJ5U2l6ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhvbGVJbmRpY2VzKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGhvbGVJbmRpY2VzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgdmVydGV4VmFsaWRbdmVydGV4U3RhcnQgKyBob2xlSW5kaWNlc1tqXSAvIHBvc2l0aW9uU2l6ZSAtIDFdID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2ZXJ0ZXhWYWxpZFt2ZXJ0ZXhTdGFydCArIGdlb21ldHJ5U2l6ZSAtIDFdID0gMDtcbiAgICB9XG59XG5mdW5jdGlvbiBpc0N1dChwb2x5Z29uKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkocG9seWdvbikgJiYgcG9seWdvbi5sZW5ndGggPiAwICYmICFOdW1iZXIuaXNGaW5pdGUocG9seWdvblswXSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb2x5Z29uLXRlc3NlbGF0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon-tesselator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHoleIndices: () => (/* binding */ getHoleIndices),\n/* harmony export */   getPositions: () => (/* binding */ getPositions),\n/* harmony export */   getSurfaceIndices: () => (/* binding */ getSurfaceIndices),\n/* harmony export */   normalize: () => (/* binding */ normalize)\n/* harmony export */ });\n/* harmony import */ var earcut__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! earcut */ \"./node_modules/earcut/src/earcut.js\");\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/polygon */ \"./node_modules/@math.gl/polygon/dist/index.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable max-params */\n\n\nconst OUTER_POLYGON_WINDING = _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.WINDING.CLOCKWISE;\nconst HOLE_POLYGON_WINDING = _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.WINDING.COUNTER_CLOCKWISE;\n/** A scratch object for sending winding options */\nconst windingOptions = {\n    isClosed: true\n};\n/**\n * Ensure a polygon is valid format\n */\nfunction validate(polygon) {\n    polygon = (polygon && polygon.positions) || polygon;\n    if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n        throw new Error('invalid polygon');\n    }\n}\n/** Get the positions from a normalized polygon */\nfunction getPositions(polygon) {\n    return 'positions' in polygon ? polygon.positions : polygon;\n}\n/** Get the hole indices from a normalized polygon */\nfunction getHoleIndices(polygon) {\n    return 'holeIndices' in polygon ? polygon.holeIndices : null;\n}\n/**\n * Check if a polygon is nested or flat\n * Returns true if the polygon is a flat polygon (i.e. not an array of polygons)\n */\nfunction isNested(polygon) {\n    return Array.isArray(polygon[0]);\n}\n/**\n * Check if a polygon is simple or complex\n * Returns true if the polygon is a simple polygon (i.e. not an array of polygons)\n */\nfunction isSimple(polygon) {\n    return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n/**\n * Check if a simple polygon is a closed ring\n * Returns true if the simple polygon is a closed ring\n */\nfunction isNestedRingClosed(simplePolygon) {\n    // check if first and last vertex are the same\n    const p0 = simplePolygon[0];\n    const p1 = simplePolygon[simplePolygon.length - 1];\n    return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\n/**\n * Check if a simple flat array is a closed ring\n * Returns true if the simple flat array is a closed ring\n */\nfunction isFlatRingClosed(positions, \n/** size of a position, 2 (xy) or 3 (xyz) */\nsize, \n/** start index of the path in the positions array */\nstartIndex, \n/** end index of the path in the positions array */\nendIndex) {\n    for (let i = 0; i < size; i++) {\n        if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Copy a simple polygon coordinates into a flat array, closes the ring if needed.\n * Returns the index of the write head in the destination\n */\nfunction copyNestedRing(\n/** destination */\ntarget, \n/** index in the destination to start copying into */\ntargetStartIndex, \n/** the source polygon */\nsimplePolygon, \n/** size of a position, 2 (xy) or 3 (xyz) */\nsize, \n/** modify polygon to be of the specified winding direction */\nwindingDirection) {\n    let targetIndex = targetStartIndex;\n    const len = simplePolygon.length;\n    for (let i = 0; i < len; i++) {\n        for (let j = 0; j < size; j++) {\n            target[targetIndex++] = simplePolygon[i][j] || 0;\n        }\n    }\n    if (!isNestedRingClosed(simplePolygon)) {\n        for (let j = 0; j < size; j++) {\n            target[targetIndex++] = simplePolygon[0][j] || 0;\n        }\n    }\n    windingOptions.start = targetStartIndex;\n    windingOptions.end = targetIndex;\n    windingOptions.size = size;\n    (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirection)(target, windingDirection, windingOptions);\n    return targetIndex;\n}\n/**\n * Copy a simple flat array into another flat array, closes the ring if needed.\n * Returns the index of the write head in the destination\n */\nfunction copyFlatRing(\n/** destination */\ntarget, \n/** index in the destination to start copying into */\ntargetStartIndex, \n/** the source polygon */\npositions, \n/** size of a position, 2 (xy) or 3 (xyz) */\nsize, \n/** start index of the path in the positions array */\nsrcStartIndex = 0, \n/** end index of the path in the positions array */\nsrcEndIndex, windingDirection) {\n    srcEndIndex = srcEndIndex || positions.length;\n    const srcLength = srcEndIndex - srcStartIndex;\n    if (srcLength <= 0) {\n        return targetStartIndex;\n    }\n    let targetIndex = targetStartIndex;\n    for (let i = 0; i < srcLength; i++) {\n        target[targetIndex++] = positions[srcStartIndex + i];\n    }\n    if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n        for (let i = 0; i < size; i++) {\n            target[targetIndex++] = positions[srcStartIndex + i];\n        }\n    }\n    windingOptions.start = targetStartIndex;\n    windingOptions.end = targetIndex;\n    windingOptions.size = size;\n    (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirection)(target, windingDirection, windingOptions);\n    return targetIndex;\n}\n/**\n * Normalize any polygon representation into the \"complex flat\" format\n */\n/* eslint-disable max-statements */\nfunction normalize(polygon, positionSize) {\n    validate(polygon);\n    const positions = [];\n    const holeIndices = [];\n    if ('positions' in polygon) {\n        // complex flat\n        const { positions: srcPositions, holeIndices: srcHoleIndices } = polygon;\n        if (srcHoleIndices) {\n            let targetIndex = 0;\n            // split the positions array into `holeIndices.length + 1` rings\n            // holeIndices[-1] falls back to 0\n            // holeIndices[holeIndices.length] falls back to positions.length\n            for (let i = 0; i <= srcHoleIndices.length; i++) {\n                targetIndex = copyFlatRing(positions, targetIndex, srcPositions, positionSize, srcHoleIndices[i - 1], srcHoleIndices[i], i === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n                holeIndices.push(targetIndex);\n            }\n            // The last one is not a starting index of a hole, remove\n            holeIndices.pop();\n            return { positions, holeIndices };\n        }\n        polygon = srcPositions;\n    }\n    if (!isNested(polygon)) {\n        // simple flat\n        copyFlatRing(positions, 0, polygon, positionSize, 0, positions.length, OUTER_POLYGON_WINDING);\n        return positions;\n    }\n    if (!isSimple(polygon)) {\n        // complex polygon\n        let targetIndex = 0;\n        for (const [polygonIndex, simplePolygon] of polygon.entries()) {\n            targetIndex = copyNestedRing(positions, targetIndex, simplePolygon, positionSize, polygonIndex === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n            holeIndices.push(targetIndex);\n        }\n        // The last one is not a starting index of a hole, remove\n        holeIndices.pop();\n        // last index points to the end of the array, remove it\n        return { positions, holeIndices };\n    }\n    // simple polygon\n    copyNestedRing(positions, 0, polygon, positionSize, OUTER_POLYGON_WINDING);\n    return positions;\n}\n/* eslint-enable max-statements */\n/*\n * Calculate the area of a single plane of the polygon\n */\nfunction getPlaneArea(positions, xIndex, yIndex) {\n    const numVerts = positions.length / 3;\n    let area = 0;\n    for (let i = 0; i < numVerts; i++) {\n        const j = (i + 1) % numVerts;\n        area += positions[i * 3 + xIndex] * positions[j * 3 + yIndex];\n        area -= positions[j * 3 + xIndex] * positions[i * 3 + yIndex];\n    }\n    return Math.abs(area / 2);\n}\nfunction permutePositions(positions, xIndex, yIndex, zIndex) {\n    const numVerts = positions.length / 3;\n    for (let i = 0; i < numVerts; i++) {\n        const o = i * 3;\n        const x = positions[o + 0];\n        const y = positions[o + 1];\n        const z = positions[o + 2];\n        positions[o + xIndex] = x;\n        positions[o + yIndex] = y;\n        positions[o + zIndex] = z;\n    }\n}\n/**\n * Get vertex indices for drawing polygon mesh (triangulation)\n */\n// eslint-disable-next-line complexity, max-statements\nfunction getSurfaceIndices(polygon, positionSize, preproject, full3d) {\n    let holeIndices = getHoleIndices(polygon);\n    if (holeIndices) {\n        holeIndices = holeIndices.map(positionIndex => positionIndex / positionSize);\n    }\n    let positions = getPositions(polygon);\n    const is3d = full3d && positionSize === 3;\n    if (preproject) {\n        // When tesselating lnglat coordinates, project them to the common space for accuracy\n        const n = positions.length;\n        // Clone the array\n        positions = positions.slice();\n        const p = [];\n        for (let i = 0; i < n; i += positionSize) {\n            p[0] = positions[i];\n            p[1] = positions[i + 1];\n            if (is3d) {\n                p[2] = positions[i + 2];\n            }\n            const xy = preproject(p);\n            positions[i] = xy[0];\n            positions[i + 1] = xy[1];\n            if (is3d) {\n                positions[i + 2] = xy[2];\n            }\n        }\n    }\n    if (is3d) {\n        // calculate plane with largest area\n        const xyArea = getPlaneArea(positions, 0, 1);\n        const xzArea = getPlaneArea(positions, 0, 2);\n        const yzArea = getPlaneArea(positions, 1, 2);\n        if (!xyArea && !xzArea && !yzArea) {\n            return []; // no planes have area, nothing we can do\n        }\n        // permute positions to make the largest plane xy for earcut\n        if (xyArea > xzArea && xyArea > yzArea) {\n            // xy plane largest, nothing to do\n        }\n        else if (xzArea > yzArea) {\n            // xz plane largest, permute to make xyz -> xzy\n            if (!preproject) {\n                positions = positions.slice();\n            }\n            permutePositions(positions, 0, 2, 1);\n        }\n        else {\n            // yz plane largest, permute to make xyz -> yzx\n            if (!preproject) {\n                positions = positions.slice();\n            }\n            permutePositions(positions, 2, 0, 1);\n        }\n    }\n    // Let earcut triangulate the polygon\n    return earcut__WEBPACK_IMPORTED_MODULE_0__(positions, holeIndices, positionSize);\n}\n//# sourceMappingURL=polygon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\ngeometry.uv = vec2(0.);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`);\n//# sourceMappingURL=solid-polygon-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9zb2xpZC1wb2x5Z29uLWxheWVyL3NvbGlkLXBvbHlnb24tbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcz81MjY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlY2suZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuZXhwb3J0IGRlZmF1bHQgYFxcXG4jdmVyc2lvbiAzMDAgZXNcbiNkZWZpbmUgU0hBREVSX05BTUUgc29saWQtcG9seWdvbi1sYXllci1mcmFnbWVudC1zaGFkZXJcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcbmluIHZlYzQgdkNvbG9yO1xub3V0IHZlYzQgZnJhZ0NvbG9yO1xudm9pZCBtYWluKHZvaWQpIHtcbmZyYWdDb2xvciA9IHZDb2xvcjtcbmdlb21ldHJ5LnV2ID0gdmVjMigwLik7XG5ERUNLR0xfRklMVEVSX0NPTE9SKGZyYWdDb2xvciwgZ2VvbWV0cnkpO1xufVxuYDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-uniforms.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-uniforms.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   solidPolygonUniforms: () => (/* binding */ solidPolygonUniforms)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst uniformBlock = `\\\nuniform solidPolygonUniforms {\n  bool extruded;\n  bool isWireframe;\n  float elevationScale;\n} solidPolygon;\n`;\nconst solidPolygonUniforms = {\n    name: 'solidPolygon',\n    vs: uniformBlock,\n    fs: uniformBlock,\n    uniformTypes: {\n        extruded: 'f32',\n        isWireframe: 'f32',\n        elevationScale: 'f32'\n    }\n};\n//# sourceMappingURL=solid-polygon-layer-uniforms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXVuaWZvcm1zLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci11bmlmb3Jtcy5qcz9hNzhlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlY2suZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuY29uc3QgdW5pZm9ybUJsb2NrID0gYFxcXG51bmlmb3JtIHNvbGlkUG9seWdvblVuaWZvcm1zIHtcbiAgYm9vbCBleHRydWRlZDtcbiAgYm9vbCBpc1dpcmVmcmFtZTtcbiAgZmxvYXQgZWxldmF0aW9uU2NhbGU7XG59IHNvbGlkUG9seWdvbjtcbmA7XG5leHBvcnQgY29uc3Qgc29saWRQb2x5Z29uVW5pZm9ybXMgPSB7XG4gICAgbmFtZTogJ3NvbGlkUG9seWdvbicsXG4gICAgdnM6IHVuaWZvcm1CbG9jayxcbiAgICBmczogdW5pZm9ybUJsb2NrLFxuICAgIHVuaWZvcm1UeXBlczoge1xuICAgICAgICBleHRydWRlZDogJ2YzMicsXG4gICAgICAgIGlzV2lyZWZyYW1lOiAnZjMyJyxcbiAgICAgICAgZWxldmF0aW9uU2NhbGU6ICdmMzInXG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItdW5pZm9ybXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-uniforms.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`\\\nin vec4 fillColors;\nin vec4 lineColors;\nin vec3 pickingColors;\nout vec4 vColor;\nstruct PolygonProps {\nvec3 positions;\nvec3 positions64Low;\nvec3 normal;\nfloat elevations;\n};\nvec3 project_offset_normal(vec3 vector) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\nreturn normalize(vector * project.commonUnitsPerWorldUnit);\n}\nreturn project_normal(vector);\n}\nvoid calculatePosition(PolygonProps props) {\nvec3 pos = props.positions;\nvec3 pos64Low = props.positions64Low;\nvec3 normal = props.normal;\nvec4 colors = solidPolygon.isWireframe ? lineColors : fillColors;\ngeometry.worldPosition = props.positions;\ngeometry.pickingColor = pickingColors;\nif (solidPolygon.extruded) {\npos.z += props.elevations * solidPolygon.elevationScale;\n}\ngl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (solidPolygon.extruded) {\n#ifdef IS_SIDE_VERTEX\nnormal = project_offset_normal(normal);\n#else\nnormal = project_normal(normal);\n#endif\ngeometry.normal = normal;\nvec3 lightColor = lighting_getLightColor(colors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, colors.a * layer.opacity);\n} else {\nvColor = vec4(colors.rgb, colors.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`);\n//# sourceMappingURL=solid-polygon-layer-vertex-main.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1tYWluLmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9zb2xpZC1wb2x5Z29uLWxheWVyL3NvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LW1haW4uZ2xzbC5qcz9iNjU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlY2suZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuZXhwb3J0IGRlZmF1bHQgYFxcXG5pbiB2ZWM0IGZpbGxDb2xvcnM7XG5pbiB2ZWM0IGxpbmVDb2xvcnM7XG5pbiB2ZWMzIHBpY2tpbmdDb2xvcnM7XG5vdXQgdmVjNCB2Q29sb3I7XG5zdHJ1Y3QgUG9seWdvblByb3BzIHtcbnZlYzMgcG9zaXRpb25zO1xudmVjMyBwb3NpdGlvbnM2NExvdztcbnZlYzMgbm9ybWFsO1xuZmxvYXQgZWxldmF0aW9ucztcbn07XG52ZWMzIHByb2plY3Rfb2Zmc2V0X25vcm1hbCh2ZWMzIHZlY3Rvcikge1xuaWYgKHByb2plY3QuY29vcmRpbmF0ZVN5c3RlbSA9PSBDT09SRElOQVRFX1NZU1RFTV9MTkdMQVQgfHxcbnByb2plY3QuY29vcmRpbmF0ZVN5c3RlbSA9PSBDT09SRElOQVRFX1NZU1RFTV9MTkdMQVRfT0ZGU0VUUykge1xucmV0dXJuIG5vcm1hbGl6ZSh2ZWN0b3IgKiBwcm9qZWN0LmNvbW1vblVuaXRzUGVyV29ybGRVbml0KTtcbn1cbnJldHVybiBwcm9qZWN0X25vcm1hbCh2ZWN0b3IpO1xufVxudm9pZCBjYWxjdWxhdGVQb3NpdGlvbihQb2x5Z29uUHJvcHMgcHJvcHMpIHtcbnZlYzMgcG9zID0gcHJvcHMucG9zaXRpb25zO1xudmVjMyBwb3M2NExvdyA9IHByb3BzLnBvc2l0aW9uczY0TG93O1xudmVjMyBub3JtYWwgPSBwcm9wcy5ub3JtYWw7XG52ZWM0IGNvbG9ycyA9IHNvbGlkUG9seWdvbi5pc1dpcmVmcmFtZSA/IGxpbmVDb2xvcnMgOiBmaWxsQ29sb3JzO1xuZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IHByb3BzLnBvc2l0aW9ucztcbmdlb21ldHJ5LnBpY2tpbmdDb2xvciA9IHBpY2tpbmdDb2xvcnM7XG5pZiAoc29saWRQb2x5Z29uLmV4dHJ1ZGVkKSB7XG5wb3MueiArPSBwcm9wcy5lbGV2YXRpb25zICogc29saWRQb2x5Z29uLmVsZXZhdGlvblNjYWxlO1xufVxuZ2xfUG9zaXRpb24gPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShwb3MsIHBvczY0TG93LCB2ZWMzKDAuKSwgZ2VvbWV0cnkucG9zaXRpb24pO1xuREVDS0dMX0ZJTFRFUl9HTF9QT1NJVElPTihnbF9Qb3NpdGlvbiwgZ2VvbWV0cnkpO1xuaWYgKHNvbGlkUG9seWdvbi5leHRydWRlZCkge1xuI2lmZGVmIElTX1NJREVfVkVSVEVYXG5ub3JtYWwgPSBwcm9qZWN0X29mZnNldF9ub3JtYWwobm9ybWFsKTtcbiNlbHNlXG5ub3JtYWwgPSBwcm9qZWN0X25vcm1hbChub3JtYWwpO1xuI2VuZGlmXG5nZW9tZXRyeS5ub3JtYWwgPSBub3JtYWw7XG52ZWMzIGxpZ2h0Q29sb3IgPSBsaWdodGluZ19nZXRMaWdodENvbG9yKGNvbG9ycy5yZ2IsIHByb2plY3QuY2FtZXJhUG9zaXRpb24sIGdlb21ldHJ5LnBvc2l0aW9uLnh5eiwgZ2VvbWV0cnkubm9ybWFsKTtcbnZDb2xvciA9IHZlYzQobGlnaHRDb2xvciwgY29sb3JzLmEgKiBsYXllci5vcGFjaXR5KTtcbn0gZWxzZSB7XG52Q29sb3IgPSB2ZWM0KGNvbG9ycy5yZ2IsIGNvbG9ycy5hICogbGF5ZXIub3BhY2l0eSk7XG59XG5ERUNLR0xfRklMVEVSX0NPTE9SKHZDb2xvciwgZ2VvbWV0cnkpO1xufVxuYDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LW1haW4uZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solid_polygon_layer_vertex_main_glsl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-main.glsl.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\nin vec2 positions;\nin vec3 vertexPositions;\nin vec3 nextVertexPositions;\nin vec3 vertexPositions64Low;\nin vec3 nextVertexPositions64Low;\nin float elevations;\nin float instanceVertexValid;\n${_solid_polygon_layer_vertex_main_glsl_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]}\nvoid main(void) {\nif(instanceVertexValid < 0.5){\ngl_Position = vec4(0.);\nreturn;\n}\nPolygonProps props;\nvec3 pos;\nvec3 pos64Low;\nvec3 nextPos;\nvec3 nextPos64Low;\n#if RING_WINDING_ORDER_CW == 1\npos = vertexPositions;\npos64Low = vertexPositions64Low;\nnextPos = nextVertexPositions;\nnextPos64Low = nextVertexPositions64Low;\n#else\npos = nextVertexPositions;\npos64Low = nextVertexPositions64Low;\nnextPos = vertexPositions;\nnextPos64Low = vertexPositions64Low;\n#endif\nprops.positions = mix(pos, nextPos, positions.x);\nprops.positions64Low = mix(pos64Low, nextPos64Low, positions.x);\nprops.normal = vec3(\npos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),\nnextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),\n0.0);\nprops.elevations = elevations * positions.y;\ncalculatePosition(props);\n}\n`);\n//# sourceMappingURL=solid-polygon-layer-vertex-side.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1zaWRlLmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtc2lkZS5nbHNsLmpzP2JhMDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVjay5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5pbXBvcnQgbWFpbiBmcm9tIFwiLi9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1tYWluLmdsc2wuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGBcXFxuI3ZlcnNpb24gMzAwIGVzXG4jZGVmaW5lIFNIQURFUl9OQU1FIHNvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LXNoYWRlci1zaWRlXG4jZGVmaW5lIElTX1NJREVfVkVSVEVYXG5pbiB2ZWMyIHBvc2l0aW9ucztcbmluIHZlYzMgdmVydGV4UG9zaXRpb25zO1xuaW4gdmVjMyBuZXh0VmVydGV4UG9zaXRpb25zO1xuaW4gdmVjMyB2ZXJ0ZXhQb3NpdGlvbnM2NExvdztcbmluIHZlYzMgbmV4dFZlcnRleFBvc2l0aW9uczY0TG93O1xuaW4gZmxvYXQgZWxldmF0aW9ucztcbmluIGZsb2F0IGluc3RhbmNlVmVydGV4VmFsaWQ7XG4ke21haW59XG52b2lkIG1haW4odm9pZCkge1xuaWYoaW5zdGFuY2VWZXJ0ZXhWYWxpZCA8IDAuNSl7XG5nbF9Qb3NpdGlvbiA9IHZlYzQoMC4pO1xucmV0dXJuO1xufVxuUG9seWdvblByb3BzIHByb3BzO1xudmVjMyBwb3M7XG52ZWMzIHBvczY0TG93O1xudmVjMyBuZXh0UG9zO1xudmVjMyBuZXh0UG9zNjRMb3c7XG4jaWYgUklOR19XSU5ESU5HX09SREVSX0NXID09IDFcbnBvcyA9IHZlcnRleFBvc2l0aW9ucztcbnBvczY0TG93ID0gdmVydGV4UG9zaXRpb25zNjRMb3c7XG5uZXh0UG9zID0gbmV4dFZlcnRleFBvc2l0aW9ucztcbm5leHRQb3M2NExvdyA9IG5leHRWZXJ0ZXhQb3NpdGlvbnM2NExvdztcbiNlbHNlXG5wb3MgPSBuZXh0VmVydGV4UG9zaXRpb25zO1xucG9zNjRMb3cgPSBuZXh0VmVydGV4UG9zaXRpb25zNjRMb3c7XG5uZXh0UG9zID0gdmVydGV4UG9zaXRpb25zO1xubmV4dFBvczY0TG93ID0gdmVydGV4UG9zaXRpb25zNjRMb3c7XG4jZW5kaWZcbnByb3BzLnBvc2l0aW9ucyA9IG1peChwb3MsIG5leHRQb3MsIHBvc2l0aW9ucy54KTtcbnByb3BzLnBvc2l0aW9uczY0TG93ID0gbWl4KHBvczY0TG93LCBuZXh0UG9zNjRMb3csIHBvc2l0aW9ucy54KTtcbnByb3BzLm5vcm1hbCA9IHZlYzMoXG5wb3MueSAtIG5leHRQb3MueSArIChwb3M2NExvdy55IC0gbmV4dFBvczY0TG93LnkpLFxubmV4dFBvcy54IC0gcG9zLnggKyAobmV4dFBvczY0TG93LnggLSBwb3M2NExvdy54KSxcbjAuMCk7XG5wcm9wcy5lbGV2YXRpb25zID0gZWxldmF0aW9ucyAqIHBvc2l0aW9ucy55O1xuY2FsY3VsYXRlUG9zaXRpb24ocHJvcHMpO1xufVxuYDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LXNpZGUuZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solid_polygon_layer_vertex_main_glsl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-main.glsl.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader\nin vec3 vertexPositions;\nin vec3 vertexPositions64Low;\nin float elevations;\n${_solid_polygon_layer_vertex_main_glsl_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]}\nvoid main(void) {\nPolygonProps props;\nprops.positions = vertexPositions;\nprops.positions64Low = vertexPositions64Low;\nprops.elevations = elevations;\nprops.normal = vec3(0.0, 0.0, 1.0);\ncalculatePosition(props);\n}\n`);\n//# sourceMappingURL=solid-polygon-layer-vertex-top.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC10b3AuZ2xzbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC10b3AuZ2xzbC5qcz8yZjdlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlY2suZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuaW1wb3J0IG1haW4gZnJvbSBcIi4vc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtbWFpbi5nbHNsLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBgXFxcbiN2ZXJzaW9uIDMwMCBlc1xuI2RlZmluZSBTSEFERVJfTkFNRSBzb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1zaGFkZXJcbmluIHZlYzMgdmVydGV4UG9zaXRpb25zO1xuaW4gdmVjMyB2ZXJ0ZXhQb3NpdGlvbnM2NExvdztcbmluIGZsb2F0IGVsZXZhdGlvbnM7XG4ke21haW59XG52b2lkIG1haW4odm9pZCkge1xuUG9seWdvblByb3BzIHByb3BzO1xucHJvcHMucG9zaXRpb25zID0gdmVydGV4UG9zaXRpb25zO1xucHJvcHMucG9zaXRpb25zNjRMb3cgPSB2ZXJ0ZXhQb3NpdGlvbnM2NExvdztcbnByb3BzLmVsZXZhdGlvbnMgPSBlbGV2YXRpb25zO1xucHJvcHMubm9ybWFsID0gdmVjMygwLjAsIDAuMCwgMS4wKTtcbmNhbGN1bGF0ZVBvc2l0aW9uKHByb3BzKTtcbn1cbmA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC10b3AuZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/lib/constants.js\");\n/* harmony import */ var _luma_gl_engine__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @luma.gl/engine */ \"./node_modules/@luma.gl/engine/dist/model/model.js\");\n/* harmony import */ var _luma_gl_engine__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @luma.gl/engine */ \"./node_modules/@luma.gl/engine/dist/geometry/geometry.js\");\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/shadertools */ \"./node_modules/@luma.gl/shadertools/dist/modules/lighting/gouraud-material/gouraud-material.js\");\n/* harmony import */ var _polygon_tesselator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./polygon-tesselator.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/polygon-tesselator.js\");\n/* harmony import */ var _solid_polygon_layer_uniforms_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./solid-polygon-layer-uniforms.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-uniforms.js\");\n/* harmony import */ var _solid_polygon_layer_vertex_top_glsl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-top.glsl.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js\");\n/* harmony import */ var _solid_polygon_layer_vertex_side_glsl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-side.glsl.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js\");\n/* harmony import */ var _solid_polygon_layer_fragment_glsl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./solid-polygon-layer-fragment.glsl.js */ \"./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js\");\n// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n// Polygon geometry generation is managed by the polygon tesselator\n\n\n\n\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    filled: true,\n    extruded: false,\n    wireframe: false,\n    _normalize: true,\n    _windingOrder: 'CW',\n    _full3d: false,\n    elevationScale: { type: 'number', min: 0, value: 1 },\n    getPolygon: { type: 'accessor', value: (f) => f.polygon },\n    getElevation: { type: 'accessor', value: 1000 },\n    getFillColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getLineColor: { type: 'accessor', value: DEFAULT_COLOR },\n    material: true\n};\nconst ATTRIBUTE_TRANSITION = {\n    enter: (value, chunk) => {\n        return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n    }\n};\nclass SolidPolygonLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    getShaders(type) {\n        return super.getShaders({\n            vs: type === 'top' ? _solid_polygon_layer_vertex_top_glsl_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] : _solid_polygon_layer_vertex_side_glsl_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            fs: _solid_polygon_layer_fragment_glsl_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            defines: {\n                RING_WINDING_ORDER_CW: !this.props._normalize && this.props._windingOrder === 'CCW' ? 0 : 1\n            },\n            modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"], _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_5__.gouraudMaterial, _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"], _solid_polygon_layer_uniforms_js__WEBPACK_IMPORTED_MODULE_7__.solidPolygonUniforms]\n        });\n    }\n    get wrapLongitude() {\n        return false;\n    }\n    getBounds() {\n        return this.getAttributeManager()?.getBounds(['vertexPositions']);\n    }\n    initializeState() {\n        const { viewport } = this.context;\n        let { coordinateSystem } = this.props;\n        const { _full3d } = this.props;\n        if (viewport.isGeospatial && coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__.COORDINATE_SYSTEM.DEFAULT) {\n            coordinateSystem = _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__.COORDINATE_SYSTEM.LNGLAT;\n        }\n        let preproject;\n        if (coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__.COORDINATE_SYSTEM.LNGLAT) {\n            if (_full3d) {\n                preproject = viewport.projectPosition.bind(viewport);\n            }\n            else {\n                preproject = viewport.projectFlat.bind(viewport);\n            }\n        }\n        this.setState({\n            numInstances: 0,\n            polygonTesselator: new _polygon_tesselator_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n                // Lnglat coordinates are usually projected non-linearly, which affects tesselation results\n                // Provide a preproject function if the coordinates are in lnglat\n                preproject,\n                fp64: this.use64bitPositions(),\n                IndexType: Uint32Array\n            })\n        });\n        const attributeManager = this.getAttributeManager();\n        const noAlloc = true;\n        attributeManager.remove(['instancePickingColors']);\n        /* eslint-disable max-len */\n        attributeManager.add({\n            indices: {\n                size: 1,\n                isIndexed: true,\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculateIndices,\n                noAlloc\n            },\n            vertexPositions: {\n                size: 3,\n                type: 'float64',\n                stepMode: 'dynamic',\n                fp64: this.use64bitPositions(),\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getPolygon',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculatePositions,\n                noAlloc,\n                shaderAttributes: {\n                    nextVertexPositions: {\n                        vertexOffset: 1\n                    }\n                }\n            },\n            instanceVertexValid: {\n                size: 1,\n                type: 'uint16',\n                stepMode: 'instance',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculateVertexValid,\n                noAlloc\n            },\n            elevations: {\n                size: 1,\n                stepMode: 'dynamic',\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getElevation'\n            },\n            fillColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                stepMode: 'dynamic',\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getFillColor',\n                defaultValue: DEFAULT_COLOR\n            },\n            lineColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                stepMode: 'dynamic',\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getLineColor',\n                defaultValue: DEFAULT_COLOR\n            },\n            pickingColors: {\n                size: 4,\n                type: 'uint8',\n                stepMode: 'dynamic',\n                accessor: (object, { index, target: value }) => this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n            }\n        });\n        /* eslint-enable max-len */\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index } = info;\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            info.object = data.find(d => d.__source.index === index);\n        }\n        return info;\n    }\n    disablePickingIndex(objectIndex) {\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].__source.index === objectIndex) {\n                    this._disablePickingIndex(i);\n                }\n            }\n        }\n        else {\n            super.disablePickingIndex(objectIndex);\n        }\n    }\n    draw({ uniforms }) {\n        const { extruded, filled, wireframe, elevationScale } = this.props;\n        const { topModel, sideModel, wireframeModel, polygonTesselator } = this.state;\n        const renderUniforms = {\n            extruded: Boolean(extruded),\n            elevationScale,\n            isWireframe: false\n        };\n        // Note - the order is important\n        if (wireframeModel && wireframe) {\n            wireframeModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n            wireframeModel.shaderInputs.setProps({ solidPolygon: { ...renderUniforms, isWireframe: true } });\n            wireframeModel.draw(this.context.renderPass);\n        }\n        if (sideModel && filled) {\n            sideModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n            sideModel.shaderInputs.setProps({ solidPolygon: renderUniforms });\n            sideModel.draw(this.context.renderPass);\n        }\n        if (topModel && filled) {\n            topModel.setVertexCount(polygonTesselator.vertexCount);\n            topModel.shaderInputs.setProps({ solidPolygon: renderUniforms });\n            topModel.draw(this.context.renderPass);\n        }\n    }\n    updateState(updateParams) {\n        super.updateState(updateParams);\n        this.updateGeometry(updateParams);\n        const { props, oldProps, changeFlags } = updateParams;\n        const attributeManager = this.getAttributeManager();\n        const regenerateModels = changeFlags.extensionsChanged ||\n            props.filled !== oldProps.filled ||\n            props.extruded !== oldProps.extruded;\n        if (regenerateModels) {\n            this.state.models?.forEach(model => model.destroy());\n            this.setState(this._getModels());\n            attributeManager.invalidateAll();\n        }\n    }\n    updateGeometry({ props, oldProps, changeFlags }) {\n        const geometryConfigChanged = changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon));\n        // When the geometry config  or the data is changed,\n        // tessellator needs to be invoked\n        if (geometryConfigChanged) {\n            const { polygonTesselator } = this.state;\n            const buffers = props.data.attributes || {};\n            polygonTesselator.updateGeometry({\n                data: props.data,\n                normalize: props._normalize,\n                geometryBuffer: buffers.getPolygon,\n                buffers,\n                getGeometry: props.getPolygon,\n                positionFormat: props.positionFormat,\n                wrapLongitude: props.wrapLongitude,\n                // TODO - move the flag out of the viewport\n                resolution: this.context.viewport.resolution,\n                fp64: this.use64bitPositions(),\n                dataChanged: changeFlags.dataChanged,\n                full3d: props._full3d\n            });\n            this.setState({\n                numInstances: polygonTesselator.instanceCount,\n                startIndices: polygonTesselator.vertexStarts\n            });\n            if (!changeFlags.dataChanged) {\n                // Base `layer.updateState` only invalidates all attributes on data change\n                // Cover the rest of the scenarios here\n                this.getAttributeManager().invalidateAll();\n            }\n        }\n    }\n    _getModels() {\n        const { id, filled, extruded } = this.props;\n        let topModel;\n        let sideModel;\n        let wireframeModel;\n        if (filled) {\n            const shaders = this.getShaders('top');\n            shaders.defines.NON_INSTANCED_MODEL = 1;\n            const bufferLayout = this.getAttributeManager().getBufferLayouts({ isInstanced: false });\n            topModel = new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_10__.Model(this.context.device, {\n                ...shaders,\n                id: `${id}-top`,\n                topology: 'triangle-list',\n                bufferLayout,\n                isIndexed: true,\n                userData: {\n                    excludeAttributes: { instanceVertexValid: true }\n                }\n            });\n        }\n        if (extruded) {\n            const bufferLayout = this.getAttributeManager().getBufferLayouts({ isInstanced: true });\n            sideModel = new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_10__.Model(this.context.device, {\n                ...this.getShaders('side'),\n                id: `${id}-side`,\n                bufferLayout,\n                geometry: new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_11__.Geometry({\n                    topology: 'triangle-strip',\n                    attributes: {\n                        // top right - top left - bottom right - bottom left\n                        positions: {\n                            size: 2,\n                            value: new Float32Array([1, 0, 0, 0, 1, 1, 0, 1])\n                        }\n                    }\n                }),\n                isInstanced: true,\n                userData: {\n                    excludeAttributes: { indices: true }\n                }\n            });\n            wireframeModel = new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_10__.Model(this.context.device, {\n                ...this.getShaders('side'),\n                id: `${id}-wireframe`,\n                bufferLayout,\n                geometry: new _luma_gl_engine__WEBPACK_IMPORTED_MODULE_11__.Geometry({\n                    topology: 'line-strip',\n                    attributes: {\n                        // top right - top left - bottom left - bottom right\n                        positions: {\n                            size: 2,\n                            value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1])\n                        }\n                    }\n                }),\n                isInstanced: true,\n                userData: {\n                    excludeAttributes: { indices: true }\n                }\n            });\n        }\n        return {\n            models: [sideModel, wireframeModel, topModel].filter(Boolean),\n            topModel,\n            sideModel,\n            wireframeModel\n        };\n    }\n    calculateIndices(attribute) {\n        const { polygonTesselator } = this.state;\n        attribute.startIndices = polygonTesselator.indexStarts;\n        attribute.value = polygonTesselator.get('indices');\n    }\n    calculatePositions(attribute) {\n        const { polygonTesselator } = this.state;\n        attribute.startIndices = polygonTesselator.vertexStarts;\n        attribute.value = polygonTesselator.get('positions');\n    }\n    calculateVertexValid(attribute) {\n        attribute.value = this.state.polygonTesselator.get('vertexValid');\n    }\n}\nSolidPolygonLayer.defaultProps = defaultProps;\nSolidPolygonLayer.layerName = 'SolidPolygonLayer';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SolidPolygonLayer);\n//# sourceMappingURL=solid-polygon-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3Qvc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci5qcz8wODk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlY2suZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuaW1wb3J0IHsgTGF5ZXIsIHByb2plY3QzMiwgcGlja2luZywgQ09PUkRJTkFURV9TWVNURU0gfSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCB7IE1vZGVsLCBHZW9tZXRyeSB9IGZyb20gJ0BsdW1hLmdsL2VuZ2luZSc7XG5pbXBvcnQgeyBnb3VyYXVkTWF0ZXJpYWwgfSBmcm9tICdAbHVtYS5nbC9zaGFkZXJ0b29scyc7XG4vLyBQb2x5Z29uIGdlb21ldHJ5IGdlbmVyYXRpb24gaXMgbWFuYWdlZCBieSB0aGUgcG9seWdvbiB0ZXNzZWxhdG9yXG5pbXBvcnQgUG9seWdvblRlc3NlbGF0b3IgZnJvbSBcIi4vcG9seWdvbi10ZXNzZWxhdG9yLmpzXCI7XG5pbXBvcnQgeyBzb2xpZFBvbHlnb25Vbmlmb3JtcyB9IGZyb20gXCIuL3NvbGlkLXBvbHlnb24tbGF5ZXItdW5pZm9ybXMuanNcIjtcbmltcG9ydCB2c1RvcCBmcm9tIFwiLi9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC10b3AuZ2xzbC5qc1wiO1xuaW1wb3J0IHZzU2lkZSBmcm9tIFwiLi9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1zaWRlLmdsc2wuanNcIjtcbmltcG9ydCBmcyBmcm9tIFwiLi9zb2xpZC1wb2x5Z29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanNcIjtcbmNvbnN0IERFRkFVTFRfQ09MT1IgPSBbMCwgMCwgMCwgMjU1XTtcbmNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgICBmaWxsZWQ6IHRydWUsXG4gICAgZXh0cnVkZWQ6IGZhbHNlLFxuICAgIHdpcmVmcmFtZTogZmFsc2UsXG4gICAgX25vcm1hbGl6ZTogdHJ1ZSxcbiAgICBfd2luZGluZ09yZGVyOiAnQ1cnLFxuICAgIF9mdWxsM2Q6IGZhbHNlLFxuICAgIGVsZXZhdGlvblNjYWxlOiB7IHR5cGU6ICdudW1iZXInLCBtaW46IDAsIHZhbHVlOiAxIH0sXG4gICAgZ2V0UG9seWdvbjogeyB0eXBlOiAnYWNjZXNzb3InLCB2YWx1ZTogKGYpID0+IGYucG9seWdvbiB9LFxuICAgIGdldEVsZXZhdGlvbjogeyB0eXBlOiAnYWNjZXNzb3InLCB2YWx1ZTogMTAwMCB9LFxuICAgIGdldEZpbGxDb2xvcjogeyB0eXBlOiAnYWNjZXNzb3InLCB2YWx1ZTogREVGQVVMVF9DT0xPUiB9LFxuICAgIGdldExpbmVDb2xvcjogeyB0eXBlOiAnYWNjZXNzb3InLCB2YWx1ZTogREVGQVVMVF9DT0xPUiB9LFxuICAgIG1hdGVyaWFsOiB0cnVlXG59O1xuY29uc3QgQVRUUklCVVRFX1RSQU5TSVRJT04gPSB7XG4gICAgZW50ZXI6ICh2YWx1ZSwgY2h1bmspID0+IHtcbiAgICAgICAgcmV0dXJuIGNodW5rLmxlbmd0aCA/IGNodW5rLnN1YmFycmF5KGNodW5rLmxlbmd0aCAtIHZhbHVlLmxlbmd0aCkgOiB2YWx1ZTtcbiAgICB9XG59O1xuY2xhc3MgU29saWRQb2x5Z29uTGF5ZXIgZXh0ZW5kcyBMYXllciB7XG4gICAgZ2V0U2hhZGVycyh0eXBlKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5nZXRTaGFkZXJzKHtcbiAgICAgICAgICAgIHZzOiB0eXBlID09PSAndG9wJyA/IHZzVG9wIDogdnNTaWRlLFxuICAgICAgICAgICAgZnMsXG4gICAgICAgICAgICBkZWZpbmVzOiB7XG4gICAgICAgICAgICAgICAgUklOR19XSU5ESU5HX09SREVSX0NXOiAhdGhpcy5wcm9wcy5fbm9ybWFsaXplICYmIHRoaXMucHJvcHMuX3dpbmRpbmdPcmRlciA9PT0gJ0NDVycgPyAwIDogMVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1vZHVsZXM6IFtwcm9qZWN0MzIsIGdvdXJhdWRNYXRlcmlhbCwgcGlja2luZywgc29saWRQb2x5Z29uVW5pZm9ybXNdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXQgd3JhcExvbmdpdHVkZSgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBnZXRCb3VuZHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZU1hbmFnZXIoKT8uZ2V0Qm91bmRzKFsndmVydGV4UG9zaXRpb25zJ10pO1xuICAgIH1cbiAgICBpbml0aWFsaXplU3RhdGUoKSB7XG4gICAgICAgIGNvbnN0IHsgdmlld3BvcnQgfSA9IHRoaXMuY29udGV4dDtcbiAgICAgICAgbGV0IHsgY29vcmRpbmF0ZVN5c3RlbSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBfZnVsbDNkIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBpZiAodmlld3BvcnQuaXNHZW9zcGF0aWFsICYmIGNvb3JkaW5hdGVTeXN0ZW0gPT09IENPT1JESU5BVEVfU1lTVEVNLkRFRkFVTFQpIHtcbiAgICAgICAgICAgIGNvb3JkaW5hdGVTeXN0ZW0gPSBDT09SRElOQVRFX1NZU1RFTS5MTkdMQVQ7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHByZXByb2plY3Q7XG4gICAgICAgIGlmIChjb29yZGluYXRlU3lzdGVtID09PSBDT09SRElOQVRFX1NZU1RFTS5MTkdMQVQpIHtcbiAgICAgICAgICAgIGlmIChfZnVsbDNkKSB7XG4gICAgICAgICAgICAgICAgcHJlcHJvamVjdCA9IHZpZXdwb3J0LnByb2plY3RQb3NpdGlvbi5iaW5kKHZpZXdwb3J0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHByZXByb2plY3QgPSB2aWV3cG9ydC5wcm9qZWN0RmxhdC5iaW5kKHZpZXdwb3J0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG51bUluc3RhbmNlczogMCxcbiAgICAgICAgICAgIHBvbHlnb25UZXNzZWxhdG9yOiBuZXcgUG9seWdvblRlc3NlbGF0b3Ioe1xuICAgICAgICAgICAgICAgIC8vIExuZ2xhdCBjb29yZGluYXRlcyBhcmUgdXN1YWxseSBwcm9qZWN0ZWQgbm9uLWxpbmVhcmx5LCB3aGljaCBhZmZlY3RzIHRlc3NlbGF0aW9uIHJlc3VsdHNcbiAgICAgICAgICAgICAgICAvLyBQcm92aWRlIGEgcHJlcHJvamVjdCBmdW5jdGlvbiBpZiB0aGUgY29vcmRpbmF0ZXMgYXJlIGluIGxuZ2xhdFxuICAgICAgICAgICAgICAgIHByZXByb2plY3QsXG4gICAgICAgICAgICAgICAgZnA2NDogdGhpcy51c2U2NGJpdFBvc2l0aW9ucygpLFxuICAgICAgICAgICAgICAgIEluZGV4VHlwZTogVWludDMyQXJyYXlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBhdHRyaWJ1dGVNYW5hZ2VyID0gdGhpcy5nZXRBdHRyaWJ1dGVNYW5hZ2VyKCk7XG4gICAgICAgIGNvbnN0IG5vQWxsb2MgPSB0cnVlO1xuICAgICAgICBhdHRyaWJ1dGVNYW5hZ2VyLnJlbW92ZShbJ2luc3RhbmNlUGlja2luZ0NvbG9ycyddKTtcbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuICAgICAgICBhdHRyaWJ1dGVNYW5hZ2VyLmFkZCh7XG4gICAgICAgICAgICBpbmRpY2VzOiB7XG4gICAgICAgICAgICAgICAgc2l6ZTogMSxcbiAgICAgICAgICAgICAgICBpc0luZGV4ZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC91bmJvdW5kLW1ldGhvZFxuICAgICAgICAgICAgICAgIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbmRpY2VzLFxuICAgICAgICAgICAgICAgIG5vQWxsb2NcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB2ZXJ0ZXhQb3NpdGlvbnM6IHtcbiAgICAgICAgICAgICAgICBzaXplOiAzLFxuICAgICAgICAgICAgICAgIHR5cGU6ICdmbG9hdDY0JyxcbiAgICAgICAgICAgICAgICBzdGVwTW9kZTogJ2R5bmFtaWMnLFxuICAgICAgICAgICAgICAgIGZwNjQ6IHRoaXMudXNlNjRiaXRQb3NpdGlvbnMoKSxcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBBVFRSSUJVVEVfVFJBTlNJVElPTixcbiAgICAgICAgICAgICAgICBhY2Nlc3NvcjogJ2dldFBvbHlnb24nLFxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5ib3VuZC1tZXRob2RcbiAgICAgICAgICAgICAgICB1cGRhdGU6IHRoaXMuY2FsY3VsYXRlUG9zaXRpb25zLFxuICAgICAgICAgICAgICAgIG5vQWxsb2MsXG4gICAgICAgICAgICAgICAgc2hhZGVyQXR0cmlidXRlczoge1xuICAgICAgICAgICAgICAgICAgICBuZXh0VmVydGV4UG9zaXRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0ZXhPZmZzZXQ6IDFcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnN0YW5jZVZlcnRleFZhbGlkOiB7XG4gICAgICAgICAgICAgICAgc2l6ZTogMSxcbiAgICAgICAgICAgICAgICB0eXBlOiAndWludDE2JyxcbiAgICAgICAgICAgICAgICBzdGVwTW9kZTogJ2luc3RhbmNlJyxcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kXG4gICAgICAgICAgICAgICAgdXBkYXRlOiB0aGlzLmNhbGN1bGF0ZVZlcnRleFZhbGlkLFxuICAgICAgICAgICAgICAgIG5vQWxsb2NcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbGV2YXRpb25zOiB7XG4gICAgICAgICAgICAgICAgc2l6ZTogMSxcbiAgICAgICAgICAgICAgICBzdGVwTW9kZTogJ2R5bmFtaWMnLFxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IEFUVFJJQlVURV9UUkFOU0lUSU9OLFxuICAgICAgICAgICAgICAgIGFjY2Vzc29yOiAnZ2V0RWxldmF0aW9uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZpbGxDb2xvcnM6IHtcbiAgICAgICAgICAgICAgICBzaXplOiB0aGlzLnByb3BzLmNvbG9yRm9ybWF0Lmxlbmd0aCxcbiAgICAgICAgICAgICAgICB0eXBlOiAndW5vcm04JyxcbiAgICAgICAgICAgICAgICBzdGVwTW9kZTogJ2R5bmFtaWMnLFxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IEFUVFJJQlVURV9UUkFOU0lUSU9OLFxuICAgICAgICAgICAgICAgIGFjY2Vzc29yOiAnZ2V0RmlsbENvbG9yJyxcbiAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IERFRkFVTFRfQ09MT1JcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsaW5lQ29sb3JzOiB7XG4gICAgICAgICAgICAgICAgc2l6ZTogdGhpcy5wcm9wcy5jb2xvckZvcm1hdC5sZW5ndGgsXG4gICAgICAgICAgICAgICAgdHlwZTogJ3Vub3JtOCcsXG4gICAgICAgICAgICAgICAgc3RlcE1vZGU6ICdkeW5hbWljJyxcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBBVFRSSUJVVEVfVFJBTlNJVElPTixcbiAgICAgICAgICAgICAgICBhY2Nlc3NvcjogJ2dldExpbmVDb2xvcicsXG4gICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBERUZBVUxUX0NPTE9SXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGlja2luZ0NvbG9yczoge1xuICAgICAgICAgICAgICAgIHNpemU6IDQsXG4gICAgICAgICAgICAgICAgdHlwZTogJ3VpbnQ4JyxcbiAgICAgICAgICAgICAgICBzdGVwTW9kZTogJ2R5bmFtaWMnLFxuICAgICAgICAgICAgICAgIGFjY2Vzc29yOiAob2JqZWN0LCB7IGluZGV4LCB0YXJnZXQ6IHZhbHVlIH0pID0+IHRoaXMuZW5jb2RlUGlja2luZ0NvbG9yKG9iamVjdCAmJiBvYmplY3QuX19zb3VyY2UgPyBvYmplY3QuX19zb3VyY2UuaW5kZXggOiBpbmRleCwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIG1heC1sZW4gKi9cbiAgICB9XG4gICAgZ2V0UGlja2luZ0luZm8ocGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IGluZm8gPSBzdXBlci5nZXRQaWNraW5nSW5mbyhwYXJhbXMpO1xuICAgICAgICBjb25zdCB7IGluZGV4IH0gPSBpbmZvO1xuICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5wcm9wcy5kYXRhO1xuICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGNvbWVzIGZyb20gYSBjb21wb3NpdGUgbGF5ZXIsIHdyYXBwZWQgd2l0aCBnZXRTdWJMYXllclJvd1xuICAgICAgICBpZiAoZGF0YVswXSAmJiBkYXRhWzBdLl9fc291cmNlKSB7XG4gICAgICAgICAgICAvLyBpbmRleCBkZWNvZGVkIGZyb20gcGlja2luZyBjb2xvciByZWZlcnMgdG8gdGhlIHNvdXJjZSBpbmRleFxuICAgICAgICAgICAgaW5mby5vYmplY3QgPSBkYXRhLmZpbmQoZCA9PiBkLl9fc291cmNlLmluZGV4ID09PSBpbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGluZm87XG4gICAgfVxuICAgIGRpc2FibGVQaWNraW5nSW5kZXgob2JqZWN0SW5kZXgpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMucHJvcHMuZGF0YTtcbiAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBjb21lcyBmcm9tIGEgY29tcG9zaXRlIGxheWVyLCB3cmFwcGVkIHdpdGggZ2V0U3ViTGF5ZXJSb3dcbiAgICAgICAgaWYgKGRhdGFbMF0gJiYgZGF0YVswXS5fX3NvdXJjZSkge1xuICAgICAgICAgICAgLy8gaW5kZXggZGVjb2RlZCBmcm9tIHBpY2tpbmcgY29sb3IgcmVmZXJzIHRvIHRoZSBzb3VyY2UgaW5kZXhcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhW2ldLl9fc291cmNlLmluZGV4ID09PSBvYmplY3RJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kaXNhYmxlUGlja2luZ0luZGV4KGkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN1cGVyLmRpc2FibGVQaWNraW5nSW5kZXgob2JqZWN0SW5kZXgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRyYXcoeyB1bmlmb3JtcyB9KSB7XG4gICAgICAgIGNvbnN0IHsgZXh0cnVkZWQsIGZpbGxlZCwgd2lyZWZyYW1lLCBlbGV2YXRpb25TY2FsZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyB0b3BNb2RlbCwgc2lkZU1vZGVsLCB3aXJlZnJhbWVNb2RlbCwgcG9seWdvblRlc3NlbGF0b3IgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHJlbmRlclVuaWZvcm1zID0ge1xuICAgICAgICAgICAgZXh0cnVkZWQ6IEJvb2xlYW4oZXh0cnVkZWQpLFxuICAgICAgICAgICAgZWxldmF0aW9uU2NhbGUsXG4gICAgICAgICAgICBpc1dpcmVmcmFtZTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgLy8gTm90ZSAtIHRoZSBvcmRlciBpcyBpbXBvcnRhbnRcbiAgICAgICAgaWYgKHdpcmVmcmFtZU1vZGVsICYmIHdpcmVmcmFtZSkge1xuICAgICAgICAgICAgd2lyZWZyYW1lTW9kZWwuc2V0SW5zdGFuY2VDb3VudChwb2x5Z29uVGVzc2VsYXRvci5pbnN0YW5jZUNvdW50IC0gMSk7XG4gICAgICAgICAgICB3aXJlZnJhbWVNb2RlbC5zaGFkZXJJbnB1dHMuc2V0UHJvcHMoeyBzb2xpZFBvbHlnb246IHsgLi4ucmVuZGVyVW5pZm9ybXMsIGlzV2lyZWZyYW1lOiB0cnVlIH0gfSk7XG4gICAgICAgICAgICB3aXJlZnJhbWVNb2RlbC5kcmF3KHRoaXMuY29udGV4dC5yZW5kZXJQYXNzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2lkZU1vZGVsICYmIGZpbGxlZCkge1xuICAgICAgICAgICAgc2lkZU1vZGVsLnNldEluc3RhbmNlQ291bnQocG9seWdvblRlc3NlbGF0b3IuaW5zdGFuY2VDb3VudCAtIDEpO1xuICAgICAgICAgICAgc2lkZU1vZGVsLnNoYWRlcklucHV0cy5zZXRQcm9wcyh7IHNvbGlkUG9seWdvbjogcmVuZGVyVW5pZm9ybXMgfSk7XG4gICAgICAgICAgICBzaWRlTW9kZWwuZHJhdyh0aGlzLmNvbnRleHQucmVuZGVyUGFzcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRvcE1vZGVsICYmIGZpbGxlZCkge1xuICAgICAgICAgICAgdG9wTW9kZWwuc2V0VmVydGV4Q291bnQocG9seWdvblRlc3NlbGF0b3IudmVydGV4Q291bnQpO1xuICAgICAgICAgICAgdG9wTW9kZWwuc2hhZGVySW5wdXRzLnNldFByb3BzKHsgc29saWRQb2x5Z29uOiByZW5kZXJVbmlmb3JtcyB9KTtcbiAgICAgICAgICAgIHRvcE1vZGVsLmRyYXcodGhpcy5jb250ZXh0LnJlbmRlclBhc3MpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZVN0YXRlKHVwZGF0ZVBhcmFtcykge1xuICAgICAgICBzdXBlci51cGRhdGVTdGF0ZSh1cGRhdGVQYXJhbXMpO1xuICAgICAgICB0aGlzLnVwZGF0ZUdlb21ldHJ5KHVwZGF0ZVBhcmFtcyk7XG4gICAgICAgIGNvbnN0IHsgcHJvcHMsIG9sZFByb3BzLCBjaGFuZ2VGbGFncyB9ID0gdXBkYXRlUGFyYW1zO1xuICAgICAgICBjb25zdCBhdHRyaWJ1dGVNYW5hZ2VyID0gdGhpcy5nZXRBdHRyaWJ1dGVNYW5hZ2VyKCk7XG4gICAgICAgIGNvbnN0IHJlZ2VuZXJhdGVNb2RlbHMgPSBjaGFuZ2VGbGFncy5leHRlbnNpb25zQ2hhbmdlZCB8fFxuICAgICAgICAgICAgcHJvcHMuZmlsbGVkICE9PSBvbGRQcm9wcy5maWxsZWQgfHxcbiAgICAgICAgICAgIHByb3BzLmV4dHJ1ZGVkICE9PSBvbGRQcm9wcy5leHRydWRlZDtcbiAgICAgICAgaWYgKHJlZ2VuZXJhdGVNb2RlbHMpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUubW9kZWxzPy5mb3JFYWNoKG1vZGVsID0+IG1vZGVsLmRlc3Ryb3koKSk7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHRoaXMuX2dldE1vZGVscygpKTtcbiAgICAgICAgICAgIGF0dHJpYnV0ZU1hbmFnZXIuaW52YWxpZGF0ZUFsbCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZUdlb21ldHJ5KHsgcHJvcHMsIG9sZFByb3BzLCBjaGFuZ2VGbGFncyB9KSB7XG4gICAgICAgIGNvbnN0IGdlb21ldHJ5Q29uZmlnQ2hhbmdlZCA9IGNoYW5nZUZsYWdzLmRhdGFDaGFuZ2VkIHx8XG4gICAgICAgICAgICAoY2hhbmdlRmxhZ3MudXBkYXRlVHJpZ2dlcnNDaGFuZ2VkICYmXG4gICAgICAgICAgICAgICAgKGNoYW5nZUZsYWdzLnVwZGF0ZVRyaWdnZXJzQ2hhbmdlZC5hbGwgfHwgY2hhbmdlRmxhZ3MudXBkYXRlVHJpZ2dlcnNDaGFuZ2VkLmdldFBvbHlnb24pKTtcbiAgICAgICAgLy8gV2hlbiB0aGUgZ2VvbWV0cnkgY29uZmlnICBvciB0aGUgZGF0YSBpcyBjaGFuZ2VkLFxuICAgICAgICAvLyB0ZXNzZWxsYXRvciBuZWVkcyB0byBiZSBpbnZva2VkXG4gICAgICAgIGlmIChnZW9tZXRyeUNvbmZpZ0NoYW5nZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcG9seWdvblRlc3NlbGF0b3IgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgICAgICBjb25zdCBidWZmZXJzID0gcHJvcHMuZGF0YS5hdHRyaWJ1dGVzIHx8IHt9O1xuICAgICAgICAgICAgcG9seWdvblRlc3NlbGF0b3IudXBkYXRlR2VvbWV0cnkoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHByb3BzLmRhdGEsXG4gICAgICAgICAgICAgICAgbm9ybWFsaXplOiBwcm9wcy5fbm9ybWFsaXplLFxuICAgICAgICAgICAgICAgIGdlb21ldHJ5QnVmZmVyOiBidWZmZXJzLmdldFBvbHlnb24sXG4gICAgICAgICAgICAgICAgYnVmZmVycyxcbiAgICAgICAgICAgICAgICBnZXRHZW9tZXRyeTogcHJvcHMuZ2V0UG9seWdvbixcbiAgICAgICAgICAgICAgICBwb3NpdGlvbkZvcm1hdDogcHJvcHMucG9zaXRpb25Gb3JtYXQsXG4gICAgICAgICAgICAgICAgd3JhcExvbmdpdHVkZTogcHJvcHMud3JhcExvbmdpdHVkZSxcbiAgICAgICAgICAgICAgICAvLyBUT0RPIC0gbW92ZSB0aGUgZmxhZyBvdXQgb2YgdGhlIHZpZXdwb3J0XG4gICAgICAgICAgICAgICAgcmVzb2x1dGlvbjogdGhpcy5jb250ZXh0LnZpZXdwb3J0LnJlc29sdXRpb24sXG4gICAgICAgICAgICAgICAgZnA2NDogdGhpcy51c2U2NGJpdFBvc2l0aW9ucygpLFxuICAgICAgICAgICAgICAgIGRhdGFDaGFuZ2VkOiBjaGFuZ2VGbGFncy5kYXRhQ2hhbmdlZCxcbiAgICAgICAgICAgICAgICBmdWxsM2Q6IHByb3BzLl9mdWxsM2RcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgbnVtSW5zdGFuY2VzOiBwb2x5Z29uVGVzc2VsYXRvci5pbnN0YW5jZUNvdW50LFxuICAgICAgICAgICAgICAgIHN0YXJ0SW5kaWNlczogcG9seWdvblRlc3NlbGF0b3IudmVydGV4U3RhcnRzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghY2hhbmdlRmxhZ3MuZGF0YUNoYW5nZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBCYXNlIGBsYXllci51cGRhdGVTdGF0ZWAgb25seSBpbnZhbGlkYXRlcyBhbGwgYXR0cmlidXRlcyBvbiBkYXRhIGNoYW5nZVxuICAgICAgICAgICAgICAgIC8vIENvdmVyIHRoZSByZXN0IG9mIHRoZSBzY2VuYXJpb3MgaGVyZVxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0QXR0cmlidXRlTWFuYWdlcigpLmludmFsaWRhdGVBbGwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBfZ2V0TW9kZWxzKCkge1xuICAgICAgICBjb25zdCB7IGlkLCBmaWxsZWQsIGV4dHJ1ZGVkIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgdG9wTW9kZWw7XG4gICAgICAgIGxldCBzaWRlTW9kZWw7XG4gICAgICAgIGxldCB3aXJlZnJhbWVNb2RlbDtcbiAgICAgICAgaWYgKGZpbGxlZCkge1xuICAgICAgICAgICAgY29uc3Qgc2hhZGVycyA9IHRoaXMuZ2V0U2hhZGVycygndG9wJyk7XG4gICAgICAgICAgICBzaGFkZXJzLmRlZmluZXMuTk9OX0lOU1RBTkNFRF9NT0RFTCA9IDE7XG4gICAgICAgICAgICBjb25zdCBidWZmZXJMYXlvdXQgPSB0aGlzLmdldEF0dHJpYnV0ZU1hbmFnZXIoKS5nZXRCdWZmZXJMYXlvdXRzKHsgaXNJbnN0YW5jZWQ6IGZhbHNlIH0pO1xuICAgICAgICAgICAgdG9wTW9kZWwgPSBuZXcgTW9kZWwodGhpcy5jb250ZXh0LmRldmljZSwge1xuICAgICAgICAgICAgICAgIC4uLnNoYWRlcnMsXG4gICAgICAgICAgICAgICAgaWQ6IGAke2lkfS10b3BgLFxuICAgICAgICAgICAgICAgIHRvcG9sb2d5OiAndHJpYW5nbGUtbGlzdCcsXG4gICAgICAgICAgICAgICAgYnVmZmVyTGF5b3V0LFxuICAgICAgICAgICAgICAgIGlzSW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB1c2VyRGF0YToge1xuICAgICAgICAgICAgICAgICAgICBleGNsdWRlQXR0cmlidXRlczogeyBpbnN0YW5jZVZlcnRleFZhbGlkOiB0cnVlIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXh0cnVkZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlckxheW91dCA9IHRoaXMuZ2V0QXR0cmlidXRlTWFuYWdlcigpLmdldEJ1ZmZlckxheW91dHMoeyBpc0luc3RhbmNlZDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIHNpZGVNb2RlbCA9IG5ldyBNb2RlbCh0aGlzLmNvbnRleHQuZGV2aWNlLCB7XG4gICAgICAgICAgICAgICAgLi4udGhpcy5nZXRTaGFkZXJzKCdzaWRlJyksXG4gICAgICAgICAgICAgICAgaWQ6IGAke2lkfS1zaWRlYCxcbiAgICAgICAgICAgICAgICBidWZmZXJMYXlvdXQsXG4gICAgICAgICAgICAgICAgZ2VvbWV0cnk6IG5ldyBHZW9tZXRyeSh7XG4gICAgICAgICAgICAgICAgICAgIHRvcG9sb2d5OiAndHJpYW5nbGUtc3RyaXAnLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB0b3AgcmlnaHQgLSB0b3AgbGVmdCAtIGJvdHRvbSByaWdodCAtIGJvdHRvbSBsZWZ0XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiAyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBuZXcgRmxvYXQzMkFycmF5KFsxLCAwLCAwLCAwLCAxLCAxLCAwLCAxXSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIGlzSW5zdGFuY2VkOiB0cnVlLFxuICAgICAgICAgICAgICAgIHVzZXJEYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGV4Y2x1ZGVBdHRyaWJ1dGVzOiB7IGluZGljZXM6IHRydWUgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgd2lyZWZyYW1lTW9kZWwgPSBuZXcgTW9kZWwodGhpcy5jb250ZXh0LmRldmljZSwge1xuICAgICAgICAgICAgICAgIC4uLnRoaXMuZ2V0U2hhZGVycygnc2lkZScpLFxuICAgICAgICAgICAgICAgIGlkOiBgJHtpZH0td2lyZWZyYW1lYCxcbiAgICAgICAgICAgICAgICBidWZmZXJMYXlvdXQsXG4gICAgICAgICAgICAgICAgZ2VvbWV0cnk6IG5ldyBHZW9tZXRyeSh7XG4gICAgICAgICAgICAgICAgICAgIHRvcG9sb2d5OiAnbGluZS1zdHJpcCcsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRvcCByaWdodCAtIHRvcCBsZWZ0IC0gYm90dG9tIGxlZnQgLSBib3R0b20gcmlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6IDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG5ldyBGbG9hdDMyQXJyYXkoWzEsIDAsIDAsIDAsIDAsIDEsIDEsIDFdKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgaXNJbnN0YW5jZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgdXNlckRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgZXhjbHVkZUF0dHJpYnV0ZXM6IHsgaW5kaWNlczogdHJ1ZSB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1vZGVsczogW3NpZGVNb2RlbCwgd2lyZWZyYW1lTW9kZWwsIHRvcE1vZGVsXS5maWx0ZXIoQm9vbGVhbiksXG4gICAgICAgICAgICB0b3BNb2RlbCxcbiAgICAgICAgICAgIHNpZGVNb2RlbCxcbiAgICAgICAgICAgIHdpcmVmcmFtZU1vZGVsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNhbGN1bGF0ZUluZGljZXMoYXR0cmlidXRlKSB7XG4gICAgICAgIGNvbnN0IHsgcG9seWdvblRlc3NlbGF0b3IgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGF0dHJpYnV0ZS5zdGFydEluZGljZXMgPSBwb2x5Z29uVGVzc2VsYXRvci5pbmRleFN0YXJ0cztcbiAgICAgICAgYXR0cmlidXRlLnZhbHVlID0gcG9seWdvblRlc3NlbGF0b3IuZ2V0KCdpbmRpY2VzJyk7XG4gICAgfVxuICAgIGNhbGN1bGF0ZVBvc2l0aW9ucyhhdHRyaWJ1dGUpIHtcbiAgICAgICAgY29uc3QgeyBwb2x5Z29uVGVzc2VsYXRvciB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgYXR0cmlidXRlLnN0YXJ0SW5kaWNlcyA9IHBvbHlnb25UZXNzZWxhdG9yLnZlcnRleFN0YXJ0cztcbiAgICAgICAgYXR0cmlidXRlLnZhbHVlID0gcG9seWdvblRlc3NlbGF0b3IuZ2V0KCdwb3NpdGlvbnMnKTtcbiAgICB9XG4gICAgY2FsY3VsYXRlVmVydGV4VmFsaWQoYXR0cmlidXRlKSB7XG4gICAgICAgIGF0dHJpYnV0ZS52YWx1ZSA9IHRoaXMuc3RhdGUucG9seWdvblRlc3NlbGF0b3IuZ2V0KCd2ZXJ0ZXhWYWxpZCcpO1xuICAgIH1cbn1cblNvbGlkUG9seWdvbkxheWVyLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblNvbGlkUG9seWdvbkxheWVyLmxheWVyTmFtZSA9ICdTb2xpZFBvbHlnb25MYXllcic7XG5leHBvcnQgZGVmYXVsdCBTb2xpZFBvbHlnb25MYXllcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/engine/dist/geometry/geometry.js":
/*!****************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/geometry/geometry.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Geometry: () => (/* binding */ Geometry)\n/* harmony export */ });\n/* harmony import */ var _utils_uid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/uid.js */ \"./node_modules/@luma.gl/engine/dist/utils/uid.js\");\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nclass Geometry {\n    id;\n    /** Determines how vertices are read from the 'vertex' attributes */\n    topology;\n    vertexCount;\n    indices;\n    attributes;\n    userData = {};\n    constructor(props) {\n        const { attributes = {}, indices = null, vertexCount = null } = props;\n        this.id = props.id || (0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_0__.uid)('geometry');\n        this.topology = props.topology;\n        if (indices) {\n            this.indices = ArrayBuffer.isView(indices) ? { value: indices, size: 1 } : indices;\n        }\n        // @ts-expect-error\n        this.attributes = {};\n        for (const [attributeName, attributeValue] of Object.entries(attributes)) {\n            // Wrap \"unwrapped\" arrays and try to autodetect their type\n            const attribute = ArrayBuffer.isView(attributeValue)\n                ? { value: attributeValue }\n                : attributeValue;\n            if (!ArrayBuffer.isView(attribute.value)) {\n                throw new Error(`${this._print(attributeName)}: must be typed array or object with value as typed array`);\n            }\n            if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n                attribute.size = 3;\n            }\n            // Move indices to separate field\n            if (attributeName === 'indices') {\n                if (this.indices) {\n                    throw new Error('Multiple indices detected');\n                }\n                this.indices = attribute;\n            }\n            else {\n                this.attributes[attributeName] = attribute;\n            }\n        }\n        if (this.indices && this.indices.isIndexed !== undefined) {\n            this.indices = Object.assign({}, this.indices);\n            delete this.indices.isIndexed;\n        }\n        this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n    }\n    getVertexCount() {\n        return this.vertexCount;\n    }\n    /**\n     * Return an object with all attributes plus indices added as a field.\n     * TODO Geometry types are a mess\n     */\n    getAttributes() {\n        return this.indices ? { indices: this.indices, ...this.attributes } : this.attributes;\n    }\n    // PRIVATE\n    _print(attributeName) {\n        return `Geometry ${this.id} attribute ${attributeName}`;\n    }\n    /**\n     * GeometryAttribute\n     * value: typed array\n     * type: indices, vertices, uvs\n     * size: elements per vertex\n     * target: WebGL buffer type (string or constant)\n     *\n     * @param attributes\n     * @param indices\n     * @returns\n     */\n    _setAttributes(attributes, indices) {\n        return this;\n    }\n    _calculateVertexCount(attributes, indices) {\n        if (indices) {\n            return indices.value.length;\n        }\n        let vertexCount = Infinity;\n        for (const attribute of Object.values(attributes)) {\n            const { value, size, constant } = attribute;\n            if (!constant && value && size !== undefined && size >= 1) {\n                vertexCount = Math.min(vertexCount, value.length / size);\n            }\n        }\n        // assert(Number.isFinite(vertexCount));\n        return vertexCount;\n    }\n}\n//# sourceMappingURL=geometry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZW5naW5lL2Rpc3QvZ2VvbWV0cnkvZ2VvbWV0cnkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL2VuZ2luZS9kaXN0L2dlb21ldHJ5L2dlb21ldHJ5LmpzPzJiMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbHVtYS5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5pbXBvcnQgeyB1aWQgfSBmcm9tIFwiLi4vdXRpbHMvdWlkLmpzXCI7XG5leHBvcnQgY2xhc3MgR2VvbWV0cnkge1xuICAgIGlkO1xuICAgIC8qKiBEZXRlcm1pbmVzIGhvdyB2ZXJ0aWNlcyBhcmUgcmVhZCBmcm9tIHRoZSAndmVydGV4JyBhdHRyaWJ1dGVzICovXG4gICAgdG9wb2xvZ3k7XG4gICAgdmVydGV4Q291bnQ7XG4gICAgaW5kaWNlcztcbiAgICBhdHRyaWJ1dGVzO1xuICAgIHVzZXJEYXRhID0ge307XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgY29uc3QgeyBhdHRyaWJ1dGVzID0ge30sIGluZGljZXMgPSBudWxsLCB2ZXJ0ZXhDb3VudCA9IG51bGwgfSA9IHByb3BzO1xuICAgICAgICB0aGlzLmlkID0gcHJvcHMuaWQgfHwgdWlkKCdnZW9tZXRyeScpO1xuICAgICAgICB0aGlzLnRvcG9sb2d5ID0gcHJvcHMudG9wb2xvZ3k7XG4gICAgICAgIGlmIChpbmRpY2VzKSB7XG4gICAgICAgICAgICB0aGlzLmluZGljZXMgPSBBcnJheUJ1ZmZlci5pc1ZpZXcoaW5kaWNlcykgPyB7IHZhbHVlOiBpbmRpY2VzLCBzaXplOiAxIH0gOiBpbmRpY2VzO1xuICAgICAgICB9XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0ge307XG4gICAgICAgIGZvciAoY29uc3QgW2F0dHJpYnV0ZU5hbWUsIGF0dHJpYnV0ZVZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzKSkge1xuICAgICAgICAgICAgLy8gV3JhcCBcInVud3JhcHBlZFwiIGFycmF5cyBhbmQgdHJ5IHRvIGF1dG9kZXRlY3QgdGhlaXIgdHlwZVxuICAgICAgICAgICAgY29uc3QgYXR0cmlidXRlID0gQXJyYXlCdWZmZXIuaXNWaWV3KGF0dHJpYnV0ZVZhbHVlKVxuICAgICAgICAgICAgICAgID8geyB2YWx1ZTogYXR0cmlidXRlVmFsdWUgfVxuICAgICAgICAgICAgICAgIDogYXR0cmlidXRlVmFsdWU7XG4gICAgICAgICAgICBpZiAoIUFycmF5QnVmZmVyLmlzVmlldyhhdHRyaWJ1dGUudmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke3RoaXMuX3ByaW50KGF0dHJpYnV0ZU5hbWUpfTogbXVzdCBiZSB0eXBlZCBhcnJheSBvciBvYmplY3Qgd2l0aCB2YWx1ZSBhcyB0eXBlZCBhcnJheWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKChhdHRyaWJ1dGVOYW1lID09PSAnUE9TSVRJT04nIHx8IGF0dHJpYnV0ZU5hbWUgPT09ICdwb3NpdGlvbnMnKSAmJiAhYXR0cmlidXRlLnNpemUpIHtcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGUuc2l6ZSA9IDM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNb3ZlIGluZGljZXMgdG8gc2VwYXJhdGUgZmllbGRcbiAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVOYW1lID09PSAnaW5kaWNlcycpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pbmRpY2VzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTXVsdGlwbGUgaW5kaWNlcyBkZXRlY3RlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmluZGljZXMgPSBhdHRyaWJ1dGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0gPSBhdHRyaWJ1dGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaW5kaWNlcyAmJiB0aGlzLmluZGljZXMuaXNJbmRleGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuaW5kaWNlcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuaW5kaWNlcyk7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5pbmRpY2VzLmlzSW5kZXhlZDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnZlcnRleENvdW50ID0gdmVydGV4Q291bnQgfHwgdGhpcy5fY2FsY3VsYXRlVmVydGV4Q291bnQodGhpcy5hdHRyaWJ1dGVzLCB0aGlzLmluZGljZXMpO1xuICAgIH1cbiAgICBnZXRWZXJ0ZXhDb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmVydGV4Q291bnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiBhbiBvYmplY3Qgd2l0aCBhbGwgYXR0cmlidXRlcyBwbHVzIGluZGljZXMgYWRkZWQgYXMgYSBmaWVsZC5cbiAgICAgKiBUT0RPIEdlb21ldHJ5IHR5cGVzIGFyZSBhIG1lc3NcbiAgICAgKi9cbiAgICBnZXRBdHRyaWJ1dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbmRpY2VzID8geyBpbmRpY2VzOiB0aGlzLmluZGljZXMsIC4uLnRoaXMuYXR0cmlidXRlcyB9IDogdGhpcy5hdHRyaWJ1dGVzO1xuICAgIH1cbiAgICAvLyBQUklWQVRFXG4gICAgX3ByaW50KGF0dHJpYnV0ZU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGBHZW9tZXRyeSAke3RoaXMuaWR9IGF0dHJpYnV0ZSAke2F0dHJpYnV0ZU5hbWV9YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VvbWV0cnlBdHRyaWJ1dGVcbiAgICAgKiB2YWx1ZTogdHlwZWQgYXJyYXlcbiAgICAgKiB0eXBlOiBpbmRpY2VzLCB2ZXJ0aWNlcywgdXZzXG4gICAgICogc2l6ZTogZWxlbWVudHMgcGVyIHZlcnRleFxuICAgICAqIHRhcmdldDogV2ViR0wgYnVmZmVyIHR5cGUgKHN0cmluZyBvciBjb25zdGFudClcbiAgICAgKlxuICAgICAqIEBwYXJhbSBhdHRyaWJ1dGVzXG4gICAgICogQHBhcmFtIGluZGljZXNcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIF9zZXRBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMsIGluZGljZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIF9jYWxjdWxhdGVWZXJ0ZXhDb3VudChhdHRyaWJ1dGVzLCBpbmRpY2VzKSB7XG4gICAgICAgIGlmIChpbmRpY2VzKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5kaWNlcy52YWx1ZS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHZlcnRleENvdW50ID0gSW5maW5pdHk7XG4gICAgICAgIGZvciAoY29uc3QgYXR0cmlidXRlIG9mIE9iamVjdC52YWx1ZXMoYXR0cmlidXRlcykpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgdmFsdWUsIHNpemUsIGNvbnN0YW50IH0gPSBhdHRyaWJ1dGU7XG4gICAgICAgICAgICBpZiAoIWNvbnN0YW50ICYmIHZhbHVlICYmIHNpemUgIT09IHVuZGVmaW5lZCAmJiBzaXplID49IDEpIHtcbiAgICAgICAgICAgICAgICB2ZXJ0ZXhDb3VudCA9IE1hdGgubWluKHZlcnRleENvdW50LCB2YWx1ZS5sZW5ndGggLyBzaXplKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBhc3NlcnQoTnVtYmVyLmlzRmluaXRlKHZlcnRleENvdW50KSk7XG4gICAgICAgIHJldHVybiB2ZXJ0ZXhDb3VudDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZW9tZXRyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/engine/dist/geometry/geometry.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/shadertools/dist/modules/engine/picking/picking.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/modules/engine/picking/picking.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   picking: () => (/* binding */ picking)\n/* harmony export */ });\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// cyan color\nconst DEFAULT_HIGHLIGHT_COLOR = [0, 1, 1, 1];\nconst vs = /* glsl */ `\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nout vec4 picking_vRGBcolor_Avalid;\n\n// Normalize unsigned byte color to 0-1 range\nvec3 picking_normalizeColor(vec3 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\n// Normalize unsigned byte color to 0-1 range\nvec4 picking_normalizeColor(vec4 color) {\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\n}\n\nbool picking_isColorZero(vec3 color) {\n  return dot(color, vec3(1.0)) < 0.00001;\n}\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.00001;\n}\n\n// Check if this vertex is highlighted \nbool isVertexHighlighted(vec3 vertexColor) {\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\n  return\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\n}\n\n// Set the current picking color\nvoid picking_setPickingColor(vec3 pickingColor) {\n  pickingColor = picking_normalizeColor(pickingColor);\n\n  if (bool(picking.isActive)) {\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!bool(picking.isAttribute)) {\n      // Stores the picking color so that the fragment shader can render it during picking\n      picking_vRGBcolor_Avalid.rgb = pickingColor;\n    }\n  } else {\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec2 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\n\nvoid picking_setPickingAttribute(vec3 value) {\n  if (bool(picking.isAttribute)) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n`;\nconst fs = /* glsl */ `\\\nuniform pickingUniforms {\n  float isActive;\n  float isAttribute;\n  float isHighlightActive;\n  float useFloatColors;\n  vec3 highlightedObjectColor;\n  vec4 highlightColor;\n} picking;\n\nin vec4 picking_vRGBcolor_Avalid;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  // If we are still picking, we don't highlight\n  if (picking.isActive > 0.5) {\n    return color;\n  }\n\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    // Blend in highlight color based on its alpha value\n    float highLightAlpha = picking.highlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  if (bool(picking.isActive)) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highlightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highlightColor);\n}\n`;\n/**\n * Provides support for color-coding-based picking and highlighting.\n * In particular, supports picking a specific instance in an instanced\n * draw call and highlighting an instance based on its picking color,\n * and correspondingly, supports picking and highlighting groups of\n * primitives with the same picking color in non-instanced draw-calls\n */\nconst picking = {\n    props: {},\n    uniforms: {},\n    name: 'picking',\n    uniformTypes: {\n        isActive: 'f32',\n        isAttribute: 'f32',\n        isHighlightActive: 'f32',\n        useFloatColors: 'f32',\n        highlightedObjectColor: 'vec3<f32>',\n        highlightColor: 'vec4<f32>'\n    },\n    defaultUniforms: {\n        isActive: false,\n        isAttribute: false,\n        isHighlightActive: false,\n        useFloatColors: true,\n        highlightedObjectColor: [0, 0, 0],\n        highlightColor: DEFAULT_HIGHLIGHT_COLOR\n    },\n    vs,\n    fs,\n    getUniforms\n};\nfunction getUniforms(opts = {}, prevUniforms) {\n    const uniforms = {};\n    if (opts.highlightedObjectColor === undefined) {\n        // Unless highlightedObjectColor explicitly null or set, do not update state\n    }\n    else if (opts.highlightedObjectColor === null) {\n        uniforms.isHighlightActive = false;\n    }\n    else {\n        uniforms.isHighlightActive = true;\n        const highlightedObjectColor = opts.highlightedObjectColor.slice(0, 3);\n        uniforms.highlightedObjectColor = highlightedObjectColor;\n    }\n    if (opts.highlightColor) {\n        const color = Array.from(opts.highlightColor, x => x / 255);\n        if (!Number.isFinite(color[3])) {\n            color[3] = 1;\n        }\n        uniforms.highlightColor = color;\n    }\n    if (opts.isActive !== undefined) {\n        uniforms.isActive = Boolean(opts.isActive);\n        uniforms.isAttribute = Boolean(opts.isAttribute);\n    }\n    if (opts.useFloatColors !== undefined) {\n        uniforms.useFloatColors = Boolean(opts.useFloatColors);\n    }\n    return uniforms;\n}\n//# sourceMappingURL=picking.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9tb2R1bGVzL2VuZ2luZS9waWNraW5nL3BpY2tpbmcuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvbW9kdWxlcy9lbmdpbmUvcGlja2luZy9waWNraW5nLmpzPzQxZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbHVtYS5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG4vLyBjeWFuIGNvbG9yXG5jb25zdCBERUZBVUxUX0hJR0hMSUdIVF9DT0xPUiA9IFswLCAxLCAxLCAxXTtcbmNvbnN0IHZzID0gLyogZ2xzbCAqLyBgXFxcbnVuaWZvcm0gcGlja2luZ1VuaWZvcm1zIHtcbiAgZmxvYXQgaXNBY3RpdmU7XG4gIGZsb2F0IGlzQXR0cmlidXRlO1xuICBmbG9hdCBpc0hpZ2hsaWdodEFjdGl2ZTtcbiAgZmxvYXQgdXNlRmxvYXRDb2xvcnM7XG4gIHZlYzMgaGlnaGxpZ2h0ZWRPYmplY3RDb2xvcjtcbiAgdmVjNCBoaWdobGlnaHRDb2xvcjtcbn0gcGlja2luZztcblxub3V0IHZlYzQgcGlja2luZ192UkdCY29sb3JfQXZhbGlkO1xuXG4vLyBOb3JtYWxpemUgdW5zaWduZWQgYnl0ZSBjb2xvciB0byAwLTEgcmFuZ2VcbnZlYzMgcGlja2luZ19ub3JtYWxpemVDb2xvcih2ZWMzIGNvbG9yKSB7XG4gIHJldHVybiBwaWNraW5nLnVzZUZsb2F0Q29sb3JzID4gMC41ID8gY29sb3IgOiBjb2xvciAvIDI1NS4wO1xufVxuXG4vLyBOb3JtYWxpemUgdW5zaWduZWQgYnl0ZSBjb2xvciB0byAwLTEgcmFuZ2VcbnZlYzQgcGlja2luZ19ub3JtYWxpemVDb2xvcih2ZWM0IGNvbG9yKSB7XG4gIHJldHVybiBwaWNraW5nLnVzZUZsb2F0Q29sb3JzID4gMC41ID8gY29sb3IgOiBjb2xvciAvIDI1NS4wO1xufVxuXG5ib29sIHBpY2tpbmdfaXNDb2xvclplcm8odmVjMyBjb2xvcikge1xuICByZXR1cm4gZG90KGNvbG9yLCB2ZWMzKDEuMCkpIDwgMC4wMDAwMTtcbn1cblxuYm9vbCBwaWNraW5nX2lzQ29sb3JWYWxpZCh2ZWMzIGNvbG9yKSB7XG4gIHJldHVybiBkb3QoY29sb3IsIHZlYzMoMS4wKSkgPiAwLjAwMDAxO1xufVxuXG4vLyBDaGVjayBpZiB0aGlzIHZlcnRleCBpcyBoaWdobGlnaHRlZCBcbmJvb2wgaXNWZXJ0ZXhIaWdobGlnaHRlZCh2ZWMzIHZlcnRleENvbG9yKSB7XG4gIHZlYzMgaGlnaGxpZ2h0ZWRPYmplY3RDb2xvciA9IHBpY2tpbmdfbm9ybWFsaXplQ29sb3IocGlja2luZy5oaWdobGlnaHRlZE9iamVjdENvbG9yKTtcbiAgcmV0dXJuXG4gICAgYm9vbChwaWNraW5nLmlzSGlnaGxpZ2h0QWN0aXZlKSAmJiBwaWNraW5nX2lzQ29sb3JaZXJvKGFicyh2ZXJ0ZXhDb2xvciAtIGhpZ2hsaWdodGVkT2JqZWN0Q29sb3IpKTtcbn1cblxuLy8gU2V0IHRoZSBjdXJyZW50IHBpY2tpbmcgY29sb3JcbnZvaWQgcGlja2luZ19zZXRQaWNraW5nQ29sb3IodmVjMyBwaWNraW5nQ29sb3IpIHtcbiAgcGlja2luZ0NvbG9yID0gcGlja2luZ19ub3JtYWxpemVDb2xvcihwaWNraW5nQ29sb3IpO1xuXG4gIGlmIChib29sKHBpY2tpbmcuaXNBY3RpdmUpKSB7XG4gICAgLy8gVXNlIGFscGhhIGFzIHRoZSB2YWxpZGl0eSBmbGFnLiBJZiBwaWNraW5nQ29sb3IgaXMgWzAsIDAsIDBdIGZyYWdtZW50IGlzIG5vbi1waWNrYWJsZVxuICAgIHBpY2tpbmdfdlJHQmNvbG9yX0F2YWxpZC5hID0gZmxvYXQocGlja2luZ19pc0NvbG9yVmFsaWQocGlja2luZ0NvbG9yKSk7XG5cbiAgICBpZiAoIWJvb2wocGlja2luZy5pc0F0dHJpYnV0ZSkpIHtcbiAgICAgIC8vIFN0b3JlcyB0aGUgcGlja2luZyBjb2xvciBzbyB0aGF0IHRoZSBmcmFnbWVudCBzaGFkZXIgY2FuIHJlbmRlciBpdCBkdXJpbmcgcGlja2luZ1xuICAgICAgcGlja2luZ192UkdCY29sb3JfQXZhbGlkLnJnYiA9IHBpY2tpbmdDb2xvcjtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gRG8gdGhlIGNvbXBhcmlzb24gd2l0aCBzZWxlY3RlZCBpdGVtIGNvbG9yIGluIHZlcnRleCBzaGFkZXIgYXMgaXQgc2hvdWxkIG1lYW4gZmV3ZXIgY29tcGFyZXNcbiAgICBwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQuYSA9IGZsb2F0KGlzVmVydGV4SGlnaGxpZ2h0ZWQocGlja2luZ0NvbG9yKSk7XG4gIH1cbn1cblxudm9pZCBwaWNraW5nX3NldFBpY2tpbmdBdHRyaWJ1dGUoZmxvYXQgdmFsdWUpIHtcbiAgaWYgKGJvb2wocGlja2luZy5pc0F0dHJpYnV0ZSkpIHtcbiAgICBwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQuciA9IHZhbHVlO1xuICB9XG59XG5cbnZvaWQgcGlja2luZ19zZXRQaWNraW5nQXR0cmlidXRlKHZlYzIgdmFsdWUpIHtcbiAgaWYgKGJvb2wocGlja2luZy5pc0F0dHJpYnV0ZSkpIHtcbiAgICBwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQucmcgPSB2YWx1ZTtcbiAgfVxufVxuXG52b2lkIHBpY2tpbmdfc2V0UGlja2luZ0F0dHJpYnV0ZSh2ZWMzIHZhbHVlKSB7XG4gIGlmIChib29sKHBpY2tpbmcuaXNBdHRyaWJ1dGUpKSB7XG4gICAgcGlja2luZ192UkdCY29sb3JfQXZhbGlkLnJnYiA9IHZhbHVlO1xuICB9XG59XG5gO1xuY29uc3QgZnMgPSAvKiBnbHNsICovIGBcXFxudW5pZm9ybSBwaWNraW5nVW5pZm9ybXMge1xuICBmbG9hdCBpc0FjdGl2ZTtcbiAgZmxvYXQgaXNBdHRyaWJ1dGU7XG4gIGZsb2F0IGlzSGlnaGxpZ2h0QWN0aXZlO1xuICBmbG9hdCB1c2VGbG9hdENvbG9ycztcbiAgdmVjMyBoaWdobGlnaHRlZE9iamVjdENvbG9yO1xuICB2ZWM0IGhpZ2hsaWdodENvbG9yO1xufSBwaWNraW5nO1xuXG5pbiB2ZWM0IHBpY2tpbmdfdlJHQmNvbG9yX0F2YWxpZDtcblxuLypcbiAqIFJldHVybnMgaGlnaGxpZ2h0IGNvbG9yIGlmIHRoaXMgaXRlbSBpcyBzZWxlY3RlZC5cbiAqL1xudmVjNCBwaWNraW5nX2ZpbHRlckhpZ2hsaWdodENvbG9yKHZlYzQgY29sb3IpIHtcbiAgLy8gSWYgd2UgYXJlIHN0aWxsIHBpY2tpbmcsIHdlIGRvbid0IGhpZ2hsaWdodFxuICBpZiAocGlja2luZy5pc0FjdGl2ZSA+IDAuNSkge1xuICAgIHJldHVybiBjb2xvcjtcbiAgfVxuXG4gIGJvb2wgc2VsZWN0ZWQgPSBib29sKHBpY2tpbmdfdlJHQmNvbG9yX0F2YWxpZC5hKTtcblxuICBpZiAoc2VsZWN0ZWQpIHtcbiAgICAvLyBCbGVuZCBpbiBoaWdobGlnaHQgY29sb3IgYmFzZWQgb24gaXRzIGFscGhhIHZhbHVlXG4gICAgZmxvYXQgaGlnaExpZ2h0QWxwaGEgPSBwaWNraW5nLmhpZ2hsaWdodENvbG9yLmE7XG4gICAgZmxvYXQgYmxlbmRlZEFscGhhID0gaGlnaExpZ2h0QWxwaGEgKyBjb2xvci5hICogKDEuMCAtIGhpZ2hMaWdodEFscGhhKTtcbiAgICBmbG9hdCBoaWdoTGlnaHRSYXRpbyA9IGhpZ2hMaWdodEFscGhhIC8gYmxlbmRlZEFscGhhO1xuXG4gICAgdmVjMyBibGVuZGVkUkdCID0gbWl4KGNvbG9yLnJnYiwgcGlja2luZy5oaWdobGlnaHRDb2xvci5yZ2IsIGhpZ2hMaWdodFJhdGlvKTtcbiAgICByZXR1cm4gdmVjNChibGVuZGVkUkdCLCBibGVuZGVkQWxwaGEpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBjb2xvcjtcbiAgfVxufVxuXG4vKlxuICogUmV0dXJucyBwaWNraW5nIGNvbG9yIGlmIHBpY2tpbmcgZW5hYmxlZCBlbHNlIHVubW9kaWZpZWQgYXJndW1lbnQuXG4gKi9cbnZlYzQgcGlja2luZ19maWx0ZXJQaWNraW5nQ29sb3IodmVjNCBjb2xvcikge1xuICBpZiAoYm9vbChwaWNraW5nLmlzQWN0aXZlKSkge1xuICAgIGlmIChwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQuYSA9PSAwLjApIHtcbiAgICAgIGRpc2NhcmQ7XG4gICAgfVxuICAgIHJldHVybiBwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQ7XG4gIH1cbiAgcmV0dXJuIGNvbG9yO1xufVxuXG4vKlxuICogUmV0dXJucyBwaWNraW5nIGNvbG9yIGlmIHBpY2tpbmcgaXMgZW5hYmxlZCBpZiBub3RcbiAqIGhpZ2hsaWdodCBjb2xvciBpZiB0aGlzIGl0ZW0gaXMgc2VsZWN0ZWQsIG90aGVyd2lzZSB1bm1vZGlmaWVkIGFyZ3VtZW50LlxuICovXG52ZWM0IHBpY2tpbmdfZmlsdGVyQ29sb3IodmVjNCBjb2xvcikge1xuICB2ZWM0IGhpZ2hsaWdodENvbG9yID0gcGlja2luZ19maWx0ZXJIaWdobGlnaHRDb2xvcihjb2xvcik7XG4gIHJldHVybiBwaWNraW5nX2ZpbHRlclBpY2tpbmdDb2xvcihoaWdobGlnaHRDb2xvcik7XG59XG5gO1xuLyoqXG4gKiBQcm92aWRlcyBzdXBwb3J0IGZvciBjb2xvci1jb2RpbmctYmFzZWQgcGlja2luZyBhbmQgaGlnaGxpZ2h0aW5nLlxuICogSW4gcGFydGljdWxhciwgc3VwcG9ydHMgcGlja2luZyBhIHNwZWNpZmljIGluc3RhbmNlIGluIGFuIGluc3RhbmNlZFxuICogZHJhdyBjYWxsIGFuZCBoaWdobGlnaHRpbmcgYW4gaW5zdGFuY2UgYmFzZWQgb24gaXRzIHBpY2tpbmcgY29sb3IsXG4gKiBhbmQgY29ycmVzcG9uZGluZ2x5LCBzdXBwb3J0cyBwaWNraW5nIGFuZCBoaWdobGlnaHRpbmcgZ3JvdXBzIG9mXG4gKiBwcmltaXRpdmVzIHdpdGggdGhlIHNhbWUgcGlja2luZyBjb2xvciBpbiBub24taW5zdGFuY2VkIGRyYXctY2FsbHNcbiAqL1xuZXhwb3J0IGNvbnN0IHBpY2tpbmcgPSB7XG4gICAgcHJvcHM6IHt9LFxuICAgIHVuaWZvcm1zOiB7fSxcbiAgICBuYW1lOiAncGlja2luZycsXG4gICAgdW5pZm9ybVR5cGVzOiB7XG4gICAgICAgIGlzQWN0aXZlOiAnZjMyJyxcbiAgICAgICAgaXNBdHRyaWJ1dGU6ICdmMzInLFxuICAgICAgICBpc0hpZ2hsaWdodEFjdGl2ZTogJ2YzMicsXG4gICAgICAgIHVzZUZsb2F0Q29sb3JzOiAnZjMyJyxcbiAgICAgICAgaGlnaGxpZ2h0ZWRPYmplY3RDb2xvcjogJ3ZlYzM8ZjMyPicsXG4gICAgICAgIGhpZ2hsaWdodENvbG9yOiAndmVjNDxmMzI+J1xuICAgIH0sXG4gICAgZGVmYXVsdFVuaWZvcm1zOiB7XG4gICAgICAgIGlzQWN0aXZlOiBmYWxzZSxcbiAgICAgICAgaXNBdHRyaWJ1dGU6IGZhbHNlLFxuICAgICAgICBpc0hpZ2hsaWdodEFjdGl2ZTogZmFsc2UsXG4gICAgICAgIHVzZUZsb2F0Q29sb3JzOiB0cnVlLFxuICAgICAgICBoaWdobGlnaHRlZE9iamVjdENvbG9yOiBbMCwgMCwgMF0sXG4gICAgICAgIGhpZ2hsaWdodENvbG9yOiBERUZBVUxUX0hJR0hMSUdIVF9DT0xPUlxuICAgIH0sXG4gICAgdnMsXG4gICAgZnMsXG4gICAgZ2V0VW5pZm9ybXNcbn07XG5mdW5jdGlvbiBnZXRVbmlmb3JtcyhvcHRzID0ge30sIHByZXZVbmlmb3Jtcykge1xuICAgIGNvbnN0IHVuaWZvcm1zID0ge307XG4gICAgaWYgKG9wdHMuaGlnaGxpZ2h0ZWRPYmplY3RDb2xvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vIFVubGVzcyBoaWdobGlnaHRlZE9iamVjdENvbG9yIGV4cGxpY2l0bHkgbnVsbCBvciBzZXQsIGRvIG5vdCB1cGRhdGUgc3RhdGVcbiAgICB9XG4gICAgZWxzZSBpZiAob3B0cy5oaWdobGlnaHRlZE9iamVjdENvbG9yID09PSBudWxsKSB7XG4gICAgICAgIHVuaWZvcm1zLmlzSGlnaGxpZ2h0QWN0aXZlID0gZmFsc2U7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB1bmlmb3Jtcy5pc0hpZ2hsaWdodEFjdGl2ZSA9IHRydWU7XG4gICAgICAgIGNvbnN0IGhpZ2hsaWdodGVkT2JqZWN0Q29sb3IgPSBvcHRzLmhpZ2hsaWdodGVkT2JqZWN0Q29sb3Iuc2xpY2UoMCwgMyk7XG4gICAgICAgIHVuaWZvcm1zLmhpZ2hsaWdodGVkT2JqZWN0Q29sb3IgPSBoaWdobGlnaHRlZE9iamVjdENvbG9yO1xuICAgIH1cbiAgICBpZiAob3B0cy5oaWdobGlnaHRDb2xvcikge1xuICAgICAgICBjb25zdCBjb2xvciA9IEFycmF5LmZyb20ob3B0cy5oaWdobGlnaHRDb2xvciwgeCA9PiB4IC8gMjU1KTtcbiAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUoY29sb3JbM10pKSB7XG4gICAgICAgICAgICBjb2xvclszXSA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgdW5pZm9ybXMuaGlnaGxpZ2h0Q29sb3IgPSBjb2xvcjtcbiAgICB9XG4gICAgaWYgKG9wdHMuaXNBY3RpdmUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB1bmlmb3Jtcy5pc0FjdGl2ZSA9IEJvb2xlYW4ob3B0cy5pc0FjdGl2ZSk7XG4gICAgICAgIHVuaWZvcm1zLmlzQXR0cmlidXRlID0gQm9vbGVhbihvcHRzLmlzQXR0cmlidXRlKTtcbiAgICB9XG4gICAgaWYgKG9wdHMudXNlRmxvYXRDb2xvcnMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB1bmlmb3Jtcy51c2VGbG9hdENvbG9ycyA9IEJvb2xlYW4ob3B0cy51c2VGbG9hdENvbG9ycyk7XG4gICAgfVxuICAgIHJldHVybiB1bmlmb3Jtcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpY2tpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/shadertools/dist/modules/engine/picking/picking.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/shadertools/dist/modules/lighting/gouraud-material/gouraud-material.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/modules/lighting/gouraud-material/gouraud-material.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gouraudMaterial: () => (/* binding */ gouraudMaterial)\n/* harmony export */ });\n/* harmony import */ var _lights_lighting_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lights/lighting.js */ \"./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting.js\");\n/* harmony import */ var _phong_material_phong_shaders_glsl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../phong-material/phong-shaders-glsl.js */ \"./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-glsl.js\");\n/* harmony import */ var _phong_material_phong_shaders_wgsl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../phong-material/phong-shaders-wgsl.js */ \"./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-wgsl.js\");\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n/** In Gouraud shading, color is calculated for each triangle vertex normal, and then color is interpolated colors across the triangle */\nconst gouraudMaterial = {\n    props: {},\n    name: 'gouraudMaterial',\n    // Note these are switched between phong and gouraud\n    vs: _phong_material_phong_shaders_glsl_js__WEBPACK_IMPORTED_MODULE_0__.PHONG_FS.replace('phongMaterial', 'gouraudMaterial'),\n    fs: _phong_material_phong_shaders_glsl_js__WEBPACK_IMPORTED_MODULE_0__.PHONG_VS.replace('phongMaterial', 'gouraudMaterial'),\n    source: _phong_material_phong_shaders_wgsl_js__WEBPACK_IMPORTED_MODULE_1__.PHONG_WGSL.replaceAll('phongMaterial', 'gouraudMaterial'),\n    defines: {\n        LIGHTING_VERTEX: 1\n    },\n    dependencies: [_lights_lighting_js__WEBPACK_IMPORTED_MODULE_2__.lighting],\n    uniformTypes: {\n        ambient: 'f32',\n        diffuse: 'f32',\n        shininess: 'f32',\n        specularColor: 'vec3<f32>'\n    },\n    defaultUniforms: {\n        ambient: 0.35,\n        diffuse: 0.6,\n        shininess: 32,\n        specularColor: [0.15, 0.15, 0.15]\n    },\n    getUniforms(props) {\n        const uniforms = { ...props };\n        if (uniforms.specularColor) {\n            uniforms.specularColor = uniforms.specularColor.map(x => x / 255);\n        }\n        return { ...gouraudMaterial.defaultUniforms, ...uniforms };\n    }\n};\n//# sourceMappingURL=gouraud-material.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9tb2R1bGVzL2xpZ2h0aW5nL2dvdXJhdWQtbWF0ZXJpYWwvZ291cmF1ZC1tYXRlcmlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L21vZHVsZXMvbGlnaHRpbmcvZ291cmF1ZC1tYXRlcmlhbC9nb3VyYXVkLW1hdGVyaWFsLmpzPzAyYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbHVtYS5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG5pbXBvcnQgeyBsaWdodGluZyB9IGZyb20gXCIuLi9saWdodHMvbGlnaHRpbmcuanNcIjtcbmltcG9ydCB7IFBIT05HX1ZTLCBQSE9OR19GUyB9IGZyb20gXCIuLi9waG9uZy1tYXRlcmlhbC9waG9uZy1zaGFkZXJzLWdsc2wuanNcIjtcbmltcG9ydCB7IFBIT05HX1dHU0wgfSBmcm9tIFwiLi4vcGhvbmctbWF0ZXJpYWwvcGhvbmctc2hhZGVycy13Z3NsLmpzXCI7XG4vKiogSW4gR291cmF1ZCBzaGFkaW5nLCBjb2xvciBpcyBjYWxjdWxhdGVkIGZvciBlYWNoIHRyaWFuZ2xlIHZlcnRleCBub3JtYWwsIGFuZCB0aGVuIGNvbG9yIGlzIGludGVycG9sYXRlZCBjb2xvcnMgYWNyb3NzIHRoZSB0cmlhbmdsZSAqL1xuZXhwb3J0IGNvbnN0IGdvdXJhdWRNYXRlcmlhbCA9IHtcbiAgICBwcm9wczoge30sXG4gICAgbmFtZTogJ2dvdXJhdWRNYXRlcmlhbCcsXG4gICAgLy8gTm90ZSB0aGVzZSBhcmUgc3dpdGNoZWQgYmV0d2VlbiBwaG9uZyBhbmQgZ291cmF1ZFxuICAgIHZzOiBQSE9OR19GUy5yZXBsYWNlKCdwaG9uZ01hdGVyaWFsJywgJ2dvdXJhdWRNYXRlcmlhbCcpLFxuICAgIGZzOiBQSE9OR19WUy5yZXBsYWNlKCdwaG9uZ01hdGVyaWFsJywgJ2dvdXJhdWRNYXRlcmlhbCcpLFxuICAgIHNvdXJjZTogUEhPTkdfV0dTTC5yZXBsYWNlQWxsKCdwaG9uZ01hdGVyaWFsJywgJ2dvdXJhdWRNYXRlcmlhbCcpLFxuICAgIGRlZmluZXM6IHtcbiAgICAgICAgTElHSFRJTkdfVkVSVEVYOiAxXG4gICAgfSxcbiAgICBkZXBlbmRlbmNpZXM6IFtsaWdodGluZ10sXG4gICAgdW5pZm9ybVR5cGVzOiB7XG4gICAgICAgIGFtYmllbnQ6ICdmMzInLFxuICAgICAgICBkaWZmdXNlOiAnZjMyJyxcbiAgICAgICAgc2hpbmluZXNzOiAnZjMyJyxcbiAgICAgICAgc3BlY3VsYXJDb2xvcjogJ3ZlYzM8ZjMyPidcbiAgICB9LFxuICAgIGRlZmF1bHRVbmlmb3Jtczoge1xuICAgICAgICBhbWJpZW50OiAwLjM1LFxuICAgICAgICBkaWZmdXNlOiAwLjYsXG4gICAgICAgIHNoaW5pbmVzczogMzIsXG4gICAgICAgIHNwZWN1bGFyQ29sb3I6IFswLjE1LCAwLjE1LCAwLjE1XVxuICAgIH0sXG4gICAgZ2V0VW5pZm9ybXMocHJvcHMpIHtcbiAgICAgICAgY29uc3QgdW5pZm9ybXMgPSB7IC4uLnByb3BzIH07XG4gICAgICAgIGlmICh1bmlmb3Jtcy5zcGVjdWxhckNvbG9yKSB7XG4gICAgICAgICAgICB1bmlmb3Jtcy5zcGVjdWxhckNvbG9yID0gdW5pZm9ybXMuc3BlY3VsYXJDb2xvci5tYXAoeCA9PiB4IC8gMjU1KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyAuLi5nb3VyYXVkTWF0ZXJpYWwuZGVmYXVsdFVuaWZvcm1zLCAuLi51bmlmb3JtcyB9O1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nb3VyYXVkLW1hdGVyaWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/shadertools/dist/modules/lighting/gouraud-material/gouraud-material.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-glsl.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-glsl.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lightingUniformsGLSL: () => (/* binding */ lightingUniformsGLSL)\n/* harmony export */ });\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst lightingUniformsGLSL = /* glsl */ `\\\nprecision highp int;\n\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  vec3 color;\n};\n\nstruct PointLight {\n  vec3 color;\n  vec3 position;\n  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform lightingUniforms {\n  int enabled;\n  int lightType;\n\n  int directionalLightCount;\n  int pointLightCount;\n\n  vec3 ambientColor;\n\n  vec3 lightColor0;\n  vec3 lightPosition0;\n  vec3 lightDirection0;\n  vec3 lightAttenuation0;\n\n  vec3 lightColor1;\n  vec3 lightPosition1;\n  vec3 lightDirection1;\n  vec3 lightAttenuation1;\n\n  vec3 lightColor2;\n  vec3 lightPosition2;\n  vec3 lightDirection2;\n  vec3 lightAttenuation2;\n} lighting;\n\nPointLight lighting_getPointLight(int index) {\n  switch (index) {\n    case 0:\n      return PointLight(lighting.lightColor0, lighting.lightPosition0, lighting.lightAttenuation0);\n    case 1:\n      return PointLight(lighting.lightColor1, lighting.lightPosition1, lighting.lightAttenuation1);\n    case 2:\n    default:  \n      return PointLight(lighting.lightColor2, lighting.lightPosition2, lighting.lightAttenuation2);\n  }\n}\n\nDirectionalLight lighting_getDirectionalLight(int index) {\n  switch (index) {\n    case 0:\n      return DirectionalLight(lighting.lightColor0, lighting.lightDirection0);\n    case 1:\n      return DirectionalLight(lighting.lightColor1, lighting.lightDirection1);\n    case 2:\n    default:   \n      return DirectionalLight(lighting.lightColor2, lighting.lightDirection2);\n  }\n} \n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n// #endif\n`;\n//# sourceMappingURL=lighting-uniforms-glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9tb2R1bGVzL2xpZ2h0aW5nL2xpZ2h0cy9saWdodGluZy11bmlmb3Jtcy1nbHNsLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L21vZHVsZXMvbGlnaHRpbmcvbGlnaHRzL2xpZ2h0aW5nLXVuaWZvcm1zLWdsc2wuanM/OTM4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsdW1hLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmV4cG9ydCBjb25zdCBsaWdodGluZ1VuaWZvcm1zR0xTTCA9IC8qIGdsc2wgKi8gYFxcXG5wcmVjaXNpb24gaGlnaHAgaW50O1xuXG4vLyAjaWYgKGRlZmluZWQoU0hBREVSX1RZUEVfRlJBR01FTlQpICYmIGRlZmluZWQoTElHSFRJTkdfRlJBR01FTlQpKSB8fCAoZGVmaW5lZChTSEFERVJfVFlQRV9WRVJURVgpICYmIGRlZmluZWQoTElHSFRJTkdfVkVSVEVYKSlcbnN0cnVjdCBBbWJpZW50TGlnaHQge1xuICB2ZWMzIGNvbG9yO1xufTtcblxuc3RydWN0IFBvaW50TGlnaHQge1xuICB2ZWMzIGNvbG9yO1xuICB2ZWMzIHBvc2l0aW9uO1xuICB2ZWMzIGF0dGVudWF0aW9uOyAvLyAybmQgb3JkZXIgeDpDb25zdGFudC15OkxpbmVhci16OkV4cG9uZW50aWFsXG59O1xuXG5zdHJ1Y3QgRGlyZWN0aW9uYWxMaWdodCB7XG4gIHZlYzMgY29sb3I7XG4gIHZlYzMgZGlyZWN0aW9uO1xufTtcblxudW5pZm9ybSBsaWdodGluZ1VuaWZvcm1zIHtcbiAgaW50IGVuYWJsZWQ7XG4gIGludCBsaWdodFR5cGU7XG5cbiAgaW50IGRpcmVjdGlvbmFsTGlnaHRDb3VudDtcbiAgaW50IHBvaW50TGlnaHRDb3VudDtcblxuICB2ZWMzIGFtYmllbnRDb2xvcjtcblxuICB2ZWMzIGxpZ2h0Q29sb3IwO1xuICB2ZWMzIGxpZ2h0UG9zaXRpb24wO1xuICB2ZWMzIGxpZ2h0RGlyZWN0aW9uMDtcbiAgdmVjMyBsaWdodEF0dGVudWF0aW9uMDtcblxuICB2ZWMzIGxpZ2h0Q29sb3IxO1xuICB2ZWMzIGxpZ2h0UG9zaXRpb24xO1xuICB2ZWMzIGxpZ2h0RGlyZWN0aW9uMTtcbiAgdmVjMyBsaWdodEF0dGVudWF0aW9uMTtcblxuICB2ZWMzIGxpZ2h0Q29sb3IyO1xuICB2ZWMzIGxpZ2h0UG9zaXRpb24yO1xuICB2ZWMzIGxpZ2h0RGlyZWN0aW9uMjtcbiAgdmVjMyBsaWdodEF0dGVudWF0aW9uMjtcbn0gbGlnaHRpbmc7XG5cblBvaW50TGlnaHQgbGlnaHRpbmdfZ2V0UG9pbnRMaWdodChpbnQgaW5kZXgpIHtcbiAgc3dpdGNoIChpbmRleCkge1xuICAgIGNhc2UgMDpcbiAgICAgIHJldHVybiBQb2ludExpZ2h0KGxpZ2h0aW5nLmxpZ2h0Q29sb3IwLCBsaWdodGluZy5saWdodFBvc2l0aW9uMCwgbGlnaHRpbmcubGlnaHRBdHRlbnVhdGlvbjApO1xuICAgIGNhc2UgMTpcbiAgICAgIHJldHVybiBQb2ludExpZ2h0KGxpZ2h0aW5nLmxpZ2h0Q29sb3IxLCBsaWdodGluZy5saWdodFBvc2l0aW9uMSwgbGlnaHRpbmcubGlnaHRBdHRlbnVhdGlvbjEpO1xuICAgIGNhc2UgMjpcbiAgICBkZWZhdWx0OiAgXG4gICAgICByZXR1cm4gUG9pbnRMaWdodChsaWdodGluZy5saWdodENvbG9yMiwgbGlnaHRpbmcubGlnaHRQb3NpdGlvbjIsIGxpZ2h0aW5nLmxpZ2h0QXR0ZW51YXRpb24yKTtcbiAgfVxufVxuXG5EaXJlY3Rpb25hbExpZ2h0IGxpZ2h0aW5nX2dldERpcmVjdGlvbmFsTGlnaHQoaW50IGluZGV4KSB7XG4gIHN3aXRjaCAoaW5kZXgpIHtcbiAgICBjYXNlIDA6XG4gICAgICByZXR1cm4gRGlyZWN0aW9uYWxMaWdodChsaWdodGluZy5saWdodENvbG9yMCwgbGlnaHRpbmcubGlnaHREaXJlY3Rpb24wKTtcbiAgICBjYXNlIDE6XG4gICAgICByZXR1cm4gRGlyZWN0aW9uYWxMaWdodChsaWdodGluZy5saWdodENvbG9yMSwgbGlnaHRpbmcubGlnaHREaXJlY3Rpb24xKTtcbiAgICBjYXNlIDI6XG4gICAgZGVmYXVsdDogICBcbiAgICAgIHJldHVybiBEaXJlY3Rpb25hbExpZ2h0KGxpZ2h0aW5nLmxpZ2h0Q29sb3IyLCBsaWdodGluZy5saWdodERpcmVjdGlvbjIpO1xuICB9XG59IFxuXG5mbG9hdCBnZXRQb2ludExpZ2h0QXR0ZW51YXRpb24oUG9pbnRMaWdodCBwb2ludExpZ2h0LCBmbG9hdCBkaXN0YW5jZSkge1xuICByZXR1cm4gcG9pbnRMaWdodC5hdHRlbnVhdGlvbi54XG4gICAgICAgKyBwb2ludExpZ2h0LmF0dGVudWF0aW9uLnkgKiBkaXN0YW5jZVxuICAgICAgICsgcG9pbnRMaWdodC5hdHRlbnVhdGlvbi56ICogZGlzdGFuY2UgKiBkaXN0YW5jZTtcbn1cblxuLy8gI2VuZGlmXG5gO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlnaHRpbmctdW5pZm9ybXMtZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-glsl.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-wgsl.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-wgsl.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lightingUniformsWGSL: () => (/* binding */ lightingUniformsWGSL)\n/* harmony export */ });\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst lightingUniformsWGSL = /* wgsl */ `\\\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\n  color: vec3<f32>,\n};\n\nstruct PointLight {\n  color: vec3<f32>,\n  position: vec3<f32>,\n  attenuation: vec3<f32>, // 2nd order x:Constant-y:Linear-z:Exponential\n};\n\nstruct DirectionalLight {\n  color: vec3<f32>,\n  direction: vec3<f32>,\n};\n\nstruct lightingUniforms {\n  enabled: i32,\n  pointLightCount: i32,\n  directionalLightCount: i32,\n\n  ambientColor: vec3<f32>,\n\n  // TODO - support multiple lights by uncommenting arrays below\n  lightType: i32,\n  lightColor: vec3<f32>,\n  lightDirection: vec3<f32>,\n  lightPosition: vec3<f32>,\n  lightAttenuation: vec3<f32>,\n\n  // AmbientLight ambientLight;\n  // PointLight pointLight[MAX_LIGHTS];\n  // DirectionalLight directionalLight[MAX_LIGHTS];\n};\n\n// Binding 0:1 is reserved for lighting (Note: could go into separate bind group as it is stable across draw calls)\n@binding(1) @group(0) var<uniform> lighting : lightingUniforms;\n\nfn lighting_getPointLight(index: i32) -> PointLight {\n  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);\n}\n\nfn lighting_getDirectionalLight(index: i32) -> DirectionalLight {\n  return DirectionalLight(lighting.lightColor, lighting.lightDirection);\n} \n\nfn getPointLightAttenuation(pointLight: PointLight, distance: f32) -> f32 {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n`;\n//# sourceMappingURL=lighting-uniforms-wgsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9tb2R1bGVzL2xpZ2h0aW5nL2xpZ2h0cy9saWdodGluZy11bmlmb3Jtcy13Z3NsLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvbW9kdWxlcy9saWdodGluZy9saWdodHMvbGlnaHRpbmctdW5pZm9ybXMtd2dzbC5qcz8zNjE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGx1bWEuZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuZXhwb3J0IGNvbnN0IGxpZ2h0aW5nVW5pZm9ybXNXR1NMID0gLyogd2dzbCAqLyBgXFxcbi8vICNpZiAoZGVmaW5lZChTSEFERVJfVFlQRV9GUkFHTUVOVCkgJiYgZGVmaW5lZChMSUdIVElOR19GUkFHTUVOVCkpIHx8IChkZWZpbmVkKFNIQURFUl9UWVBFX1ZFUlRFWCkgJiYgZGVmaW5lZChMSUdIVElOR19WRVJURVgpKVxuc3RydWN0IEFtYmllbnRMaWdodCB7XG4gIGNvbG9yOiB2ZWMzPGYzMj4sXG59O1xuXG5zdHJ1Y3QgUG9pbnRMaWdodCB7XG4gIGNvbG9yOiB2ZWMzPGYzMj4sXG4gIHBvc2l0aW9uOiB2ZWMzPGYzMj4sXG4gIGF0dGVudWF0aW9uOiB2ZWMzPGYzMj4sIC8vIDJuZCBvcmRlciB4OkNvbnN0YW50LXk6TGluZWFyLXo6RXhwb25lbnRpYWxcbn07XG5cbnN0cnVjdCBEaXJlY3Rpb25hbExpZ2h0IHtcbiAgY29sb3I6IHZlYzM8ZjMyPixcbiAgZGlyZWN0aW9uOiB2ZWMzPGYzMj4sXG59O1xuXG5zdHJ1Y3QgbGlnaHRpbmdVbmlmb3JtcyB7XG4gIGVuYWJsZWQ6IGkzMixcbiAgcG9pbnRMaWdodENvdW50OiBpMzIsXG4gIGRpcmVjdGlvbmFsTGlnaHRDb3VudDogaTMyLFxuXG4gIGFtYmllbnRDb2xvcjogdmVjMzxmMzI+LFxuXG4gIC8vIFRPRE8gLSBzdXBwb3J0IG11bHRpcGxlIGxpZ2h0cyBieSB1bmNvbW1lbnRpbmcgYXJyYXlzIGJlbG93XG4gIGxpZ2h0VHlwZTogaTMyLFxuICBsaWdodENvbG9yOiB2ZWMzPGYzMj4sXG4gIGxpZ2h0RGlyZWN0aW9uOiB2ZWMzPGYzMj4sXG4gIGxpZ2h0UG9zaXRpb246IHZlYzM8ZjMyPixcbiAgbGlnaHRBdHRlbnVhdGlvbjogdmVjMzxmMzI+LFxuXG4gIC8vIEFtYmllbnRMaWdodCBhbWJpZW50TGlnaHQ7XG4gIC8vIFBvaW50TGlnaHQgcG9pbnRMaWdodFtNQVhfTElHSFRTXTtcbiAgLy8gRGlyZWN0aW9uYWxMaWdodCBkaXJlY3Rpb25hbExpZ2h0W01BWF9MSUdIVFNdO1xufTtcblxuLy8gQmluZGluZyAwOjEgaXMgcmVzZXJ2ZWQgZm9yIGxpZ2h0aW5nIChOb3RlOiBjb3VsZCBnbyBpbnRvIHNlcGFyYXRlIGJpbmQgZ3JvdXAgYXMgaXQgaXMgc3RhYmxlIGFjcm9zcyBkcmF3IGNhbGxzKVxuQGJpbmRpbmcoMSkgQGdyb3VwKDApIHZhcjx1bmlmb3JtPiBsaWdodGluZyA6IGxpZ2h0aW5nVW5pZm9ybXM7XG5cbmZuIGxpZ2h0aW5nX2dldFBvaW50TGlnaHQoaW5kZXg6IGkzMikgLT4gUG9pbnRMaWdodCB7XG4gIHJldHVybiBQb2ludExpZ2h0KGxpZ2h0aW5nLmxpZ2h0Q29sb3IsIGxpZ2h0aW5nLmxpZ2h0UG9zaXRpb24sIGxpZ2h0aW5nLmxpZ2h0QXR0ZW51YXRpb24pO1xufVxuXG5mbiBsaWdodGluZ19nZXREaXJlY3Rpb25hbExpZ2h0KGluZGV4OiBpMzIpIC0+IERpcmVjdGlvbmFsTGlnaHQge1xuICByZXR1cm4gRGlyZWN0aW9uYWxMaWdodChsaWdodGluZy5saWdodENvbG9yLCBsaWdodGluZy5saWdodERpcmVjdGlvbik7XG59IFxuXG5mbiBnZXRQb2ludExpZ2h0QXR0ZW51YXRpb24ocG9pbnRMaWdodDogUG9pbnRMaWdodCwgZGlzdGFuY2U6IGYzMikgLT4gZjMyIHtcbiAgcmV0dXJuIHBvaW50TGlnaHQuYXR0ZW51YXRpb24ueFxuICAgICAgICsgcG9pbnRMaWdodC5hdHRlbnVhdGlvbi55ICogZGlzdGFuY2VcbiAgICAgICArIHBvaW50TGlnaHQuYXR0ZW51YXRpb24ueiAqIGRpc3RhbmNlICogZGlzdGFuY2U7XG59XG5gO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlnaHRpbmctdW5pZm9ybXMtd2dzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-wgsl.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lighting: () => (/* binding */ lighting)\n/* harmony export */ });\n/* unused harmony export LIGHT_TYPE */\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/utils/log.js\");\n/* harmony import */ var _lighting_uniforms_glsl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lighting-uniforms-glsl.js */ \"./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-glsl.js\");\n/* harmony import */ var _lighting_uniforms_wgsl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lighting-uniforms-wgsl.js */ \"./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting-uniforms-wgsl.js\");\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n/** Max number of supported lights (in addition to ambient light */\nconst MAX_LIGHTS = 3;\n/** Whether to divide */\nconst COLOR_FACTOR = 255.0;\n/** Shader type field for lights */\n// eslint-disable-next-line no-shadow\nvar LIGHT_TYPE;\n(function (LIGHT_TYPE) {\n    LIGHT_TYPE[LIGHT_TYPE[\"POINT\"] = 0] = \"POINT\";\n    LIGHT_TYPE[LIGHT_TYPE[\"DIRECTIONAL\"] = 1] = \"DIRECTIONAL\";\n})(LIGHT_TYPE || (LIGHT_TYPE = {}));\n/** UBO ready lighting module */\nconst lighting = {\n    props: {},\n    uniforms: {},\n    name: 'lighting',\n    defines: {\n        MAX_LIGHTS\n    },\n    uniformTypes: {\n        enabled: 'i32',\n        lightType: 'i32',\n        directionalLightCount: 'i32',\n        pointLightCount: 'i32',\n        ambientLightColor: 'vec3<f32>',\n        // TODO define as arrays once we have appropriate uniformTypes\n        lightColor0: 'vec3<f32>',\n        lightPosition0: 'vec3<f32>',\n        // TODO - could combine direction and attenuation\n        lightDirection0: 'vec3<f32>',\n        lightAttenuation0: 'vec3<f32>',\n        lightColor1: 'vec3<f32>',\n        lightPosition1: 'vec3<f32>',\n        lightDirection1: 'vec3<f32>',\n        lightAttenuation1: 'vec3<f32>',\n        lightColor2: 'vec3<f32>',\n        lightPosition2: 'vec3<f32>',\n        lightDirection2: 'vec3<f32>',\n        lightAttenuation2: 'vec3<f32>'\n    },\n    defaultUniforms: {\n        enabled: 1,\n        lightType: LIGHT_TYPE.POINT,\n        directionalLightCount: 0,\n        pointLightCount: 0,\n        ambientLightColor: [0.1, 0.1, 0.1],\n        lightColor0: [1, 1, 1],\n        lightPosition0: [1, 1, 2],\n        // TODO - could combine direction and attenuation\n        lightDirection0: [1, 1, 1],\n        lightAttenuation0: [1, 0, 0],\n        lightColor1: [1, 1, 1],\n        lightPosition1: [1, 1, 2],\n        lightDirection1: [1, 1, 1],\n        lightAttenuation1: [1, 0, 0],\n        lightColor2: [1, 1, 1],\n        lightPosition2: [1, 1, 2],\n        lightDirection2: [1, 1, 1],\n        lightAttenuation2: [1, 0, 0]\n    },\n    source: _lighting_uniforms_wgsl_js__WEBPACK_IMPORTED_MODULE_0__.lightingUniformsWGSL,\n    vs: _lighting_uniforms_glsl_js__WEBPACK_IMPORTED_MODULE_1__.lightingUniformsGLSL,\n    fs: _lighting_uniforms_glsl_js__WEBPACK_IMPORTED_MODULE_1__.lightingUniformsGLSL,\n    getUniforms\n};\nfunction getUniforms(props, prevUniforms = {}) {\n    // Copy props so we can modify\n    props = props ? { ...props } : props;\n    // TODO legacy\n    if (!props) {\n        return { ...lighting.defaultUniforms };\n    }\n    // Support for array of lights. Type of light is detected by type field\n    if (props.lights) {\n        props = { ...props, ...extractLightTypes(props.lights), lights: undefined };\n    }\n    // Specify lights separately\n    const { ambientLight, pointLights, directionalLights } = props || {};\n    const hasLights = ambientLight ||\n        (pointLights && pointLights.length > 0) ||\n        (directionalLights && directionalLights.length > 0);\n    // TODO - this may not be the correct decision\n    if (!hasLights) {\n        return { ...lighting.defaultUniforms, enabled: 0 };\n    }\n    const uniforms = {\n        ...lighting.defaultUniforms,\n        ...prevUniforms,\n        ...getLightSourceUniforms({ ambientLight, pointLights, directionalLights })\n    };\n    if (props.enabled !== undefined) {\n        uniforms.enabled = props.enabled ? 1 : 0;\n    }\n    return uniforms;\n}\nfunction getLightSourceUniforms({ ambientLight, pointLights = [], directionalLights = [] }) {\n    const lightSourceUniforms = {};\n    lightSourceUniforms.ambientLightColor = convertColor(ambientLight);\n    let currentLight = 0;\n    for (const pointLight of pointLights) {\n        lightSourceUniforms.lightType = LIGHT_TYPE.POINT;\n        const i = currentLight;\n        lightSourceUniforms[`lightColor${i}`] = convertColor(pointLight);\n        lightSourceUniforms[`lightPosition${i}`] = pointLight.position;\n        lightSourceUniforms[`lightAttenuation${i}`] = pointLight.attenuation || [1, 0, 0];\n        currentLight++;\n    }\n    for (const directionalLight of directionalLights) {\n        lightSourceUniforms.lightType = LIGHT_TYPE.DIRECTIONAL;\n        const i = currentLight;\n        lightSourceUniforms[`lightColor${i}`] = convertColor(directionalLight);\n        lightSourceUniforms[`lightDirection${i}`] = directionalLight.direction;\n        currentLight++;\n    }\n    if (currentLight > MAX_LIGHTS) {\n        _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.log.warn('MAX_LIGHTS exceeded')();\n    }\n    lightSourceUniforms.directionalLightCount = directionalLights.length;\n    lightSourceUniforms.pointLightCount = pointLights.length;\n    return lightSourceUniforms;\n}\nfunction extractLightTypes(lights) {\n    const lightSources = { pointLights: [], directionalLights: [] };\n    for (const light of lights || []) {\n        switch (light.type) {\n            case 'ambient':\n                // Note: Only uses last ambient light\n                // TODO - add ambient light sources on CPU?\n                lightSources.ambientLight = light;\n                break;\n            case 'directional':\n                lightSources.directionalLights?.push(light);\n                break;\n            case 'point':\n                lightSources.pointLights?.push(light);\n                break;\n            default:\n            // eslint-disable-next-line\n            // console.warn(light.type);\n        }\n    }\n    return lightSources;\n}\n/** Take color 0-255 and intensity as input and output 0.0-1.0 range */\nfunction convertColor(colorDef = {}) {\n    const { color = [0, 0, 0], intensity = 1.0 } = colorDef;\n    return color.map(component => (component * intensity) / COLOR_FACTOR);\n}\n//# sourceMappingURL=lighting.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/shadertools/dist/modules/lighting/lights/lighting.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-glsl.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-glsl.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PHONG_FS: () => (/* binding */ PHONG_FS),\n/* harmony export */   PHONG_VS: () => (/* binding */ PHONG_VS)\n/* harmony export */ });\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst PHONG_VS = /* glsl */ `\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n`;\nconst PHONG_FS = /* glsl */ `\\\nuniform phongMaterialUniforms {\n  uniform float ambient;\n  uniform float diffuse;\n  uniform float shininess;\n  uniform vec3  specularColor;\n} material;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n  vec3 halfway_direction = normalize(light_direction + view_direction);\n  float lambertian = dot(light_direction, normal_worldspace);\n  float specular = 0.0;\n  if (lambertian > 0.0) {\n    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, material.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  vec3 view_direction = normalize(cameraPosition - position_worldspace);\n  lightColor = material.ambient * surfaceColor * lighting.ambientColor;\n\n  for (int i = 0; i < lighting.pointLightCount; i++) {\n    PointLight pointLight = lighting_getPointLight(i);\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    float light_attenuation = getPointLightAttenuation(pointLight, distance(light_position_worldspace, position_worldspace));\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color / light_attenuation);\n  }\n\n  int totalLights = min(MAX_LIGHTS, lighting.pointLightCount + lighting.directionalLightCount);\n  for (int i = lighting.pointLightCount; i < totalLights; i++) {\n    DirectionalLight directionalLight = lighting_getDirectionalLight(i);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  return lightColor;\n}\n`;\n//# sourceMappingURL=phong-shaders-glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9tb2R1bGVzL2xpZ2h0aW5nL3Bob25nLW1hdGVyaWFsL3Bob25nLXNoYWRlcnMtZ2xzbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvbW9kdWxlcy9saWdodGluZy9waG9uZy1tYXRlcmlhbC9waG9uZy1zaGFkZXJzLWdsc2wuanM/NDZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsdW1hLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmV4cG9ydCBjb25zdCBQSE9OR19WUyA9IC8qIGdsc2wgKi8gYFxcXG51bmlmb3JtIHBob25nTWF0ZXJpYWxVbmlmb3JtcyB7XG4gIHVuaWZvcm0gZmxvYXQgYW1iaWVudDtcbiAgdW5pZm9ybSBmbG9hdCBkaWZmdXNlO1xuICB1bmlmb3JtIGZsb2F0IHNoaW5pbmVzcztcbiAgdW5pZm9ybSB2ZWMzICBzcGVjdWxhckNvbG9yO1xufSBtYXRlcmlhbDtcbmA7XG5leHBvcnQgY29uc3QgUEhPTkdfRlMgPSAvKiBnbHNsICovIGBcXFxudW5pZm9ybSBwaG9uZ01hdGVyaWFsVW5pZm9ybXMge1xuICB1bmlmb3JtIGZsb2F0IGFtYmllbnQ7XG4gIHVuaWZvcm0gZmxvYXQgZGlmZnVzZTtcbiAgdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7XG4gIHVuaWZvcm0gdmVjMyAgc3BlY3VsYXJDb2xvcjtcbn0gbWF0ZXJpYWw7XG5cbnZlYzMgbGlnaHRpbmdfZ2V0TGlnaHRDb2xvcih2ZWMzIHN1cmZhY2VDb2xvciwgdmVjMyBsaWdodF9kaXJlY3Rpb24sIHZlYzMgdmlld19kaXJlY3Rpb24sIHZlYzMgbm9ybWFsX3dvcmxkc3BhY2UsIHZlYzMgY29sb3IpIHtcbiAgdmVjMyBoYWxmd2F5X2RpcmVjdGlvbiA9IG5vcm1hbGl6ZShsaWdodF9kaXJlY3Rpb24gKyB2aWV3X2RpcmVjdGlvbik7XG4gIGZsb2F0IGxhbWJlcnRpYW4gPSBkb3QobGlnaHRfZGlyZWN0aW9uLCBub3JtYWxfd29ybGRzcGFjZSk7XG4gIGZsb2F0IHNwZWN1bGFyID0gMC4wO1xuICBpZiAobGFtYmVydGlhbiA+IDAuMCkge1xuICAgIGZsb2F0IHNwZWN1bGFyX2FuZ2xlID0gbWF4KGRvdChub3JtYWxfd29ybGRzcGFjZSwgaGFsZndheV9kaXJlY3Rpb24pLCAwLjApO1xuICAgIHNwZWN1bGFyID0gcG93KHNwZWN1bGFyX2FuZ2xlLCBtYXRlcmlhbC5zaGluaW5lc3MpO1xuICB9XG4gIGxhbWJlcnRpYW4gPSBtYXgobGFtYmVydGlhbiwgMC4wKTtcbiAgcmV0dXJuIChsYW1iZXJ0aWFuICogbWF0ZXJpYWwuZGlmZnVzZSAqIHN1cmZhY2VDb2xvciArIHNwZWN1bGFyICogbWF0ZXJpYWwuc3BlY3VsYXJDb2xvcikgKiBjb2xvcjtcbn1cblxudmVjMyBsaWdodGluZ19nZXRMaWdodENvbG9yKHZlYzMgc3VyZmFjZUNvbG9yLCB2ZWMzIGNhbWVyYVBvc2l0aW9uLCB2ZWMzIHBvc2l0aW9uX3dvcmxkc3BhY2UsIHZlYzMgbm9ybWFsX3dvcmxkc3BhY2UpIHtcbiAgdmVjMyBsaWdodENvbG9yID0gc3VyZmFjZUNvbG9yO1xuXG4gIGlmIChsaWdodGluZy5lbmFibGVkID09IDApIHtcbiAgICByZXR1cm4gbGlnaHRDb2xvcjtcbiAgfVxuXG4gIHZlYzMgdmlld19kaXJlY3Rpb24gPSBub3JtYWxpemUoY2FtZXJhUG9zaXRpb24gLSBwb3NpdGlvbl93b3JsZHNwYWNlKTtcbiAgbGlnaHRDb2xvciA9IG1hdGVyaWFsLmFtYmllbnQgKiBzdXJmYWNlQ29sb3IgKiBsaWdodGluZy5hbWJpZW50Q29sb3I7XG5cbiAgZm9yIChpbnQgaSA9IDA7IGkgPCBsaWdodGluZy5wb2ludExpZ2h0Q291bnQ7IGkrKykge1xuICAgIFBvaW50TGlnaHQgcG9pbnRMaWdodCA9IGxpZ2h0aW5nX2dldFBvaW50TGlnaHQoaSk7XG4gICAgdmVjMyBsaWdodF9wb3NpdGlvbl93b3JsZHNwYWNlID0gcG9pbnRMaWdodC5wb3NpdGlvbjtcbiAgICB2ZWMzIGxpZ2h0X2RpcmVjdGlvbiA9IG5vcm1hbGl6ZShsaWdodF9wb3NpdGlvbl93b3JsZHNwYWNlIC0gcG9zaXRpb25fd29ybGRzcGFjZSk7XG4gICAgZmxvYXQgbGlnaHRfYXR0ZW51YXRpb24gPSBnZXRQb2ludExpZ2h0QXR0ZW51YXRpb24ocG9pbnRMaWdodCwgZGlzdGFuY2UobGlnaHRfcG9zaXRpb25fd29ybGRzcGFjZSwgcG9zaXRpb25fd29ybGRzcGFjZSkpO1xuICAgIGxpZ2h0Q29sb3IgKz0gbGlnaHRpbmdfZ2V0TGlnaHRDb2xvcihzdXJmYWNlQ29sb3IsIGxpZ2h0X2RpcmVjdGlvbiwgdmlld19kaXJlY3Rpb24sIG5vcm1hbF93b3JsZHNwYWNlLCBwb2ludExpZ2h0LmNvbG9yIC8gbGlnaHRfYXR0ZW51YXRpb24pO1xuICB9XG5cbiAgaW50IHRvdGFsTGlnaHRzID0gbWluKE1BWF9MSUdIVFMsIGxpZ2h0aW5nLnBvaW50TGlnaHRDb3VudCArIGxpZ2h0aW5nLmRpcmVjdGlvbmFsTGlnaHRDb3VudCk7XG4gIGZvciAoaW50IGkgPSBsaWdodGluZy5wb2ludExpZ2h0Q291bnQ7IGkgPCB0b3RhbExpZ2h0czsgaSsrKSB7XG4gICAgRGlyZWN0aW9uYWxMaWdodCBkaXJlY3Rpb25hbExpZ2h0ID0gbGlnaHRpbmdfZ2V0RGlyZWN0aW9uYWxMaWdodChpKTtcbiAgICBsaWdodENvbG9yICs9IGxpZ2h0aW5nX2dldExpZ2h0Q29sb3Ioc3VyZmFjZUNvbG9yLCAtZGlyZWN0aW9uYWxMaWdodC5kaXJlY3Rpb24sIHZpZXdfZGlyZWN0aW9uLCBub3JtYWxfd29ybGRzcGFjZSwgZGlyZWN0aW9uYWxMaWdodC5jb2xvcik7XG4gIH1cbiAgXG4gIHJldHVybiBsaWdodENvbG9yO1xufVxuYDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBob25nLXNoYWRlcnMtZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-glsl.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-wgsl.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-wgsl.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PHONG_WGSL: () => (/* binding */ PHONG_WGSL)\n/* harmony export */ });\n// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst PHONG_WGSL = /* wgsl */ `\\\nstruct phongMaterialUniforms {\n  ambient: f32,\n  diffuse: f32,\n  shininess: f32,\n  specularColor: vec3<f32>,\n};\n\n@binding(2) @group(0) var<uniform> phongMaterial : phongMaterialUniforms;\n\nfn lighting_getLightColor(surfaceColor: vec3<f32>, light_direction: vec3<f32>, view_direction: vec3<f32>, normal_worldspace: vec3<f32>, color: vec3<f32>) -> vec3<f32> {\n  let halfway_direction: vec3<f32> = normalize(light_direction + view_direction);\n  var lambertian: f32 = dot(light_direction, normal_worldspace);\n  var specular: f32 = 0.0;\n  if (lambertian > 0.0) {\n    let specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n    specular = pow(specular_angle, phongMaterial.shininess);\n  }\n  lambertian = max(lambertian, 0.0);\n  return (lambertian * phongMaterial.diffuse * surfaceColor + specular * phongMaterial.specularColor) * color;\n}\n\nfn lighting_getLightColor2(surfaceColor: vec3<f32>, cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32> {\n  var lightColor: vec3<f32> = surfaceColor;\n\n  if (lighting.enabled == 0) {\n    return lightColor;\n  }\n\n  let view_direction: vec3<f32> = normalize(cameraPosition - position_worldspace);\n  lightColor = phongMaterial.ambient * surfaceColor * lighting.ambientColor;\n\n  if (lighting.lightType == 0) {\n    let pointLight: PointLight  = lighting_getPointLight(0);\n    let light_position_worldspace: vec3<f32> = pointLight.position;\n    let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  } else if (lighting.lightType == 1) {\n    var directionalLight: DirectionalLight = lighting_getDirectionalLight(0);\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  \n  return lightColor;\n  /*\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.pointLightCount) {\n      break;\n    }\n    PointLight pointLight = lighting.pointLight[i];\n    vec3 light_position_worldspace = pointLight.position;\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n  }\n\n  for (int i = 0; i < MAX_LIGHTS; i++) {\n    if (i >= lighting.directionalLightCount) {\n      break;\n    }\n    DirectionalLight directionalLight = lighting.directionalLight[i];\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n  }\n  */\n}\n\nfn lighting_getSpecularLightColor(cameraPosition: vec3<f32>, position_worldspace: vec3<f32>, normal_worldspace: vec3<f32>) -> vec3<f32>{\n  var lightColor = vec3<f32>(0, 0, 0);\n  let surfaceColor = vec3<f32>(0, 0, 0);\n\n  if (lighting.enabled == 0) {\n    let view_direction = normalize(cameraPosition - position_worldspace);\n\n    switch (lighting.lightType) {\n      case 0, default: {\n        let pointLight: PointLight = lighting_getPointLight(0);\n        let light_position_worldspace: vec3<f32> = pointLight.position;\n        let light_direction: vec3<f32> = normalize(light_position_worldspace - position_worldspace);\n        lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n      }\n      case 1: {\n        let directionalLight: DirectionalLight = lighting_getDirectionalLight(0);\n        lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n      }\n    }\n  }\n  return lightColor;\n}\n`;\n// TODO - handle multiple lights\n/**\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.pointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getPointLight(i);\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.directionalLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getDirectionalLight(i);\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n    /**\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.pointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getPointLight(i);\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting.directionalLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_getDirectionalLight(i);\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n  */\n//# sourceMappingURL=phong-shaders-wgsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/shadertools/dist/modules/lighting/phong-material/phong-shaders-wgsl.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/cut-by-grid.js":
/*!***********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/cut-by-grid.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cutPolygonByGrid: () => (/* binding */ cutPolygonByGrid),\n/* harmony export */   cutPolylineByGrid: () => (/* binding */ cutPolylineByGrid)\n/* harmony export */ });\n/* harmony import */ var _lineclip_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lineclip.js */ \"./node_modules/@math.gl/polygon/dist/lineclip.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@math.gl/polygon/dist/utils.js\");\n// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\n\n\nfunction cutPolylineByGrid(positions, options) {\n    const { size = 2, broken = false, gridResolution = 10, gridOffset = [0, 0], startIndex = 0, endIndex = positions.length } = options || {};\n    const numPoints = (endIndex - startIndex) / size;\n    let part = [];\n    const result = [part];\n    const a = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, 0, size, startIndex);\n    let b;\n    let codeB;\n    const cell = getGridCell(a, gridResolution, gridOffset, []);\n    const scratchPoint = [];\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(part, a);\n    for (let i = 1; i < numPoints; i++) {\n        b = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i, size, startIndex, b);\n        codeB = (0,_lineclip_js__WEBPACK_IMPORTED_MODULE_1__.bitCode)(b, cell);\n        while (codeB) {\n            // find the intersection with the current cell\n            (0,_lineclip_js__WEBPACK_IMPORTED_MODULE_1__.intersect)(a, b, codeB, cell, scratchPoint);\n            const codeAlt = (0,_lineclip_js__WEBPACK_IMPORTED_MODULE_1__.bitCode)(scratchPoint, cell);\n            if (codeAlt) {\n                (0,_lineclip_js__WEBPACK_IMPORTED_MODULE_1__.intersect)(a, scratchPoint, codeAlt, cell, scratchPoint);\n                codeB = codeAlt;\n            }\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(part, scratchPoint);\n            // move to the next cell\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copy)(a, scratchPoint);\n            moveToNeighborCell(cell, gridResolution, codeB);\n            if (broken && part.length > size) {\n                part = [];\n                result.push(part);\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(part, a);\n            }\n            codeB = (0,_lineclip_js__WEBPACK_IMPORTED_MODULE_1__.bitCode)(b, cell);\n        }\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(part, b);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copy)(a, b);\n    }\n    return broken ? result : result[0];\n}\nconst TYPE_INSIDE = 0;\nconst TYPE_BORDER = 1;\n/**\n * Cuts a polygon by a pre-defined grid\n */\nfunction cutPolygonByGrid(positions, holeIndices = null, options) {\n    if (!positions.length) {\n        // input is empty\n        return [];\n    }\n    const { size = 2, gridResolution = 10, gridOffset = [0, 0], edgeTypes = false } = options || {};\n    const result = [];\n    const queue = [\n        {\n            pos: positions,\n            types: edgeTypes ? new Array(positions.length / size).fill(TYPE_BORDER) : null,\n            holes: holeIndices || []\n        }\n    ];\n    const bbox = [[], []];\n    // @ts-ignore\n    let cell = [];\n    // Recursively bisect polygon until every part fit in a single grid cell\n    while (queue.length) {\n        const { pos, types, holes } = queue.shift();\n        // Get the bounding box of the outer polygon\n        getBoundingBox(pos, size, holes[0] || pos.length, bbox);\n        cell = getGridCell(bbox[0], gridResolution, gridOffset, cell);\n        const code = (0,_lineclip_js__WEBPACK_IMPORTED_MODULE_1__.bitCode)(bbox[1], cell);\n        if (code) {\n            // Split the outer ring at the boundary\n            let parts = bisectPolygon(pos, types, size, 0, holes[0] || pos.length, cell, code);\n            const polygonLow = { pos: parts[0].pos, types: parts[0].types, holes: [] };\n            const polygonHigh = { pos: parts[1].pos, types: parts[1].types, holes: [] };\n            queue.push(polygonLow, polygonHigh);\n            // Split each hole at the boundary\n            for (let i = 0; i < holes.length; i++) {\n                parts = bisectPolygon(pos, types, size, holes[i], holes[i + 1] || pos.length, cell, code);\n                if (parts[0]) {\n                    polygonLow.holes.push(polygonLow.pos.length);\n                    polygonLow.pos = concatInPlace(polygonLow.pos, parts[0].pos);\n                    if (edgeTypes) {\n                        polygonLow.types = concatInPlace(polygonLow.types, parts[0].types);\n                    }\n                }\n                if (parts[1]) {\n                    polygonHigh.holes.push(polygonHigh.pos.length);\n                    polygonHigh.pos = concatInPlace(polygonHigh.pos, parts[1].pos);\n                    if (edgeTypes) {\n                        polygonHigh.types = concatInPlace(polygonHigh.types, parts[1].types);\n                    }\n                }\n            }\n        }\n        else {\n            // Polygon fits in a single cell, no more processing required\n            const polygon = { positions: pos };\n            if (edgeTypes) {\n                polygon.edgeTypes = types;\n            }\n            if (holes.length) {\n                polygon.holeIndices = holes;\n            }\n            result.push(polygon);\n        }\n    }\n    return result;\n}\n// edgeTypes:\n// TYPE_BORDER - edge from the original polygon\n// TYPE_INSIDE - inside the original polygon\n// eslint-disable-next-line max-params\nfunction bisectPolygon(positions, edgeTypes, size, startIndex, endIndex, bbox, edge) {\n    const numPoints = (endIndex - startIndex) / size;\n    const resultLow = [];\n    const resultHigh = [];\n    const typesLow = [];\n    const typesHigh = [];\n    const scratchPoint = [];\n    let p;\n    let side;\n    let type;\n    const prev = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, numPoints - 1, size, startIndex);\n    let prevSide = Math.sign(edge & 8 ? prev[1] - bbox[3] : prev[0] - bbox[2]);\n    let prevType = edgeTypes && edgeTypes[numPoints - 1];\n    let lowPointCount = 0;\n    let highPointCount = 0;\n    for (let i = 0; i < numPoints; i++) {\n        p = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i, size, startIndex, p);\n        side = Math.sign(edge & 8 ? p[1] - bbox[3] : p[0] - bbox[2]);\n        type = edgeTypes && edgeTypes[startIndex / size + i];\n        // if segment goes through the boundary, add an intersection\n        if (side && prevSide && prevSide !== side) {\n            (0,_lineclip_js__WEBPACK_IMPORTED_MODULE_1__.intersect)(prev, p, edge, bbox, scratchPoint);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(resultLow, scratchPoint) && typesLow.push(prevType);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(resultHigh, scratchPoint) && typesHigh.push(prevType);\n        }\n        if (side <= 0) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(resultLow, p) && typesLow.push(type);\n            lowPointCount -= side;\n        }\n        else if (typesLow.length) {\n            typesLow[typesLow.length - 1] = TYPE_INSIDE;\n        }\n        if (side >= 0) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(resultHigh, p) && typesHigh.push(type);\n            highPointCount += side;\n        }\n        else if (typesHigh.length) {\n            typesHigh[typesHigh.length - 1] = TYPE_INSIDE;\n        }\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copy)(prev, p);\n        prevSide = side;\n        prevType = type;\n    }\n    return [\n        lowPointCount ? { pos: resultLow, types: edgeTypes && typesLow } : null,\n        highPointCount ? { pos: resultHigh, types: edgeTypes && typesHigh } : null\n    ];\n}\nfunction getGridCell(p, gridResolution, gridOffset, out) {\n    const left = Math.floor((p[0] - gridOffset[0]) / gridResolution) * gridResolution + gridOffset[0];\n    const bottom = Math.floor((p[1] - gridOffset[1]) / gridResolution) * gridResolution + gridOffset[1];\n    out[0] = left;\n    out[1] = bottom;\n    out[2] = left + gridResolution;\n    out[3] = bottom + gridResolution;\n    return out;\n}\nfunction moveToNeighborCell(cell, gridResolution, edge) {\n    if (edge & 8) {\n        // top\n        cell[1] += gridResolution;\n        cell[3] += gridResolution;\n    }\n    else if (edge & 4) {\n        // bottom\n        cell[1] -= gridResolution;\n        cell[3] -= gridResolution;\n    }\n    else if (edge & 2) {\n        // right\n        cell[0] += gridResolution;\n        cell[2] += gridResolution;\n    }\n    else if (edge & 1) {\n        // left\n        cell[0] -= gridResolution;\n        cell[2] -= gridResolution;\n    }\n}\nfunction getBoundingBox(positions, size, endIndex, out) {\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0; i < endIndex; i += size) {\n        const x = positions[i];\n        const y = positions[i + 1];\n        minX = x < minX ? x : minX;\n        maxX = x > maxX ? x : maxX;\n        minY = y < minY ? y : minY;\n        maxY = y > maxY ? y : maxY;\n    }\n    out[0][0] = minX;\n    out[0][1] = minY;\n    out[1][0] = maxX;\n    out[1][1] = maxY;\n    return out;\n}\nfunction concatInPlace(arr1, arr2) {\n    for (let i = 0; i < arr2.length; i++) {\n        arr1.push(arr2[i]);\n    }\n    return arr1;\n}\n//# sourceMappingURL=cut-by-grid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/cut-by-grid.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/cut-by-mercator-bounds.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/cut-by-mercator-bounds.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cutPolygonByMercatorBounds: () => (/* binding */ cutPolygonByMercatorBounds),\n/* harmony export */   cutPolylineByMercatorBounds: () => (/* binding */ cutPolylineByMercatorBounds)\n/* harmony export */ });\n/* harmony import */ var _cut_by_grid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cut-by-grid.js */ \"./node_modules/@math.gl/polygon/dist/cut-by-grid.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@math.gl/polygon/dist/utils.js\");\n// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n// https://en.wikipedia.org/wiki/Web_Mercator_projection\nconst DEFAULT_MAX_LATITUDE = 85.051129;\n/** https://user-images.githubusercontent.com/2059298/78465769-938b7a00-76ae-11ea-9b95-1f4c26425ab9.png */\nfunction cutPolylineByMercatorBounds(positions, options) {\n    const { size = 2, startIndex = 0, endIndex = positions.length, normalize = true } = options || {};\n    // Remap longitudes so that each segment takes the shorter path\n    const newPositions = positions.slice(startIndex, endIndex);\n    wrapLongitudesForShortestPath(newPositions, size, 0, endIndex - startIndex);\n    const parts = (0,_cut_by_grid_js__WEBPACK_IMPORTED_MODULE_0__.cutPolylineByGrid)(newPositions, {\n        size,\n        broken: true,\n        gridResolution: 360,\n        gridOffset: [-180, -180]\n    });\n    if (normalize) {\n        // Each part is guaranteed to be in a single copy of the world\n        // Map longitudes back to [-180, 180]\n        for (const part of parts) {\n            shiftLongitudesIntoRange(part, size);\n        }\n    }\n    return parts;\n}\n/** https://user-images.githubusercontent.com/2059298/78465770-94241080-76ae-11ea-809a-6a8534dac1d9.png */\nfunction cutPolygonByMercatorBounds(positions, holeIndices = null, options) {\n    const { size = 2, normalize = true, edgeTypes = false } = options || {};\n    holeIndices = holeIndices || [];\n    const newPositions = [];\n    const newHoleIndices = [];\n    let srcStartIndex = 0;\n    let targetIndex = 0;\n    for (let ringIndex = 0; ringIndex <= holeIndices.length; ringIndex++) {\n        // srcStartIndex/srcEndIndex define the ring in the original positions\n        const srcEndIndex = holeIndices[ringIndex] || positions.length;\n        // targetStartIndex/targetIndex define the ring in newPositions\n        const targetStartIndex = targetIndex;\n        // In case the ring contains a pole (e.g. Antarctica), we'll have to insert vertices\n        // The insertion point is defined by the vertex closest to the pole\n        // Split the the ring by the insertion point when copying to newPositions\n        const splitIndex = findSplitIndex(positions, size, srcStartIndex, srcEndIndex);\n        for (let i = splitIndex; i < srcEndIndex; i++) {\n            newPositions[targetIndex++] = positions[i];\n        }\n        for (let i = srcStartIndex; i < splitIndex; i++) {\n            newPositions[targetIndex++] = positions[i];\n        }\n        // Remap longitudes so that each segment takes the shorter path\n        wrapLongitudesForShortestPath(newPositions, size, targetStartIndex, targetIndex);\n        // Handle the case when the ring contains a pole\n        insertPoleVertices(newPositions, size, targetStartIndex, targetIndex, options?.maxLatitude);\n        srcStartIndex = srcEndIndex;\n        newHoleIndices[ringIndex] = targetIndex;\n    }\n    newHoleIndices.pop();\n    const parts = (0,_cut_by_grid_js__WEBPACK_IMPORTED_MODULE_0__.cutPolygonByGrid)(newPositions, newHoleIndices, {\n        size,\n        gridResolution: 360,\n        gridOffset: [-180, -180],\n        edgeTypes\n    });\n    if (normalize) {\n        // Each part is guaranteed to be in a single copy of the world\n        // Map longitudes back to [-180, 180]\n        for (const part of parts) {\n            // @ts-expect-error (mutates readonly array) May mutate newPositions, which is created by us\n            shiftLongitudesIntoRange(part.positions, size);\n        }\n    }\n    return parts;\n}\n/* Helpers */\n// See comments for insertPoleVertices\nfunction findSplitIndex(positions, size, startIndex, endIndex) {\n    let maxLat = -1;\n    let pointIndex = -1;\n    for (let i = startIndex + 1; i < endIndex; i += size) {\n        const lat = Math.abs(positions[i]);\n        if (lat > maxLat) {\n            maxLat = lat;\n            pointIndex = i - 1;\n        }\n    }\n    return pointIndex;\n}\n// https://user-images.githubusercontent.com/2059298/78857483-5987e400-79de-11ea-98fc-0631287a8431.png\n//\n// If the polygon contains a pole, to tesselate it correctly, we need to insert the edge\n// of map into the polygon. This requires adding two vertices that represent the pole, by\n// drawing a perpendicular line to the Mercator map edge from a selected vertex on the ring.\n//\n// We select the insertion position carefully so that the inserted line segments do not\n// intersect with the ring itself. This is ensured by findSplitIndex, which returns the\n// vertex closest to the pole.\nfunction insertPoleVertices(positions, size, startIndex, endIndex, maxLatitude = DEFAULT_MAX_LATITUDE) {\n    // Check if the ring contains a pole\n    const firstLng = positions[startIndex];\n    const lastLng = positions[endIndex - size];\n    if (Math.abs(firstLng - lastLng) > 180) {\n        // The ring does not make a round trip\n        // Add the nearest pole to the vertices so that the polygon tesselates correctly\n        const p = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getPointAtIndex)(positions, 0, size, startIndex);\n        // Copy the first vertex to the world of the last vertex\n        p[0] += Math.round((lastLng - firstLng) / 360) * 360;\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.push)(positions, p);\n        // Project the copied vertex to the edge of the map\n        p[1] = Math.sign(p[1]) * maxLatitude;\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.push)(positions, p);\n        // Project the first vertex to the edge of the map\n        p[0] = firstLng;\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.push)(positions, p);\n    }\n}\nfunction wrapLongitudesForShortestPath(positions, size, startIndex, endIndex) {\n    let prevLng = positions[0];\n    let lng;\n    for (let i = startIndex; i < endIndex; i += size) {\n        lng = positions[i];\n        const delta = lng - prevLng;\n        if (delta > 180 || delta < -180) {\n            lng -= Math.round(delta / 360) * 360;\n        }\n        positions[i] = prevLng = lng;\n    }\n}\nfunction shiftLongitudesIntoRange(positions, size) {\n    let refLng;\n    const pointCount = positions.length / size;\n    // Find a longitude that is not on the edge of a world\n    // Which we will use to determine which world copy it is\n    for (let i = 0; i < pointCount; i++) {\n        refLng = positions[i * size];\n        if ((refLng + 180) % 360 !== 0) {\n            break;\n        }\n    }\n    const delta = -Math.round(refLng / 360) * 360;\n    if (delta === 0) {\n        return;\n    }\n    for (let i = 0; i < pointCount; i++) {\n        positions[i * size] += delta;\n    }\n}\n//# sourceMappingURL=cut-by-mercator-bounds.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/cut-by-mercator-bounds.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/earcut.js":
/*!******************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/earcut.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* unused harmony export earcut */\n/* harmony import */ var _polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon-utils.js */ \"./node_modules/@math.gl/polygon/dist/polygon-utils.js\");\n// math.gl\n// SPDX-License-Identifier: MIT and ISC\n// Copyright (c) vis.gl contributors\n\n/**\n * Computes a triangulation of a polygon\n * @param positions a flat array of the vertex positions that define the polygon.\n * @param holeIndices an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5–7 and another with 8–11).\n * @param dim the number of elements in each vertex. Size `2` will interpret `positions` as `[x0, y0, x1, y1, ...]` and size `3` will interpret `positions` as `[x0, y0, z0, x1, y1, z1, ...]`. Default `2`.\n * @param areas areas of outer polygon and holes as computed by `getPolygonSignedArea()`. Can be optionally supplied to speed up triangulation\n * @returns array of indices into the `positions` array that describes the triangulation of the polygon\n * Adapted from https://github.com/mapbox/earcut\n */\nfunction earcut(positions, holeIndices, dim = 2, areas, plane = 'xy') {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : positions.length;\n    let outerNode = linkedList(positions, 0, outerLen, dim, true, areas && areas[0], plane);\n    const triangles = [];\n    if (!outerNode || outerNode.next === outerNode.prev)\n        return triangles;\n    let invSize;\n    let maxX;\n    let maxY;\n    let minX;\n    let minY;\n    let x;\n    let y;\n    if (hasHoles)\n        outerNode = eliminateHoles(positions, holeIndices, outerNode, dim, areas, plane);\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (positions.length > 80 * dim) {\n        minX = maxX = positions[0];\n        minY = maxY = positions[1];\n        for (let i = dim; i < outerLen; i += dim) {\n            x = positions[i];\n            y = positions[i + 1];\n            if (x < minX)\n                minX = x;\n            if (y < minY)\n                minY = y;\n            if (x > maxX)\n                maxX = x;\n            if (y > maxY)\n                maxY = y;\n        }\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n    return triangles;\n}\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise, area, plane) {\n    let i;\n    let last;\n    if (area === undefined) {\n        area = (0,_polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPolygonSignedArea)(data, { start, end, size: dim, plane });\n    }\n    let i0 = _polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.DimIndex[plane[0]];\n    let i1 = _polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.DimIndex[plane[1]];\n    // Note that the signed area calculation in math.gl\n    // has the opposite sign to that which was originally\n    // present in earcut, thus the `< 0` is reversed\n    if (clockwise === area < 0) {\n        for (i = start; i < end; i += dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    else {\n        for (i = end - dim; i >= start; i -= dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n    return last;\n}\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start)\n        return start;\n    if (!end)\n        end = start;\n    let p = start;\n    let again;\n    do {\n        again = false;\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next)\n                break;\n            again = true;\n        }\n        else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n    return end;\n}\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear)\n        return;\n    // interlink polygon nodes in z-order\n    if (!pass && invSize)\n        indexCurve(ear, minX, minY, invSize);\n    let stop = ear;\n    let prev;\n    let next;\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push((prev.i / dim) | 0);\n            triangles.push((ear.i / dim) | 0);\n            triangles.push((next.i / dim) | 0);\n            removeNode(ear);\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n            continue;\n        }\n        ear = next;\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n                // if this didn't work, try curing all small self-intersections locally\n            }\n            else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n                // as a last resort, try splitting the remaining polygon into two\n            }\n            else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n            break;\n        }\n    }\n}\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    let p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.next;\n    }\n    return true;\n}\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    // z-order range for the current triangle bbox;\n    const minZ = zOrder(x0, y0, minX, minY, invSize);\n    const maxZ = zOrder(x1, y1, minX, minY, invSize);\n    let p = ear.prevZ;\n    let n = ear.nextZ;\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n    }\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    return true;\n}\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    let p = start;\n    do {\n        const a = p.prev;\n        const b = p.next.next;\n        if (!equals(a, b) &&\n            intersects(a, p, p.next, b) &&\n            locallyInside(a, b) &&\n            locallyInside(b, a)) {\n            triangles.push((a.i / dim) | 0);\n            triangles.push((p.i / dim) | 0);\n            triangles.push((b.i / dim) | 0);\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n    return filterPoints(p);\n}\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    let a = start;\n    do {\n        let b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                let c = splitPolygon(a, b);\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas, plane) {\n    const queue = [];\n    let i;\n    let len;\n    let start;\n    let end;\n    let list;\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false, areas && areas[i + 1], plane);\n        if (list === list.next)\n            list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n    queue.sort(compareX);\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n    return outerNode;\n}\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    const bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n    const bridgeReverse = splitPolygon(bridge, hole);\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx)\n                    return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n    if (!m)\n        return null;\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n    let tan;\n    p = m;\n    do {\n        if (hx >= p.x &&\n            p.x >= mx &&\n            hx !== p.x &&\n            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n            if (locallyInside(p, hole) &&\n                (tan < tanMin ||\n                    (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n        p = p.next;\n    } while (p !== stop);\n    return m;\n}\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === 0)\n            p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n}\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    let e;\n    let i;\n    let inSize = 1;\n    let numMerges;\n    let p;\n    let pSize;\n    let q;\n    let qSize;\n    let tail;\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q)\n                    break;\n            }\n            qSize = inSize;\n            while (pSize > 0 || (qSize > 0 && q)) {\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                }\n                else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n                if (tail)\n                    tail.nextZ = e;\n                else\n                    list = e;\n                e.prevZ = tail;\n                tail = e;\n            }\n            p = q;\n        }\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n    return list;\n}\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = ((x - minX) * invSize) | 0;\n    y = ((y - minY) * invSize) | 0;\n    x = (x | (x << 8)) & 0x00ff00ff;\n    x = (x | (x << 4)) & 0x0f0f0f0f;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n    y = (y | (y << 8)) & 0x00ff00ff;\n    y = (y | (y << 4)) & 0x0f0f0f0f;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n    return x | (y << 1);\n}\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    let p = start;\n    let leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y))\n            leftmost = p;\n        p = p.next;\n    } while (p !== start);\n    return leftmost;\n}\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return ((cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n        (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n        (bx - px) * (cy - py) >= (cx - px) * (by - py));\n}\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return (a.next.i !== b.i &&\n        a.prev.i !== b.i &&\n        !intersectsPolygon(a, b) && // dones't intersect other edges\n        ((locallyInside(a, b) &&\n            locallyInside(b, a) &&\n            middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\n            (equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0))); // special zero-length case\n}\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n    if (o1 !== o2 && o3 !== o4)\n        return true; // general case\n    if (o1 === 0 && onSegment(p1, p2, q1))\n        return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1))\n        return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2))\n        return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2))\n        return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n    return false;\n}\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return (q.x <= Math.max(p.x, r.x) &&\n        q.x >= Math.min(p.x, r.x) &&\n        q.y <= Math.max(p.y, r.y) &&\n        q.y >= Math.min(p.y, r.y));\n}\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i &&\n            p.next.i !== a.i &&\n            p.i !== b.i &&\n            p.next.i !== b.i &&\n            intersects(p, p.next, a, b))\n            return true;\n        p = p.next;\n    } while (p !== a);\n    return false;\n}\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0\n        ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n        : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py &&\n            p.next.y !== p.y &&\n            px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x)\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n    return inside;\n}\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    const a2 = new Vertex(a.i, a.x, a.y);\n    const b2 = new Vertex(b.i, b.x, b.y);\n    const an = a.next;\n    const bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n}\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    const p = new Vertex(i, x, y);\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    }\n    else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ)\n        p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ)\n        p.nextZ.prevZ = p.prevZ;\n}\nclass Vertex {\n    constructor(i, x, y) {\n        // previous and next vertex nodes in a polygon ring\n        this.prev = null;\n        this.next = null;\n        // z-order curve value\n        this.z = 0;\n        // previous and next nodes in z-order\n        this.prevZ = null;\n        this.nextZ = null;\n        // indicates whether this is a steiner point\n        this.steiner = false;\n        this.i = i;\n        this.x = x;\n        this.y = y;\n    }\n}\n//# sourceMappingURL=earcut.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/earcut.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WINDING: () => (/* reexport safe */ _polygon_utils_js__WEBPACK_IMPORTED_MODULE_1__.WINDING),\n/* harmony export */   cutPolygonByGrid: () => (/* reexport safe */ _cut_by_grid_js__WEBPACK_IMPORTED_MODULE_3__.cutPolygonByGrid),\n/* harmony export */   cutPolygonByMercatorBounds: () => (/* reexport safe */ _cut_by_mercator_bounds_js__WEBPACK_IMPORTED_MODULE_4__.cutPolygonByMercatorBounds),\n/* harmony export */   cutPolylineByGrid: () => (/* reexport safe */ _cut_by_grid_js__WEBPACK_IMPORTED_MODULE_3__.cutPolylineByGrid),\n/* harmony export */   cutPolylineByMercatorBounds: () => (/* reexport safe */ _cut_by_mercator_bounds_js__WEBPACK_IMPORTED_MODULE_4__.cutPolylineByMercatorBounds),\n/* harmony export */   modifyPolygonWindingDirection: () => (/* reexport safe */ _polygon_utils_js__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirection)\n/* harmony export */ });\n/* harmony import */ var _polygon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon.js */ \"./node_modules/@math.gl/polygon/dist/polygon.js\");\n/* harmony import */ var _polygon_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polygon-utils.js */ \"./node_modules/@math.gl/polygon/dist/polygon-utils.js\");\n/* harmony import */ var _earcut_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earcut.js */ \"./node_modules/@math.gl/polygon/dist/earcut.js\");\n/* harmony import */ var _cut_by_grid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cut-by-grid.js */ \"./node_modules/@math.gl/polygon/dist/cut-by-grid.js\");\n/* harmony import */ var _cut_by_mercator_bounds_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cut-by-mercator-bounds.js */ \"./node_modules/@math.gl/polygon/dist/cut-by-mercator-bounds.js\");\n// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n\n\n\n\n\n/** @deprecated */\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9AbWF0aC5nbC9wb2x5Z29uL2Rpc3QvaW5kZXguanM/MjJkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtYXRoLmdsXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgKGMpIHZpcy5nbCBjb250cmlidXRvcnNcbmV4cG9ydCB7IFBvbHlnb24gfSBmcm9tIFwiLi9wb2x5Z29uLmpzXCI7XG5leHBvcnQgeyBnZXRQb2x5Z29uU2lnbmVkQXJlYSwgZ2V0UG9seWdvbldpbmRpbmdEaXJlY3Rpb24sIGZvckVhY2hTZWdtZW50SW5Qb2x5Z29uLCBtb2RpZnlQb2x5Z29uV2luZGluZ0RpcmVjdGlvbiwgV0lORElORyB9IGZyb20gXCIuL3BvbHlnb24tdXRpbHMuanNcIjtcbmV4cG9ydCB7IGVhcmN1dCB9IGZyb20gXCIuL2VhcmN1dC5qc1wiO1xuZXhwb3J0IHsgY2xpcFBvbHlnb24sIGNsaXBQb2x5bGluZSB9IGZyb20gXCIuL2xpbmVjbGlwLmpzXCI7XG5leHBvcnQgeyBjdXRQb2x5Z29uQnlHcmlkLCBjdXRQb2x5bGluZUJ5R3JpZCB9IGZyb20gXCIuL2N1dC1ieS1ncmlkLmpzXCI7XG5leHBvcnQgeyBjdXRQb2x5bGluZUJ5TWVyY2F0b3JCb3VuZHMsIGN1dFBvbHlnb25CeU1lcmNhdG9yQm91bmRzIH0gZnJvbSBcIi4vY3V0LWJ5LW1lcmNhdG9yLWJvdW5kcy5qc1wiO1xuLyoqIEBkZXByZWNhdGVkICovXG5leHBvcnQgeyBQb2x5Z29uIGFzIF9Qb2x5Z29uIH0gZnJvbSBcIi4vcG9seWdvbi5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/index.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/lineclip.js":
/*!********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/lineclip.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bitCode: () => (/* binding */ bitCode),\n/* harmony export */   intersect: () => (/* binding */ intersect)\n/* harmony export */ });\n/* unused harmony exports clipPolyline, clipPolygon */\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@math.gl/polygon/dist/utils.js\");\n// math.gl\n// SPDX-License-Identifier: MIT and ISC\n// Copyright (c) vis.gl contributors\n/*\n  Adapted from https://github.com/mapbox/lineclip to work with flat arrays\n  and 3d positions\n\n  ISC License\n\n  Copyright (c) 2015, Mapbox\n\n  Permission to use, copy, modify, and/or distribute this software for any purpose\n  with or without fee is hereby granted, provided that the above copyright notice\n  and this permission notice appear in all copies.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n  FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n  THIS SOFTWARE.\n\n */\n/* eslint-disable max-statements, max-depth, complexity */\n\n/**\n * Cohen-Sutherland line clipping algorithm, adapted to efficiently\n * handle polylines rather than just segments\n */\nfunction clipPolyline(positions, bbox, options) {\n    const { size = 2, startIndex = 0, endIndex = positions.length } = options || {};\n    const numPoints = (endIndex - startIndex) / size;\n    const result = [];\n    let part = [];\n    let a;\n    let b;\n    let codeA = -1;\n    let codeB;\n    let lastCode;\n    for (let i = 1; i < numPoints; i++) {\n        a = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i - 1, size, startIndex, a);\n        b = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i, size, startIndex, b);\n        if (codeA < 0) {\n            codeA = bitCode(a, bbox);\n        }\n        codeB = lastCode = bitCode(b, bbox);\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (!(codeA | codeB)) {\n                // accept\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(part, a);\n                if (codeB !== lastCode) {\n                    // segment went outside\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(part, b);\n                    if (i < numPoints - 1) {\n                        // start a new line\n                        result.push(part);\n                        part = [];\n                    }\n                }\n                else if (i === numPoints - 1) {\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(part, b);\n                }\n                break;\n            }\n            else if (codeA & codeB) {\n                // trivial reject\n                break;\n            }\n            else if (codeA) {\n                // a outside, intersect with clip edge\n                intersect(a, b, codeA, bbox, a);\n                codeA = bitCode(a, bbox);\n            }\n            else {\n                // b outside\n                intersect(a, b, codeB, bbox, b);\n                codeB = bitCode(b, bbox);\n            }\n        }\n        codeA = lastCode;\n    }\n    if (part.length)\n        result.push(part);\n    return result;\n}\n/**\n * Sutherland-Hodgeman polygon clipping algorithm\n * polygon must be closed (first vertex == last vertex)\n */\nfunction clipPolygon(positions, bbox, options) {\n    const { size = 2, endIndex = positions.length } = options || {};\n    let { startIndex = 0 } = options || {};\n    let numPoints = (endIndex - startIndex) / size;\n    let result;\n    let p;\n    let prev;\n    let inside;\n    let prevInside;\n    // clip against each side of the clip rectangle\n    for (let edge = 1; edge <= 8; edge *= 2) {\n        result = [];\n        prev = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, numPoints - 1, size, startIndex, prev);\n        prevInside = !(bitCode(prev, bbox) & edge);\n        for (let i = 0; i < numPoints; i++) {\n            p = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i, size, startIndex, p);\n            inside = !(bitCode(p, bbox) & edge);\n            // if segment goes through the clip window, add an intersection\n            if (inside !== prevInside)\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(result, intersect(prev, p, edge, bbox));\n            if (inside)\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.push)(result, p); // add a point if it's inside\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copy)(prev, p);\n            prevInside = inside;\n        }\n        // close loop\n        positions = result;\n        startIndex = 0;\n        numPoints = result.length / size;\n        if (!numPoints)\n            break;\n    }\n    return result;\n}\n/** intersect a segment against one of the 4 lines that make up the bbox */\nfunction intersect(a, b, edge, bbox, out = []) {\n    let t;\n    // Forces out[snapI] to be on the bbox edge\n    // Interpolation introduces precision issue which may cause lineclip to be\n    // stuck in an infinite loop\n    let snap;\n    if (edge & 8) {\n        // top\n        t = (bbox[3] - a[1]) / (b[1] - a[1]);\n        snap = 3;\n    }\n    else if (edge & 4) {\n        // bottom\n        t = (bbox[1] - a[1]) / (b[1] - a[1]);\n        snap = 1;\n    }\n    else if (edge & 2) {\n        // right\n        t = (bbox[2] - a[0]) / (b[0] - a[0]);\n        snap = 2;\n    }\n    else if (edge & 1) {\n        // left\n        t = (bbox[0] - a[0]) / (b[0] - a[0]);\n        snap = 0;\n    }\n    else {\n        return null;\n    }\n    for (let i = 0; i < a.length; i++) {\n        out[i] = (snap & 1) === i ? bbox[snap] : t * (b[i] - a[i]) + a[i];\n    }\n    return out;\n}\n/**\n * bit code reflects the point position relative to the bbox:\n *         left  mid  right\n *    top  1001  1000  1010\n *    mid  0001  0000  0010\n * bottom  0101  0100  0110\n */\nfunction bitCode(p, bbox) {\n    let code = 0;\n    if (p[0] < bbox[0])\n        code |= 1;\n    // left\n    else if (p[0] > bbox[2])\n        code |= 2; // right\n    if (p[1] < bbox[1])\n        code |= 4;\n    // bottom\n    else if (p[1] > bbox[3])\n        code |= 8; // top\n    return code;\n}\n//# sourceMappingURL=lineclip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/lineclip.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/polygon-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/polygon-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DimIndex: () => (/* binding */ DimIndex),\n/* harmony export */   WINDING: () => (/* binding */ WINDING),\n/* harmony export */   forEachSegmentInPolygon: () => (/* binding */ forEachSegmentInPolygon),\n/* harmony export */   forEachSegmentInPolygonPoints: () => (/* binding */ forEachSegmentInPolygonPoints),\n/* harmony export */   getPolygonSignedArea: () => (/* binding */ getPolygonSignedArea),\n/* harmony export */   getPolygonSignedAreaPoints: () => (/* binding */ getPolygonSignedAreaPoints),\n/* harmony export */   modifyPolygonWindingDirection: () => (/* binding */ modifyPolygonWindingDirection),\n/* harmony export */   modifyPolygonWindingDirectionPoints: () => (/* binding */ modifyPolygonWindingDirectionPoints)\n/* harmony export */ });\n/* unused harmony exports getPolygonWindingDirection, getPolygonWindingDirectionPoints */\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/core */ \"./node_modules/@math.gl/core/dist/lib/common.js\");\n// math.gl\n// SPDX-License-Identifier: MIT and ISC\n// Copyright (c) vis.gl contributors\n/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\n\nconst WINDING = {\n    CLOCKWISE: 1,\n    COUNTER_CLOCKWISE: -1\n};\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points An array that represents points of the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nfunction modifyPolygonWindingDirection(points, direction, options = {}) {\n    const windingDirection = getPolygonWindingDirection(points, options);\n    if (windingDirection !== direction) {\n        reversePolygon(points, options);\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nfunction getPolygonWindingDirection(points, options = {}) {\n    return Math.sign(getPolygonSignedArea(points, options));\n}\nconst DimIndex = {\n    x: 0,\n    y: 1,\n    z: 2\n};\n/**\n * Returns signed area of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n * https://en.wikipedia.org/wiki/Shoelace_formula\n */\nfunction getPolygonSignedArea(points, options = {}) {\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    const dim = options.size || 2;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        area += (points[i + i0] - points[j + i0]) * (points[i + i1] + points[j + i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls the visitor callback for each segment in the polygon.\n * @param points An array that represents points of the polygon\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nfunction forEachSegmentInPolygon(points, visitor, options = {}) {\n    const { start = 0, end = points.length, size = 2, isClosed } = options;\n    const numPoints = (end - start) / size;\n    for (let i = 0; i < numPoints - 1; ++i) {\n        visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n    }\n    const endPointIndex = start + (numPoints - 1) * size;\n    const isClosedEx = isClosed ||\n        ((0,_math_gl_core__WEBPACK_IMPORTED_MODULE_0__.equals)(points[start], points[endPointIndex]) &&\n            (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_0__.equals)(points[start + 1], points[endPointIndex + 1]));\n    if (!isClosedEx) {\n        visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n    }\n}\nfunction reversePolygon(points, options) {\n    const { start = 0, end = points.length, size = 2 } = options;\n    const numPoints = (end - start) / size;\n    const numSwaps = Math.floor(numPoints / 2);\n    for (let i = 0; i < numSwaps; ++i) {\n        const b1 = start + i * size;\n        const b2 = start + (numPoints - 1 - i) * size;\n        for (let j = 0; j < size; ++j) {\n            const tmp = points[b1 + j];\n            points[b1 + j] = points[b2 + j];\n            points[b2 + j] = tmp;\n        }\n    }\n}\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points Array of points that represent the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nfunction modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n    const currentDirection = getPolygonWindingDirectionPoints(points, options);\n    if (currentDirection !== direction) {\n        points.reverse();\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nfunction getPolygonWindingDirectionPoints(points, options = {}) {\n    return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\n/**\n * Returns signed area of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n */\nfunction getPolygonSignedAreaPoints(points, options = {}) {\n    // https://en.wikipedia.org/wiki/Shoelace_formula\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - 1; i < end; ++i) {\n        area += (points[i][i0] - points[j][i0]) * (points[i][i1] + points[j][i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls visitor callback for each segment in the polygon.\n * @param points Array of points that represent the polygon.\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nfunction forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n    const { start = 0, end = points.length, isClosed } = options;\n    for (let i = start; i < end - 1; ++i) {\n        visitor(points[i], points[i + 1], i, i + 1);\n    }\n    const isClosedEx = isClosed || (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_0__.equals)(points[end - 1], points[0]);\n    if (!isClosedEx) {\n        visitor(points[end - 1], points[0], end - 1, 0);\n    }\n}\n//# sourceMappingURL=polygon-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/polygon-utils.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/polygon.js":
/*!*******************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/polygon.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* unused harmony export Polygon */\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/core */ \"./node_modules/@math.gl/core/dist/lib/common.js\");\n/* harmony import */ var _polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon-utils.js */ \"./node_modules/@math.gl/polygon/dist/polygon-utils.js\");\n// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable no-undef, no-console */\n\n\nclass Polygon {\n    constructor(points, options = {}) {\n        this.points = points;\n        this.isFlatArray = !(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.isArray)(points[0]);\n        this.options = {\n            start: options.start || 0,\n            end: options.end || points.length,\n            size: options.size || 2,\n            isClosed: options.isClosed\n        };\n        Object.freeze(this);\n    }\n    /**\n     * Returns signed area of the polygon.\n     * @returns Signed area of the polygon.\n     */\n    getSignedArea() {\n        if (this.isFlatArray)\n            return (0,_polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPolygonSignedArea)(this.points, this.options);\n        return (0,_polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.getPolygonSignedAreaPoints)(this.points, this.options);\n    }\n    /**\n     * Returns absolute area of the polygon.\n     * @returns Absolute area of the polygon.\n     */\n    getArea() {\n        return Math.abs(this.getSignedArea());\n    }\n    /**\n     * Returns winding direction of the polygon.\n     * @returns Winding direction of the polygon. 1 is for clockwise, -1 for counterclockwise winding direction.\n     */\n    getWindingDirection() {\n        return Math.sign(this.getSignedArea());\n    }\n    /**\n     * Calls the visitor callback for each segment in the polygon.\n     * @param visitor A callback to call for each segment.\n     */\n    forEachSegment(visitor) {\n        if (this.isFlatArray) {\n            (0,_polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.forEachSegmentInPolygon)(this.points, \n            // eslint-disable-next-line max-params\n            (x1, y1, x2, y2, i1, i2) => {\n                // TODO @igorDykhta original visitor uses arrays for each point, but with flat arrays performance degrades if we allocate points for each segment\n                visitor([x1, y1], [x2, y2], i1, i2);\n            }, this.options);\n        }\n        else {\n            (0,_polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.forEachSegmentInPolygonPoints)(this.points, visitor, this.options);\n        }\n    }\n    /**\n     * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n     * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n     * @return Returns true if the winding direction was changed.\n     */\n    modifyWindingDirection(direction) {\n        if (this.isFlatArray) {\n            return (0,_polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.modifyPolygonWindingDirection)(this.points, direction, this.options);\n        }\n        return (0,_polygon_utils_js__WEBPACK_IMPORTED_MODULE_0__.modifyPolygonWindingDirectionPoints)(this.points, direction, this.options);\n    }\n}\n//# sourceMappingURL=polygon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L3BvbHlnb24uanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3BvbHlnb24vZGlzdC9wb2x5Z29uLmpzP2I2ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0aC5nbFxuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IChjKSB2aXMuZ2wgY29udHJpYnV0b3JzXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiwgbm8tY29uc29sZSAqL1xuaW1wb3J0IHsgaXNBcnJheSB9IGZyb20gJ0BtYXRoLmdsL2NvcmUnO1xuaW1wb3J0IHsgZ2V0UG9seWdvblNpZ25lZEFyZWEsIGZvckVhY2hTZWdtZW50SW5Qb2x5Z29uLCBtb2RpZnlQb2x5Z29uV2luZGluZ0RpcmVjdGlvbiwgZ2V0UG9seWdvblNpZ25lZEFyZWFQb2ludHMsIGZvckVhY2hTZWdtZW50SW5Qb2x5Z29uUG9pbnRzLCBtb2RpZnlQb2x5Z29uV2luZGluZ0RpcmVjdGlvblBvaW50cyB9IGZyb20gXCIuL3BvbHlnb24tdXRpbHMuanNcIjtcbmV4cG9ydCBjbGFzcyBQb2x5Z29uIHtcbiAgICBjb25zdHJ1Y3Rvcihwb2ludHMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICB0aGlzLnBvaW50cyA9IHBvaW50cztcbiAgICAgICAgdGhpcy5pc0ZsYXRBcnJheSA9ICFpc0FycmF5KHBvaW50c1swXSk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHtcbiAgICAgICAgICAgIHN0YXJ0OiBvcHRpb25zLnN0YXJ0IHx8IDAsXG4gICAgICAgICAgICBlbmQ6IG9wdGlvbnMuZW5kIHx8IHBvaW50cy5sZW5ndGgsXG4gICAgICAgICAgICBzaXplOiBvcHRpb25zLnNpemUgfHwgMixcbiAgICAgICAgICAgIGlzQ2xvc2VkOiBvcHRpb25zLmlzQ2xvc2VkXG4gICAgICAgIH07XG4gICAgICAgIE9iamVjdC5mcmVlemUodGhpcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgc2lnbmVkIGFyZWEgb2YgdGhlIHBvbHlnb24uXG4gICAgICogQHJldHVybnMgU2lnbmVkIGFyZWEgb2YgdGhlIHBvbHlnb24uXG4gICAgICovXG4gICAgZ2V0U2lnbmVkQXJlYSgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNGbGF0QXJyYXkpXG4gICAgICAgICAgICByZXR1cm4gZ2V0UG9seWdvblNpZ25lZEFyZWEodGhpcy5wb2ludHMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBnZXRQb2x5Z29uU2lnbmVkQXJlYVBvaW50cyh0aGlzLnBvaW50cywgdGhpcy5vcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhYnNvbHV0ZSBhcmVhIG9mIHRoZSBwb2x5Z29uLlxuICAgICAqIEByZXR1cm5zIEFic29sdXRlIGFyZWEgb2YgdGhlIHBvbHlnb24uXG4gICAgICovXG4gICAgZ2V0QXJlYSgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguYWJzKHRoaXMuZ2V0U2lnbmVkQXJlYSgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB3aW5kaW5nIGRpcmVjdGlvbiBvZiB0aGUgcG9seWdvbi5cbiAgICAgKiBAcmV0dXJucyBXaW5kaW5nIGRpcmVjdGlvbiBvZiB0aGUgcG9seWdvbi4gMSBpcyBmb3IgY2xvY2t3aXNlLCAtMSBmb3IgY291bnRlcmNsb2Nrd2lzZSB3aW5kaW5nIGRpcmVjdGlvbi5cbiAgICAgKi9cbiAgICBnZXRXaW5kaW5nRGlyZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTWF0aC5zaWduKHRoaXMuZ2V0U2lnbmVkQXJlYSgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbHMgdGhlIHZpc2l0b3IgY2FsbGJhY2sgZm9yIGVhY2ggc2VnbWVudCBpbiB0aGUgcG9seWdvbi5cbiAgICAgKiBAcGFyYW0gdmlzaXRvciBBIGNhbGxiYWNrIHRvIGNhbGwgZm9yIGVhY2ggc2VnbWVudC5cbiAgICAgKi9cbiAgICBmb3JFYWNoU2VnbWVudCh2aXNpdG9yKSB7XG4gICAgICAgIGlmICh0aGlzLmlzRmxhdEFycmF5KSB7XG4gICAgICAgICAgICBmb3JFYWNoU2VnbWVudEluUG9seWdvbih0aGlzLnBvaW50cywgXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LXBhcmFtc1xuICAgICAgICAgICAgKHgxLCB5MSwgeDIsIHkyLCBpMSwgaTIpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBUT0RPIEBpZ29yRHlraHRhIG9yaWdpbmFsIHZpc2l0b3IgdXNlcyBhcnJheXMgZm9yIGVhY2ggcG9pbnQsIGJ1dCB3aXRoIGZsYXQgYXJyYXlzIHBlcmZvcm1hbmNlIGRlZ3JhZGVzIGlmIHdlIGFsbG9jYXRlIHBvaW50cyBmb3IgZWFjaCBzZWdtZW50XG4gICAgICAgICAgICAgICAgdmlzaXRvcihbeDEsIHkxXSwgW3gyLCB5Ml0sIGkxLCBpMik7XG4gICAgICAgICAgICB9LCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yRWFjaFNlZ21lbnRJblBvbHlnb25Qb2ludHModGhpcy5wb2ludHMsIHZpc2l0b3IsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdpbmRpbmcgZGlyZWN0aW9uIG9mIHRoZSBwb2x5Z29uIGFuZCByZXZlcnNlcyB0aGUgcG9seWdvbiBpbiBjYXNlIG9mIG9wcG9zaXRlIHdpbmRpbmcgZGlyZWN0aW9uLlxuICAgICAqIEBwYXJhbSBkaXJlY3Rpb24gUmVxdWVzdGVkIHdpbmRpbmcgZGlyZWN0aW9uLiAxIGlzIGZvciBjbG9ja3dpc2UsIC0xIGZvciBjb3VudGVyY2xvY2t3aXNlIHdpbmRpbmcgZGlyZWN0aW9uLlxuICAgICAqIEByZXR1cm4gUmV0dXJucyB0cnVlIGlmIHRoZSB3aW5kaW5nIGRpcmVjdGlvbiB3YXMgY2hhbmdlZC5cbiAgICAgKi9cbiAgICBtb2RpZnlXaW5kaW5nRGlyZWN0aW9uKGRpcmVjdGlvbikge1xuICAgICAgICBpZiAodGhpcy5pc0ZsYXRBcnJheSkge1xuICAgICAgICAgICAgcmV0dXJuIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uKHRoaXMucG9pbnRzLCBkaXJlY3Rpb24sIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uUG9pbnRzKHRoaXMucG9pbnRzLCBkaXJlY3Rpb24sIHRoaXMub3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9seWdvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/polygon.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   getPointAtIndex: () => (/* binding */ getPointAtIndex),\n/* harmony export */   push: () => (/* binding */ push)\n/* harmony export */ });\n// math.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nfunction push(target, source) {\n    const size = source.length;\n    const startIndex = target.length;\n    // dedupe, if source is the same point as the last vertex\n    if (startIndex > 0) {\n        let isDuplicate = true;\n        for (let i = 0; i < size; i++) {\n            if (target[startIndex - size + i] !== source[i]) {\n                isDuplicate = false;\n                break;\n            }\n        }\n        if (isDuplicate) {\n            return false;\n        }\n    }\n    for (let i = 0; i < size; i++) {\n        target[startIndex + i] = source[i];\n    }\n    return true;\n}\nfunction copy(target, source) {\n    const size = source.length;\n    for (let i = 0; i < size; i++) {\n        target[i] = source[i];\n    }\n}\nfunction getPointAtIndex(positions, index, size, offset, out = []) {\n    const startI = offset + index * size;\n    for (let i = 0; i < size; i++) {\n        out[i] = positions[startI + i];\n    }\n    return out;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3BvbHlnb24vZGlzdC91dGlscy5qcz85NTc5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIG1hdGguZ2xcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCAoYykgdmlzLmdsIGNvbnRyaWJ1dG9yc1xuZXhwb3J0IGZ1bmN0aW9uIHB1c2godGFyZ2V0LCBzb3VyY2UpIHtcbiAgICBjb25zdCBzaXplID0gc291cmNlLmxlbmd0aDtcbiAgICBjb25zdCBzdGFydEluZGV4ID0gdGFyZ2V0Lmxlbmd0aDtcbiAgICAvLyBkZWR1cGUsIGlmIHNvdXJjZSBpcyB0aGUgc2FtZSBwb2ludCBhcyB0aGUgbGFzdCB2ZXJ0ZXhcbiAgICBpZiAoc3RhcnRJbmRleCA+IDApIHtcbiAgICAgICAgbGV0IGlzRHVwbGljYXRlID0gdHJ1ZTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpKyspIHtcbiAgICAgICAgICAgIGlmICh0YXJnZXRbc3RhcnRJbmRleCAtIHNpemUgKyBpXSAhPT0gc291cmNlW2ldKSB7XG4gICAgICAgICAgICAgICAgaXNEdXBsaWNhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNEdXBsaWNhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgICB0YXJnZXRbc3RhcnRJbmRleCArIGldID0gc291cmNlW2ldO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb3B5KHRhcmdldCwgc291cmNlKSB7XG4gICAgY29uc3Qgc2l6ZSA9IHNvdXJjZS5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpKyspIHtcbiAgICAgICAgdGFyZ2V0W2ldID0gc291cmNlW2ldO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRQb2ludEF0SW5kZXgocG9zaXRpb25zLCBpbmRleCwgc2l6ZSwgb2Zmc2V0LCBvdXQgPSBbXSkge1xuICAgIGNvbnN0IHN0YXJ0SSA9IG9mZnNldCArIGluZGV4ICogc2l6ZTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgICBvdXRbaV0gPSBwb3NpdGlvbnNbc3RhcnRJICsgaV07XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/utils.js\n");

/***/ }),

/***/ "./node_modules/earcut/src/earcut.js":
/*!*******************************************!*\
  !*** ./node_modules/earcut/src/earcut.js ***!
  \*******************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = earcut;\nmodule.exports[\"default\"] = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZWFyY3V0L3NyYy9lYXJjdXQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvZWFyY3V0L3NyYy9lYXJjdXQuanM/NTY2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZWFyY3V0O1xubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGVhcmN1dDtcblxuZnVuY3Rpb24gZWFyY3V0KGRhdGEsIGhvbGVJbmRpY2VzLCBkaW0pIHtcblxuICAgIGRpbSA9IGRpbSB8fCAyO1xuXG4gICAgdmFyIGhhc0hvbGVzID0gaG9sZUluZGljZXMgJiYgaG9sZUluZGljZXMubGVuZ3RoLFxuICAgICAgICBvdXRlckxlbiA9IGhhc0hvbGVzID8gaG9sZUluZGljZXNbMF0gKiBkaW0gOiBkYXRhLmxlbmd0aCxcbiAgICAgICAgb3V0ZXJOb2RlID0gbGlua2VkTGlzdChkYXRhLCAwLCBvdXRlckxlbiwgZGltLCB0cnVlKSxcbiAgICAgICAgdHJpYW5nbGVzID0gW107XG5cbiAgICBpZiAoIW91dGVyTm9kZSB8fCBvdXRlck5vZGUubmV4dCA9PT0gb3V0ZXJOb2RlLnByZXYpIHJldHVybiB0cmlhbmdsZXM7XG5cbiAgICB2YXIgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgeCwgeSwgaW52U2l6ZTtcblxuICAgIGlmIChoYXNIb2xlcykgb3V0ZXJOb2RlID0gZWxpbWluYXRlSG9sZXMoZGF0YSwgaG9sZUluZGljZXMsIG91dGVyTm9kZSwgZGltKTtcblxuICAgIC8vIGlmIHRoZSBzaGFwZSBpcyBub3QgdG9vIHNpbXBsZSwgd2UnbGwgdXNlIHotb3JkZXIgY3VydmUgaGFzaCBsYXRlcjsgY2FsY3VsYXRlIHBvbHlnb24gYmJveFxuICAgIGlmIChkYXRhLmxlbmd0aCA+IDgwICogZGltKSB7XG4gICAgICAgIG1pblggPSBtYXhYID0gZGF0YVswXTtcbiAgICAgICAgbWluWSA9IG1heFkgPSBkYXRhWzFdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSBkaW07IGkgPCBvdXRlckxlbjsgaSArPSBkaW0pIHtcbiAgICAgICAgICAgIHggPSBkYXRhW2ldO1xuICAgICAgICAgICAgeSA9IGRhdGFbaSArIDFdO1xuICAgICAgICAgICAgaWYgKHggPCBtaW5YKSBtaW5YID0geDtcbiAgICAgICAgICAgIGlmICh5IDwgbWluWSkgbWluWSA9IHk7XG4gICAgICAgICAgICBpZiAoeCA+IG1heFgpIG1heFggPSB4O1xuICAgICAgICAgICAgaWYgKHkgPiBtYXhZKSBtYXhZID0geTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG1pblgsIG1pblkgYW5kIGludlNpemUgYXJlIGxhdGVyIHVzZWQgdG8gdHJhbnNmb3JtIGNvb3JkcyBpbnRvIGludGVnZXJzIGZvciB6LW9yZGVyIGNhbGN1bGF0aW9uXG4gICAgICAgIGludlNpemUgPSBNYXRoLm1heChtYXhYIC0gbWluWCwgbWF4WSAtIG1pblkpO1xuICAgICAgICBpbnZTaXplID0gaW52U2l6ZSAhPT0gMCA/IDMyNzY3IC8gaW52U2l6ZSA6IDA7XG4gICAgfVxuXG4gICAgZWFyY3V0TGlua2VkKG91dGVyTm9kZSwgdHJpYW5nbGVzLCBkaW0sIG1pblgsIG1pblksIGludlNpemUsIDApO1xuXG4gICAgcmV0dXJuIHRyaWFuZ2xlcztcbn1cblxuLy8gY3JlYXRlIGEgY2lyY3VsYXIgZG91Ymx5IGxpbmtlZCBsaXN0IGZyb20gcG9seWdvbiBwb2ludHMgaW4gdGhlIHNwZWNpZmllZCB3aW5kaW5nIG9yZGVyXG5mdW5jdGlvbiBsaW5rZWRMaXN0KGRhdGEsIHN0YXJ0LCBlbmQsIGRpbSwgY2xvY2t3aXNlKSB7XG4gICAgdmFyIGksIGxhc3Q7XG5cbiAgICBpZiAoY2xvY2t3aXNlID09PSAoc2lnbmVkQXJlYShkYXRhLCBzdGFydCwgZW5kLCBkaW0pID4gMCkpIHtcbiAgICAgICAgZm9yIChpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gZGltKSBsYXN0ID0gaW5zZXJ0Tm9kZShpLCBkYXRhW2ldLCBkYXRhW2kgKyAxXSwgbGFzdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChpID0gZW5kIC0gZGltOyBpID49IHN0YXJ0OyBpIC09IGRpbSkgbGFzdCA9IGluc2VydE5vZGUoaSwgZGF0YVtpXSwgZGF0YVtpICsgMV0sIGxhc3QpO1xuICAgIH1cblxuICAgIGlmIChsYXN0ICYmIGVxdWFscyhsYXN0LCBsYXN0Lm5leHQpKSB7XG4gICAgICAgIHJlbW92ZU5vZGUobGFzdCk7XG4gICAgICAgIGxhc3QgPSBsYXN0Lm5leHQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxhc3Q7XG59XG5cbi8vIGVsaW1pbmF0ZSBjb2xpbmVhciBvciBkdXBsaWNhdGUgcG9pbnRzXG5mdW5jdGlvbiBmaWx0ZXJQb2ludHMoc3RhcnQsIGVuZCkge1xuICAgIGlmICghc3RhcnQpIHJldHVybiBzdGFydDtcbiAgICBpZiAoIWVuZCkgZW5kID0gc3RhcnQ7XG5cbiAgICB2YXIgcCA9IHN0YXJ0LFxuICAgICAgICBhZ2FpbjtcbiAgICBkbyB7XG4gICAgICAgIGFnYWluID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKCFwLnN0ZWluZXIgJiYgKGVxdWFscyhwLCBwLm5leHQpIHx8IGFyZWEocC5wcmV2LCBwLCBwLm5leHQpID09PSAwKSkge1xuICAgICAgICAgICAgcmVtb3ZlTm9kZShwKTtcbiAgICAgICAgICAgIHAgPSBlbmQgPSBwLnByZXY7XG4gICAgICAgICAgICBpZiAocCA9PT0gcC5uZXh0KSBicmVhaztcbiAgICAgICAgICAgIGFnYWluID0gdHJ1ZTtcblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcCA9IHAubmV4dDtcbiAgICAgICAgfVxuICAgIH0gd2hpbGUgKGFnYWluIHx8IHAgIT09IGVuZCk7XG5cbiAgICByZXR1cm4gZW5kO1xufVxuXG4vLyBtYWluIGVhciBzbGljaW5nIGxvb3Agd2hpY2ggdHJpYW5ndWxhdGVzIGEgcG9seWdvbiAoZ2l2ZW4gYXMgYSBsaW5rZWQgbGlzdClcbmZ1bmN0aW9uIGVhcmN1dExpbmtlZChlYXIsIHRyaWFuZ2xlcywgZGltLCBtaW5YLCBtaW5ZLCBpbnZTaXplLCBwYXNzKSB7XG4gICAgaWYgKCFlYXIpIHJldHVybjtcblxuICAgIC8vIGludGVybGluayBwb2x5Z29uIG5vZGVzIGluIHotb3JkZXJcbiAgICBpZiAoIXBhc3MgJiYgaW52U2l6ZSkgaW5kZXhDdXJ2ZShlYXIsIG1pblgsIG1pblksIGludlNpemUpO1xuXG4gICAgdmFyIHN0b3AgPSBlYXIsXG4gICAgICAgIHByZXYsIG5leHQ7XG5cbiAgICAvLyBpdGVyYXRlIHRocm91Z2ggZWFycywgc2xpY2luZyB0aGVtIG9uZSBieSBvbmVcbiAgICB3aGlsZSAoZWFyLnByZXYgIT09IGVhci5uZXh0KSB7XG4gICAgICAgIHByZXYgPSBlYXIucHJldjtcbiAgICAgICAgbmV4dCA9IGVhci5uZXh0O1xuXG4gICAgICAgIGlmIChpbnZTaXplID8gaXNFYXJIYXNoZWQoZWFyLCBtaW5YLCBtaW5ZLCBpbnZTaXplKSA6IGlzRWFyKGVhcikpIHtcbiAgICAgICAgICAgIC8vIGN1dCBvZmYgdGhlIHRyaWFuZ2xlXG4gICAgICAgICAgICB0cmlhbmdsZXMucHVzaChwcmV2LmkgLyBkaW0gfCAwKTtcbiAgICAgICAgICAgIHRyaWFuZ2xlcy5wdXNoKGVhci5pIC8gZGltIHwgMCk7XG4gICAgICAgICAgICB0cmlhbmdsZXMucHVzaChuZXh0LmkgLyBkaW0gfCAwKTtcblxuICAgICAgICAgICAgcmVtb3ZlTm9kZShlYXIpO1xuXG4gICAgICAgICAgICAvLyBza2lwcGluZyB0aGUgbmV4dCB2ZXJ0ZXggbGVhZHMgdG8gbGVzcyBzbGl2ZXIgdHJpYW5nbGVzXG4gICAgICAgICAgICBlYXIgPSBuZXh0Lm5leHQ7XG4gICAgICAgICAgICBzdG9wID0gbmV4dC5uZXh0O1xuXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGVhciA9IG5leHQ7XG5cbiAgICAgICAgLy8gaWYgd2UgbG9vcGVkIHRocm91Z2ggdGhlIHdob2xlIHJlbWFpbmluZyBwb2x5Z29uIGFuZCBjYW4ndCBmaW5kIGFueSBtb3JlIGVhcnNcbiAgICAgICAgaWYgKGVhciA9PT0gc3RvcCkge1xuICAgICAgICAgICAgLy8gdHJ5IGZpbHRlcmluZyBwb2ludHMgYW5kIHNsaWNpbmcgYWdhaW5cbiAgICAgICAgICAgIGlmICghcGFzcykge1xuICAgICAgICAgICAgICAgIGVhcmN1dExpbmtlZChmaWx0ZXJQb2ludHMoZWFyKSwgdHJpYW5nbGVzLCBkaW0sIG1pblgsIG1pblksIGludlNpemUsIDEpO1xuXG4gICAgICAgICAgICAvLyBpZiB0aGlzIGRpZG4ndCB3b3JrLCB0cnkgY3VyaW5nIGFsbCBzbWFsbCBzZWxmLWludGVyc2VjdGlvbnMgbG9jYWxseVxuICAgICAgICAgICAgfSBlbHNlIGlmIChwYXNzID09PSAxKSB7XG4gICAgICAgICAgICAgICAgZWFyID0gY3VyZUxvY2FsSW50ZXJzZWN0aW9ucyhmaWx0ZXJQb2ludHMoZWFyKSwgdHJpYW5nbGVzLCBkaW0pO1xuICAgICAgICAgICAgICAgIGVhcmN1dExpbmtlZChlYXIsIHRyaWFuZ2xlcywgZGltLCBtaW5YLCBtaW5ZLCBpbnZTaXplLCAyKTtcblxuICAgICAgICAgICAgLy8gYXMgYSBsYXN0IHJlc29ydCwgdHJ5IHNwbGl0dGluZyB0aGUgcmVtYWluaW5nIHBvbHlnb24gaW50byB0d29cbiAgICAgICAgICAgIH0gZWxzZSBpZiAocGFzcyA9PT0gMikge1xuICAgICAgICAgICAgICAgIHNwbGl0RWFyY3V0KGVhciwgdHJpYW5nbGVzLCBkaW0sIG1pblgsIG1pblksIGludlNpemUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gY2hlY2sgd2hldGhlciBhIHBvbHlnb24gbm9kZSBmb3JtcyBhIHZhbGlkIGVhciB3aXRoIGFkamFjZW50IG5vZGVzXG5mdW5jdGlvbiBpc0VhcihlYXIpIHtcbiAgICB2YXIgYSA9IGVhci5wcmV2LFxuICAgICAgICBiID0gZWFyLFxuICAgICAgICBjID0gZWFyLm5leHQ7XG5cbiAgICBpZiAoYXJlYShhLCBiLCBjKSA+PSAwKSByZXR1cm4gZmFsc2U7IC8vIHJlZmxleCwgY2FuJ3QgYmUgYW4gZWFyXG5cbiAgICAvLyBub3cgbWFrZSBzdXJlIHdlIGRvbid0IGhhdmUgb3RoZXIgcG9pbnRzIGluc2lkZSB0aGUgcG90ZW50aWFsIGVhclxuICAgIHZhciBheCA9IGEueCwgYnggPSBiLngsIGN4ID0gYy54LCBheSA9IGEueSwgYnkgPSBiLnksIGN5ID0gYy55O1xuXG4gICAgLy8gdHJpYW5nbGUgYmJveDsgbWluICYgbWF4IGFyZSBjYWxjdWxhdGVkIGxpa2UgdGhpcyBmb3Igc3BlZWRcbiAgICB2YXIgeDAgPSBheCA8IGJ4ID8gKGF4IDwgY3ggPyBheCA6IGN4KSA6IChieCA8IGN4ID8gYnggOiBjeCksXG4gICAgICAgIHkwID0gYXkgPCBieSA/IChheSA8IGN5ID8gYXkgOiBjeSkgOiAoYnkgPCBjeSA/IGJ5IDogY3kpLFxuICAgICAgICB4MSA9IGF4ID4gYnggPyAoYXggPiBjeCA/IGF4IDogY3gpIDogKGJ4ID4gY3ggPyBieCA6IGN4KSxcbiAgICAgICAgeTEgPSBheSA+IGJ5ID8gKGF5ID4gY3kgPyBheSA6IGN5KSA6IChieSA+IGN5ID8gYnkgOiBjeSk7XG5cbiAgICB2YXIgcCA9IGMubmV4dDtcbiAgICB3aGlsZSAocCAhPT0gYSkge1xuICAgICAgICBpZiAocC54ID49IHgwICYmIHAueCA8PSB4MSAmJiBwLnkgPj0geTAgJiYgcC55IDw9IHkxICYmXG4gICAgICAgICAgICBwb2ludEluVHJpYW5nbGUoYXgsIGF5LCBieCwgYnksIGN4LCBjeSwgcC54LCBwLnkpICYmXG4gICAgICAgICAgICBhcmVhKHAucHJldiwgcCwgcC5uZXh0KSA+PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHAgPSBwLm5leHQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIGlzRWFySGFzaGVkKGVhciwgbWluWCwgbWluWSwgaW52U2l6ZSkge1xuICAgIHZhciBhID0gZWFyLnByZXYsXG4gICAgICAgIGIgPSBlYXIsXG4gICAgICAgIGMgPSBlYXIubmV4dDtcblxuICAgIGlmIChhcmVhKGEsIGIsIGMpID49IDApIHJldHVybiBmYWxzZTsgLy8gcmVmbGV4LCBjYW4ndCBiZSBhbiBlYXJcblxuICAgIHZhciBheCA9IGEueCwgYnggPSBiLngsIGN4ID0gYy54LCBheSA9IGEueSwgYnkgPSBiLnksIGN5ID0gYy55O1xuXG4gICAgLy8gdHJpYW5nbGUgYmJveDsgbWluICYgbWF4IGFyZSBjYWxjdWxhdGVkIGxpa2UgdGhpcyBmb3Igc3BlZWRcbiAgICB2YXIgeDAgPSBheCA8IGJ4ID8gKGF4IDwgY3ggPyBheCA6IGN4KSA6IChieCA8IGN4ID8gYnggOiBjeCksXG4gICAgICAgIHkwID0gYXkgPCBieSA/IChheSA8IGN5ID8gYXkgOiBjeSkgOiAoYnkgPCBjeSA/IGJ5IDogY3kpLFxuICAgICAgICB4MSA9IGF4ID4gYnggPyAoYXggPiBjeCA/IGF4IDogY3gpIDogKGJ4ID4gY3ggPyBieCA6IGN4KSxcbiAgICAgICAgeTEgPSBheSA+IGJ5ID8gKGF5ID4gY3kgPyBheSA6IGN5KSA6IChieSA+IGN5ID8gYnkgOiBjeSk7XG5cbiAgICAvLyB6LW9yZGVyIHJhbmdlIGZvciB0aGUgY3VycmVudCB0cmlhbmdsZSBiYm94O1xuICAgIHZhciBtaW5aID0gek9yZGVyKHgwLCB5MCwgbWluWCwgbWluWSwgaW52U2l6ZSksXG4gICAgICAgIG1heFogPSB6T3JkZXIoeDEsIHkxLCBtaW5YLCBtaW5ZLCBpbnZTaXplKTtcblxuICAgIHZhciBwID0gZWFyLnByZXZaLFxuICAgICAgICBuID0gZWFyLm5leHRaO1xuXG4gICAgLy8gbG9vayBmb3IgcG9pbnRzIGluc2lkZSB0aGUgdHJpYW5nbGUgaW4gYm90aCBkaXJlY3Rpb25zXG4gICAgd2hpbGUgKHAgJiYgcC56ID49IG1pblogJiYgbiAmJiBuLnogPD0gbWF4Wikge1xuICAgICAgICBpZiAocC54ID49IHgwICYmIHAueCA8PSB4MSAmJiBwLnkgPj0geTAgJiYgcC55IDw9IHkxICYmIHAgIT09IGEgJiYgcCAhPT0gYyAmJlxuICAgICAgICAgICAgcG9pbnRJblRyaWFuZ2xlKGF4LCBheSwgYngsIGJ5LCBjeCwgY3ksIHAueCwgcC55KSAmJiBhcmVhKHAucHJldiwgcCwgcC5uZXh0KSA+PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHAgPSBwLnByZXZaO1xuXG4gICAgICAgIGlmIChuLnggPj0geDAgJiYgbi54IDw9IHgxICYmIG4ueSA+PSB5MCAmJiBuLnkgPD0geTEgJiYgbiAhPT0gYSAmJiBuICE9PSBjICYmXG4gICAgICAgICAgICBwb2ludEluVHJpYW5nbGUoYXgsIGF5LCBieCwgYnksIGN4LCBjeSwgbi54LCBuLnkpICYmIGFyZWEobi5wcmV2LCBuLCBuLm5leHQpID49IDApIHJldHVybiBmYWxzZTtcbiAgICAgICAgbiA9IG4ubmV4dFo7XG4gICAgfVxuXG4gICAgLy8gbG9vayBmb3IgcmVtYWluaW5nIHBvaW50cyBpbiBkZWNyZWFzaW5nIHotb3JkZXJcbiAgICB3aGlsZSAocCAmJiBwLnogPj0gbWluWikge1xuICAgICAgICBpZiAocC54ID49IHgwICYmIHAueCA8PSB4MSAmJiBwLnkgPj0geTAgJiYgcC55IDw9IHkxICYmIHAgIT09IGEgJiYgcCAhPT0gYyAmJlxuICAgICAgICAgICAgcG9pbnRJblRyaWFuZ2xlKGF4LCBheSwgYngsIGJ5LCBjeCwgY3ksIHAueCwgcC55KSAmJiBhcmVhKHAucHJldiwgcCwgcC5uZXh0KSA+PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHAgPSBwLnByZXZaO1xuICAgIH1cblxuICAgIC8vIGxvb2sgZm9yIHJlbWFpbmluZyBwb2ludHMgaW4gaW5jcmVhc2luZyB6LW9yZGVyXG4gICAgd2hpbGUgKG4gJiYgbi56IDw9IG1heFopIHtcbiAgICAgICAgaWYgKG4ueCA+PSB4MCAmJiBuLnggPD0geDEgJiYgbi55ID49IHkwICYmIG4ueSA8PSB5MSAmJiBuICE9PSBhICYmIG4gIT09IGMgJiZcbiAgICAgICAgICAgIHBvaW50SW5UcmlhbmdsZShheCwgYXksIGJ4LCBieSwgY3gsIGN5LCBuLngsIG4ueSkgJiYgYXJlYShuLnByZXYsIG4sIG4ubmV4dCkgPj0gMCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICBuID0gbi5uZXh0WjtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gZ28gdGhyb3VnaCBhbGwgcG9seWdvbiBub2RlcyBhbmQgY3VyZSBzbWFsbCBsb2NhbCBzZWxmLWludGVyc2VjdGlvbnNcbmZ1bmN0aW9uIGN1cmVMb2NhbEludGVyc2VjdGlvbnMoc3RhcnQsIHRyaWFuZ2xlcywgZGltKSB7XG4gICAgdmFyIHAgPSBzdGFydDtcbiAgICBkbyB7XG4gICAgICAgIHZhciBhID0gcC5wcmV2LFxuICAgICAgICAgICAgYiA9IHAubmV4dC5uZXh0O1xuXG4gICAgICAgIGlmICghZXF1YWxzKGEsIGIpICYmIGludGVyc2VjdHMoYSwgcCwgcC5uZXh0LCBiKSAmJiBsb2NhbGx5SW5zaWRlKGEsIGIpICYmIGxvY2FsbHlJbnNpZGUoYiwgYSkpIHtcblxuICAgICAgICAgICAgdHJpYW5nbGVzLnB1c2goYS5pIC8gZGltIHwgMCk7XG4gICAgICAgICAgICB0cmlhbmdsZXMucHVzaChwLmkgLyBkaW0gfCAwKTtcbiAgICAgICAgICAgIHRyaWFuZ2xlcy5wdXNoKGIuaSAvIGRpbSB8IDApO1xuXG4gICAgICAgICAgICAvLyByZW1vdmUgdHdvIG5vZGVzIGludm9sdmVkXG4gICAgICAgICAgICByZW1vdmVOb2RlKHApO1xuICAgICAgICAgICAgcmVtb3ZlTm9kZShwLm5leHQpO1xuXG4gICAgICAgICAgICBwID0gc3RhcnQgPSBiO1xuICAgICAgICB9XG4gICAgICAgIHAgPSBwLm5leHQ7XG4gICAgfSB3aGlsZSAocCAhPT0gc3RhcnQpO1xuXG4gICAgcmV0dXJuIGZpbHRlclBvaW50cyhwKTtcbn1cblxuLy8gdHJ5IHNwbGl0dGluZyBwb2x5Z29uIGludG8gdHdvIGFuZCB0cmlhbmd1bGF0ZSB0aGVtIGluZGVwZW5kZW50bHlcbmZ1bmN0aW9uIHNwbGl0RWFyY3V0KHN0YXJ0LCB0cmlhbmdsZXMsIGRpbSwgbWluWCwgbWluWSwgaW52U2l6ZSkge1xuICAgIC8vIGxvb2sgZm9yIGEgdmFsaWQgZGlhZ29uYWwgdGhhdCBkaXZpZGVzIHRoZSBwb2x5Z29uIGludG8gdHdvXG4gICAgdmFyIGEgPSBzdGFydDtcbiAgICBkbyB7XG4gICAgICAgIHZhciBiID0gYS5uZXh0Lm5leHQ7XG4gICAgICAgIHdoaWxlIChiICE9PSBhLnByZXYpIHtcbiAgICAgICAgICAgIGlmIChhLmkgIT09IGIuaSAmJiBpc1ZhbGlkRGlhZ29uYWwoYSwgYikpIHtcbiAgICAgICAgICAgICAgICAvLyBzcGxpdCB0aGUgcG9seWdvbiBpbiB0d28gYnkgdGhlIGRpYWdvbmFsXG4gICAgICAgICAgICAgICAgdmFyIGMgPSBzcGxpdFBvbHlnb24oYSwgYik7XG5cbiAgICAgICAgICAgICAgICAvLyBmaWx0ZXIgY29saW5lYXIgcG9pbnRzIGFyb3VuZCB0aGUgY3V0c1xuICAgICAgICAgICAgICAgIGEgPSBmaWx0ZXJQb2ludHMoYSwgYS5uZXh0KTtcbiAgICAgICAgICAgICAgICBjID0gZmlsdGVyUG9pbnRzKGMsIGMubmV4dCk7XG5cbiAgICAgICAgICAgICAgICAvLyBydW4gZWFyY3V0IG9uIGVhY2ggaGFsZlxuICAgICAgICAgICAgICAgIGVhcmN1dExpbmtlZChhLCB0cmlhbmdsZXMsIGRpbSwgbWluWCwgbWluWSwgaW52U2l6ZSwgMCk7XG4gICAgICAgICAgICAgICAgZWFyY3V0TGlua2VkKGMsIHRyaWFuZ2xlcywgZGltLCBtaW5YLCBtaW5ZLCBpbnZTaXplLCAwKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBiID0gYi5uZXh0O1xuICAgICAgICB9XG4gICAgICAgIGEgPSBhLm5leHQ7XG4gICAgfSB3aGlsZSAoYSAhPT0gc3RhcnQpO1xufVxuXG4vLyBsaW5rIGV2ZXJ5IGhvbGUgaW50byB0aGUgb3V0ZXIgbG9vcCwgcHJvZHVjaW5nIGEgc2luZ2xlLXJpbmcgcG9seWdvbiB3aXRob3V0IGhvbGVzXG5mdW5jdGlvbiBlbGltaW5hdGVIb2xlcyhkYXRhLCBob2xlSW5kaWNlcywgb3V0ZXJOb2RlLCBkaW0pIHtcbiAgICB2YXIgcXVldWUgPSBbXSxcbiAgICAgICAgaSwgbGVuLCBzdGFydCwgZW5kLCBsaXN0O1xuXG4gICAgZm9yIChpID0gMCwgbGVuID0gaG9sZUluZGljZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgc3RhcnQgPSBob2xlSW5kaWNlc1tpXSAqIGRpbTtcbiAgICAgICAgZW5kID0gaSA8IGxlbiAtIDEgPyBob2xlSW5kaWNlc1tpICsgMV0gKiBkaW0gOiBkYXRhLmxlbmd0aDtcbiAgICAgICAgbGlzdCA9IGxpbmtlZExpc3QoZGF0YSwgc3RhcnQsIGVuZCwgZGltLCBmYWxzZSk7XG4gICAgICAgIGlmIChsaXN0ID09PSBsaXN0Lm5leHQpIGxpc3Quc3RlaW5lciA9IHRydWU7XG4gICAgICAgIHF1ZXVlLnB1c2goZ2V0TGVmdG1vc3QobGlzdCkpO1xuICAgIH1cblxuICAgIHF1ZXVlLnNvcnQoY29tcGFyZVgpO1xuXG4gICAgLy8gcHJvY2VzcyBob2xlcyBmcm9tIGxlZnQgdG8gcmlnaHRcbiAgICBmb3IgKGkgPSAwOyBpIDwgcXVldWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgb3V0ZXJOb2RlID0gZWxpbWluYXRlSG9sZShxdWV1ZVtpXSwgb3V0ZXJOb2RlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gb3V0ZXJOb2RlO1xufVxuXG5mdW5jdGlvbiBjb21wYXJlWChhLCBiKSB7XG4gICAgcmV0dXJuIGEueCAtIGIueDtcbn1cblxuLy8gZmluZCBhIGJyaWRnZSBiZXR3ZWVuIHZlcnRpY2VzIHRoYXQgY29ubmVjdHMgaG9sZSB3aXRoIGFuIG91dGVyIHJpbmcgYW5kIGFuZCBsaW5rIGl0XG5mdW5jdGlvbiBlbGltaW5hdGVIb2xlKGhvbGUsIG91dGVyTm9kZSkge1xuICAgIHZhciBicmlkZ2UgPSBmaW5kSG9sZUJyaWRnZShob2xlLCBvdXRlck5vZGUpO1xuICAgIGlmICghYnJpZGdlKSB7XG4gICAgICAgIHJldHVybiBvdXRlck5vZGU7XG4gICAgfVxuXG4gICAgdmFyIGJyaWRnZVJldmVyc2UgPSBzcGxpdFBvbHlnb24oYnJpZGdlLCBob2xlKTtcblxuICAgIC8vIGZpbHRlciBjb2xsaW5lYXIgcG9pbnRzIGFyb3VuZCB0aGUgY3V0c1xuICAgIGZpbHRlclBvaW50cyhicmlkZ2VSZXZlcnNlLCBicmlkZ2VSZXZlcnNlLm5leHQpO1xuICAgIHJldHVybiBmaWx0ZXJQb2ludHMoYnJpZGdlLCBicmlkZ2UubmV4dCk7XG59XG5cbi8vIERhdmlkIEViZXJseSdzIGFsZ29yaXRobSBmb3IgZmluZGluZyBhIGJyaWRnZSBiZXR3ZWVuIGhvbGUgYW5kIG91dGVyIHBvbHlnb25cbmZ1bmN0aW9uIGZpbmRIb2xlQnJpZGdlKGhvbGUsIG91dGVyTm9kZSkge1xuICAgIHZhciBwID0gb3V0ZXJOb2RlLFxuICAgICAgICBoeCA9IGhvbGUueCxcbiAgICAgICAgaHkgPSBob2xlLnksXG4gICAgICAgIHF4ID0gLUluZmluaXR5LFxuICAgICAgICBtO1xuXG4gICAgLy8gZmluZCBhIHNlZ21lbnQgaW50ZXJzZWN0ZWQgYnkgYSByYXkgZnJvbSB0aGUgaG9sZSdzIGxlZnRtb3N0IHBvaW50IHRvIHRoZSBsZWZ0O1xuICAgIC8vIHNlZ21lbnQncyBlbmRwb2ludCB3aXRoIGxlc3NlciB4IHdpbGwgYmUgcG90ZW50aWFsIGNvbm5lY3Rpb24gcG9pbnRcbiAgICBkbyB7XG4gICAgICAgIGlmIChoeSA8PSBwLnkgJiYgaHkgPj0gcC5uZXh0LnkgJiYgcC5uZXh0LnkgIT09IHAueSkge1xuICAgICAgICAgICAgdmFyIHggPSBwLnggKyAoaHkgLSBwLnkpICogKHAubmV4dC54IC0gcC54KSAvIChwLm5leHQueSAtIHAueSk7XG4gICAgICAgICAgICBpZiAoeCA8PSBoeCAmJiB4ID4gcXgpIHtcbiAgICAgICAgICAgICAgICBxeCA9IHg7XG4gICAgICAgICAgICAgICAgbSA9IHAueCA8IHAubmV4dC54ID8gcCA6IHAubmV4dDtcbiAgICAgICAgICAgICAgICBpZiAoeCA9PT0gaHgpIHJldHVybiBtOyAvLyBob2xlIHRvdWNoZXMgb3V0ZXIgc2VnbWVudDsgcGljayBsZWZ0bW9zdCBlbmRwb2ludFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHAgPSBwLm5leHQ7XG4gICAgfSB3aGlsZSAocCAhPT0gb3V0ZXJOb2RlKTtcblxuICAgIGlmICghbSkgcmV0dXJuIG51bGw7XG5cbiAgICAvLyBsb29rIGZvciBwb2ludHMgaW5zaWRlIHRoZSB0cmlhbmdsZSBvZiBob2xlIHBvaW50LCBzZWdtZW50IGludGVyc2VjdGlvbiBhbmQgZW5kcG9pbnQ7XG4gICAgLy8gaWYgdGhlcmUgYXJlIG5vIHBvaW50cyBmb3VuZCwgd2UgaGF2ZSBhIHZhbGlkIGNvbm5lY3Rpb247XG4gICAgLy8gb3RoZXJ3aXNlIGNob29zZSB0aGUgcG9pbnQgb2YgdGhlIG1pbmltdW0gYW5nbGUgd2l0aCB0aGUgcmF5IGFzIGNvbm5lY3Rpb24gcG9pbnRcblxuICAgIHZhciBzdG9wID0gbSxcbiAgICAgICAgbXggPSBtLngsXG4gICAgICAgIG15ID0gbS55LFxuICAgICAgICB0YW5NaW4gPSBJbmZpbml0eSxcbiAgICAgICAgdGFuO1xuXG4gICAgcCA9IG07XG5cbiAgICBkbyB7XG4gICAgICAgIGlmIChoeCA+PSBwLnggJiYgcC54ID49IG14ICYmIGh4ICE9PSBwLnggJiZcbiAgICAgICAgICAgICAgICBwb2ludEluVHJpYW5nbGUoaHkgPCBteSA/IGh4IDogcXgsIGh5LCBteCwgbXksIGh5IDwgbXkgPyBxeCA6IGh4LCBoeSwgcC54LCBwLnkpKSB7XG5cbiAgICAgICAgICAgIHRhbiA9IE1hdGguYWJzKGh5IC0gcC55KSAvIChoeCAtIHAueCk7IC8vIHRhbmdlbnRpYWxcblxuICAgICAgICAgICAgaWYgKGxvY2FsbHlJbnNpZGUocCwgaG9sZSkgJiZcbiAgICAgICAgICAgICAgICAodGFuIDwgdGFuTWluIHx8ICh0YW4gPT09IHRhbk1pbiAmJiAocC54ID4gbS54IHx8IChwLnggPT09IG0ueCAmJiBzZWN0b3JDb250YWluc1NlY3RvcihtLCBwKSkpKSkpIHtcbiAgICAgICAgICAgICAgICBtID0gcDtcbiAgICAgICAgICAgICAgICB0YW5NaW4gPSB0YW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwID0gcC5uZXh0O1xuICAgIH0gd2hpbGUgKHAgIT09IHN0b3ApO1xuXG4gICAgcmV0dXJuIG07XG59XG5cbi8vIHdoZXRoZXIgc2VjdG9yIGluIHZlcnRleCBtIGNvbnRhaW5zIHNlY3RvciBpbiB2ZXJ0ZXggcCBpbiB0aGUgc2FtZSBjb29yZGluYXRlc1xuZnVuY3Rpb24gc2VjdG9yQ29udGFpbnNTZWN0b3IobSwgcCkge1xuICAgIHJldHVybiBhcmVhKG0ucHJldiwgbSwgcC5wcmV2KSA8IDAgJiYgYXJlYShwLm5leHQsIG0sIG0ubmV4dCkgPCAwO1xufVxuXG4vLyBpbnRlcmxpbmsgcG9seWdvbiBub2RlcyBpbiB6LW9yZGVyXG5mdW5jdGlvbiBpbmRleEN1cnZlKHN0YXJ0LCBtaW5YLCBtaW5ZLCBpbnZTaXplKSB7XG4gICAgdmFyIHAgPSBzdGFydDtcbiAgICBkbyB7XG4gICAgICAgIGlmIChwLnogPT09IDApIHAueiA9IHpPcmRlcihwLngsIHAueSwgbWluWCwgbWluWSwgaW52U2l6ZSk7XG4gICAgICAgIHAucHJldlogPSBwLnByZXY7XG4gICAgICAgIHAubmV4dFogPSBwLm5leHQ7XG4gICAgICAgIHAgPSBwLm5leHQ7XG4gICAgfSB3aGlsZSAocCAhPT0gc3RhcnQpO1xuXG4gICAgcC5wcmV2Wi5uZXh0WiA9IG51bGw7XG4gICAgcC5wcmV2WiA9IG51bGw7XG5cbiAgICBzb3J0TGlua2VkKHApO1xufVxuXG4vLyBTaW1vbiBUYXRoYW0ncyBsaW5rZWQgbGlzdCBtZXJnZSBzb3J0IGFsZ29yaXRobVxuLy8gaHR0cDovL3d3dy5jaGlhcmsuZ3JlZW5lbmQub3JnLnVrL35zZ3RhdGhhbS9hbGdvcml0aG1zL2xpc3Rzb3J0Lmh0bWxcbmZ1bmN0aW9uIHNvcnRMaW5rZWQobGlzdCkge1xuICAgIHZhciBpLCBwLCBxLCBlLCB0YWlsLCBudW1NZXJnZXMsIHBTaXplLCBxU2l6ZSxcbiAgICAgICAgaW5TaXplID0gMTtcblxuICAgIGRvIHtcbiAgICAgICAgcCA9IGxpc3Q7XG4gICAgICAgIGxpc3QgPSBudWxsO1xuICAgICAgICB0YWlsID0gbnVsbDtcbiAgICAgICAgbnVtTWVyZ2VzID0gMDtcblxuICAgICAgICB3aGlsZSAocCkge1xuICAgICAgICAgICAgbnVtTWVyZ2VzKys7XG4gICAgICAgICAgICBxID0gcDtcbiAgICAgICAgICAgIHBTaXplID0gMDtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBpblNpemU7IGkrKykge1xuICAgICAgICAgICAgICAgIHBTaXplKys7XG4gICAgICAgICAgICAgICAgcSA9IHEubmV4dFo7XG4gICAgICAgICAgICAgICAgaWYgKCFxKSBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHFTaXplID0gaW5TaXplO1xuXG4gICAgICAgICAgICB3aGlsZSAocFNpemUgPiAwIHx8IChxU2l6ZSA+IDAgJiYgcSkpIHtcblxuICAgICAgICAgICAgICAgIGlmIChwU2l6ZSAhPT0gMCAmJiAocVNpemUgPT09IDAgfHwgIXEgfHwgcC56IDw9IHEueikpIHtcbiAgICAgICAgICAgICAgICAgICAgZSA9IHA7XG4gICAgICAgICAgICAgICAgICAgIHAgPSBwLm5leHRaO1xuICAgICAgICAgICAgICAgICAgICBwU2l6ZS0tO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGUgPSBxO1xuICAgICAgICAgICAgICAgICAgICBxID0gcS5uZXh0WjtcbiAgICAgICAgICAgICAgICAgICAgcVNpemUtLTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAodGFpbCkgdGFpbC5uZXh0WiA9IGU7XG4gICAgICAgICAgICAgICAgZWxzZSBsaXN0ID0gZTtcblxuICAgICAgICAgICAgICAgIGUucHJldlogPSB0YWlsO1xuICAgICAgICAgICAgICAgIHRhaWwgPSBlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwID0gcTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRhaWwubmV4dFogPSBudWxsO1xuICAgICAgICBpblNpemUgKj0gMjtcblxuICAgIH0gd2hpbGUgKG51bU1lcmdlcyA+IDEpO1xuXG4gICAgcmV0dXJuIGxpc3Q7XG59XG5cbi8vIHotb3JkZXIgb2YgYSBwb2ludCBnaXZlbiBjb29yZHMgYW5kIGludmVyc2Ugb2YgdGhlIGxvbmdlciBzaWRlIG9mIGRhdGEgYmJveFxuZnVuY3Rpb24gek9yZGVyKHgsIHksIG1pblgsIG1pblksIGludlNpemUpIHtcbiAgICAvLyBjb29yZHMgYXJlIHRyYW5zZm9ybWVkIGludG8gbm9uLW5lZ2F0aXZlIDE1LWJpdCBpbnRlZ2VyIHJhbmdlXG4gICAgeCA9ICh4IC0gbWluWCkgKiBpbnZTaXplIHwgMDtcbiAgICB5ID0gKHkgLSBtaW5ZKSAqIGludlNpemUgfCAwO1xuXG4gICAgeCA9ICh4IHwgKHggPDwgOCkpICYgMHgwMEZGMDBGRjtcbiAgICB4ID0gKHggfCAoeCA8PCA0KSkgJiAweDBGMEYwRjBGO1xuICAgIHggPSAoeCB8ICh4IDw8IDIpKSAmIDB4MzMzMzMzMzM7XG4gICAgeCA9ICh4IHwgKHggPDwgMSkpICYgMHg1NTU1NTU1NTtcblxuICAgIHkgPSAoeSB8ICh5IDw8IDgpKSAmIDB4MDBGRjAwRkY7XG4gICAgeSA9ICh5IHwgKHkgPDwgNCkpICYgMHgwRjBGMEYwRjtcbiAgICB5ID0gKHkgfCAoeSA8PCAyKSkgJiAweDMzMzMzMzMzO1xuICAgIHkgPSAoeSB8ICh5IDw8IDEpKSAmIDB4NTU1NTU1NTU7XG5cbiAgICByZXR1cm4geCB8ICh5IDw8IDEpO1xufVxuXG4vLyBmaW5kIHRoZSBsZWZ0bW9zdCBub2RlIG9mIGEgcG9seWdvbiByaW5nXG5mdW5jdGlvbiBnZXRMZWZ0bW9zdChzdGFydCkge1xuICAgIHZhciBwID0gc3RhcnQsXG4gICAgICAgIGxlZnRtb3N0ID0gc3RhcnQ7XG4gICAgZG8ge1xuICAgICAgICBpZiAocC54IDwgbGVmdG1vc3QueCB8fCAocC54ID09PSBsZWZ0bW9zdC54ICYmIHAueSA8IGxlZnRtb3N0LnkpKSBsZWZ0bW9zdCA9IHA7XG4gICAgICAgIHAgPSBwLm5leHQ7XG4gICAgfSB3aGlsZSAocCAhPT0gc3RhcnQpO1xuXG4gICAgcmV0dXJuIGxlZnRtb3N0O1xufVxuXG4vLyBjaGVjayBpZiBhIHBvaW50IGxpZXMgd2l0aGluIGEgY29udmV4IHRyaWFuZ2xlXG5mdW5jdGlvbiBwb2ludEluVHJpYW5nbGUoYXgsIGF5LCBieCwgYnksIGN4LCBjeSwgcHgsIHB5KSB7XG4gICAgcmV0dXJuIChjeCAtIHB4KSAqIChheSAtIHB5KSA+PSAoYXggLSBweCkgKiAoY3kgLSBweSkgJiZcbiAgICAgICAgICAgKGF4IC0gcHgpICogKGJ5IC0gcHkpID49IChieCAtIHB4KSAqIChheSAtIHB5KSAmJlxuICAgICAgICAgICAoYnggLSBweCkgKiAoY3kgLSBweSkgPj0gKGN4IC0gcHgpICogKGJ5IC0gcHkpO1xufVxuXG4vLyBjaGVjayBpZiBhIGRpYWdvbmFsIGJldHdlZW4gdHdvIHBvbHlnb24gbm9kZXMgaXMgdmFsaWQgKGxpZXMgaW4gcG9seWdvbiBpbnRlcmlvcilcbmZ1bmN0aW9uIGlzVmFsaWREaWFnb25hbChhLCBiKSB7XG4gICAgcmV0dXJuIGEubmV4dC5pICE9PSBiLmkgJiYgYS5wcmV2LmkgIT09IGIuaSAmJiAhaW50ZXJzZWN0c1BvbHlnb24oYSwgYikgJiYgLy8gZG9uZXMndCBpbnRlcnNlY3Qgb3RoZXIgZWRnZXNcbiAgICAgICAgICAgKGxvY2FsbHlJbnNpZGUoYSwgYikgJiYgbG9jYWxseUluc2lkZShiLCBhKSAmJiBtaWRkbGVJbnNpZGUoYSwgYikgJiYgLy8gbG9jYWxseSB2aXNpYmxlXG4gICAgICAgICAgICAoYXJlYShhLnByZXYsIGEsIGIucHJldikgfHwgYXJlYShhLCBiLnByZXYsIGIpKSB8fCAvLyBkb2VzIG5vdCBjcmVhdGUgb3Bwb3NpdGUtZmFjaW5nIHNlY3RvcnNcbiAgICAgICAgICAgIGVxdWFscyhhLCBiKSAmJiBhcmVhKGEucHJldiwgYSwgYS5uZXh0KSA+IDAgJiYgYXJlYShiLnByZXYsIGIsIGIubmV4dCkgPiAwKTsgLy8gc3BlY2lhbCB6ZXJvLWxlbmd0aCBjYXNlXG59XG5cbi8vIHNpZ25lZCBhcmVhIG9mIGEgdHJpYW5nbGVcbmZ1bmN0aW9uIGFyZWEocCwgcSwgcikge1xuICAgIHJldHVybiAocS55IC0gcC55KSAqIChyLnggLSBxLngpIC0gKHEueCAtIHAueCkgKiAoci55IC0gcS55KTtcbn1cblxuLy8gY2hlY2sgaWYgdHdvIHBvaW50cyBhcmUgZXF1YWxcbmZ1bmN0aW9uIGVxdWFscyhwMSwgcDIpIHtcbiAgICByZXR1cm4gcDEueCA9PT0gcDIueCAmJiBwMS55ID09PSBwMi55O1xufVxuXG4vLyBjaGVjayBpZiB0d28gc2VnbWVudHMgaW50ZXJzZWN0XG5mdW5jdGlvbiBpbnRlcnNlY3RzKHAxLCBxMSwgcDIsIHEyKSB7XG4gICAgdmFyIG8xID0gc2lnbihhcmVhKHAxLCBxMSwgcDIpKTtcbiAgICB2YXIgbzIgPSBzaWduKGFyZWEocDEsIHExLCBxMikpO1xuICAgIHZhciBvMyA9IHNpZ24oYXJlYShwMiwgcTIsIHAxKSk7XG4gICAgdmFyIG80ID0gc2lnbihhcmVhKHAyLCBxMiwgcTEpKTtcblxuICAgIGlmIChvMSAhPT0gbzIgJiYgbzMgIT09IG80KSByZXR1cm4gdHJ1ZTsgLy8gZ2VuZXJhbCBjYXNlXG5cbiAgICBpZiAobzEgPT09IDAgJiYgb25TZWdtZW50KHAxLCBwMiwgcTEpKSByZXR1cm4gdHJ1ZTsgLy8gcDEsIHExIGFuZCBwMiBhcmUgY29sbGluZWFyIGFuZCBwMiBsaWVzIG9uIHAxcTFcbiAgICBpZiAobzIgPT09IDAgJiYgb25TZWdtZW50KHAxLCBxMiwgcTEpKSByZXR1cm4gdHJ1ZTsgLy8gcDEsIHExIGFuZCBxMiBhcmUgY29sbGluZWFyIGFuZCBxMiBsaWVzIG9uIHAxcTFcbiAgICBpZiAobzMgPT09IDAgJiYgb25TZWdtZW50KHAyLCBwMSwgcTIpKSByZXR1cm4gdHJ1ZTsgLy8gcDIsIHEyIGFuZCBwMSBhcmUgY29sbGluZWFyIGFuZCBwMSBsaWVzIG9uIHAycTJcbiAgICBpZiAobzQgPT09IDAgJiYgb25TZWdtZW50KHAyLCBxMSwgcTIpKSByZXR1cm4gdHJ1ZTsgLy8gcDIsIHEyIGFuZCBxMSBhcmUgY29sbGluZWFyIGFuZCBxMSBsaWVzIG9uIHAycTJcblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLy8gZm9yIGNvbGxpbmVhciBwb2ludHMgcCwgcSwgciwgY2hlY2sgaWYgcG9pbnQgcSBsaWVzIG9uIHNlZ21lbnQgcHJcbmZ1bmN0aW9uIG9uU2VnbWVudChwLCBxLCByKSB7XG4gICAgcmV0dXJuIHEueCA8PSBNYXRoLm1heChwLngsIHIueCkgJiYgcS54ID49IE1hdGgubWluKHAueCwgci54KSAmJiBxLnkgPD0gTWF0aC5tYXgocC55LCByLnkpICYmIHEueSA+PSBNYXRoLm1pbihwLnksIHIueSk7XG59XG5cbmZ1bmN0aW9uIHNpZ24obnVtKSB7XG4gICAgcmV0dXJuIG51bSA+IDAgPyAxIDogbnVtIDwgMCA/IC0xIDogMDtcbn1cblxuLy8gY2hlY2sgaWYgYSBwb2x5Z29uIGRpYWdvbmFsIGludGVyc2VjdHMgYW55IHBvbHlnb24gc2VnbWVudHNcbmZ1bmN0aW9uIGludGVyc2VjdHNQb2x5Z29uKGEsIGIpIHtcbiAgICB2YXIgcCA9IGE7XG4gICAgZG8ge1xuICAgICAgICBpZiAocC5pICE9PSBhLmkgJiYgcC5uZXh0LmkgIT09IGEuaSAmJiBwLmkgIT09IGIuaSAmJiBwLm5leHQuaSAhPT0gYi5pICYmXG4gICAgICAgICAgICAgICAgaW50ZXJzZWN0cyhwLCBwLm5leHQsIGEsIGIpKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgcCA9IHAubmV4dDtcbiAgICB9IHdoaWxlIChwICE9PSBhKTtcblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLy8gY2hlY2sgaWYgYSBwb2x5Z29uIGRpYWdvbmFsIGlzIGxvY2FsbHkgaW5zaWRlIHRoZSBwb2x5Z29uXG5mdW5jdGlvbiBsb2NhbGx5SW5zaWRlKGEsIGIpIHtcbiAgICByZXR1cm4gYXJlYShhLnByZXYsIGEsIGEubmV4dCkgPCAwID9cbiAgICAgICAgYXJlYShhLCBiLCBhLm5leHQpID49IDAgJiYgYXJlYShhLCBhLnByZXYsIGIpID49IDAgOlxuICAgICAgICBhcmVhKGEsIGIsIGEucHJldikgPCAwIHx8IGFyZWEoYSwgYS5uZXh0LCBiKSA8IDA7XG59XG5cbi8vIGNoZWNrIGlmIHRoZSBtaWRkbGUgcG9pbnQgb2YgYSBwb2x5Z29uIGRpYWdvbmFsIGlzIGluc2lkZSB0aGUgcG9seWdvblxuZnVuY3Rpb24gbWlkZGxlSW5zaWRlKGEsIGIpIHtcbiAgICB2YXIgcCA9IGEsXG4gICAgICAgIGluc2lkZSA9IGZhbHNlLFxuICAgICAgICBweCA9IChhLnggKyBiLngpIC8gMixcbiAgICAgICAgcHkgPSAoYS55ICsgYi55KSAvIDI7XG4gICAgZG8ge1xuICAgICAgICBpZiAoKChwLnkgPiBweSkgIT09IChwLm5leHQueSA+IHB5KSkgJiYgcC5uZXh0LnkgIT09IHAueSAmJlxuICAgICAgICAgICAgICAgIChweCA8IChwLm5leHQueCAtIHAueCkgKiAocHkgLSBwLnkpIC8gKHAubmV4dC55IC0gcC55KSArIHAueCkpXG4gICAgICAgICAgICBpbnNpZGUgPSAhaW5zaWRlO1xuICAgICAgICBwID0gcC5uZXh0O1xuICAgIH0gd2hpbGUgKHAgIT09IGEpO1xuXG4gICAgcmV0dXJuIGluc2lkZTtcbn1cblxuLy8gbGluayB0d28gcG9seWdvbiB2ZXJ0aWNlcyB3aXRoIGEgYnJpZGdlOyBpZiB0aGUgdmVydGljZXMgYmVsb25nIHRvIHRoZSBzYW1lIHJpbmcsIGl0IHNwbGl0cyBwb2x5Z29uIGludG8gdHdvO1xuLy8gaWYgb25lIGJlbG9uZ3MgdG8gdGhlIG91dGVyIHJpbmcgYW5kIGFub3RoZXIgdG8gYSBob2xlLCBpdCBtZXJnZXMgaXQgaW50byBhIHNpbmdsZSByaW5nXG5mdW5jdGlvbiBzcGxpdFBvbHlnb24oYSwgYikge1xuICAgIHZhciBhMiA9IG5ldyBOb2RlKGEuaSwgYS54LCBhLnkpLFxuICAgICAgICBiMiA9IG5ldyBOb2RlKGIuaSwgYi54LCBiLnkpLFxuICAgICAgICBhbiA9IGEubmV4dCxcbiAgICAgICAgYnAgPSBiLnByZXY7XG5cbiAgICBhLm5leHQgPSBiO1xuICAgIGIucHJldiA9IGE7XG5cbiAgICBhMi5uZXh0ID0gYW47XG4gICAgYW4ucHJldiA9IGEyO1xuXG4gICAgYjIubmV4dCA9IGEyO1xuICAgIGEyLnByZXYgPSBiMjtcblxuICAgIGJwLm5leHQgPSBiMjtcbiAgICBiMi5wcmV2ID0gYnA7XG5cbiAgICByZXR1cm4gYjI7XG59XG5cbi8vIGNyZWF0ZSBhIG5vZGUgYW5kIG9wdGlvbmFsbHkgbGluayBpdCB3aXRoIHByZXZpb3VzIG9uZSAoaW4gYSBjaXJjdWxhciBkb3VibHkgbGlua2VkIGxpc3QpXG5mdW5jdGlvbiBpbnNlcnROb2RlKGksIHgsIHksIGxhc3QpIHtcbiAgICB2YXIgcCA9IG5ldyBOb2RlKGksIHgsIHkpO1xuXG4gICAgaWYgKCFsYXN0KSB7XG4gICAgICAgIHAucHJldiA9IHA7XG4gICAgICAgIHAubmV4dCA9IHA7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICBwLm5leHQgPSBsYXN0Lm5leHQ7XG4gICAgICAgIHAucHJldiA9IGxhc3Q7XG4gICAgICAgIGxhc3QubmV4dC5wcmV2ID0gcDtcbiAgICAgICAgbGFzdC5uZXh0ID0gcDtcbiAgICB9XG4gICAgcmV0dXJuIHA7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZU5vZGUocCkge1xuICAgIHAubmV4dC5wcmV2ID0gcC5wcmV2O1xuICAgIHAucHJldi5uZXh0ID0gcC5uZXh0O1xuXG4gICAgaWYgKHAucHJldlopIHAucHJldloubmV4dFogPSBwLm5leHRaO1xuICAgIGlmIChwLm5leHRaKSBwLm5leHRaLnByZXZaID0gcC5wcmV2Wjtcbn1cblxuZnVuY3Rpb24gTm9kZShpLCB4LCB5KSB7XG4gICAgLy8gdmVydGV4IGluZGV4IGluIGNvb3JkaW5hdGVzIGFycmF5XG4gICAgdGhpcy5pID0gaTtcblxuICAgIC8vIHZlcnRleCBjb29yZGluYXRlc1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcblxuICAgIC8vIHByZXZpb3VzIGFuZCBuZXh0IHZlcnRleCBub2RlcyBpbiBhIHBvbHlnb24gcmluZ1xuICAgIHRoaXMucHJldiA9IG51bGw7XG4gICAgdGhpcy5uZXh0ID0gbnVsbDtcblxuICAgIC8vIHotb3JkZXIgY3VydmUgdmFsdWVcbiAgICB0aGlzLnogPSAwO1xuXG4gICAgLy8gcHJldmlvdXMgYW5kIG5leHQgbm9kZXMgaW4gei1vcmRlclxuICAgIHRoaXMucHJldlogPSBudWxsO1xuICAgIHRoaXMubmV4dFogPSBudWxsO1xuXG4gICAgLy8gaW5kaWNhdGVzIHdoZXRoZXIgdGhpcyBpcyBhIHN0ZWluZXIgcG9pbnRcbiAgICB0aGlzLnN0ZWluZXIgPSBmYWxzZTtcbn1cblxuLy8gcmV0dXJuIGEgcGVyY2VudGFnZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHBvbHlnb24gYXJlYSBhbmQgaXRzIHRyaWFuZ3VsYXRpb24gYXJlYTtcbi8vIHVzZWQgdG8gdmVyaWZ5IGNvcnJlY3RuZXNzIG9mIHRyaWFuZ3VsYXRpb25cbmVhcmN1dC5kZXZpYXRpb24gPSBmdW5jdGlvbiAoZGF0YSwgaG9sZUluZGljZXMsIGRpbSwgdHJpYW5nbGVzKSB7XG4gICAgdmFyIGhhc0hvbGVzID0gaG9sZUluZGljZXMgJiYgaG9sZUluZGljZXMubGVuZ3RoO1xuICAgIHZhciBvdXRlckxlbiA9IGhhc0hvbGVzID8gaG9sZUluZGljZXNbMF0gKiBkaW0gOiBkYXRhLmxlbmd0aDtcblxuICAgIHZhciBwb2x5Z29uQXJlYSA9IE1hdGguYWJzKHNpZ25lZEFyZWEoZGF0YSwgMCwgb3V0ZXJMZW4sIGRpbSkpO1xuICAgIGlmIChoYXNIb2xlcykge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gaG9sZUluZGljZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBzdGFydCA9IGhvbGVJbmRpY2VzW2ldICogZGltO1xuICAgICAgICAgICAgdmFyIGVuZCA9IGkgPCBsZW4gLSAxID8gaG9sZUluZGljZXNbaSArIDFdICogZGltIDogZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICBwb2x5Z29uQXJlYSAtPSBNYXRoLmFicyhzaWduZWRBcmVhKGRhdGEsIHN0YXJ0LCBlbmQsIGRpbSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHRyaWFuZ2xlc0FyZWEgPSAwO1xuICAgIGZvciAoaSA9IDA7IGkgPCB0cmlhbmdsZXMubGVuZ3RoOyBpICs9IDMpIHtcbiAgICAgICAgdmFyIGEgPSB0cmlhbmdsZXNbaV0gKiBkaW07XG4gICAgICAgIHZhciBiID0gdHJpYW5nbGVzW2kgKyAxXSAqIGRpbTtcbiAgICAgICAgdmFyIGMgPSB0cmlhbmdsZXNbaSArIDJdICogZGltO1xuICAgICAgICB0cmlhbmdsZXNBcmVhICs9IE1hdGguYWJzKFxuICAgICAgICAgICAgKGRhdGFbYV0gLSBkYXRhW2NdKSAqIChkYXRhW2IgKyAxXSAtIGRhdGFbYSArIDFdKSAtXG4gICAgICAgICAgICAoZGF0YVthXSAtIGRhdGFbYl0pICogKGRhdGFbYyArIDFdIC0gZGF0YVthICsgMV0pKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcG9seWdvbkFyZWEgPT09IDAgJiYgdHJpYW5nbGVzQXJlYSA9PT0gMCA/IDAgOlxuICAgICAgICBNYXRoLmFicygodHJpYW5nbGVzQXJlYSAtIHBvbHlnb25BcmVhKSAvIHBvbHlnb25BcmVhKTtcbn07XG5cbmZ1bmN0aW9uIHNpZ25lZEFyZWEoZGF0YSwgc3RhcnQsIGVuZCwgZGltKSB7XG4gICAgdmFyIHN1bSA9IDA7XG4gICAgZm9yICh2YXIgaSA9IHN0YXJ0LCBqID0gZW5kIC0gZGltOyBpIDwgZW5kOyBpICs9IGRpbSkge1xuICAgICAgICBzdW0gKz0gKGRhdGFbal0gLSBkYXRhW2ldKSAqIChkYXRhW2kgKyAxXSArIGRhdGFbaiArIDFdKTtcbiAgICAgICAgaiA9IGk7XG4gICAgfVxuICAgIHJldHVybiBzdW07XG59XG5cbi8vIHR1cm4gYSBwb2x5Z29uIGluIGEgbXVsdGktZGltZW5zaW9uYWwgYXJyYXkgZm9ybSAoZS5nLiBhcyBpbiBHZW9KU09OKSBpbnRvIGEgZm9ybSBFYXJjdXQgYWNjZXB0c1xuZWFyY3V0LmZsYXR0ZW4gPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgIHZhciBkaW0gPSBkYXRhWzBdWzBdLmxlbmd0aCxcbiAgICAgICAgcmVzdWx0ID0ge3ZlcnRpY2VzOiBbXSwgaG9sZXM6IFtdLCBkaW1lbnNpb25zOiBkaW19LFxuICAgICAgICBob2xlSW5kZXggPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZGF0YVtpXS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgZm9yICh2YXIgZCA9IDA7IGQgPCBkaW07IGQrKykgcmVzdWx0LnZlcnRpY2VzLnB1c2goZGF0YVtpXVtqXVtkXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICBob2xlSW5kZXggKz0gZGF0YVtpIC0gMV0ubGVuZ3RoO1xuICAgICAgICAgICAgcmVzdWx0LmhvbGVzLnB1c2goaG9sZUluZGV4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/earcut/src/earcut.js\n");

/***/ }),

/***/ "./packages/superset-ui-core/src/hooks/usePrevious/usePrevious.ts":
/*!************************************************************************!*\
  !*** ./packages/superset-ui-core/src/hooks/usePrevious/usePrevious.ts ***!
  \************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePrevious: () => (/* binding */ usePrevious)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction usePrevious(value, initialValue) {\n  const previous = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(initialValue);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    // useEffect runs after the render completes\n    previous.current = value;\n  }, [value]);\n  return previous.current;\n}__signature__(usePrevious, \"useRef{previous}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(usePrevious, \"usePrevious\", \"/Users/aryurkov/superset/superset-frontend/packages/superset-ui-core/src/hooks/usePrevious/usePrevious.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy9ob29rcy91c2VQcmV2aW91cy91c2VQcmV2aW91cy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkE7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy9ob29rcy91c2VQcmV2aW91cy91c2VQcmV2aW91cy50cz81ZTlmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogUGFzcyBpbiBhIHBpZWNlIG9mIHN0YXRlLlxuICogVGhpcyBob29rIHJldHVybnMgd2hhdCB0aGUgdmFsdWUgb2YgdGhhdCBzdGF0ZSB3YXMgaW4gdGhlIHByZXZpb3VzIHJlbmRlci5cbiAqIFJldHVybnMgdW5kZWZpbmVkIChvciB3aGF0ZXZlciB2YWx1ZSB5b3Ugc3BlY2lmeSkgdGhlIGZpcnN0IHRpbWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VQcmV2aW91czxUPih2YWx1ZTogVCk6IFQgfCB1bmRlZmluZWQ7XG5leHBvcnQgZnVuY3Rpb24gdXNlUHJldmlvdXM8VCwgSU5JVD4odmFsdWU6IFQsIGluaXRpYWxWYWx1ZTogSU5JVCk6IFQgfCBJTklUO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVByZXZpb3VzPFQ+KHZhbHVlOiBULCBpbml0aWFsVmFsdWU/OiBhbnkpOiBUIHtcbiAgY29uc3QgcHJldmlvdXMgPSB1c2VSZWY8VD4oaW5pdGlhbFZhbHVlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyB1c2VFZmZlY3QgcnVucyBhZnRlciB0aGUgcmVuZGVyIGNvbXBsZXRlc1xuICAgIHByZXZpb3VzLmN1cnJlbnQgPSB2YWx1ZTtcbiAgfSwgW3ZhbHVlXSk7XG4gIHJldHVybiBwcmV2aW91cy5jdXJyZW50O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/hooks/usePrevious/usePrevious.ts\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx":
/*!*******************************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx ***!
  \*******************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/color/CategoricalColorNamespace.ts\");\n/* harmony import */ var _components_Legend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Legend */ \"./plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx\");\n/* harmony import */ var _utils_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/colors */ \"./plugins/legacy-preset-chart-deckgl/src/utils/colors.ts\");\n/* harmony import */ var _utils_sandbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/sandbox */ \"./plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts\");\n/* harmony import */ var _utils_fitViewport__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/fitViewport */ \"./plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts\");\n/* harmony import */ var _DeckGLContainer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DeckGLContainer */ \"./plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/sort-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable camelcase */\n/* eslint-disable no-prototype-builtins */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\n\n\n\n\n// eslint-disable-next-line import/extensions\n\n\nconst { getScale } = _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__;\nfunction getCategories(fd, data) {\n  const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  const appliedScheme = fd.color_scheme;\n  const colorFn = getScale(appliedScheme);\n  const categories = {};\n  data.forEach((d) => {\n    if (d.cat_color != null && !categories.hasOwnProperty(d.cat_color)) {\n      let color;\n      if (fd.dimension) {\n        color = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_2__.hexToRGB)(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n      } else\n      {\n        color = fixedColor;\n      }\n      categories[d.cat_color] = { color, enabled: true };\n    }\n  });\n  return categories;\n}\nconst CategoricalDeckGLContainer = (props) => {\n  const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const getAdjustedViewport = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    let viewport = { ...props.viewport };\n    if (props.formData.autozoom) {\n      viewport = (0,_utils_fitViewport__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(viewport, {\n        width: props.width,\n        height: props.height,\n        points: props.getPoints(props.payload.data.features || [])\n      });\n    }\n    if (viewport.zoom < 0) {\n      viewport.zoom = 0;\n    }\n    return viewport;\n  }, [props]);\n  const [categories, setCategories] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getCategories(props.formData, props.payload.data.features || []));\n  const [stateFormData, setStateFormData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.payload.form_data);\n  const [viewport, setViewport] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getAdjustedViewport());\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (props.payload.form_data !== stateFormData) {\n      const features = props.payload.data.features || [];\n      const categories = getCategories(props.formData, features);\n      setViewport(getAdjustedViewport());\n      setStateFormData(props.payload.form_data);\n      setCategories(categories);\n    }\n  }, [getAdjustedViewport, props, stateFormData]);\n  const setTooltip = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((tooltip) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n  const addColor = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((data, fd) => {\n    const c = fd.color_picker || { r: 0, g: 0, b: 0, a: 1 };\n    const appliedScheme = fd.color_scheme;\n    const colorFn = getScale(appliedScheme);\n    return data.map((d) => {\n      let color;\n      if (fd.dimension) {\n        color = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_2__.hexToRGB)(colorFn(d.cat_color, fd.sliceId), c.a * 255);\n        return { ...d, color };\n      }\n      return d;\n    });\n  }, []);\n  const getLayers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    const { getLayer, payload, formData: fd, onAddFilter } = props;\n    let features = payload.data.features ? [...payload.data.features] : [];\n    // Add colors from categories or fixed color\n    features = addColor(features, fd);\n    // Apply user defined data mutator if defined\n    if (fd.js_data_mutator) {\n      const jsFnMutator = (0,_utils_sandbox__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(fd.js_data_mutator);\n      features = jsFnMutator(features);\n    }\n    // Show only categories selected in the legend\n    if (fd.dimension) {\n      features = features.filter((d) => {var _categories$d$cat_col;return (_categories$d$cat_col = categories[d.cat_color]) == null ? void 0 : _categories$d$cat_col.enabled;});\n    }\n    const filteredPayload = {\n      ...payload,\n      data: { ...payload.data, features }\n    };\n    return [\n    getLayer(fd, filteredPayload, onAddFilter, setTooltip, props.datasource)];\n\n  }, [addColor, categories, props, setTooltip]);\n  const toggleCategory = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((category) => {\n    const categoryState = categories[category];\n    const categoriesExtended = {\n      ...categories,\n      [category]: {\n        ...categoryState,\n        enabled: !categoryState.enabled\n      }\n    };\n    // if all categories are disabled, enable all -- similar to nvd3\n    if (Object.values(categoriesExtended).every((v) => !v.enabled)) {\n      /* eslint-disable no-param-reassign */\n      Object.values(categoriesExtended).forEach((v) => {\n        v.enabled = true;\n      });\n    }\n    setCategories(categoriesExtended);\n  }, [categories]);\n  const showSingleCategory = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((category) => {\n    const modifiedCategories = { ...categories };\n    Object.values(modifiedCategories).forEach((v) => {\n      v.enabled = false;\n    });\n    modifiedCategories[category].enabled = true;\n    setCategories(modifiedCategories);\n  }, [categories]);\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(\"div\", { style: { position: 'relative' }, children: [\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_DeckGLContainer__WEBPACK_IMPORTED_MODULE_5__.DeckGLContainerStyledWrapper, { ref: containerRef, viewport: viewport, layers: getLayers(), setControlValue: props.setControlValue, mapStyle: props.formData.mapbox_style, mapboxApiAccessToken: props.mapboxApiKey, width: props.width, height: props.height }),\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_components_Legend__WEBPACK_IMPORTED_MODULE_1__[\"default\"], { forceCategorical: true, categories: categories, format: props.formData.legend_format, position: props.formData.legend_position, showSingleCategory: showSingleCategory, toggleCategory: toggleCategory })] }\n  );\n};__signature__(CategoricalDeckGLContainer, \"useRef{containerRef}\\nuseCallback{getAdjustedViewport}\\nuseState{[categories, setCategories](getCategories(props.formData, props.payload.data.features || []))}\\nuseState{[stateFormData, setStateFormData](props.payload.form_data)}\\nuseState{[viewport, setViewport](getAdjustedViewport())}\\nuseEffect{}\\nuseCallback{setTooltip}\\nuseCallback{addColor}\\nuseCallback{getLayers}\\nuseCallback{toggleCategory}\\nuseCallback{showSingleCategory}\");const _default = /*#__PURE__*/\n(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(CategoricalDeckGLContainer);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getScale, \"getScale\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");reactHotLoader.register(getCategories, \"getCategories\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");reactHotLoader.register(CategoricalDeckGLContainer, \"CategoricalDeckGLContainer\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx":
/*!********************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeckGLContainerStyledWrapper: () => (/* binding */ DeckGLContainerStyledWrapper)\n/* harmony export */ });\n/* unused harmony export DeckGLContainer */\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEqual */ \"./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_map_gl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-map-gl */ \"./node_modules/react-map-gl/dist/esm/index.js\");\n/* harmony import */ var _deck_gl_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/react */ \"./node_modules/@deck.gl/react/dist/deckgl.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/hooks/usePrevious/usePrevious.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _components_Tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Tooltip */ \"./plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mapbox-gl/dist/mapbox-gl.css */ \"./node_modules/mapbox-gl/dist/mapbox-gl.css\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/forbid-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\nconst TICK = 250; // milliseconds\nconst DeckGLContainer = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(__signature__((props, ref) => {\n  const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const [lastUpdate, setLastUpdate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const [viewState, setViewState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(props.viewport);\n  const prevViewport = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.usePrevious)(props.viewport);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, () => ({ setTooltip }), []);\n  const tick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    // Rate limiting updating viewport controls as it triggers lots of renders\n    if (lastUpdate && Date.now() - lastUpdate > TICK) {\n      const setCV = props.setControlValue;\n      if (setCV) {\n        setCV('viewport', viewState);\n      }\n      setLastUpdate(null);\n    }\n  }, [lastUpdate, props.setControlValue, viewState]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const timer = setInterval(tick, TICK);\n    return clearInterval(timer);\n  }, [tick]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default()(props.viewport, prevViewport)) {\n      setViewState(props.viewport);\n    }\n  }, [prevViewport, props.viewport]);\n  const onViewStateChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(({ viewState }) => {\n    setViewState(viewState);\n    setLastUpdate(Date.now());\n  }, []);\n  const layers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    // Support for layer factory\n    if (props.layers.some((l) => typeof l === 'function')) {\n      return props.layers.map((l) => typeof l === 'function' ? l() : l);\n    }\n    return props.layers;\n  }, [props.layers]);\n  const { children = null, height, width } = props;\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment, { children: [\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)(\"div\", { style: { position: 'relative', width, height }, children: [\n      (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_deck_gl_react__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { controller: true, width: width, height: height, layers: layers(), viewState: viewState, onViewStateChange: onViewStateChange, children:\n        (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_map_gl__WEBPACK_IMPORTED_MODULE_2__.StaticMap, { preserveDrawingBuffer: true, mapStyle: props.mapStyle || 'light', mapboxApiAccessToken: props.mapboxApiAccessToken }) }\n      ),\n      children] }\n    ),\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_components_Tooltip__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { tooltip: tooltip })] }\n  );\n}, \"useState{[tooltip, setTooltip](null)}\\nuseState{[lastUpdate, setLastUpdate](null)}\\nuseState{[viewState, setViewState](props.viewport)}\\nusePrevious{prevViewport}\\nuseImperativeHandle{}\\nuseCallback{tick}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{onViewStateChange}\\nuseCallback{layers}\", () => [_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.usePrevious, react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle])));\nconst DeckGLContainerStyledWrapper = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled)(DeckGLContainer)`\n  .deckgl-tooltip > div {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TICK, \"TICK\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");reactHotLoader.register(DeckGLContainer, \"DeckGLContainer\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");reactHotLoader.register(DeckGLContainerStyledWrapper, \"DeckGLContainerStyledWrapper\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9EZWNrR0xDb250YWluZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7QUFVQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFjQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7O0FBS0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBUUE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFHQTs7Ozs7QUFLQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vcGx1Z2lucy9sZWdhY3ktcHJlc2V0LWNoYXJ0LWRlY2tnbC9zcmMvRGVja0dMQ29udGFpbmVyLnRzeD85YzI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L2pzeC1zb3J0LWRlZmF1bHQtcHJvcHMgKi9cbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L3NvcnQtcHJvcC10eXBlcyAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVhY3QvanN4LWhhbmRsZXItbmFtZXMgKi9cbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L2ZvcmJpZC1wcm9wLXR5cGVzICovXG4vKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQge1xuICBmb3J3YXJkUmVmLFxuICBtZW1vLFxuICBSZWFjdE5vZGUsXG4gIHVzZUNhbGxiYWNrLFxuICB1c2VFZmZlY3QsXG4gIHVzZUltcGVyYXRpdmVIYW5kbGUsXG4gIHVzZVN0YXRlLFxufSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBpc0VxdWFsIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFN0YXRpY01hcCB9IGZyb20gJ3JlYWN0LW1hcC1nbCc7XG5pbXBvcnQgRGVja0dMIGZyb20gJ0BkZWNrLmdsL3JlYWN0JztcbmltcG9ydCB0eXBlIHsgTGF5ZXIgfSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCB7IEpzb25PYmplY3QsIEpzb25WYWx1ZSwgc3R5bGVkLCB1c2VQcmV2aW91cyB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBUb29sdGlwLCB7IFRvb2x0aXBQcm9wcyB9IGZyb20gJy4vY29tcG9uZW50cy9Ub29sdGlwJztcbmltcG9ydCAnbWFwYm94LWdsL2Rpc3QvbWFwYm94LWdsLmNzcyc7XG5pbXBvcnQgeyBWaWV3cG9ydCB9IGZyb20gJy4vdXRpbHMvZml0Vmlld3BvcnQnO1xuXG5jb25zdCBUSUNLID0gMjUwOyAvLyBtaWxsaXNlY29uZHNcblxuZXhwb3J0IHR5cGUgRGVja0dMQ29udGFpbmVyUHJvcHMgPSB7XG4gIHZpZXdwb3J0OiBWaWV3cG9ydDtcbiAgc2V0Q29udHJvbFZhbHVlPzogKGNvbnRyb2w6IHN0cmluZywgdmFsdWU6IEpzb25WYWx1ZSkgPT4gdm9pZDtcbiAgbWFwU3R5bGU/OiBzdHJpbmc7XG4gIG1hcGJveEFwaUFjY2Vzc1Rva2VuOiBzdHJpbmc7XG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgbGF5ZXJzOiAoTGF5ZXIgfCAoKCkgPT4gTGF5ZXIpKVtdO1xuICBvblZpZXdwb3J0Q2hhbmdlPzogKHZpZXdwb3J0OiBWaWV3cG9ydCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBEZWNrR0xDb250YWluZXIgPSBtZW1vKFxuICBmb3J3YXJkUmVmKChwcm9wczogRGVja0dMQ29udGFpbmVyUHJvcHMsIHJlZikgPT4ge1xuICAgIGNvbnN0IFt0b29sdGlwLCBzZXRUb29sdGlwXSA9IHVzZVN0YXRlPFRvb2x0aXBQcm9wc1sndG9vbHRpcCddPihudWxsKTtcbiAgICBjb25zdCBbbGFzdFVwZGF0ZSwgc2V0TGFzdFVwZGF0ZV0gPSB1c2VTdGF0ZTxudW1iZXIgfCBudWxsPihudWxsKTtcbiAgICBjb25zdCBbdmlld1N0YXRlLCBzZXRWaWV3U3RhdGVdID0gdXNlU3RhdGUocHJvcHMudmlld3BvcnQpO1xuICAgIGNvbnN0IHByZXZWaWV3cG9ydCA9IHVzZVByZXZpb3VzKHByb3BzLnZpZXdwb3J0KTtcblxuICAgIHVzZUltcGVyYXRpdmVIYW5kbGUocmVmLCAoKSA9PiAoeyBzZXRUb29sdGlwIH0pLCBbXSk7XG5cbiAgICBjb25zdCB0aWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgLy8gUmF0ZSBsaW1pdGluZyB1cGRhdGluZyB2aWV3cG9ydCBjb250cm9scyBhcyBpdCB0cmlnZ2VycyBsb3RzIG9mIHJlbmRlcnNcbiAgICAgIGlmIChsYXN0VXBkYXRlICYmIERhdGUubm93KCkgLSBsYXN0VXBkYXRlID4gVElDSykge1xuICAgICAgICBjb25zdCBzZXRDViA9IHByb3BzLnNldENvbnRyb2xWYWx1ZTtcbiAgICAgICAgaWYgKHNldENWKSB7XG4gICAgICAgICAgc2V0Q1YoJ3ZpZXdwb3J0Jywgdmlld1N0YXRlKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRMYXN0VXBkYXRlKG51bGwpO1xuICAgICAgfVxuICAgIH0sIFtsYXN0VXBkYXRlLCBwcm9wcy5zZXRDb250cm9sVmFsdWUsIHZpZXdTdGF0ZV0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwodGljaywgVElDSyk7XG4gICAgICByZXR1cm4gY2xlYXJJbnRlcnZhbCh0aW1lcik7XG4gICAgfSwgW3RpY2tdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBpZiAoIWlzRXF1YWwocHJvcHMudmlld3BvcnQsIHByZXZWaWV3cG9ydCkpIHtcbiAgICAgICAgc2V0Vmlld1N0YXRlKHByb3BzLnZpZXdwb3J0KTtcbiAgICAgIH1cbiAgICB9LCBbcHJldlZpZXdwb3J0LCBwcm9wcy52aWV3cG9ydF0pO1xuXG4gICAgY29uc3Qgb25WaWV3U3RhdGVDaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAgICh7IHZpZXdTdGF0ZSB9OiB7IHZpZXdTdGF0ZTogSnNvbk9iamVjdCB9KSA9PiB7XG4gICAgICAgIHNldFZpZXdTdGF0ZSh2aWV3U3RhdGUgYXMgVmlld3BvcnQpO1xuICAgICAgICBzZXRMYXN0VXBkYXRlKERhdGUubm93KCkpO1xuICAgICAgfSxcbiAgICAgIFtdLFxuICAgICk7XG5cbiAgICBjb25zdCBsYXllcnMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAvLyBTdXBwb3J0IGZvciBsYXllciBmYWN0b3J5XG4gICAgICBpZiAocHJvcHMubGF5ZXJzLnNvbWUobCA9PiB0eXBlb2YgbCA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLmxheWVycy5tYXAobCA9PlxuICAgICAgICAgIHR5cGVvZiBsID09PSAnZnVuY3Rpb24nID8gbCgpIDogbCxcbiAgICAgICAgKSBhcyBMYXllcltdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJvcHMubGF5ZXJzIGFzIExheWVyW107XG4gICAgfSwgW3Byb3BzLmxheWVyc10pO1xuXG4gICAgY29uc3QgeyBjaGlsZHJlbiA9IG51bGwsIGhlaWdodCwgd2lkdGggfSA9IHByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHdpZHRoLCBoZWlnaHQgfX0+XG4gICAgICAgICAgPERlY2tHTFxuICAgICAgICAgICAgY29udHJvbGxlclxuICAgICAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgICAgICBsYXllcnM9e2xheWVycygpfVxuICAgICAgICAgICAgdmlld1N0YXRlPXt2aWV3U3RhdGV9XG4gICAgICAgICAgICBvblZpZXdTdGF0ZUNoYW5nZT17b25WaWV3U3RhdGVDaGFuZ2V9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPFN0YXRpY01hcFxuICAgICAgICAgICAgICBwcmVzZXJ2ZURyYXdpbmdCdWZmZXJcbiAgICAgICAgICAgICAgbWFwU3R5bGU9e3Byb3BzLm1hcFN0eWxlIHx8ICdsaWdodCd9XG4gICAgICAgICAgICAgIG1hcGJveEFwaUFjY2Vzc1Rva2VuPXtwcm9wcy5tYXBib3hBcGlBY2Nlc3NUb2tlbn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9EZWNrR0w+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPFRvb2x0aXAgdG9vbHRpcD17dG9vbHRpcH0gLz5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0pLFxuKTtcblxuZXhwb3J0IGNvbnN0IERlY2tHTENvbnRhaW5lclN0eWxlZFdyYXBwZXIgPSBzdHlsZWQoRGVja0dMQ29udGFpbmVyKWBcbiAgLmRlY2tnbC10b29sdGlwID4gZGl2IHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB9XG5gO1xuXG5leHBvcnQgdHlwZSBEZWNrR0xDb250YWluZXJIYW5kbGUgPSB0eXBlb2YgRGVja0dMQ29udGFpbmVyICYge1xuICBzZXRUb29sdGlwOiAodG9vbHRpcDogUmVhY3ROb2RlKSA9PiB2b2lkO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/TooltipRow.tsx":
/*!***************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/TooltipRow.tsx ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};const TooltipRow = ({ label, value }) => (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [\n  label,\n  (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"strong\", { children: value })] }\n);const _default =\nTooltipRow;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TooltipRow, \"TooltipRow\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/TooltipRow.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/TooltipRow.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9Ub29sdGlwUm93LnRzeCIsIm1hcHBpbmdzIjoiOzs7OztBQXVCQTtBQUVBO0FBQ0E7QUFDQTtBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9Ub29sdGlwUm93LnRzeD8wNGVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnR5cGUgVG9vbHRpcFJvd1Byb3BzID0ge1xuICBsYWJlbDogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xufTtcblxuY29uc3QgVG9vbHRpcFJvdyA9ICh7IGxhYmVsLCB2YWx1ZSB9OiBUb29sdGlwUm93UHJvcHMpID0+IChcbiAgPGRpdj5cbiAgICB7bGFiZWx9XG4gICAgPHN0cm9uZz57dmFsdWV9PC9zdHJvbmc+XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgVG9vbHRpcFJvdztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/TooltipRow.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx":
/*!**********************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx ***!
  \**********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/number-format/NumberFormatterRegistrySingleton.ts\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nconst StyledLegend = _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled.div`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    position: absolute;\n    background: ${theme.colors.grayscale.light5};\n    box-shadow: 0 0 ${theme.gridUnit}px ${theme.colors.grayscale.light2};\n    margin: ${theme.gridUnit * 6}px;\n    padding: ${theme.gridUnit * 3}px ${theme.gridUnit * 5}px;\n    outline: none;\n    overflow-y: scroll;\n    max-height: 200px;\n\n    & ul {\n      list-style: none;\n      padding-left: 0;\n      margin: 0;\n\n      & li a {\n        display: flex;\n        color: ${theme.colors.grayscale.base};\n        text-decoration: none;\n        padding: ${theme.gridUnit}px 0;\n\n        & span {\n          margin-right: ${theme.gridUnit}px;\n        }\n      }\n    }\n  `}\n`;\nconst categoryDelimiter = ' - ';\nconst Legend = ({ format: d3Format = null, forceCategorical = false, position = 'tr', categories: categoriesObject = {}, toggleCategory = () => {}, showSingleCategory = () => {} }) => {\n  const format = (value) => {\n    if (!d3Format || forceCategorical) {\n      return value;\n    }\n    const numValue = parseFloat(value);\n    return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_2__.formatNumber)(d3Format, numValue);\n  };\n  const formatCategoryLabel = (k) => {\n    if (!d3Format) {\n      return k;\n    }\n    if (k.includes(categoryDelimiter)) {\n      const values = k.split(categoryDelimiter);\n      return format(values[0]) + categoryDelimiter + format(values[1]);\n    }\n    return format(k);\n  };\n  if (Object.keys(categoriesObject).length === 0 || position === null) {\n    return null;\n  }\n  const categories = Object.entries(categoriesObject).map(([k, v]) => {var _v$color;\n    const style = { color: `rgba(${(_v$color = v.color) == null ? void 0 : _v$color.join(', ')})` };\n    const icon = v.enabled ? '\\u25FC' : '\\u25FB';\n    return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"li\", { children:\n      (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(\"a\", { href: \"#\", role: \"button\", onClick: () => toggleCategory(k), onDoubleClick: () => showSingleCategory(k), children: [\n        (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"span\", { style: style, children: icon }), \" \", formatCategoryLabel(k)] }\n      ) }, k\n    );\n  });\n  const vertical = (position == null ? void 0 : position.charAt(0)) === 't' ? 'top' : 'bottom';\n  const horizontal = (position == null ? void 0 : position.charAt(1)) === 'r' ? 'right' : 'left';\n  const style = {\n    position: 'absolute',\n    [vertical]: '0px',\n    [horizontal]: '10px'\n  };\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(StyledLegend, { className: \"dupa\", style: style, children:\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"ul\", { children: categories }) }\n  );\n};const _default = /*#__PURE__*/\n(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(Legend);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledLegend, \"StyledLegend\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx\");reactHotLoader.register(categoryDelimiter, \"categoryDelimiter\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx\");reactHotLoader.register(Legend, \"Legend\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9jb21wb25lbnRzL0xlZ2VuZC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztBQVlBOztBQUVBOzs7QUFHQTs7OztBQUlBO0FBQ0E7QUFFQTtBQVdBO0FBUUE7QUFDQTtBQUNBOztBQUdBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBRUE7O0FBR0E7QUFDQTtBQUVBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQU1BO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9jb21wb25lbnRzL0xlZ2VuZC50c3g/MzBjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9qc3gtc29ydC1kZWZhdWx0LXByb3BzICovXG4vKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9zb3J0LXByb3AtdHlwZXMgKi9cbi8qIGVzbGludC1kaXNhYmxlIGpzeC1hMTF5L2FuY2hvci1pcy12YWxpZCAqL1xuLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgbWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGZvcm1hdE51bWJlciwgc3R5bGVkIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuXG5jb25zdCBTdHlsZWRMZWdlbmQgPSBzdHlsZWQuZGl2YFxuICAkeyh7IHRoZW1lIH0pID0+IGBcbiAgICBmb250LXNpemU6ICR7dGhlbWUudHlwb2dyYXBoeS5zaXplcy5zfXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQ1fTtcbiAgICBib3gtc2hhZG93OiAwIDAgJHt0aGVtZS5ncmlkVW5pdH1weCAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQyfTtcbiAgICBtYXJnaW46ICR7dGhlbWUuZ3JpZFVuaXQgKiA2fXB4O1xuICAgIHBhZGRpbmc6ICR7dGhlbWUuZ3JpZFVuaXQgKiAzfXB4ICR7dGhlbWUuZ3JpZFVuaXQgKiA1fXB4O1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xuXG4gICAgJiB1bCB7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgbWFyZ2luOiAwO1xuXG4gICAgICAmIGxpIGEge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmJhc2V9O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6ICR7dGhlbWUuZ3JpZFVuaXR9cHggMDtcblxuICAgICAgICAmIHNwYW4ge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogJHt0aGVtZS5ncmlkVW5pdH1weDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgYH1cbmA7XG5cbmNvbnN0IGNhdGVnb3J5RGVsaW1pdGVyID0gJyAtICc7XG5cbmV4cG9ydCB0eXBlIExlZ2VuZFByb3BzID0ge1xuICBmb3JtYXQ6IHN0cmluZyB8IG51bGw7XG4gIGZvcmNlQ2F0ZWdvcmljYWw/OiBib29sZWFuO1xuICBwb3NpdGlvbj86IG51bGwgfCAndGwnIHwgJ3RyJyB8ICdibCcgfCAnYnInO1xuICBjYXRlZ29yaWVzOiBSZWNvcmQ8c3RyaW5nLCB7IGVuYWJsZWQ6IGJvb2xlYW47IGNvbG9yOiBudW1iZXJbXSB8IHVuZGVmaW5lZCB9PjtcbiAgdG9nZ2xlQ2F0ZWdvcnk/OiAoa2V5OiBzdHJpbmcpID0+IHZvaWQ7XG4gIHNob3dTaW5nbGVDYXRlZ29yeT86IChrZXk6IHN0cmluZykgPT4gdm9pZDtcbn07XG5cbmNvbnN0IExlZ2VuZCA9ICh7XG4gIGZvcm1hdDogZDNGb3JtYXQgPSBudWxsLFxuICBmb3JjZUNhdGVnb3JpY2FsID0gZmFsc2UsXG4gIHBvc2l0aW9uID0gJ3RyJyxcbiAgY2F0ZWdvcmllczogY2F0ZWdvcmllc09iamVjdCA9IHt9LFxuICB0b2dnbGVDYXRlZ29yeSA9ICgpID0+IHt9LFxuICBzaG93U2luZ2xlQ2F0ZWdvcnkgPSAoKSA9PiB7fSxcbn06IExlZ2VuZFByb3BzKSA9PiB7XG4gIGNvbnN0IGZvcm1hdCA9ICh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgaWYgKCFkM0Zvcm1hdCB8fCBmb3JjZUNhdGVnb3JpY2FsKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuXG4gICAgY29uc3QgbnVtVmFsdWUgPSBwYXJzZUZsb2F0KHZhbHVlKTtcblxuICAgIHJldHVybiBmb3JtYXROdW1iZXIoZDNGb3JtYXQsIG51bVZhbHVlKTtcbiAgfTtcblxuICBjb25zdCBmb3JtYXRDYXRlZ29yeUxhYmVsID0gKGs6IHN0cmluZykgPT4ge1xuICAgIGlmICghZDNGb3JtYXQpIHtcbiAgICAgIHJldHVybiBrO1xuICAgIH1cblxuICAgIGlmIChrLmluY2x1ZGVzKGNhdGVnb3J5RGVsaW1pdGVyKSkge1xuICAgICAgY29uc3QgdmFsdWVzID0gay5zcGxpdChjYXRlZ29yeURlbGltaXRlcik7XG5cbiAgICAgIHJldHVybiBmb3JtYXQodmFsdWVzWzBdKSArIGNhdGVnb3J5RGVsaW1pdGVyICsgZm9ybWF0KHZhbHVlc1sxXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZvcm1hdChrKTtcbiAgfTtcblxuICBpZiAoT2JqZWN0LmtleXMoY2F0ZWdvcmllc09iamVjdCkubGVuZ3RoID09PSAwIHx8IHBvc2l0aW9uID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBjYXRlZ29yaWVzID0gT2JqZWN0LmVudHJpZXMoY2F0ZWdvcmllc09iamVjdCkubWFwKChbaywgdl0pID0+IHtcbiAgICBjb25zdCBzdHlsZSA9IHsgY29sb3I6IGByZ2JhKCR7di5jb2xvcj8uam9pbignLCAnKX0pYCB9O1xuICAgIGNvbnN0IGljb24gPSB2LmVuYWJsZWQgPyAnXFx1MjVGQycgOiAnXFx1MjVGQic7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGxpIGtleT17a30+XG4gICAgICAgIDxhXG4gICAgICAgICAgaHJlZj1cIiNcIlxuICAgICAgICAgIHJvbGU9XCJidXR0b25cIlxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRvZ2dsZUNhdGVnb3J5KGspfVxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9eygpID0+IHNob3dTaW5nbGVDYXRlZ29yeShrKX1cbiAgICAgICAgPlxuICAgICAgICAgIDxzcGFuIHN0eWxlPXtzdHlsZX0+e2ljb259PC9zcGFuPiB7Zm9ybWF0Q2F0ZWdvcnlMYWJlbChrKX1cbiAgICAgICAgPC9hPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9KTtcblxuICBjb25zdCB2ZXJ0aWNhbCA9IHBvc2l0aW9uPy5jaGFyQXQoMCkgPT09ICd0JyA/ICd0b3AnIDogJ2JvdHRvbSc7XG4gIGNvbnN0IGhvcml6b250YWwgPSBwb3NpdGlvbj8uY2hhckF0KDEpID09PSAncicgPyAncmlnaHQnIDogJ2xlZnQnO1xuICBjb25zdCBzdHlsZSA9IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyBhcyBjb25zdCxcbiAgICBbdmVydGljYWxdOiAnMHB4JyxcbiAgICBbaG9yaXpvbnRhbF06ICcxMHB4JyxcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxTdHlsZWRMZWdlbmQgY2xhc3NOYW1lPVwiZHVwYVwiIHN0eWxlPXtzdHlsZX0+XG4gICAgICA8dWw+e2NhdGVnb3JpZXN9PC91bD5cbiAgICA8L1N0eWxlZExlZ2VuZD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW8oTGVnZW5kKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/components/Legend.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx":
/*!***********************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx ***!
  \***********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tooltip)\n/* harmony export */ });\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/utils/html.tsx\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst StyledDiv = _superset_ui_core__WEBPACK_IMPORTED_MODULE_0__.styled.div`\n  ${({ theme, top, left }) => `\n    position: absolute;\n    top: ${top}px;\n    left: ${left}px;\n    padding: ${theme.gridUnit * 2}px;\n    margin: ${theme.gridUnit * 2}px;\n    background: ${theme.colors.grayscale.dark2};\n    color: ${theme.colors.grayscale.light5};\n    maxWidth: 300px;\n    fontSize: ${theme.typography.sizes.s}px;\n    zIndex: 9;\n    pointerEvents: none;\n  `}\n`;\nfunction Tooltip(props) {\n  const { tooltip } = props;\n  if (typeof tooltip === 'undefined' || tooltip === null) {\n    return null;\n  }\n  const { x, y, content } = tooltip;\n  const safeContent = typeof content === 'string' ? (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.safeHtmlSpan)(content) : content;\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(StyledDiv, { top: y, left: x, children:\n    safeContent }\n  );\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledDiv, \"StyledDiv\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx\");reactHotLoader.register(Tooltip, \"Tooltip\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9jb21wb25lbnRzL1Rvb2x0aXAudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBO0FBY0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BsdWdpbnMvbGVnYWN5LXByZXNldC1jaGFydC1kZWNrZ2wvc3JjL2NvbXBvbmVudHMvVG9vbHRpcC50c3g/ZmViYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IHN0eWxlZCwgc2FmZUh0bWxTcGFuIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgdHlwZSBUb29sdGlwUHJvcHMgPSB7XG4gIHRvb2x0aXA6XG4gICAgfCB7XG4gICAgICAgIHg6IG51bWJlcjtcbiAgICAgICAgeTogbnVtYmVyO1xuICAgICAgICBjb250ZW50OiBSZWFjdE5vZGU7XG4gICAgICB9XG4gICAgfCBudWxsXG4gICAgfCB1bmRlZmluZWQ7XG59O1xuXG5jb25zdCBTdHlsZWREaXYgPSBzdHlsZWQuZGl2PHsgdG9wOiBudW1iZXI7IGxlZnQ6IG51bWJlciB9PmBcbiAgJHsoeyB0aGVtZSwgdG9wLCBsZWZ0IH0pID0+IGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAke3RvcH1weDtcbiAgICBsZWZ0OiAke2xlZnR9cHg7XG4gICAgcGFkZGluZzogJHt0aGVtZS5ncmlkVW5pdCAqIDJ9cHg7XG4gICAgbWFyZ2luOiAke3RoZW1lLmdyaWRVbml0ICogMn1weDtcbiAgICBiYWNrZ3JvdW5kOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuZGFyazJ9O1xuICAgIGNvbG9yOiAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQ1fTtcbiAgICBtYXhXaWR0aDogMzAwcHg7XG4gICAgZm9udFNpemU6ICR7dGhlbWUudHlwb2dyYXBoeS5zaXplcy5zfXB4O1xuICAgIHpJbmRleDogOTtcbiAgICBwb2ludGVyRXZlbnRzOiBub25lO1xuICBgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVG9vbHRpcChwcm9wczogVG9vbHRpcFByb3BzKSB7XG4gIGNvbnN0IHsgdG9vbHRpcCB9ID0gcHJvcHM7XG4gIGlmICh0eXBlb2YgdG9vbHRpcCA9PT0gJ3VuZGVmaW5lZCcgfHwgdG9vbHRpcCA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgeyB4LCB5LCBjb250ZW50IH0gPSB0b29sdGlwO1xuICBjb25zdCBzYWZlQ29udGVudCA9XG4gICAgdHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnID8gc2FmZUh0bWxTcGFuKGNvbnRlbnQpIDogY29udGVudDtcblxuICByZXR1cm4gKFxuICAgIDxTdHlsZWREaXYgdG9wPXt5fSBsZWZ0PXt4fT5cbiAgICAgIHtzYWZlQ29udGVudH1cbiAgICA8L1N0eWxlZERpdj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/factory.tsx":
/*!************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/factory.tsx ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCategoricalDeckGLComponent: () => (/* binding */ createCategoricalDeckGLComponent),\n/* harmony export */   createDeckGLComponent: () => (/* binding */ createDeckGLComponent)\n/* harmony export */ });\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isEqual */ \"./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/hooks/usePrevious/usePrevious.ts\");\n/* harmony import */ var _DeckGLContainer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DeckGLContainer */ \"./plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");\n/* harmony import */ var _CategoricalDeckGLContainer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CategoricalDeckGLContainer */ \"./plugins/legacy-preset-chart-deckgl/src/CategoricalDeckGLContainer.tsx\");\n/* harmony import */ var _utils_fitViewport__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/fitViewport */ \"./plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\nfunction createDeckGLComponent(getLayer, getPoints) {\n  // Higher order component\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(__signature__((props) => {\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const prevFormData = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.usePrevious)(props.formData);\n    const prevPayload = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.usePrevious)(props.payload);\n    const getAdjustedViewport = () => {\n      const { width, height, formData } = props;\n      if (formData.autozoom) {\n        return (0,_utils_fitViewport__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(props.viewport, {\n          width,\n          height,\n          points: getPoints(props.payload.data.features)\n        });\n      }\n      return props.viewport;\n    };\n    const [viewport, setViewport] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(getAdjustedViewport());\n    const setTooltip = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((tooltip) => {\n      const { current } = containerRef;\n      if (current) {\n        current == null ? void 0 : current.setTooltip(tooltip);\n      }\n    }, []);\n    const computeLayer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((props) => {\n      const { formData, payload, onAddFilter } = props;\n      return getLayer(formData, payload, onAddFilter, setTooltip);\n    }, [setTooltip]);\n    const [layer, setLayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(computeLayer(props));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      // Only recompute the layer if anything BUT the viewport has changed\n      const prevFdNoVP = { ...prevFormData, viewport: null };\n      const currFdNoVP = { ...props.formData, viewport: null };\n      if (!lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default()(prevFdNoVP, currFdNoVP) || prevPayload !== props.payload) {\n        setLayer(computeLayer(props));\n      }\n    }, [computeLayer, prevFormData, prevPayload, props]);\n    const { formData, payload, setControlValue, height, width } = props;\n    return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_DeckGLContainer__WEBPACK_IMPORTED_MODULE_2__.DeckGLContainerStyledWrapper, { ref: containerRef, mapboxApiAccessToken: payload.data.mapboxApiKey, viewport: viewport, layers: [layer], mapStyle: formData.mapbox_style, setControlValue: setControlValue, width: width, height: height, onViewportChange: setViewport });\n  }, \"useRef{containerRef}\\nusePrevious{prevFormData}\\nusePrevious{prevPayload}\\nuseState{[viewport, setViewport](getAdjustedViewport())}\\nuseCallback{setTooltip}\\nuseCallback{computeLayer}\\nuseState{[layer, setLayer](computeLayer(props))}\\nuseEffect{}\", () => [_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.usePrevious, _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.usePrevious]));\n}\nfunction createCategoricalDeckGLComponent(getLayer, getPoints) {\n  return function Component(props) {\n    const { datasource, formData, height, payload, setControlValue, viewport, width } = props;\n    return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_CategoricalDeckGLContainer__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { datasource: datasource, formData: formData, mapboxApiKey: payload.data.mapboxApiKey, setControlValue: setControlValue, viewport: viewport, getLayer: getLayer, payload: payload, getPoints: getPoints, width: width, height: height });\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(createDeckGLComponent, \"createDeckGLComponent\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/factory.tsx\");reactHotLoader.register(createCategoricalDeckGLComponent, \"createCategoricalDeckGLComponent\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/factory.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9mYWN0b3J5LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTs7QUFHQTtBQVFBO0FBSUE7QUFDQTtBQTJCQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFJQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBRUE7QUFhQTtBQUNBO0FBRUE7QUFJQTtBQUNBO0FBVUE7QUFjQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9mYWN0b3J5LnRzeD8wNWExIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IG1lbW8sIHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBpc0VxdWFsIH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB0eXBlIHsgTGF5ZXIgfSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCB7XG4gIERhdGFzb3VyY2UsXG4gIFF1ZXJ5Rm9ybURhdGEsXG4gIEpzb25PYmplY3QsXG4gIEhhbmRsZXJGdW5jdGlvbixcbiAgdXNlUHJldmlvdXMsXG59IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcblxuaW1wb3J0IHtcbiAgRGVja0dMQ29udGFpbmVyU3R5bGVkV3JhcHBlcixcbiAgRGVja0dMQ29udGFpbmVySGFuZGxlLFxufSBmcm9tICcuL0RlY2tHTENvbnRhaW5lcic7XG5pbXBvcnQgQ2F0ZWdvcmljYWxEZWNrR0xDb250YWluZXIgZnJvbSAnLi9DYXRlZ29yaWNhbERlY2tHTENvbnRhaW5lcic7XG5pbXBvcnQgZml0Vmlld3BvcnQsIHsgVmlld3BvcnQgfSBmcm9tICcuL3V0aWxzL2ZpdFZpZXdwb3J0JztcbmltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgeyBUb29sdGlwUHJvcHMgfSBmcm9tICcuL2NvbXBvbmVudHMvVG9vbHRpcCc7XG5cbnR5cGUgZGVja0dMQ29tcG9uZW50UHJvcHMgPSB7XG4gIGRhdGFzb3VyY2U6IERhdGFzb3VyY2U7XG4gIGZvcm1EYXRhOiBRdWVyeUZvcm1EYXRhO1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgb25BZGRGaWx0ZXI6IEhhbmRsZXJGdW5jdGlvbjtcbiAgcGF5bG9hZDogSnNvbk9iamVjdDtcbiAgc2V0Q29udHJvbFZhbHVlOiAoKSA9PiB2b2lkO1xuICB2aWV3cG9ydDogVmlld3BvcnQ7XG4gIHdpZHRoOiBudW1iZXI7XG59O1xuZXhwb3J0IGludGVyZmFjZSBnZXRMYXllclR5cGU8VD4ge1xuICAoXG4gICAgZm9ybURhdGE6IFF1ZXJ5Rm9ybURhdGEsXG4gICAgcGF5bG9hZDogSnNvbk9iamVjdCxcbiAgICBvbkFkZEZpbHRlcjogSGFuZGxlckZ1bmN0aW9uIHwgdW5kZWZpbmVkLFxuICAgIHNldFRvb2x0aXA6ICh0b29sdGlwOiBUb29sdGlwUHJvcHNbJ3Rvb2x0aXAnXSkgPT4gdm9pZCxcbiAgICBkYXRhc291cmNlPzogRGF0YXNvdXJjZSxcbiAgKTogVDtcbn1cbmludGVyZmFjZSBnZXRQb2ludHNUeXBlIHtcbiAgKGRhdGE6IEpzb25PYmplY3RbXSk6IFBvaW50W107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWNrR0xDb21wb25lbnQoXG4gIGdldExheWVyOiBnZXRMYXllclR5cGU8dW5rbm93bj4sXG4gIGdldFBvaW50czogZ2V0UG9pbnRzVHlwZSxcbikge1xuICAvLyBIaWdoZXIgb3JkZXIgY29tcG9uZW50XG4gIHJldHVybiBtZW1vKChwcm9wczogZGVja0dMQ29tcG9uZW50UHJvcHMpID0+IHtcbiAgICBjb25zdCBjb250YWluZXJSZWYgPSB1c2VSZWY8RGVja0dMQ29udGFpbmVySGFuZGxlPigpO1xuICAgIGNvbnN0IHByZXZGb3JtRGF0YSA9IHVzZVByZXZpb3VzKHByb3BzLmZvcm1EYXRhKTtcbiAgICBjb25zdCBwcmV2UGF5bG9hZCA9IHVzZVByZXZpb3VzKHByb3BzLnBheWxvYWQpO1xuICAgIGNvbnN0IGdldEFkanVzdGVkVmlld3BvcnQgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQsIGZvcm1EYXRhIH0gPSBwcm9wcztcbiAgICAgIGlmIChmb3JtRGF0YS5hdXRvem9vbSkge1xuICAgICAgICByZXR1cm4gZml0Vmlld3BvcnQocHJvcHMudmlld3BvcnQsIHtcbiAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgcG9pbnRzOiBnZXRQb2ludHMocHJvcHMucGF5bG9hZC5kYXRhLmZlYXR1cmVzKSxcbiAgICAgICAgfSkgYXMgVmlld3BvcnQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJvcHMudmlld3BvcnQ7XG4gICAgfTtcblxuICAgIGNvbnN0IFt2aWV3cG9ydCwgc2V0Vmlld3BvcnRdID0gdXNlU3RhdGUoZ2V0QWRqdXN0ZWRWaWV3cG9ydCgpKTtcblxuICAgIGNvbnN0IHNldFRvb2x0aXAgPSB1c2VDYWxsYmFjaygodG9vbHRpcDogVG9vbHRpcFByb3BzWyd0b29sdGlwJ10pID0+IHtcbiAgICAgIGNvbnN0IHsgY3VycmVudCB9ID0gY29udGFpbmVyUmVmO1xuICAgICAgaWYgKGN1cnJlbnQpIHtcbiAgICAgICAgY3VycmVudD8uc2V0VG9vbHRpcCh0b29sdGlwKTtcbiAgICAgIH1cbiAgICB9LCBbXSk7XG5cbiAgICBjb25zdCBjb21wdXRlTGF5ZXIgPSB1c2VDYWxsYmFjayhcbiAgICAgIChwcm9wczogZGVja0dMQ29tcG9uZW50UHJvcHMpID0+IHtcbiAgICAgICAgY29uc3QgeyBmb3JtRGF0YSwgcGF5bG9hZCwgb25BZGRGaWx0ZXIgfSA9IHByb3BzO1xuXG4gICAgICAgIHJldHVybiBnZXRMYXllcihmb3JtRGF0YSwgcGF5bG9hZCwgb25BZGRGaWx0ZXIsIHNldFRvb2x0aXApIGFzIExheWVyO1xuICAgICAgfSxcbiAgICAgIFtzZXRUb29sdGlwXSxcbiAgICApO1xuXG4gICAgY29uc3QgW2xheWVyLCBzZXRMYXllcl0gPSB1c2VTdGF0ZShjb21wdXRlTGF5ZXIocHJvcHMpKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAvLyBPbmx5IHJlY29tcHV0ZSB0aGUgbGF5ZXIgaWYgYW55dGhpbmcgQlVUIHRoZSB2aWV3cG9ydCBoYXMgY2hhbmdlZFxuICAgICAgY29uc3QgcHJldkZkTm9WUCA9IHsgLi4ucHJldkZvcm1EYXRhLCB2aWV3cG9ydDogbnVsbCB9O1xuICAgICAgY29uc3QgY3VyckZkTm9WUCA9IHsgLi4ucHJvcHMuZm9ybURhdGEsIHZpZXdwb3J0OiBudWxsIH07XG4gICAgICBpZiAoIWlzRXF1YWwocHJldkZkTm9WUCwgY3VyckZkTm9WUCkgfHwgcHJldlBheWxvYWQgIT09IHByb3BzLnBheWxvYWQpIHtcbiAgICAgICAgc2V0TGF5ZXIoY29tcHV0ZUxheWVyKHByb3BzKSk7XG4gICAgICB9XG4gICAgfSwgW2NvbXB1dGVMYXllciwgcHJldkZvcm1EYXRhLCBwcmV2UGF5bG9hZCwgcHJvcHNdKTtcblxuICAgIGNvbnN0IHsgZm9ybURhdGEsIHBheWxvYWQsIHNldENvbnRyb2xWYWx1ZSwgaGVpZ2h0LCB3aWR0aCB9ID0gcHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPERlY2tHTENvbnRhaW5lclN0eWxlZFdyYXBwZXJcbiAgICAgICAgcmVmPXtjb250YWluZXJSZWZ9XG4gICAgICAgIG1hcGJveEFwaUFjY2Vzc1Rva2VuPXtwYXlsb2FkLmRhdGEubWFwYm94QXBpS2V5fVxuICAgICAgICB2aWV3cG9ydD17dmlld3BvcnR9XG4gICAgICAgIGxheWVycz17W2xheWVyXX1cbiAgICAgICAgbWFwU3R5bGU9e2Zvcm1EYXRhLm1hcGJveF9zdHlsZX1cbiAgICAgICAgc2V0Q29udHJvbFZhbHVlPXtzZXRDb250cm9sVmFsdWV9XG4gICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIG9uVmlld3BvcnRDaGFuZ2U9e3NldFZpZXdwb3J0fVxuICAgICAgLz5cbiAgICApO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNhdGVnb3JpY2FsRGVja0dMQ29tcG9uZW50KFxuICBnZXRMYXllcjogZ2V0TGF5ZXJUeXBlPExheWVyPixcbiAgZ2V0UG9pbnRzOiBnZXRQb2ludHNUeXBlLFxuKSB7XG4gIHJldHVybiBmdW5jdGlvbiBDb21wb25lbnQocHJvcHM6IGRlY2tHTENvbXBvbmVudFByb3BzKSB7XG4gICAgY29uc3Qge1xuICAgICAgZGF0YXNvdXJjZSxcbiAgICAgIGZvcm1EYXRhLFxuICAgICAgaGVpZ2h0LFxuICAgICAgcGF5bG9hZCxcbiAgICAgIHNldENvbnRyb2xWYWx1ZSxcbiAgICAgIHZpZXdwb3J0LFxuICAgICAgd2lkdGgsXG4gICAgfSA9IHByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxDYXRlZ29yaWNhbERlY2tHTENvbnRhaW5lclxuICAgICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxuICAgICAgICBmb3JtRGF0YT17Zm9ybURhdGF9XG4gICAgICAgIG1hcGJveEFwaUtleT17cGF5bG9hZC5kYXRhLm1hcGJveEFwaUtleX1cbiAgICAgICAgc2V0Q29udHJvbFZhbHVlPXtzZXRDb250cm9sVmFsdWV9XG4gICAgICAgIHZpZXdwb3J0PXt2aWV3cG9ydH1cbiAgICAgICAgZ2V0TGF5ZXI9e2dldExheWVyfVxuICAgICAgICBwYXlsb2FkPXtwYXlsb2FkfVxuICAgICAgICBnZXRQb2ludHM9e2dldFBvaW50c31cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgIC8+XG4gICAgKTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/factory.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx":
/*!***************************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx ***!
  \***************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getLayer: () => (/* binding */ getLayer)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_aggregation_layers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/aggregation-layers */ \"./node_modules/@deck.gl/aggregation-layers/dist/contour-layer/contour-layer.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common */ \"./plugins/legacy-preset-chart-deckgl/src/layers/common.tsx\");\n/* harmony import */ var _utils_sandbox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/sandbox */ \"./plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts\");\n/* harmony import */ var _factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../factory */ \"./plugins/legacy-preset-chart-deckgl/src/factory.tsx\");\n/* harmony import */ var _TooltipRow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../TooltipRow */ \"./plugins/legacy-preset-chart-deckgl/src/TooltipRow.tsx\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.development.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\nfunction setTooltipContent(o) {var _o$object, _o$object$contour;\n  return (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(\"div\", { className: \"deckgl-tooltip\", children: [\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_TooltipRow__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.t)('Centroid (Longitude and Latitude): '), value: `(${o == null ? void 0 : o.coordinate[0]}, ${o == null ? void 0 : o.coordinate[1]})` }),\n    (0,_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_TooltipRow__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.t)('Threshold: '), value: `${o == null ? void 0 : (_o$object = o.object) == null ? void 0 : (_o$object$contour = _o$object.contour) == null ? void 0 : _o$object$contour.threshold}` })] }\n  );\n}\nconst getLayer = function (formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const { aggregation = 'SUM', js_data_mutator: jsFnMutator, contours: rawContours, cellSize = '200' } = fd;\n  let data = payload.data.features;\n  const contours = rawContours == null ? void 0 : rawContours.map((contour) => {\n    const { lowerThreshold, upperThreshold, color, strokeWidth } = contour;\n    if (upperThreshold) {\n      // Isoband format\n      return {\n        threshold: [lowerThreshold, upperThreshold],\n        color: [color.r, color.g, color.b]\n      };\n    }\n    // Isoline format\n    return {\n      threshold: lowerThreshold,\n      color: [color.r, color.g, color.b],\n      strokeWidth\n    };\n  });\n  if (jsFnMutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutatorFunction = (0,_utils_sandbox__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fd.js_data_mutator);\n    data = jsFnMutatorFunction(data);\n  }\n  return new _deck_gl_aggregation_layers__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n    id: `contourLayer-${fd.slice_id}`,\n    data,\n    contours,\n    cellSize: Number(cellSize || '200'),\n    aggregation: aggregation.toUpperCase(),\n    getPosition: (d) => d.position,\n    getWeight: (d) => d.weight || 0,\n    ...(0,_common__WEBPACK_IMPORTED_MODULE_0__.commonLayerProps)(fd, setTooltip, setTooltipContent)\n  });\n};\nfunction getPoints(data) {\n  return data.map((d) => d.position);\n}const _default =\n(0,_factory__WEBPACK_IMPORTED_MODULE_2__.createDeckGLComponent)(getLayer, getPoints);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(setTooltipContent, \"setTooltipContent\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx\");reactHotLoader.register(getLayer, \"getLayer\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx\");reactHotLoader.register(getPoints, \"getPoints\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx\");reactHotLoader.register(_default, \"default\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9sYXllcnMvQ29udG91ci9Db250b3VyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFJQTtBQUlBO0FBRUE7QUFDQTtBQU1BO0FBQ0E7QUFNQTtBQUVBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BsdWdpbnMvbGVnYWN5LXByZXNldC1jaGFydC1kZWNrZ2wvc3JjL2xheWVycy9Db250b3VyL0NvbnRvdXIudHN4PzBhMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgQ29udG91ckxheWVyIH0gZnJvbSAnQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzJztcbmltcG9ydCB7IFBvc2l0aW9uIH0gZnJvbSAnQGRlY2suZ2wvY29yZSc7XG5pbXBvcnQgeyB0IH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgY29tbW9uTGF5ZXJQcm9wcyB9IGZyb20gJy4uL2NvbW1vbic7XG5pbXBvcnQgc2FuZGJveGVkRXZhbCBmcm9tICcuLi8uLi91dGlscy9zYW5kYm94JztcbmltcG9ydCB7IGNyZWF0ZURlY2tHTENvbXBvbmVudCwgZ2V0TGF5ZXJUeXBlIH0gZnJvbSAnLi4vLi4vZmFjdG9yeSc7XG5pbXBvcnQgeyBDb2xvclR5cGUgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgVG9vbHRpcFJvdyBmcm9tICcuLi8uLi9Ub29sdGlwUm93JztcblxuZnVuY3Rpb24gc2V0VG9vbHRpcENvbnRlbnQobzogYW55KSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJkZWNrZ2wtdG9vbHRpcFwiPlxuICAgICAgPFRvb2x0aXBSb3dcbiAgICAgICAgbGFiZWw9e3QoJ0NlbnRyb2lkIChMb25naXR1ZGUgYW5kIExhdGl0dWRlKTogJyl9XG4gICAgICAgIHZhbHVlPXtgKCR7bz8uY29vcmRpbmF0ZVswXX0sICR7bz8uY29vcmRpbmF0ZVsxXX0pYH1cbiAgICAgIC8+XG4gICAgICA8VG9vbHRpcFJvd1xuICAgICAgICBsYWJlbD17dCgnVGhyZXNob2xkOiAnKX1cbiAgICAgICAgdmFsdWU9e2Ake28/Lm9iamVjdD8uY29udG91cj8udGhyZXNob2xkfWB9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApO1xufVxuZXhwb3J0IGNvbnN0IGdldExheWVyOiBnZXRMYXllclR5cGU8dW5rbm93bj4gPSBmdW5jdGlvbiAoXG4gIGZvcm1EYXRhLFxuICBwYXlsb2FkLFxuICBvbkFkZEZpbHRlcixcbiAgc2V0VG9vbHRpcCxcbikge1xuICBjb25zdCBmZCA9IGZvcm1EYXRhO1xuICBjb25zdCB7XG4gICAgYWdncmVnYXRpb24gPSAnU1VNJyxcbiAgICBqc19kYXRhX211dGF0b3I6IGpzRm5NdXRhdG9yLFxuICAgIGNvbnRvdXJzOiByYXdDb250b3VycyxcbiAgICBjZWxsU2l6ZSA9ICcyMDAnLFxuICB9ID0gZmQ7XG4gIGxldCBkYXRhID0gcGF5bG9hZC5kYXRhLmZlYXR1cmVzO1xuXG4gIGNvbnN0IGNvbnRvdXJzID0gcmF3Q29udG91cnM/Lm1hcChcbiAgICAoY29udG91cjoge1xuICAgICAgY29sb3I6IENvbG9yVHlwZTtcbiAgICAgIGxvd2VyVGhyZXNob2xkOiBudW1iZXI7XG4gICAgICB1cHBlclRocmVzaG9sZD86IG51bWJlcjtcbiAgICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xuICAgIH0pID0+IHtcbiAgICAgIGNvbnN0IHsgbG93ZXJUaHJlc2hvbGQsIHVwcGVyVGhyZXNob2xkLCBjb2xvciwgc3Ryb2tlV2lkdGggfSA9IGNvbnRvdXI7XG4gICAgICBpZiAodXBwZXJUaHJlc2hvbGQpIHtcbiAgICAgICAgLy8gSXNvYmFuZCBmb3JtYXRcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aHJlc2hvbGQ6IFtsb3dlclRocmVzaG9sZCwgdXBwZXJUaHJlc2hvbGRdLFxuICAgICAgICAgIGNvbG9yOiBbY29sb3IuciwgY29sb3IuZywgY29sb3IuYl0sXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICAvLyBJc29saW5lIGZvcm1hdFxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdGhyZXNob2xkOiBsb3dlclRocmVzaG9sZCxcbiAgICAgICAgY29sb3I6IFtjb2xvci5yLCBjb2xvci5nLCBjb2xvci5iXSxcbiAgICAgICAgc3Ryb2tlV2lkdGgsXG4gICAgICB9O1xuICAgIH0sXG4gICk7XG5cbiAgaWYgKGpzRm5NdXRhdG9yKSB7XG4gICAgLy8gQXBwbHlpbmcgdXNlciBkZWZpbmVkIGRhdGEgbXV0YXRvciBpZiBkZWZpbmVkXG4gICAgY29uc3QganNGbk11dGF0b3JGdW5jdGlvbiA9IHNhbmRib3hlZEV2YWwoZmQuanNfZGF0YV9tdXRhdG9yKTtcbiAgICBkYXRhID0ganNGbk11dGF0b3JGdW5jdGlvbihkYXRhKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgQ29udG91ckxheWVyKHtcbiAgICBpZDogYGNvbnRvdXJMYXllci0ke2ZkLnNsaWNlX2lkfWAsXG4gICAgZGF0YSxcbiAgICBjb250b3VycyxcbiAgICBjZWxsU2l6ZTogTnVtYmVyKGNlbGxTaXplIHx8ICcyMDAnKSxcbiAgICBhZ2dyZWdhdGlvbjogYWdncmVnYXRpb24udG9VcHBlckNhc2UoKSxcbiAgICBnZXRQb3NpdGlvbjogKGQ6IHsgcG9zaXRpb246IG51bWJlcltdOyB3ZWlnaHQ6IG51bWJlciB9KSA9PlxuICAgICAgZC5wb3NpdGlvbiBhcyBQb3NpdGlvbixcbiAgICBnZXRXZWlnaHQ6IChkOiB7IHdlaWdodDogbnVtYmVyIH0pID0+IGQud2VpZ2h0IHx8IDAsXG4gICAgLi4uY29tbW9uTGF5ZXJQcm9wcyhmZCwgc2V0VG9vbHRpcCwgc2V0VG9vbHRpcENvbnRlbnQpLFxuICB9KTtcbn07XG5cbmZ1bmN0aW9uIGdldFBvaW50cyhkYXRhOiBhbnlbXSkge1xuICByZXR1cm4gZGF0YS5tYXAoZCA9PiBkLnBvc2l0aW9uKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRGVja0dMQ29tcG9uZW50KGdldExheWVyLCBnZXRQb2ludHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/layers/common.tsx":
/*!******************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/layers/common.tsx ***!
  \******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commonLayerProps: () => (/* binding */ commonLayerProps),\n/* harmony export */   getAggFunc: () => (/* binding */ getAggFunc)\n/* harmony export */ });\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/sum.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/min.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/max.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/mean.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/median.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/variance.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/deviation.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/ascending.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/quantile.js\");\n/* harmony import */ var _utils_sandbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/sandbox */ \"./plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};\n\nfunction commonLayerProps(formData, setTooltip, setTooltipContent, onSelect) {\n  const fd = formData;\n  let onHover;\n  let tooltipContentGenerator = setTooltipContent;\n  if (fd.js_tooltip) {\n    tooltipContentGenerator = (0,_utils_sandbox__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fd.js_tooltip);\n  }\n  if (tooltipContentGenerator) {\n    onHover = (o) => {\n      if (o.picked) {\n        setTooltip({\n          content: tooltipContentGenerator(o),\n          x: o.x,\n          y: o.y\n        });\n      } else\n      {\n        setTooltip(null);\n      }\n      return true;\n    };\n  }\n  let onClick;\n  if (fd.js_onclick_href) {\n    onClick = (o) => {\n      const href = (0,_utils_sandbox__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fd.js_onclick_href)(o);\n      window.open(href);\n      return true;\n    };\n  } else\n  if (fd.table_filter && onSelect !== undefined) {\n    onClick = (o) => {\n      onSelect(o.object[fd.line_column]);\n      return true;\n    };\n  }\n  return {\n    onClick,\n    onHover,\n    pickable: Boolean(onHover)\n  };\n}\nconst percentiles = {\n  p1: 0.01,\n  p5: 0.05,\n  p95: 0.95,\n  p99: 0.99\n};\n/* Supported d3-array functions */\nconst d3functions = {\n  sum: d3_array__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  min: d3_array__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  max: d3_array__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  mean: d3_array__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  median: d3_array__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  variance: d3_array__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  deviation: d3_array__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n};\n/* Get a stat function that operates on arrays, aligns with control=js_agg_function  */\nfunction getAggFunc(type = 'sum', accessor = null) {\n  if (type === 'count') {\n    return (arr) => arr.length;\n  }\n  let d3func;\n  if (type in percentiles) {\n    d3func = (arr, acc) => {\n      let sortedArr;\n      if (accessor) {\n        sortedArr = arr.sort((o1, o2) => (0,d3_array__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(accessor(o1), accessor(o2)));\n      } else\n      {\n        sortedArr = arr.sort(d3_array__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n      }\n      return (0,d3_array__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(sortedArr, percentiles[type], acc);\n    };\n  } else\n  if (type in d3functions) {\n    d3func = d3functions[type];\n  } else\n  {\n    throw new Error(`Unsupported aggregation type: ${type}`);\n  }\n  if (!accessor) {\n    return (arr) => d3func(arr);\n  }\n  return (arr) => d3func(arr.map((x) => accessor(x)));\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(commonLayerProps, \"commonLayerProps\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/common.tsx\");reactHotLoader.register(percentiles, \"percentiles\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/common.tsx\");reactHotLoader.register(d3functions, \"d3functions\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/common.tsx\");reactHotLoader.register(getAggFunc, \"getAggFunc\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/common.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy9sYXllcnMvY29tbW9uLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFtQkE7QUFZQTtBQUdBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBSUE7QUFDQTs7QUFHQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUFBO0FBQ0E7O0FBR0E7QUFLQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTs7QUFHQTtBQUNBOztBQUdBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BsdWdpbnMvbGVnYWN5LXByZXNldC1jaGFydC1kZWNrZ2wvc3JjL2xheWVycy9jb21tb24udHN4PzE1NDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TXG4gKiBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgYXNjZW5kaW5nIGFzIGQzYXNjZW5kaW5nLFxuICBxdWFudGlsZSBhcyBkM3F1YW50aWxlLFxuICBzdW0gYXMgZDNzdW0sXG4gIG1lYW4gYXMgZDNtZWFuLFxuICBtaW4gYXMgZDNtaW4sXG4gIG1heCBhcyBkM21heCxcbiAgbWVkaWFuIGFzIGQzbWVkaWFuLFxuICB2YXJpYW5jZSBhcyBkM3ZhcmlhbmNlLFxuICBkZXZpYXRpb24gYXMgZDNkZXZpYXRpb24sXG59IGZyb20gJ2QzLWFycmF5JztcbmltcG9ydCB7IEpzb25PYmplY3QsIEpzb25WYWx1ZSwgUXVlcnlGb3JtRGF0YSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBzYW5kYm94ZWRFdmFsIGZyb20gJy4uL3V0aWxzL3NhbmRib3gnO1xuaW1wb3J0IHsgVG9vbHRpcFByb3BzIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Ub29sdGlwJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbW1vbkxheWVyUHJvcHMoXG4gIGZvcm1EYXRhOiBRdWVyeUZvcm1EYXRhLFxuICBzZXRUb29sdGlwOiAodG9vbHRpcDogVG9vbHRpcFByb3BzWyd0b29sdGlwJ10pID0+IHZvaWQsXG4gIHNldFRvb2x0aXBDb250ZW50OiAoY29udGVudDogSnNvbk9iamVjdCkgPT4gUmVhY3ROb2RlLFxuICBvblNlbGVjdD86ICh2YWx1ZTogSnNvblZhbHVlKSA9PiB2b2lkLFxuKSB7XG4gIGNvbnN0IGZkID0gZm9ybURhdGE7XG4gIGxldCBvbkhvdmVyO1xuICBsZXQgdG9vbHRpcENvbnRlbnRHZW5lcmF0b3IgPSBzZXRUb29sdGlwQ29udGVudDtcbiAgaWYgKGZkLmpzX3Rvb2x0aXApIHtcbiAgICB0b29sdGlwQ29udGVudEdlbmVyYXRvciA9IHNhbmRib3hlZEV2YWwoZmQuanNfdG9vbHRpcCk7XG4gIH1cbiAgaWYgKHRvb2x0aXBDb250ZW50R2VuZXJhdG9yKSB7XG4gICAgb25Ib3ZlciA9IChvOiBKc29uT2JqZWN0KSA9PiB7XG4gICAgICBpZiAoby5waWNrZWQpIHtcbiAgICAgICAgc2V0VG9vbHRpcCh7XG4gICAgICAgICAgY29udGVudDogdG9vbHRpcENvbnRlbnRHZW5lcmF0b3IobyksXG4gICAgICAgICAgeDogby54LFxuICAgICAgICAgIHk6IG8ueSxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRUb29sdGlwKG51bGwpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgfVxuICBsZXQgb25DbGljaztcbiAgaWYgKGZkLmpzX29uY2xpY2tfaHJlZikge1xuICAgIG9uQ2xpY2sgPSAobzogYW55KSA9PiB7XG4gICAgICBjb25zdCBocmVmID0gc2FuZGJveGVkRXZhbChmZC5qc19vbmNsaWNrX2hyZWYpKG8pO1xuICAgICAgd2luZG93Lm9wZW4oaHJlZik7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICB9IGVsc2UgaWYgKGZkLnRhYmxlX2ZpbHRlciAmJiBvblNlbGVjdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgb25DbGljayA9IChvOiBhbnkpID0+IHtcbiAgICAgIG9uU2VsZWN0KG8ub2JqZWN0W2ZkLmxpbmVfY29sdW1uXSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBvbkNsaWNrLFxuICAgIG9uSG92ZXIsXG4gICAgcGlja2FibGU6IEJvb2xlYW4ob25Ib3ZlciksXG4gIH07XG59XG5cbmNvbnN0IHBlcmNlbnRpbGVzID0ge1xuICBwMTogMC4wMSxcbiAgcDU6IDAuMDUsXG4gIHA5NTogMC45NSxcbiAgcDk5OiAwLjk5LFxufTtcblxuLyogU3VwcG9ydGVkIGQzLWFycmF5IGZ1bmN0aW9ucyAqL1xuY29uc3QgZDNmdW5jdGlvbnM6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7XG4gIHN1bTogZDNzdW0sXG4gIG1pbjogZDNtaW4sXG4gIG1heDogZDNtYXgsXG4gIG1lYW46IGQzbWVhbixcbiAgbWVkaWFuOiBkM21lZGlhbixcbiAgdmFyaWFuY2U6IGQzdmFyaWFuY2UsXG4gIGRldmlhdGlvbjogZDNkZXZpYXRpb24sXG59O1xuXG4vKiBHZXQgYSBzdGF0IGZ1bmN0aW9uIHRoYXQgb3BlcmF0ZXMgb24gYXJyYXlzLCBhbGlnbnMgd2l0aCBjb250cm9sPWpzX2FnZ19mdW5jdGlvbiAgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRBZ2dGdW5jKFxuICB0eXBlID0gJ3N1bScsXG4gIGFjY2Vzc29yOiAoKG9iamVjdDogYW55KSA9PiBudW1iZXIgfCB1bmRlZmluZWQpIHwgbnVsbCA9IG51bGwsXG4pIHtcbiAgaWYgKHR5cGUgPT09ICdjb3VudCcpIHtcbiAgICByZXR1cm4gKGFycjogbnVtYmVyW10pID0+IGFyci5sZW5ndGg7XG4gIH1cblxuICBsZXQgZDNmdW5jOiAoXG4gICAgaXRlcmFibGU6IEFycmF5PHVua25vd24+LFxuICAgIGFjY2Vzc29yPzogKG9iamVjdDogSnNvbk9iamVjdCkgPT4gbnVtYmVyIHwgdW5kZWZpbmVkLFxuICApID0+IG51bWJlcltdIHwgbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gIGlmICh0eXBlIGluIHBlcmNlbnRpbGVzKSB7XG4gICAgZDNmdW5jID0gKGFyciwgYWNjOiAob2JqZWN0OiBKc29uT2JqZWN0KSA9PiBudW1iZXIgfCB1bmRlZmluZWQpID0+IHtcbiAgICAgIGxldCBzb3J0ZWRBcnI7XG4gICAgICBpZiAoYWNjZXNzb3IpIHtcbiAgICAgICAgc29ydGVkQXJyID0gYXJyLnNvcnQoKG8xOiBKc29uT2JqZWN0LCBvMjogSnNvbk9iamVjdCkgPT5cbiAgICAgICAgICBkM2FzY2VuZGluZyhhY2Nlc3NvcihvMSksIGFjY2Vzc29yKG8yKSksXG4gICAgICAgICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzb3J0ZWRBcnIgPSBhcnIuc29ydChkM2FzY2VuZGluZyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkM3F1YW50aWxlKFxuICAgICAgICBzb3J0ZWRBcnIsXG4gICAgICAgIHBlcmNlbnRpbGVzW3R5cGUgYXMga2V5b2YgdHlwZW9mIHBlcmNlbnRpbGVzXSxcbiAgICAgICAgYWNjLFxuICAgICAgKTtcbiAgICB9O1xuICB9IGVsc2UgaWYgKHR5cGUgaW4gZDNmdW5jdGlvbnMpIHtcbiAgICBkM2Z1bmMgPSBkM2Z1bmN0aW9uc1t0eXBlXTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGFnZ3JlZ2F0aW9uIHR5cGU6ICR7dHlwZX1gKTtcbiAgfVxuXG4gIGlmICghYWNjZXNzb3IpIHtcbiAgICByZXR1cm4gKGFycjogbnVtYmVyW10pID0+IGQzZnVuYyhhcnIpO1xuICB9XG5cbiAgcmV0dXJuIChhcnI6IG51bWJlcltdKSA9PiBkM2Z1bmMoYXJyLm1hcCh4ID0+IGFjY2Vzc29yKHgpKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/layers/common.tsx\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/utils/colors.ts":
/*!****************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/utils/colors.ts ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hexToRGB: () => (/* binding */ hexToRGB)\n/* harmony export */ });\n/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ \"./node_modules/d3-color/src/color.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// eslint-disable-next-line import/prefer-default-export\nfunction hexToRGB(hex, alpha = 255) {\n  if (!hex) {\n    return [0, 0, 0, alpha];\n  }\n  const { r, g, b } = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.rgb)(hex);\n  return [r, g, b, alpha];\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(hexToRGB, \"hexToRGB\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/colors.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy91dGlscy9jb2xvcnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUVBO0FBQ0E7QUFJQTtBQUNBOztBQUVBO0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vcGx1Z2lucy9sZWdhY3ktcHJlc2V0LWNoYXJ0LWRlY2tnbC9zcmMvdXRpbHMvY29sb3JzLnRzP2QyMjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgcmdiIH0gZnJvbSAnZDMtY29sb3InO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydFxuZXhwb3J0IGZ1bmN0aW9uIGhleFRvUkdCKFxuICBoZXg6IHN0cmluZyB8IHVuZGVmaW5lZCxcbiAgYWxwaGEgPSAyNTUsXG4pOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSB7XG4gIGlmICghaGV4KSB7XG4gICAgcmV0dXJuIFswLCAwLCAwLCBhbHBoYV07XG4gIH1cbiAgY29uc3QgeyByLCBnLCBiIH0gPSByZ2IoaGV4KTtcblxuICByZXR1cm4gW3IsIGcsIGIsIGFscGhhXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/utils/colors.ts\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts":
/*!*********************************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts ***!
  \*********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ computeBoundsFromPoints)\n/* harmony export */ });\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/extent.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst LAT_LIMIT = [-90, 90];\nconst LNG_LIMIT = [-180, 180];\n/**\n * Expand a coordinate range by `padding` and within limits, if needed\n */\nfunction expandIfNeeded([curMin, curMax], [minBound, maxBound], padding = 0.25) {\n  return curMin < curMax ?\n  [curMin, curMax] :\n  [\n  Math.max(minBound, curMin - padding),\n  Math.min(maxBound, curMax + padding)];\n\n}\nfunction computeBoundsFromPoints(points) {\n  const latBounds = expandIfNeeded((0,d3_array__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(points, (x) => x[1]), LAT_LIMIT);\n  const lngBounds = expandIfNeeded((0,d3_array__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(points, (x) => x[0]), LNG_LIMIT);\n  return [\n  [lngBounds[0], latBounds[0]],\n  [lngBounds[1], latBounds[1]]];\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LAT_LIMIT, \"LAT_LIMIT\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts\");reactHotLoader.register(LNG_LIMIT, \"LNG_LIMIT\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts\");reactHotLoader.register(expandIfNeeded, \"expandIfNeeded\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts\");reactHotLoader.register(computeBoundsFromPoints, \"computeBoundsFromPoints\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy91dGlscy9jb21wdXRlQm91bmRzRnJvbVBvaW50cy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFHQTtBQUNBO0FBRUE7OztBQUdBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBR0E7QUFJQTtBQUlBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vcGx1Z2lucy9sZWdhY3ktcHJlc2V0LWNoYXJ0LWRlY2tnbC9zcmMvdXRpbHMvY29tcHV0ZUJvdW5kc0Zyb21Qb2ludHMudHM/ZDM1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBleHRlbnQgYXMgZDNFeHRlbnQgfSBmcm9tICdkMy1hcnJheSc7XG5pbXBvcnQgeyBQb2ludCwgUmFuZ2UgfSBmcm9tICcuLi90eXBlcyc7XG5cbmNvbnN0IExBVF9MSU1JVDogUmFuZ2UgPSBbLTkwLCA5MF07XG5jb25zdCBMTkdfTElNSVQ6IFJhbmdlID0gWy0xODAsIDE4MF07XG5cbi8qKlxuICogRXhwYW5kIGEgY29vcmRpbmF0ZSByYW5nZSBieSBgcGFkZGluZ2AgYW5kIHdpdGhpbiBsaW1pdHMsIGlmIG5lZWRlZFxuICovXG5mdW5jdGlvbiBleHBhbmRJZk5lZWRlZChcbiAgW2N1ck1pbiwgY3VyTWF4XTogUmFuZ2UsXG4gIFttaW5Cb3VuZCwgbWF4Qm91bmRdOiBSYW5nZSxcbiAgcGFkZGluZyA9IDAuMjUsXG4pIHtcbiAgcmV0dXJuIGN1ck1pbiA8IGN1ck1heFxuICAgID8gW2N1ck1pbiwgY3VyTWF4XVxuICAgIDogW1xuICAgICAgICBNYXRoLm1heChtaW5Cb3VuZCwgY3VyTWluIC0gcGFkZGluZyksXG4gICAgICAgIE1hdGgubWluKG1heEJvdW5kLCBjdXJNYXggKyBwYWRkaW5nKSxcbiAgICAgIF07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVCb3VuZHNGcm9tUG9pbnRzKFxuICBwb2ludHM6IFBvaW50W10sXG4pOiBbUG9pbnQsIFBvaW50XSB7XG4gIGNvbnN0IGxhdEJvdW5kcyA9IGV4cGFuZElmTmVlZGVkKFxuICAgIGQzRXh0ZW50KHBvaW50cywgKHg6IFBvaW50KSA9PiB4WzFdKSBhcyBSYW5nZSxcbiAgICBMQVRfTElNSVQsXG4gICk7XG4gIGNvbnN0IGxuZ0JvdW5kcyA9IGV4cGFuZElmTmVlZGVkKFxuICAgIGQzRXh0ZW50KHBvaW50cywgKHg6IFBvaW50KSA9PiB4WzBdKSBhcyBSYW5nZSxcbiAgICBMTkdfTElNSVQsXG4gICk7XG4gIHJldHVybiBbXG4gICAgW2xuZ0JvdW5kc1swXSwgbGF0Qm91bmRzWzBdXSxcbiAgICBbbG5nQm91bmRzWzFdLCBsYXRCb3VuZHNbMV1dLFxuICBdO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts":
/*!*********************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts ***!
  \*********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fitViewport)\n/* harmony export */ });\n/* harmony import */ var _math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/web-mercator */ \"./node_modules/@math.gl/web-mercator/dist/index.js\");\n/* harmony import */ var _computeBoundsFromPoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computeBoundsFromPoints */ \"./plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nfunction fitViewport(originalViewPort, { points, width, height, minExtent, maxZoom, offset, padding = 20 }) {\n  const { bearing, pitch } = originalViewPort;\n  const bounds = (0,_computeBoundsFromPoints__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(points);\n  try {\n    return {\n      ...(0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.fitBounds)({\n        bounds,\n        width,\n        height,\n        minExtent,\n        maxZoom,\n        offset,\n        padding\n      }),\n      bearing,\n      pitch\n    };\n  }\n  catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Could not fit viewport', error);\n  }\n  return originalViewPort;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(fitViewport, \"fitViewport\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy91dGlscy9maXRWaWV3cG9ydC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFxQkE7QUFZQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vcGx1Z2lucy9sZWdhY3ktcHJlc2V0LWNoYXJ0LWRlY2tnbC9zcmMvdXRpbHMvZml0Vmlld3BvcnQudHM/N2UzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBmaXRCb3VuZHMgfSBmcm9tICdAbWF0aC5nbC93ZWItbWVyY2F0b3InO1xuaW1wb3J0IGNvbXB1dGVCb3VuZHNGcm9tUG9pbnRzIGZyb20gJy4vY29tcHV0ZUJvdW5kc0Zyb21Qb2ludHMnO1xuaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCB0eXBlIFZpZXdwb3J0ID0ge1xuICBsb25naXR1ZGU6IG51bWJlcjtcbiAgbGF0aXR1ZGU6IG51bWJlcjtcbiAgem9vbTogbnVtYmVyO1xuICBiZWFyaW5nPzogbnVtYmVyO1xuICBwaXRjaD86IG51bWJlcjtcbn07XG5cbmV4cG9ydCB0eXBlIEZpdFZpZXdwb3J0T3B0aW9ucyA9IHtcbiAgcG9pbnRzOiBQb2ludFtdO1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgbWluRXh0ZW50PzogbnVtYmVyO1xuICBtYXhab29tPzogbnVtYmVyO1xuICBvZmZzZXQ/OiBbbnVtYmVyLCBudW1iZXJdO1xuICBwYWRkaW5nPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZml0Vmlld3BvcnQoXG4gIG9yaWdpbmFsVmlld1BvcnQ6IFZpZXdwb3J0LFxuICB7XG4gICAgcG9pbnRzLFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBtaW5FeHRlbnQsXG4gICAgbWF4Wm9vbSxcbiAgICBvZmZzZXQsXG4gICAgcGFkZGluZyA9IDIwLFxuICB9OiBGaXRWaWV3cG9ydE9wdGlvbnMsXG4pOiBWaWV3cG9ydCB7XG4gIGNvbnN0IHsgYmVhcmluZywgcGl0Y2ggfSA9IG9yaWdpbmFsVmlld1BvcnQ7XG4gIGNvbnN0IGJvdW5kcyA9IGNvbXB1dGVCb3VuZHNGcm9tUG9pbnRzKHBvaW50cyk7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uZml0Qm91bmRzKHtcbiAgICAgICAgYm91bmRzLFxuICAgICAgICB3aWR0aCxcbiAgICAgICAgaGVpZ2h0LFxuICAgICAgICBtaW5FeHRlbnQsXG4gICAgICAgIG1heFpvb20sXG4gICAgICAgIG9mZnNldCxcbiAgICAgICAgcGFkZGluZyxcbiAgICAgIH0pLFxuICAgICAgYmVhcmluZyxcbiAgICAgIHBpdGNoLFxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmVycm9yKCdDb3VsZCBub3QgZml0IHZpZXdwb3J0JywgZXJyb3IpO1xuICB9XG5cbiAgcmV0dXJuIG9yaWdpbmFsVmlld1BvcnQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts\n");

/***/ }),

/***/ "./plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts":
/*!*****************************************************************!*\
  !*** ./plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts ***!
  \*****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sandboxedEval)\n/* harmony export */ });\n/* harmony import */ var vm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vm */ \"./node_modules/vm-browserify/index.js\");\n/* harmony import */ var vm__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vm__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/modules/index-all.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/index.js\");\n/* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./colors */ \"./plugins/legacy-preset-chart-deckgl/src/utils/colors.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// A safe alternative to JS's eval\n\n\n/* eslint-disable-next-line no-restricted-syntax */\n\n/* eslint-disable-next-line no-restricted-syntax */\n\n// Objects exposed here should be treated like a public API\n// if `underscore` had backwards incompatible changes in a future release, we'd\n// have to be careful about bumping the library as those changes could break user charts\nconst GLOBAL_CONTEXT = {\n  console,\n  _: underscore__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  colors: _colors__WEBPACK_IMPORTED_MODULE_2__,\n  d3array: d3_array__WEBPACK_IMPORTED_MODULE_3__\n};\n// Copied/modified from https://github.com/hacksparrow/safe-eval/blob/master/index.js\nfunction sandboxedEval(code, context, opts) {\n  const sandbox = {};\n  const resultKey = `SAFE_EVAL_${Math.floor(Math.random() * 1000000)}`;\n  sandbox[resultKey] = {};\n  const codeToEval = `${resultKey}=${code}`;\n  const sandboxContext = { ...GLOBAL_CONTEXT, ...context };\n  Object.keys(sandboxContext).forEach((key) => {\n    sandbox[key] = sandboxContext[key];\n  });\n  try {\n    vm__WEBPACK_IMPORTED_MODULE_0___default().runInNewContext(codeToEval, sandbox, opts);\n    return sandbox[resultKey];\n  }\n  catch (error) {\n    return () => error;\n  }\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(GLOBAL_CONTEXT, \"GLOBAL_CONTEXT\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts\");reactHotLoader.register(sandboxedEval, \"sandboxedEval\", \"/Users/aryurkov/superset/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy91dGlscy9zYW5kYm94LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wbHVnaW5zL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL3NyYy91dGlscy9zYW5kYm94LnRzPzVhZTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLy8gQSBzYWZlIGFsdGVybmF0aXZlIHRvIEpTJ3MgZXZhbFxuaW1wb3J0IHZtLCB7IENvbnRleHQsIFJ1bm5pbmdTY3JpcHRPcHRpb25zIH0gZnJvbSAndm0nO1xuaW1wb3J0IF8gZnJvbSAndW5kZXJzY29yZSc7XG4vKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXggKi9cbmltcG9ydCAqIGFzIGQzYXJyYXkgZnJvbSAnZDMtYXJyYXknO1xuLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4ICovXG5pbXBvcnQgKiBhcyBjb2xvcnMgZnJvbSAnLi9jb2xvcnMnO1xuXG4vLyBPYmplY3RzIGV4cG9zZWQgaGVyZSBzaG91bGQgYmUgdHJlYXRlZCBsaWtlIGEgcHVibGljIEFQSVxuLy8gaWYgYHVuZGVyc2NvcmVgIGhhZCBiYWNrd2FyZHMgaW5jb21wYXRpYmxlIGNoYW5nZXMgaW4gYSBmdXR1cmUgcmVsZWFzZSwgd2UnZFxuLy8gaGF2ZSB0byBiZSBjYXJlZnVsIGFib3V0IGJ1bXBpbmcgdGhlIGxpYnJhcnkgYXMgdGhvc2UgY2hhbmdlcyBjb3VsZCBicmVhayB1c2VyIGNoYXJ0c1xuY29uc3QgR0xPQkFMX0NPTlRFWFQgPSB7XG4gIGNvbnNvbGUsXG4gIF8sXG4gIGNvbG9ycyxcbiAgZDNhcnJheSxcbn07XG5cbnR5cGUgR2xvYmFsQ29udGV4dCA9IHtcbiAgY29uc29sZTogQ29uc29sZTtcbiAgXzogXy5VbmRlcnNjb3JlU3RhdGljO1xuICBjb2xvcnM6IHR5cGVvZiBjb2xvcnM7XG4gIGQzYXJyYXk6IHR5cGVvZiBkM2FycmF5O1xufTtcblxuLy8gQ29waWVkL21vZGlmaWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2hhY2tzcGFycm93L3NhZmUtZXZhbC9ibG9iL21hc3Rlci9pbmRleC5qc1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2FuZGJveGVkRXZhbChcbiAgY29kZTogc3RyaW5nLFxuICBjb250ZXh0PzogQ29udGV4dCxcbiAgb3B0cz86IFJ1bm5pbmdTY3JpcHRPcHRpb25zIHwgc3RyaW5nLFxuKSB7XG4gIGNvbnN0IHNhbmRib3g6IENvbnRleHQgPSB7fTtcbiAgY29uc3QgcmVzdWx0S2V5ID0gYFNBRkVfRVZBTF8ke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwMDApfWA7XG4gIHNhbmRib3hbcmVzdWx0S2V5XSA9IHt9O1xuICBjb25zdCBjb2RlVG9FdmFsID0gYCR7cmVzdWx0S2V5fT0ke2NvZGV9YDtcbiAgY29uc3Qgc2FuZGJveENvbnRleHQ6IEdsb2JhbENvbnRleHQgPSB7IC4uLkdMT0JBTF9DT05URVhULCAuLi5jb250ZXh0IH07XG4gIE9iamVjdC5rZXlzKHNhbmRib3hDb250ZXh0KS5mb3JFYWNoKGtleSA9PiB7XG4gICAgc2FuZGJveFtrZXldID0gc2FuZGJveENvbnRleHRba2V5IGFzIGtleW9mIEdsb2JhbENvbnRleHRdO1xuICB9KTtcbiAgdHJ5IHtcbiAgICB2bS5ydW5Jbk5ld0NvbnRleHQoY29kZVRvRXZhbCwgc2FuZGJveCwgb3B0cyk7XG5cbiAgICByZXR1cm4gc2FuZGJveFtyZXN1bHRLZXldO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiAoKSA9PiBlcnJvcjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts\n");

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27 fill=%27%23fff%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27 fill=%27%23fff%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27 fill=%27%23fff%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E":
/*!****************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E ***!
  \****************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23666%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23666%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23666%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23999%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23999%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23999%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23aaa%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23aaa%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23aaa%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e54e33%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e54e33%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e54e33%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e58978%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e58978%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e58978%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23999%27/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23999%27/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23999%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%270.3%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%270.9%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%270.3%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%270.9%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%270.3%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%270.9%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23fff%27 stroke-width=%273%27 fill=%27%23fff%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23000%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E":

  !*** data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23fff%27 stroke-width=%273%27 fill=%27%23fff%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23000%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E ***!

/***/ ((module) => {

module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23fff%27 stroke-width=%273%27 fill=%27%23fff%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23000%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E";

/***/ })

}]);